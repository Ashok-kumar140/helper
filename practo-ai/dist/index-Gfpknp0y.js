import * as React__default from "react";
import React__default__default, { useEffect, useLayoutEffect, useState, useRef, useCallback, useReducer, useMemo, createContext, useContext, forwardRef, Component } from "react";
import { createPortal } from "react-dom";
var commonjsGlobal$1 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs$1(x3) {
  return x3 && x3.__esModule && Object.prototype.hasOwnProperty.call(x3, "default") ? x3["default"] : x3;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_production_min;
function requireReactJsxRuntime_production_min() {
  if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;
  hasRequiredReactJsxRuntime_production_min = 1;
  var f2 = React__default__default, k3 = Symbol.for("react.element"), l2 = Symbol.for("react.fragment"), m4 = Object.prototype.hasOwnProperty, n2 = f2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p2 = { key: true, ref: true, __self: true, __source: true };
  function q3(c3, a4, g2) {
    var b3, d4 = {}, e3 = null, h4 = null;
    void 0 !== g2 && (e3 = "" + g2);
    void 0 !== a4.key && (e3 = "" + a4.key);
    void 0 !== a4.ref && (h4 = a4.ref);
    for (b3 in a4) m4.call(a4, b3) && !p2.hasOwnProperty(b3) && (d4[b3] = a4[b3]);
    if (c3 && c3.defaultProps) for (b3 in a4 = c3.defaultProps, a4) void 0 === d4[b3] && (d4[b3] = a4[b3]);
    return { $$typeof: k3, type: c3, key: e3, ref: h4, props: d4, _owner: n2.current };
  }
  reactJsxRuntime_production_min.Fragment = l2;
  reactJsxRuntime_production_min.jsx = q3;
  reactJsxRuntime_production_min.jsxs = q3;
  return reactJsxRuntime_production_min;
}
var reactJsxRuntime_development = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_development;
function requireReactJsxRuntime_development() {
  if (hasRequiredReactJsxRuntime_development) return reactJsxRuntime_development;
  hasRequiredReactJsxRuntime_development = 1;
  if (process.env.NODE_ENV !== "production") {
    (function() {
      var React = React__default__default;
      var REACT_ELEMENT_TYPE = Symbol.for("react.element");
      var REACT_PORTAL_TYPE = Symbol.for("react.portal");
      var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
      var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
      var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
      var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
      var REACT_CONTEXT_TYPE = Symbol.for("react.context");
      var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
      var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
      var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
      var REACT_MEMO_TYPE = Symbol.for("react.memo");
      var REACT_LAZY_TYPE = Symbol.for("react.lazy");
      var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
      var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") {
          return null;
        }
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") {
          return maybeIterator;
        }
        return null;
      }
      var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function error(format2) {
        {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format2, args);
          }
        }
      }
      function printWarning(level, format2, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
          var stack = ReactDebugCurrentFrame2.getStackAddendum();
          if (stack !== "") {
            format2 += "%s";
            args = args.concat([stack]);
          }
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format2);
          Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      var enableScopeAPI = false;
      var enableCacheElement = false;
      var enableTransitionTracing = false;
      var enableLegacyHidden = false;
      var enableDebugTracing = false;
      var REACT_MODULE_REFERENCE;
      {
        REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
      }
      function isValidElementType(type) {
        if (typeof type === "string" || typeof type === "function") {
          return true;
        }
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
          return true;
        }
        if (typeof type === "object" && type !== null) {
          if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
          // types supported by any Flight configuration anywhere since
          // we don't know which Flight build this will end up being used
          // with.
          type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
            return true;
          }
        }
        return false;
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) {
          return displayName;
        }
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null) {
          return null;
        }
        {
          if (typeof type.tag === "number") {
            error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
          }
        }
        if (typeof type === "function") {
          return type.displayName || type.name || null;
        }
        if (typeof type === "string") {
          return type;
        }
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type === "object") {
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              if (outerName !== null) {
                return outerName;
              }
              return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch (x3) {
                return null;
              }
            }
          }
        }
        return null;
      }
      var assign = Object.assign;
      var disabledDepth = 0;
      var prevLog;
      var prevInfo;
      var prevWarn;
      var prevError;
      var prevGroup;
      var prevGroupCollapsed;
      var prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = true;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
              configurable: true,
              enumerable: true,
              value: disabledLog,
              writable: true
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          disabledDepth--;
          if (disabledDepth === 0) {
            var props = {
              configurable: true,
              enumerable: true,
              writable: true
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          if (disabledDepth < 0) {
            error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
          }
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
      var prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0) {
            try {
              throw Error();
            } catch (x3) {
              var match2 = x3.stack.trim().match(/\n( *(at )?)/);
              prefix = match2 && match2[1] || "";
            }
          }
          return "\n" + prefix + name;
        }
      }
      var reentry = false;
      var componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn2, construct2) {
        if (!fn2 || reentry) {
          return "";
        }
        {
          var frame = componentFrameCache.get(fn2);
          if (frame !== void 0) {
            return frame;
          }
        }
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        {
          previousDispatcher = ReactCurrentDispatcher.current;
          ReactCurrentDispatcher.current = null;
          disableLogs();
        }
        try {
          if (construct2) {
            var Fake = function() {
              throw Error();
            };
            Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            });
            if (typeof Reflect === "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x3) {
                control = x3;
              }
              Reflect.construct(fn2, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x3) {
                control = x3;
              }
              fn2.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x3) {
              control = x3;
            }
            fn2();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack === "string") {
            var sampleLines = sample.stack.split("\n");
            var controlLines = control.stack.split("\n");
            var s4 = sampleLines.length - 1;
            var c3 = controlLines.length - 1;
            while (s4 >= 1 && c3 >= 0 && sampleLines[s4] !== controlLines[c3]) {
              c3--;
            }
            for (; s4 >= 1 && c3 >= 0; s4--, c3--) {
              if (sampleLines[s4] !== controlLines[c3]) {
                if (s4 !== 1 || c3 !== 1) {
                  do {
                    s4--;
                    c3--;
                    if (c3 < 0 || sampleLines[s4] !== controlLines[c3]) {
                      var _frame = "\n" + sampleLines[s4].replace(" at new ", " at ");
                      if (fn2.displayName && _frame.includes("<anonymous>")) {
                        _frame = _frame.replace("<anonymous>", fn2.displayName);
                      }
                      {
                        if (typeof fn2 === "function") {
                          componentFrameCache.set(fn2, _frame);
                        }
                      }
                      return _frame;
                    }
                  } while (s4 >= 1 && c3 >= 0);
                }
                break;
              }
            }
          }
        } finally {
          reentry = false;
          {
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
          }
          Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn2 ? fn2.displayName || fn2.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        {
          if (typeof fn2 === "function") {
            componentFrameCache.set(fn2, syntheticFrame);
          }
        }
        return syntheticFrame;
      }
      function describeFunctionComponentFrame(fn2, source, ownerFn) {
        {
          return describeNativeComponentFrame(fn2, false);
        }
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) {
          return "";
        }
        if (typeof type === "function") {
          {
            return describeNativeComponentFrame(type, shouldConstruct(type));
          }
        }
        if (typeof type === "string") {
          return describeBuiltInComponentFrame(type);
        }
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") {
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch (x3) {
              }
            }
          }
        }
        return "";
      }
      var hasOwnProperty2 = Object.prototype.hasOwnProperty;
      var loggedTypeFailures = {};
      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        {
          if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame.setExtraStackFrame(stack);
          } else {
            ReactDebugCurrentFrame.setExtraStackFrame(null);
          }
        }
      }
      function checkPropTypes(typeSpecs, values, location2, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty2);
          for (var typeSpecName in typeSpecs) {
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] !== "function") {
                  var err = Error((componentName || "React class") + ": " + location2 + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  err.name = "Invariant Violation";
                  throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location2, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location2, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
              }
              if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location2, error$1.message);
                setCurrentlyValidatingElement(null);
              }
            }
          }
        }
      }
      var isArrayImpl = Array.isArray;
      function isArray2(a4) {
        return isArrayImpl(a4);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
          var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        {
          try {
            testStringCoercion(value);
            return false;
          } catch (e3) {
            return true;
          }
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkKeyStringCoercion(value) {
        {
          if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value);
          }
        }
      }
      var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
      var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
      };
      var specialPropKeyWarningShown;
      var specialPropRefWarningShown;
      function hasValidRef(config2) {
        {
          if (hasOwnProperty2.call(config2, "ref")) {
            var getter = Object.getOwnPropertyDescriptor(config2, "ref").get;
            if (getter && getter.isReactWarning) {
              return false;
            }
          }
        }
        return config2.ref !== void 0;
      }
      function hasValidKey(config2) {
        {
          if (hasOwnProperty2.call(config2, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config2, "key").get;
            if (getter && getter.isReactWarning) {
              return false;
            }
          }
        }
        return config2.key !== void 0;
      }
      function warnIfStringRefCannotBeAutoConverted(config2, self2) {
        {
          if (typeof config2.ref === "string" && ReactCurrentOwner.current && self2) ;
        }
      }
      function defineKeyPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
              specialPropKeyWarningShown = true;
              error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
      }
      function defineRefPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
              specialPropRefWarningShown = true;
              error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
      }
      var ReactElement = function(type, key, ref, self2, source, owner, props) {
        var element = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: REACT_ELEMENT_TYPE,
          // Built-in properties that belong on the element
          type,
          key,
          ref,
          props,
          // Record the component responsible for creating this element.
          _owner: owner
        };
        {
          element._store = {};
          Object.defineProperty(element._store, "validated", {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
          });
          Object.defineProperty(element, "_self", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self2
          });
          Object.defineProperty(element, "_source", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
          });
          if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
          }
        }
        return element;
      };
      function jsxDEV(type, config2, maybeKey, source, self2) {
        {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          if (maybeKey !== void 0) {
            {
              checkKeyStringCoercion(maybeKey);
            }
            key = "" + maybeKey;
          }
          if (hasValidKey(config2)) {
            {
              checkKeyStringCoercion(config2.key);
            }
            key = "" + config2.key;
          }
          if (hasValidRef(config2)) {
            ref = config2.ref;
            warnIfStringRefCannotBeAutoConverted(config2, self2);
          }
          for (propName in config2) {
            if (hasOwnProperty2.call(config2, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
              props[propName] = config2[propName];
            }
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          if (key || ref) {
            var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
            if (key) {
              defineKeyPropWarningGetter(props, displayName);
            }
            if (ref) {
              defineRefPropWarningGetter(props, displayName);
            }
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
      }
      var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
      var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement$1(element) {
        {
          if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
          } else {
            ReactDebugCurrentFrame$1.setExtraStackFrame(null);
          }
        }
      }
      var propTypesMisspellWarningShown;
      {
        propTypesMisspellWarningShown = false;
      }
      function isValidElement(object) {
        {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
      }
      function getDeclarationErrorAddendum() {
        {
          if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
      }
      function getSourceInfoErrorAddendum(source) {
        {
          return "";
        }
      }
      var ownerHasKeyUseWarning = {};
      function getCurrentComponentErrorInfo(parentType) {
        {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
      }
      function validateExplicitKey(element, parentType) {
        {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
            childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
          }
          setCurrentlyValidatingElement$1(element);
          error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
          setCurrentlyValidatingElement$1(null);
        }
      }
      function validateChildKeys(node, parentType) {
        {
          if (typeof node !== "object") {
            return;
          }
          if (isArray2(node)) {
            for (var i3 = 0; i3 < node.length; i3++) {
              var child = node[i3];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
      }
      function validatePropTypes(element) {
        {
          var type = element.type;
          if (type === null || type === void 0 || typeof type === "string") {
            return;
          }
          var propTypes;
          if (typeof type === "function") {
            propTypes = type.propTypes;
          } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          type.$$typeof === REACT_MEMO_TYPE)) {
            propTypes = type.propTypes;
          } else {
            return;
          }
          if (propTypes) {
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
          } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true;
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
          }
          if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
            error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
          }
        }
      }
      function validateFragmentProps(fragment) {
        {
          var keys2 = Object.keys(fragment.props);
          for (var i3 = 0; i3 < keys2.length; i3++) {
            var key = keys2[i3];
            if (key !== "children" && key !== "key") {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
              setCurrentlyValidatingElement$1(null);
              break;
            }
          }
          if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error("Invalid attribute `ref` supplied to `React.Fragment`.");
            setCurrentlyValidatingElement$1(null);
          }
        }
      }
      function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
        {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendum();
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (isArray2(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
          }
          var element = jsxDEV(type, props, key, source, self2);
          if (element == null) {
            return element;
          }
          if (validType) {
            var children = props.children;
            if (children !== void 0) {
              if (isStaticChildren) {
                if (isArray2(children)) {
                  for (var i3 = 0; i3 < children.length; i3++) {
                    validateChildKeys(children[i3], type);
                  }
                  if (Object.freeze) {
                    Object.freeze(children);
                  }
                } else {
                  error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                }
              } else {
                validateChildKeys(children, type);
              }
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
      }
      function jsxWithValidationStatic(type, props, key) {
        {
          return jsxWithValidation(type, props, key, true);
        }
      }
      function jsxWithValidationDynamic(type, props, key) {
        {
          return jsxWithValidation(type, props, key, false);
        }
      }
      var jsx = jsxWithValidationDynamic;
      var jsxs = jsxWithValidationStatic;
      reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;
      reactJsxRuntime_development.jsx = jsx;
      reactJsxRuntime_development.jsxs = jsxs;
    })();
  }
  return reactJsxRuntime_development;
}
if (process.env.NODE_ENV === "production") {
  jsxRuntime.exports = requireReactJsxRuntime_production_min();
} else {
  jsxRuntime.exports = requireReactJsxRuntime_development();
}
var jsxRuntimeExports = jsxRuntime.exports;
var extendStatics = function(d4, b3) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d5, b4) {
    d5.__proto__ = b4;
  } || function(d5, b4) {
    for (var p2 in b4) if (Object.prototype.hasOwnProperty.call(b4, p2)) d5[p2] = b4[p2];
  };
  return extendStatics(d4, b3);
};
function __extends(d4, b3) {
  if (typeof b3 !== "function" && b3 !== null)
    throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
  extendStatics(d4, b3);
  function __() {
    this.constructor = d4;
  }
  d4.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t4) {
    for (var s4, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
      s4 = arguments[i3];
      for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2)) t4[p2] = s4[p2];
    }
    return t4;
  };
  return __assign.apply(this, arguments);
};
function __rest$8(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
}
function __awaiter$5(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e3) {
        reject(e3);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e3) {
        reject(e3);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t4[0] & 1) throw t4[1];
    return t4[1];
  }, trys: [], ops: [] }, f2, y4, t4, g2 = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g2.next = verb(0), g2["throw"] = verb(1), g2["return"] = verb(2), typeof Symbol === "function" && (g2[Symbol.iterator] = function() {
    return this;
  }), g2;
  function verb(n2) {
    return function(v2) {
      return step([n2, v2]);
    };
  }
  function step(op) {
    if (f2) throw new TypeError("Generator is already executing.");
    while (g2 && (g2 = 0, op[0] && (_2 = 0)), _2) try {
      if (f2 = 1, y4 && (t4 = op[0] & 2 ? y4["return"] : op[0] ? y4["throw"] || ((t4 = y4["return"]) && t4.call(y4), 0) : y4.next) && !(t4 = t4.call(y4, op[1])).done) return t4;
      if (y4 = 0, t4) op = [op[0] & 2, t4.value];
      switch (op[0]) {
        case 0:
        case 1:
          t4 = op;
          break;
        case 4:
          _2.label++;
          return { value: op[1], done: false };
        case 5:
          _2.label++;
          y4 = op[1];
          op = [0];
          continue;
        case 7:
          op = _2.ops.pop();
          _2.trys.pop();
          continue;
        default:
          if (!(t4 = _2.trys, t4 = t4.length > 0 && t4[t4.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _2 = 0;
            continue;
          }
          if (op[0] === 3 && (!t4 || op[1] > t4[0] && op[1] < t4[3])) {
            _2.label = op[1];
            break;
          }
          if (op[0] === 6 && _2.label < t4[1]) {
            _2.label = t4[1];
            t4 = op;
            break;
          }
          if (t4 && _2.label < t4[2]) {
            _2.label = t4[2];
            _2.ops.push(op);
            break;
          }
          if (t4[2]) _2.ops.pop();
          _2.trys.pop();
          continue;
      }
      op = body.call(thisArg, _2);
    } catch (e3) {
      op = [6, e3];
      y4 = 0;
    } finally {
      f2 = t4 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __spreadArray(to2, from, pack) {
  if (pack || arguments.length === 2) for (var i3 = 0, l2 = from.length, ar2; i3 < l2; i3++) {
    if (ar2 || !(i3 in from)) {
      if (!ar2) ar2 = Array.prototype.slice.call(from, 0, i3);
      ar2[i3] = from[i3];
    }
  }
  return to2.concat(ar2 || Array.prototype.slice.call(from));
}
typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
  var e3 = new Error(message);
  return e3.name = "SuppressedError", e3.error = error, e3.suppressed = suppressed, e3;
};
var e$1 = function(t4, n2) {
  return e$1 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, t5) {
    e3.__proto__ = t5;
  } || function(e3, t5) {
    for (var n3 in t5) Object.prototype.hasOwnProperty.call(t5, n3) && (e3[n3] = t5[n3]);
  }, e$1(t4, n2);
};
function t$2(t4, n2) {
  if ("function" != typeof n2 && null !== n2) throw new TypeError("Class extends value " + String(n2) + " is not a constructor or null");
  function i3() {
    this.constructor = t4;
  }
  e$1(t4, n2), t4.prototype = null === n2 ? Object.create(n2) : (i3.prototype = n2.prototype, new i3());
}
var n$2 = function() {
  return n$2 = Object.assign || function(e3) {
    for (var t4, n2 = 1, i3 = arguments.length; n2 < i3; n2++) for (var r2 in t4 = arguments[n2]) Object.prototype.hasOwnProperty.call(t4, r2) && (e3[r2] = t4[r2]);
    return e3;
  }, n$2.apply(this, arguments);
};
function i(e3, t4) {
  var n2 = {};
  for (var i3 in e3) Object.prototype.hasOwnProperty.call(e3, i3) && t4.indexOf(i3) < 0 && (n2[i3] = e3[i3]);
  if (null != e3 && "function" == typeof Object.getOwnPropertySymbols) {
    var r2 = 0;
    for (i3 = Object.getOwnPropertySymbols(e3); r2 < i3.length; r2++) t4.indexOf(i3[r2]) < 0 && Object.prototype.propertyIsEnumerable.call(e3, i3[r2]) && (n2[i3[r2]] = e3[i3[r2]]);
  }
  return n2;
}
function r$1(e3, t4, n2, i3) {
  return new (n2 || (n2 = Promise))(function(r2, s4) {
    function o2(e4) {
      try {
        c3(i3.next(e4));
      } catch (e5) {
        s4(e5);
      }
    }
    function a4(e4) {
      try {
        c3(i3.throw(e4));
      } catch (e5) {
        s4(e5);
      }
    }
    function c3(e4) {
      var t5;
      e4.done ? r2(e4.value) : (t5 = e4.value, t5 instanceof n2 ? t5 : new n2(function(e5) {
        e5(t5);
      })).then(o2, a4);
    }
    c3((i3 = i3.apply(e3, [])).next());
  });
}
function s$1(e3, t4) {
  var n2, i3, r2, s4 = { label: 0, sent: function() {
    if (1 & r2[0]) throw r2[1];
    return r2[1];
  }, trys: [], ops: [] }, o2 = Object.create(("function" == typeof Iterator ? Iterator : Object).prototype);
  return o2.next = a4(0), o2.throw = a4(1), o2.return = a4(2), "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
    return this;
  }), o2;
  function a4(a5) {
    return function(c3) {
      return function(a6) {
        if (n2) throw new TypeError("Generator is already executing.");
        for (; o2 && (o2 = 0, a6[0] && (s4 = 0)), s4; ) try {
          if (n2 = 1, i3 && (r2 = 2 & a6[0] ? i3.return : a6[0] ? i3.throw || ((r2 = i3.return) && r2.call(i3), 0) : i3.next) && !(r2 = r2.call(i3, a6[1])).done) return r2;
          switch (i3 = 0, r2 && (a6 = [2 & a6[0], r2.value]), a6[0]) {
            case 0:
            case 1:
              r2 = a6;
              break;
            case 4:
              return s4.label++, { value: a6[1], done: false };
            case 5:
              s4.label++, i3 = a6[1], a6 = [0];
              continue;
            case 7:
              a6 = s4.ops.pop(), s4.trys.pop();
              continue;
            default:
              if (!(r2 = s4.trys, (r2 = r2.length > 0 && r2[r2.length - 1]) || 6 !== a6[0] && 2 !== a6[0])) {
                s4 = 0;
                continue;
              }
              if (3 === a6[0] && (!r2 || a6[1] > r2[0] && a6[1] < r2[3])) {
                s4.label = a6[1];
                break;
              }
              if (6 === a6[0] && s4.label < r2[1]) {
                s4.label = r2[1], r2 = a6;
                break;
              }
              if (r2 && s4.label < r2[2]) {
                s4.label = r2[2], s4.ops.push(a6);
                break;
              }
              r2[2] && s4.ops.pop(), s4.trys.pop();
              continue;
          }
          a6 = t4.call(e3, s4);
        } catch (e4) {
          a6 = [6, e4], i3 = 0;
        } finally {
          n2 = r2 = 0;
        }
        if (5 & a6[0]) throw a6[1];
        return { value: a6[0] ? a6[1] : void 0, done: true };
      }([a5, c3]);
    };
  }
}
function o(e3) {
  var t4 = "function" == typeof Symbol && Symbol.iterator, n2 = t4 && e3[t4], i3 = 0;
  if (n2) return n2.call(e3);
  if (e3 && "number" == typeof e3.length) return { next: function() {
    return e3 && i3 >= e3.length && (e3 = void 0), { value: e3 && e3[i3++], done: !e3 };
  } };
  throw new TypeError(t4 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function a$1(e3, t4) {
  var n2 = "function" == typeof Symbol && e3[Symbol.iterator];
  if (!n2) return e3;
  var i3, r2, s4 = n2.call(e3), o2 = [];
  try {
    for (; (void 0 === t4 || t4-- > 0) && !(i3 = s4.next()).done; ) o2.push(i3.value);
  } catch (e4) {
    r2 = { error: e4 };
  } finally {
    try {
      i3 && !i3.done && (n2 = s4.return) && n2.call(s4);
    } finally {
      if (r2) throw r2.error;
    }
  }
  return o2;
}
function c(e3, t4, n2) {
  if (2 === arguments.length) for (var i3, r2 = 0, s4 = t4.length; r2 < s4; r2++) !i3 && r2 in t4 || (i3 || (i3 = Array.prototype.slice.call(t4, 0, r2)), i3[r2] = t4[r2]);
  return e3.concat(i3 || Array.prototype.slice.call(t4));
}
"function" == typeof SuppressedError && SuppressedError;
var u$1, l = "4.17.2", h$1 = function() {
  function e3() {
  }
  return Object.defineProperty(e3, "OS_VERSION", { get: function() {
    return "undefined" != typeof navigator && navigator.userAgent ? navigator.userAgent.replace(/,/g, ".") : "noAgent";
  }, enumerable: false, configurable: true }), Object.defineProperty(e3, "SDK_VERSION", { get: function() {
    return l;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3, "SDK_MAJOR_VERSION", { get: function() {
    return e3.SDK_VERSION.split(".")[0];
  }, enumerable: false, configurable: true }), Object.defineProperty(e3, "DEFAULT_MAX_UNREAD_COUNT_OF_SUPER_GROUP_CHANNEL", { get: function() {
    return 100;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3, "INTERNAL_CALL", { get: function() {
    return "ic";
  }, enumerable: false, configurable: true }), e3;
}();
!function(e3) {
  e3[e3.NON_AUTHORIZED = 400108] = "NON_AUTHORIZED", e3[e3.INVALID_TOKEN = 400111] = "INVALID_TOKEN", e3[e3.NOT_FOUND_IN_DATABASE = 400201] = "NOT_FOUND_IN_DATABASE", e3[e3.USER_AUTH_DEACTIVATED = 400300] = "USER_AUTH_DEACTIVATED", e3[e3.USER_AUTH_DELETED_OR_NOT_FOUND = 400301] = "USER_AUTH_DELETED_OR_NOT_FOUND", e3[e3.SESSION_TOKEN_EXPIRED = 400302] = "SESSION_TOKEN_EXPIRED", e3[e3.APPLICATION_NOT_FOUND = 400304] = "APPLICATION_NOT_FOUND", e3[e3.SESSION_KEY_EXPIRED = 400309] = "SESSION_KEY_EXPIRED", e3[e3.SESSION_REVOKED = 400310] = "SESSION_REVOKED", e3[e3.INVALID_SESSION_TYPE = 400312] = "INVALID_SESSION_TYPE", e3[e3.INVALID_AUTH_FOR_SERVICE = 400313] = "INVALID_AUTH_FOR_SERVICE", e3[e3.STAT_UPLOAD_NOT_ALLOWED = 403200] = "STAT_UPLOAD_NOT_ALLOWED", e3[e3.NOT_SUPPORTED_PINNED_MESSAGE_IN_REVIEW_MESSAGE = 400940] = "NOT_SUPPORTED_PINNED_MESSAGE_IN_REVIEW_MESSAGE", e3[e3.INTERNAL_SERVER_ERROR = 500901] = "INTERNAL_SERVER_ERROR", e3[e3.RATE_LIMIT_EXCEEDED = 500910] = "RATE_LIMIT_EXCEEDED", e3[e3.INVALID_REQUIRED_FORM_VALUE = 400105] = "INVALID_REQUIRED_FORM_VALUE", e3[e3.UNKNOWN_SERVER_ERROR = 900200] = "UNKNOWN_SERVER_ERROR", e3[e3.NOT_SUPPORTED_FEATURE_IN_IN_REVIEW_MESSAGE = 901500] = "NOT_SUPPORTED_FEATURE_IN_IN_REVIEW_MESSAGE", e3[e3.ERR_DUPLICATED_DATA = 400202] = "ERR_DUPLICATED_DATA", e3[e3.DEBUG_MODE_REQUIRED = 7e5] = "DEBUG_MODE_REQUIRED", e3[e3.LOST_INSTANCE = 700100] = "LOST_INSTANCE", e3[e3.CONNECTION_RENEW = 700102] = "CONNECTION_RENEW", e3[e3.INVALID_CONNECTION_STATE_TRANSITION = 700200] = "INVALID_CONNECTION_STATE_TRANSITION", e3[e3.INVALID_COMMAND = 700700] = "INVALID_COMMAND", e3[e3.XMLHTTPREQUEST_NOT_SUPPORTED = 700800] = "XMLHTTPREQUEST_NOT_SUPPORTED", e3[e3.UNKNOWN_ERROR = 77e4] = "UNKNOWN_ERROR", e3[e3.INVALID_INITIALIZATION = 800100] = "INVALID_INITIALIZATION", e3[e3.CONNECTION_REQUIRED = 800101] = "CONNECTION_REQUIRED", e3[e3.CONNECTION_CANCELED = 800102] = "CONNECTION_CANCELED", e3[e3.INVALID_PARAMETER = 800110] = "INVALID_PARAMETER", e3[e3.NOT_SUPPORTED_ERROR = 800111] = "NOT_SUPPORTED_ERROR", e3[e3.NETWORK_ERROR = 800120] = "NETWORK_ERROR", e3[e3.NETWORK_ROUTING_ERROR = 800121] = "NETWORK_ROUTING_ERROR", e3[e3.MALFORMED_DATA = 800130] = "MALFORMED_DATA", e3[e3.MALFORMED_ERROR_DATA = 800140] = "MALFORMED_ERROR_DATA", e3[e3.WRONG_CHANNEL_TYPE = 800150] = "WRONG_CHANNEL_TYPE", e3[e3.MARK_AS_READ_RATE_LIMIT_EXCEEDED = 800160] = "MARK_AS_READ_RATE_LIMIT_EXCEEDED", e3[e3.QUERY_IN_PROGRESS = 800170] = "QUERY_IN_PROGRESS", e3[e3.ACK_TIMEOUT = 800180] = "ACK_TIMEOUT", e3[e3.LOGIN_TIMEOUT = 800190] = "LOGIN_TIMEOUT", e3[e3.WEBSOCKET_CONNECTION_CLOSED = 800200] = "WEBSOCKET_CONNECTION_CLOSED", e3[e3.WEBSOCKET_CONNECTION_FAILED = 800210] = "WEBSOCKET_CONNECTION_FAILED", e3[e3.REQUEST_FAILED = 800220] = "REQUEST_FAILED", e3[e3.FILE_UPLOAD_CANCEL_FAILED = 800230] = "FILE_UPLOAD_CANCEL_FAILED", e3[e3.REQUEST_CANCELED = 800240] = "REQUEST_CANCELED", e3[e3.REQUEST_DUPLICATED = 800250] = "REQUEST_DUPLICATED", e3[e3.FILE_SIZE_LIMIT_EXCEEDED = 800260] = "FILE_SIZE_LIMIT_EXCEEDED", e3[e3.ERR_UPLOAD_STAT_RETRY_COUNT_EXCEEDED = 800270] = "ERR_UPLOAD_STAT_RETRY_COUNT_EXCEEDED", e3[e3.SESSION_TOKEN_REQUEST_FAILED = 800500] = "SESSION_TOKEN_REQUEST_FAILED", e3[e3.SESSION_TOKEN_REFRESHED = 800501] = "SESSION_TOKEN_REFRESHED", e3[e3.SESSION_TOKEN_REFRESH_FAILED = 800502] = "SESSION_TOKEN_REFRESH_FAILED", e3[e3.COLLECTION_DISPOSED = 800600] = "COLLECTION_DISPOSED", e3[e3.DATABASE_ERROR = 800700] = "DATABASE_ERROR", e3[e3.USER_DEACTIVATED = 900021] = "USER_DEACTIVATED", e3[e3.CHANNEL_IS_FROZEN = 900050] = "CHANNEL_IS_FROZEN", e3[e3.RECEIVER_USER_DEACTIVATED = 900081] = "RECEIVER_USER_DEACTIVATED";
}(u$1 || (u$1 = {}));
var d, _, f$1, p, E$1, g$1, v$2 = function(e3) {
  return !(e3 instanceof b$2 && !e3.shouldThrowOutside);
}, b$2 = function(e3) {
  function n2(t4) {
    var i3 = t4.code, r2 = void 0 === i3 ? 0 : i3, s4 = t4.message, o2 = void 0 === s4 ? "" : s4, a4 = e3.call(this, o2) || this;
    return a4.shouldThrowOutside = false, a4._detail = "", a4.name = "SendbirdError", a4.code = r2, Object.setPrototypeOf(a4, n2.prototype), a4;
  }
  return t$2(n2, e3), Object.defineProperty(n2.prototype, "detail", { get: function() {
    return this._detail;
  }, enumerable: false, configurable: true }), n2.prototype.setDetail = function(e4) {
    this._detail = e4;
  }, Object.defineProperty(n2.prototype, "isInvalidTokenError", { get: function() {
    return this.code === u$1.INVALID_TOKEN;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isSessionExpiredError", { get: function() {
    return this.isSessionTokenExpiredError || this.isSessionKeyExpiredError;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isSessionTokenExpiredError", { get: function() {
    return this.code === u$1.SESSION_TOKEN_EXPIRED;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isSessionKeyExpiredError", { get: function() {
    return this.code === u$1.SESSION_KEY_EXPIRED;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isSessionInvalidatedError", { get: function() {
    return this.isSessionRevokedError || this.isUserAuthDeactivedError || this.isUserAuthDeletedOrNotFoundError;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isSessionRevokedError", { get: function() {
    return this.code === u$1.SESSION_REVOKED;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isUserAuthDeactivedError", { get: function() {
    return this.code === u$1.USER_AUTH_DEACTIVATED;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isUserAuthDeletedOrNotFoundError", { get: function() {
    return this.code === u$1.USER_AUTH_DELETED_OR_NOT_FOUND;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isNetworkError", { get: function() {
    return this.code === u$1.NETWORK_ERROR || this.code === u$1.NETWORK_ROUTING_ERROR;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "debugModeRequired", { get: function() {
    return new n2({ code: u$1.DEBUG_MODE_REQUIRED, message: "Cannot run this operation in production mode." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "lostInstance", { get: function() {
    return new n2({ code: u$1.LOST_INSTANCE, message: "Instance ID is missing. It should belong to an instance." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "invalidCommand", { get: function() {
    return new n2({ code: u$1.INVALID_COMMAND, message: "Cannot send invalid command." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "unknown", { get: function() {
    return new n2({ code: u$1.UNKNOWN_ERROR, message: "Unknown error occurred." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "connectionRenew", { get: function() {
    return new n2({ code: u$1.CONNECTION_RENEW, message: "Connection restarts." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "invalidConnectionStateTransition", { get: function() {
    return new n2({ code: u$1.INVALID_CONNECTION_STATE_TRANSITION, message: "Invalid connection state transition." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "xmlHttpRequestNotSupported", { get: function() {
    return new n2({ code: u$1.XMLHTTPREQUEST_NOT_SUPPORTED, message: "Cannot upload file. XMLHttpRequest is not defined in this environment." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "connectionRequired", { get: function() {
    return new n2({ code: u$1.CONNECTION_REQUIRED, message: "Connection is required." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "connectionCanceled", { get: function() {
    return new n2({ code: u$1.CONNECTION_CANCELED, message: "Connection is canceled." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "invalidParameters", { get: function() {
    return new n2({ code: u$1.INVALID_PARAMETER, message: "Invalid parameters." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "notSupportedError", { get: function() {
    return new n2({ code: u$1.NOT_SUPPORTED_ERROR, message: "Given parameters are not supported." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "channelTypeNotSupportedError", { get: function() {
    return new n2({ code: u$1.NOT_SUPPORTED_ERROR, message: "Called method is not supported in the current channel's channel type." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "networkError", { get: function() {
    return new n2({ code: u$1.NETWORK_ERROR, message: "There was a network error." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "markAsReadAllRateLimitExceeded", { get: function() {
    return new n2({ code: u$1.MARK_AS_READ_RATE_LIMIT_EXCEEDED, message: "markAsRead rate limit exceeded." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "queryInProgress", { get: function() {
    return new n2({ code: u$1.QUERY_IN_PROGRESS, message: "Query in progress." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "noAckTimeout", { get: function() {
    return new n2({ code: u$1.ACK_TIMEOUT, message: "Command received no ack." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "loginTimeout", { get: function() {
    return new n2({ code: u$1.LOGIN_TIMEOUT, message: "Connection timeout." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "connectionClosed", { get: function() {
    return new n2({ code: u$1.WEBSOCKET_CONNECTION_CLOSED, message: "Connection is closed. Please reconnect." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "requestFailed", { get: function() {
    return new n2({ code: u$1.REQUEST_FAILED, message: "Request failed." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "tooManyRequests", { get: function() {
    return new n2({ code: u$1.REQUEST_DUPLICATED, message: "Too many requests." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "alreadyConnectedAsAnotherUser", { get: function() {
    return new n2({ code: u$1.REQUEST_FAILED, message: "Already logged in as a different user. Call disconnect() first." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "fileUploadCanceled", { get: function() {
    return new n2({ code: u$1.FILE_UPLOAD_CANCEL_FAILED, message: "File upload has been canceled." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "requestCanceled", { get: function() {
    return new n2({ code: u$1.REQUEST_CANCELED, message: "Request has been canceled." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "sessionTokenRefreshFailed", { get: function() {
    return new n2({ code: u$1.SESSION_TOKEN_REFRESH_FAILED, message: "Failed to refresh the session key." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "sessionTokenRequestFailed", { get: function() {
    return new n2({ code: u$1.SESSION_TOKEN_REQUEST_FAILED, message: "Failed to get the session token." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "databaseError", { get: function() {
    return new n2({ code: u$1.DATABASE_ERROR, message: "Database error." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "fileSizeLimitExceededError", { get: function() {
    return new n2({ code: u$1.FILE_SIZE_LIMIT_EXCEEDED, message: "File size exceeds the file size limit." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "statLogUploadLimitExceededError", { get: function() {
    return new n2({ code: u$1.ERR_UPLOAD_STAT_RETRY_COUNT_EXCEEDED, message: "The upload request failed due to the retry count being exceeded." });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2, "malformedDataError", { get: function() {
    return new n2({ code: u$1.MALFORMED_DATA, message: "Malformed data." });
  }, enumerable: false, configurable: true }), n2.prototype.throwOutside = function() {
    throw this.shouldThrowOutside = true, this;
  }, n2;
}(Error), m$2 = [u$1.CONNECTION_REQUIRED, u$1.NETWORK_ERROR, u$1.ACK_TIMEOUT, u$1.WEBSOCKET_CONNECTION_CLOSED, u$1.WEBSOCKET_CONNECTION_FAILED, u$1.FILE_UPLOAD_CANCEL_FAILED, u$1.REQUEST_CANCELED, u$1.INTERNAL_SERVER_ERROR, u$1.RATE_LIMIT_EXCEEDED, u$1.UNKNOWN_SERVER_ERROR, u$1.USER_DEACTIVATED, u$1.CHANNEL_IS_FROZEN, u$1.RECEIVER_USER_DEACTIVATED], y$2 = [u$1.WEBSOCKET_CONNECTION_CLOSED, u$1.WEBSOCKET_CONNECTION_FAILED, u$1.CONNECTION_REQUIRED, u$1.CHANNEL_IS_FROZEN], w$1 = function(e3, t4) {
  if (e3 !== t4) {
    var i3 = n$2({}, e3), r2 = n$2({}, t4);
    return (!i3.hasOwnProperty("messageId") || !r2.hasOwnProperty("messageId") || i3.messageId === r2.messageId) && ((!i3.hasOwnProperty("reqId") || !r2.hasOwnProperty("reqId") || i3.reqId === r2.reqId) && (i3.hasOwnProperty("messageId") && delete i3.messageId, i3.hasOwnProperty("reqId") && delete i3.reqId, r2.hasOwnProperty("messageId") && delete r2.messageId, r2.hasOwnProperty("reqId") && delete r2.reqId, JSON.stringify(i3) === JSON.stringify(r2)));
  }
  return true;
}, S$1 = function(e3, t4, n2) {
  return void 0 === n2 && (n2 = false), !(!n2 || !R$1(t4)) || ("string" != typeof e3 ? "object" == typeof e3 ? T$2(e3, t4) : N$1(e3, t4) : typeof t4 === e3);
}, T$2 = function(e3, t4, n2) {
  return void 0 === n2 && (n2 = false), !(!n2 || !R$1(t4)) || Object.values(e3).includes(t4);
}, N$1 = function(e3, t4) {
  return t4 instanceof e3;
}, C$1 = function(e3, t4, n2) {
  return void 0 === n2 && (n2 = false), !(!n2 || !R$1(t4)) || Array.isArray(t4) && t4.every(function(t5) {
    return S$1(e3, t5);
  });
}, A = function(e3, t4) {
  return !!R$1(e3) || "number" == typeof e3 && 13 === e3.toString().length;
}, I$2 = function(e3) {
  return e3 > 0 && m$2.indexOf(e3) >= 0;
}, O$2 = function(e3) {
  return e3 > 0 && y$2.indexOf(e3) >= 0;
}, k = function(e3, t4) {
  if (void 0 === t4 && (t4 = false), t4 && R$1(e3)) return true;
  var n2 = "object" == typeof e3 && null !== e3 && e3.hasOwnProperty("name") && "string" == typeof e3.name && e3.hasOwnProperty("uri") && "string" == typeof e3.uri && e3.hasOwnProperty("type") && "string" == typeof e3.type;
  if (!n2) {
    if ("undefined" != typeof Blob) return e3 instanceof Blob;
    if ("undefined" != typeof File) return e3 instanceof File;
  }
  return n2;
}, D$2 = function(e3, t4) {
  if (e3 === t4) return true;
  if (null == e3 || null == t4) return false;
  if (e3.length !== t4.length) return false;
  for (var n2 = c([], a$1(e3), false).sort(), i3 = c([], a$1(t4), false).sort(), r2 = 0; r2 < n2.length; ++r2) if (n2[r2] !== i3[r2]) return false;
  return true;
}, R$1 = function(e3) {
  return null == e3;
}, L$2 = function() {
  function e3(e4) {
    var t4 = void 0 === e4 ? {} : e4, n2 = t4.useMemberInfoInMessage, i3 = void 0 === n2 || n2, r2 = t4.typingIndicatorInvalidateTime, s4 = void 0 === r2 ? 1e4 : r2, o2 = t4.typingIndicatorThrottle, a4 = void 0 === o2 ? 1e3 : o2, c3 = t4.websocketResponseTimeout, u3 = void 0 === c3 ? 1e4 : c3, l2 = t4.websocketPayloadDecompression, h4 = void 0 === l2 || l2, d4 = t4.sessionTokenRefreshTimeout, _2 = void 0 === d4 ? 60 : d4;
    this._useMemberInfoInMessage = true, this._typingIndicatorInvalidateTime = 1e4, this._typingIndicatorThrottle = 1e3, this._websocketResponseTimeout = 1e4, this._sessionTokenRefreshTimeout = 60, this._useMemberInfoInMessage = i3, this._typingIndicatorInvalidateTime = s4, this._typingIndicatorThrottle = a4, this._websocketResponseTimeout = u3, this._sessionTokenRefreshTimeout = _2, this.websocketPayloadDecompression = h4;
  }
  return Object.defineProperty(e3.prototype, "useMemberInfoInMessage", { get: function() {
    return this._useMemberInfoInMessage;
  }, set: function(e4) {
    S$1("boolean", e4) && (this._useMemberInfoInMessage = e4);
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "typingIndicatorInvalidateTime", { get: function() {
    return this._typingIndicatorInvalidateTime;
  }, set: function(e4) {
    S$1("number", e4) && (this._typingIndicatorInvalidateTime = e4);
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "typingIndicatorThrottle", { get: function() {
    return this._typingIndicatorThrottle;
  }, set: function(e4) {
    S$1("number", e4) && e4 >= 1e3 && e4 <= 9e3 && (this._typingIndicatorThrottle = e4);
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "websocketResponseTimeout", { get: function() {
    return this._websocketResponseTimeout;
  }, set: function(e4) {
    S$1("number", e4) && e4 >= 5e3 && e4 <= 3e4 && (this._websocketResponseTimeout = e4);
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "sessionTokenRefreshTimeout", { get: function() {
    return this._sessionTokenRefreshTimeout;
  }, set: function(e4) {
    S$1("number", e4) && (e4 < 60 ? e4 = 60 : e4 > 1800 && (e4 = 1800), this._sessionTokenRefreshTimeout = e4);
  }, enumerable: false, configurable: true }), e3;
}(), x = { encrypt: function(e3) {
  return e3;
}, decrypt: function(e3) {
  return e3;
} }, U$1 = function() {
  function e3(e4) {
    var t4 = e4.store;
    this._preference = /* @__PURE__ */ new Map(), this._store = t4;
  }
  return e3.prototype._savePreferenceKeys = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._store.set({ key: this._keysAddress, value: c([], a$1(this._preference.keys()), false) })];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, e3.prototype.init = function(e4, t4) {
    var n2;
    return void 0 === t4 && (t4 = 1), r$1(this, void 0, void 0, function() {
      var i3, r2, a4, c3, u3, l2, h4, d4, _2, f2, p2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this._version = t4, this._keysAddress = e4, i3 = "".concat(e4, ".metadata.version"), [4, this._store.get(i3)];
          case 1:
            return r2 = s4.sent(), [4, this._store.get(e4)];
          case 2:
            return a4 = null !== (n2 = s4.sent()) && void 0 !== n2 ? n2 : [], !r2 || r2.version < this._version ? 9 === this._version ? [3, 3] : [3, 6] : [3, 10];
          case 3:
            return c3 = a4.find(function(e5) {
              return e5.includes("groupchannel/sync.meta");
            }), c3 ? [4, this._store.remove(c3)] : [3, 5];
          case 4:
            s4.sent(), s4.label = 5;
          case 5:
            return [3, 8];
          case 6:
            return [4, this._resetPreferenceData(a4)];
          case 7:
            s4.sent(), s4.label = 8;
          case 8:
            return [4, this._updatePreferenceVersionInfo(i3)];
          case 9:
            return s4.sent(), [3, 17];
          case 10:
            s4.trys.push([10, 15, 16, 17]), u3 = o(a4), l2 = u3.next(), s4.label = 11;
          case 11:
            return l2.done ? [3, 14] : (h4 = l2.value, [4, this._store.get(h4)]);
          case 12:
            (d4 = s4.sent()) && this._preference.set(h4, d4), s4.label = 13;
          case 13:
            return l2 = u3.next(), [3, 11];
          case 14:
            return [3, 17];
          case 15:
            return _2 = s4.sent(), f2 = { error: _2 }, [3, 17];
          case 16:
            try {
              l2 && !l2.done && (p2 = u3.return) && p2.call(u3);
            } finally {
              if (f2) throw f2.error;
            }
            return [7];
          case 17:
            return [2];
        }
      });
    });
  }, e3.prototype._updatePreferenceVersionInfo = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._store.set({ key: e4, value: { version: this._version } })];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype._resetPreferenceData = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this._preference = /* @__PURE__ */ new Map(), [4, this._store.removeMany(e4)];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.get = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        return [2, this._preference.get(e4)];
      });
    });
  }, e3.prototype.set = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return n2 = !this._preference.has(e4), [4, this._store.set({ key: e4, value: t4 })];
          case 1:
            return i3.sent(), this._preference.set(e4, t4), n2 ? [4, this._savePreferenceKeys()] : [3, 3];
          case 2:
            i3.sent(), i3.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, e3.prototype.remove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._store.remove(e4)];
          case 1:
            return t4.sent(), this._preference.delete(e4), [4, this._savePreferenceKeys()];
          case 2:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._store.removeMany(c([], a$1(this._preference.keys()), false))];
          case 1:
            return e4.sent(), this._preference.clear(), [4, this._savePreferenceKeys()];
          case 2:
            return e4.sent(), [2];
        }
      });
    });
  }, e3;
}(), P$1 = function() {
  function e3(e4) {
    var t4 = e4.encryption, n2 = e4.store, i3 = e4.localCacheEnabled, r2 = e4.localCacheConfig;
    this.store = n2, this.preference = new U$1({ store: n2 }), this.encryption = null != t4 ? t4 : x, this.localCacheEnabled = i3, this.localCacheConfig = r2;
  }
  return e3.prototype.replaceStore = function(e4) {
    this.store = e4, this.preference = new U$1({ store: e4 });
  }, e3;
}();
!function(e3) {
  e3.SUCCESS = "success", e3.PENDING = "pending", e3.ERROR = "error";
}(d || (d = {})), function(e3) {
  e3.DEFAULT = "default", e3.ALL = "all", e3.MENTION_ONLY = "mention_only", e3.OFF = "off";
}(_ || (_ = {})), function(e3) {
  e3.FCM = "gcm", e3.APNS = "apns", e3.UNKNOWN = "unknown";
}(f$1 || (f$1 = {})), function(e3) {
  e3.SESSION_TOKEN = "session_token", e3.ACCESS_TOKEN = "access_token";
}(p || (p = {})), function(e3) {
  e3.ALTERNATIVE = "alternative", e3.DEFAULT = "default";
}(E$1 || (E$1 = {})), function(e3) {
  e3.CUSTOM = "custom", e3.MESSAGE_COLLECTION_ACCESSED_AT = "messagecollection_accessed_at";
}(g$1 || (g$1 = {}));
var M$1, F = function() {
  function e3(e4) {
    var t4 = e4.channel, n2 = e4.cachedMessageCount;
    this._cachedMessageCount = 0, this._channel = t4, this._cachedMessageCount = n2;
  }
  return Object.defineProperty(e3.prototype, "channel", { get: function() {
    return this._channel;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "cachedMessageCount", { get: function() {
    return this._cachedMessageCount;
  }, enumerable: false, configurable: true }), e3;
}(), q = function() {
  function e3(e4) {
    var t4 = void 0 === e4 ? {} : e4, n2 = t4.maxSize, i3 = void 0 === n2 ? 256 : n2, r2 = t4.clearOrder, s4 = void 0 === r2 ? g$1.MESSAGE_COLLECTION_ACCESSED_AT : r2, o2 = t4.customClearOrderComparator, a4 = t4.enableAutoResend, c3 = void 0 === a4 || a4;
    this._clearOrderComparatorUseMessageCollectionAccessedAt = function(e5, t5) {
      return e5.channel.messageCollectionLastAccessedAt === t5.channel.messageCollectionLastAccessedAt ? e5.channel.lastMessage && !t5.channel.lastMessage ? 1 : !e5.channel.lastMessage && t5.channel.lastMessage ? -1 : e5.channel.lastMessage || t5.channel.lastMessage ? e5.channel.lastMessage.createdAt - t5.channel.lastMessage.createdAt : 0 : e5.channel.messageCollectionLastAccessedAt > t5.channel.messageCollectionLastAccessedAt ? 1 : -1;
    }, this._maxSize = Math.max(i3, 64), o2 ? (this._clearOrder = s4, this._customClearOrderComparator = o2) : this._clearOrder = g$1.MESSAGE_COLLECTION_ACCESSED_AT, this._enableAutoResend = c3;
  }
  return Object.defineProperty(e3.prototype, "maxSize", { get: function() {
    return this._maxSize;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "clearOrder", { get: function() {
    return this._clearOrder;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "clearOrderComparator", { get: function() {
    var e4;
    return this._clearOrder === g$1.MESSAGE_COLLECTION_ACCESSED_AT ? this._clearOrderComparatorUseMessageCollectionAccessedAt : null !== (e4 = this._customClearOrderComparator) && void 0 !== e4 ? e4 : this._clearOrderComparatorUseMessageCollectionAccessedAt;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "enableAutoResend", { get: function() {
    return this._enableAutoResend;
  }, enumerable: false, configurable: true }), e3;
}();
!function(e3) {
  e3.FEED = "feed", e3.CHAT = "chat", e3.CHAT_API = "chat_api";
}(M$1 || (M$1 = {}));
var H$1, V, z, G, j, K$1, B, Q, W, Z, Y, X, J, $ = function() {
  function e3() {
    this.isRefreshing = false;
  }
  return Object.defineProperty(e3.prototype, "hasSession", { get: function() {
    return !!this.sessionKey;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "hasChatServicePermission", { get: function() {
    var e4;
    return !!(null === (e4 = this.services) || void 0 === e4 ? void 0 : e4.includes(M$1.CHAT));
  }, enumerable: false, configurable: true }), e3.prototype.clear = function() {
    this.authToken = void 0, this.sessionKey = void 0, this.services = [];
  }, e3;
}(), ee = function() {
  var e3 = (/* @__PURE__ */ new Date()).getTime();
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t4) {
    var n2 = (e3 + 16 * Math.random()) % 16 | 0;
    return e3 = Math.floor(e3 / 16), ("x" === t4 ? n2 : 3 & n2 | 8).toString(16);
  });
}, te = function() {
  function e3(e4) {
    var t4 = e4.container;
    this._container = {}, this._container = t4, this.key = ee();
  }
  return e3.prototype._register = function(e4, t4, n2) {
    var i3;
    return e4 in this._container || (this._container[e4] = /* @__PURE__ */ new Map()), null === (i3 = this._container[e4]) || void 0 === i3 || i3.set(this.key, { occurence: t4, handler: n2 }), this;
  }, e3.prototype.on = function(e4, t4) {
    return this._register(e4, -1, t4);
  }, e3.prototype.once = function(e4, t4) {
    return this._register(e4, 1, t4);
  }, e3.prototype.close = function() {
    var e4 = this;
    Object.keys(this._container).forEach(function(t4) {
      var n2;
      null === (n2 = e4._container[t4]) || void 0 === n2 || n2.delete(e4.key);
    });
  }, e3;
}(), ne = function() {
  function e3() {
    this._container = {};
  }
  return e3.prototype.on = function(e4, t4) {
    return new te({ container: this._container }).on(e4, t4);
  }, e3.prototype.once = function(e4, t4) {
    return new te({ container: this._container }).once(e4, t4);
  }, e3.prototype.dispatch = function(e4, t4) {
    var n2, i3, r2 = this._container[e4];
    if (r2) {
      var s4 = [];
      try {
        for (var a4 = o(r2.keys()), c3 = a4.next(); !c3.done; c3 = a4.next()) {
          var u3 = c3.value, l2 = r2.get(u3);
          l2.handler(t4), l2.occurence > 0 && (l2.occurence--, 0 === l2.occurence && s4.push(u3));
        }
      } catch (e5) {
        n2 = { error: e5 };
      } finally {
        try {
          c3 && !c3.done && (i3 = a4.return) && i3.call(a4);
        } finally {
          if (n2) throw n2.error;
        }
      }
      s4.forEach(function(e5) {
        return r2.delete(e5);
      });
    }
  }, e3;
}(), ie = function() {
  function e3() {
    this._dispatcher = new ne();
  }
  return e3.prototype.on = function(e4) {
    return this._dispatcher.on("event", e4);
  }, e3.prototype.once = function(e4) {
    return this._dispatcher.once("event", e4);
  }, e3.prototype.dispatch = function(e4) {
    this._dispatcher.dispatch("event", e4);
  }, e3;
}(), re = function() {
}, se = function(e3) {
  var t4 = {};
  return e3 && Object.keys(e3).forEach(function(n2) {
    void 0 === e3[n2] || Number.isNaN(e3[n2]) || null === e3[n2] || (t4[n2] = e3[n2]);
  }), t4;
}, oe = function(e3) {
  if (null != e3) {
    if ("object" == typeof e3) {
      if (Array.isArray(e3)) {
        for (var t4 = c([], a$1(e3), false), n2 = 0; n2 < t4.length; n2++) t4[n2] = oe(t4[n2]);
        return t4;
      }
      return Object.keys(e3).forEach(function(t5) {
        null === e3[t5] && delete e3[t5];
      }), e3;
    }
    return e3;
  }
};
!function(e3) {
  e3.BASE = "base", e3.GROUP = "group", e3.OPEN = "open", e3.FEED = "feed";
}(H$1 || (H$1 = {})), function(e3) {
  e3.OPERATOR = "operator", e3.NONE = "none";
}(V || (V = {})), function(e3) {
  e3.MUTED = "muted", e3.UNMUTED = "unmuted";
}(z || (z = {})), function(e3) {
  e3.BASE = "base", e3.USER = "user", e3.FILE = "file", e3.ADMIN = "admin";
}(G || (G = {})), function(e3) {
  e3.ALL = "", e3.USER = "MESG", e3.FILE = "FILE", e3.ADMIN = "ADMM";
}(j || (j = {})), function(e3) {
  e3.USER = "MESG", e3.FILE = "FILE", e3.ADMIN = "ADMM";
}(K$1 || (K$1 = {})), function(e3) {
  e3.USERS = "users", e3.CHANNEL = "channel";
}(B || (B = {})), function(e3) {
  e3.ALL = "all", e3.NONE = "none", e3.ONLY_REPLY_TO_CHANNEL = "only_reply_to_channel";
}(Q || (Q = {})), function(e3) {
  e3.DEFAULT = "default", e3.SUPPRESS = "suppress";
}(W || (W = {})), function(e3) {
  e3.PENDING = "pending", e3.SCHEDULED = "scheduled", e3.SUCCEEDED = "succeeded", e3.FAILED = "failed", e3.CANCELED = "canceled";
}(Z || (Z = {})), function(e3) {
  e3.INREVIEW = "InReview", e3.APPROVED = "Approved";
}(Y || (Y = {})), function(e3) {
  e3.HIGH = "high", e3.NORMAL = "normal", e3.LOW = "low";
}(X || (X = {})), function(e3) {
  e3.CREATED_AT = "created_at", e3.UPDATED_AT = "updated_at";
}(J || (J = {}));
var ae, ce = "v3", ue = "/".concat(ce, "/users"), le = "/".concat(ce, "/sdk/users"), he = "/".concat(ce, "/storage/file"), de = "/".concat(ce, "/group_channels"), _e$1 = "/".concat(ce, "/sdk/group_channels"), fe = "/".concat(ce, "/open_channels"), pe = "/".concat(ce, "/sdk/open_channels"), Ee$1 = "/".concat(ce, "/search"), ge$1 = "/".concat(ce, "/report"), ve$1 = "/".concat(ce, "/emojis"), be$1 = "/".concat(ce, "/emoji_categories"), me$1 = "/".concat(ce, "/polls"), ye$1 = "/".concat(ce, "/scheduled_messages"), we$1 = "/".concat(ce, "/sdk/ui_kit/configuration"), Se = "/".concat(ce, "/sdk/statistics"), Te$1 = "/".concat(ce, "/sdk/statistics/notification_statistics"), Ae = "/".concat(ce, "/message_templates"), Ie$1 = "/".concat(ce, "/sdk/push_delivery"), Oe$1 = "/".concat(ce, "/forms"), ke$2 = "/".concat(ce, "/report_category"), De$3 = "/".concat(ce, "/sdk/applications/settings"), Re$3 = function(e3) {
  switch (e3) {
    case H$1.FEED:
    case H$1.GROUP:
      return de;
    case H$1.OPEN:
      return fe;
    default:
      return null;
  }
}, Le$2 = function(e3) {
  switch (e3) {
    case H$1.GROUP:
      return "".concat(ge$1, "/group_channels");
    case H$1.OPEN:
      return "".concat(ge$1, "/open_channels");
    default:
      return null;
  }
}, xe$2 = function(e3, t4, n2) {
  var i3, r2;
  switch (e3) {
    case B.CHANNEL:
      return true;
    case B.USERS:
      if (t4) try {
        for (var s4 = o(t4), a4 = s4.next(); !a4.done; a4 = s4.next()) {
          if (a4.value === n2) return true;
        }
      } catch (e4) {
        i3 = { error: e4 };
      } finally {
        try {
          a4 && !a4.done && (r2 = s4.return) && r2.call(s4);
        } finally {
          if (i3) throw i3.error;
        }
      }
  }
  return false;
}, Ue$1 = function(e3, t4, n2) {
  var i3, r2, s4, o2, a4 = xe$2(null !== (i3 = e3.mentionType) && void 0 !== i3 ? i3 : null, null !== (r2 = e3.mentionedUserIds) && void 0 !== r2 ? r2 : [], n2), c3 = xe$2(null !== (s4 = t4.mentionType) && void 0 !== s4 ? s4 : null, null !== (o2 = t4.mentionedUserIds) && void 0 !== o2 ? o2 : [], n2);
  return !a4 && c3 ? 1 : a4 && !c3 ? -1 : 0;
}, Pe$3 = function(e3, t4, n2) {
  var i3, r2 = t4 || new FormData();
  for (var s4 in e3) if (e3.hasOwnProperty(s4)) {
    var o2 = e3[s4], a4 = n2 ? "".concat(n2, "[").concat(s4, "]") : s4;
    k(o2) ? r2.append(a4, o2, null !== (i3 = o2.name) && void 0 !== i3 ? i3 : "filename") : "object" != typeof o2 || null === o2 || Array.isArray(o2) || o2 instanceof Blob ? r2.append(a4, String(o2)) : r2 = Pe$3(o2, r2, a4);
  }
  return r2;
};
!function(e3) {
  e3.GET = "GET", e3.POST = "POST", e3.PUT = "PUT", e3.DELETE = "DELETE";
}(ae || (ae = {}));
var Me$1, Fe$2 = function(e3) {
  function n2() {
    var t4 = null !== e3 && e3.apply(this, arguments) || this;
    return t4.params = {}, t4.requireAuth = true, t4.headers = {}, t4.requestId = ee(), t4;
  }
  return t$2(n2, e3), n2.prototype.encodeParams = function(e4) {
    var t4 = this;
    return null == e4 || "" === e4 ? encodeURIComponent("") : Array.isArray(e4) ? e4.map(function(e5) {
      return t4.encodeParams(e5);
    }).join(",") : "object" == typeof e4 ? encodeURIComponent(JSON.stringify(e4)) : encodeURIComponent(String(e4));
  }, Object.defineProperty(n2.prototype, "query", { get: function() {
    var e4 = this, t4 = se(this.params);
    return "?".concat(Object.keys(t4).map(function(n3) {
      return "".concat(encodeURIComponent(n3), "=").concat(e4.encodeParams(t4[n3]));
    }).join("&"));
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "payload", { get: function() {
    var e4 = se(this.params);
    return Object.keys(e4).some(function(t4) {
      return k(e4[t4]);
    }) ? Pe$3(e4) : JSON.stringify(e4);
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "hasSessionKey", { get: function() {
    return void 0 !== this.headers["Session-Key"];
  }, enumerable: false, configurable: true }), n2;
}(re), qe$2 = function(e3) {
  function i3(t4, n2) {
    var i4 = e3.call(this) || this;
    return i4._iid = t4, i4._payload = n2, i4;
  }
  return t$2(i3, e3), Object.defineProperty(i3.prototype, "payload", { get: function() {
    return n$2({}, this._payload);
  }, enumerable: false, configurable: true }), i3.prototype.as = function(e4) {
    return new e4(this._iid, this.payload);
  }, i3;
}(re), He$3 = function(e3) {
  function n2(t4) {
    var n3 = e3.call(this) || this;
    return n3.requestId = t4, n3;
  }
  return t$2(n2, e3), n2;
}(re), Ve$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.expires_in, i3 = t4.reason, r2 = void 0 === i3 ? u$1.SESSION_KEY_EXPIRED : i3, s4 = t4.message, o2 = void 0 === s4 ? "" : s4, a4 = e3.call(this) || this;
    switch (a4.expiresIn = null != n3 ? n3 : 0, r2) {
      case u$1.SESSION_KEY_EXPIRED:
      case u$1.SESSION_TOKEN_EXPIRED:
      case u$1.SESSION_REVOKED:
      case u$1.USER_AUTH_DEACTIVATED:
      case u$1.USER_AUTH_DELETED_OR_NOT_FOUND:
        a4.error = new b$2({ code: r2, message: o2 });
    }
    return a4;
  }
  return t$2(n2, e3), Object.defineProperty(n2.prototype, "invalidateSessionToken", { get: function() {
    var e4;
    return !!(null === (e4 = this.error) || void 0 === e4 ? void 0 : e4.isSessionTokenExpiredError);
  }, enumerable: false, configurable: true }), n2;
}(re), ze$2 = function(e3) {
  function n2(t4, n3, i3, r2) {
    void 0 === r2 && (r2 = "");
    var s4, o2 = this;
    return (o2 = e3.call(this) || this)._iid = t4, o2.code = n3, o2.payload = i3, o2.requestId = null !== (s4 = i3.req_id) && void 0 !== s4 ? s4 : r2, o2;
  }
  return t$2(n2, e3), n2.createFromRawMessage = function(e4, t4) {
    var i3 = t4.substring(0, 4), r2 = {};
    try {
      r2 = JSON.parse(t4.substring(4));
    } catch (e5) {
      i3 = "NOOP";
    } finally {
      return new n2(e4, i3, r2);
    }
  }, n2.prototype.convertToMessage = function() {
    return "".concat(this.code).concat(JSON.stringify(this.payload), "\n");
  }, n2.prototype.as = function(e4) {
    return new e4(this._iid, this.code, this.payload);
  }, n2;
}(re), Ge$1 = function(e3) {
  function n2(t4) {
    var n3, i3 = t4.code, r2 = t4.ackRequired, s4 = t4.payload, o2 = void 0 === s4 ? {} : s4, a4 = this;
    return (a4 = e3.call(this) || this).code = i3, a4.payload = o2, a4.requestId = null !== (n3 = a4.payload.req_id) && void 0 !== n3 ? n3 : ee(), a4.ackRequired = r2, a4.payload.req_id = a4.requestId, a4;
  }
  return t$2(n2, e3), n2.prototype.convertToMessage = function() {
    return "".concat(this.code).concat(JSON.stringify(this.payload), "\n");
  }, n2;
}(re), je$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.userId, i3 = t4.authToken, r2 = t4.services, s4 = t4.expiringSession, o2 = void 0 === s4 || s4, a4 = e3.call(this) || this;
    return a4.path = "".concat(ue, "/").concat(n3, "/session_key"), a4.method = ae.POST, a4.params = se({ token: i3, services: r2, expiring_session: !!o2 }), a4.requireAuth = false, a4;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Ke$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.authToken, i3 = t4.expiringSession, r2 = void 0 === i3 || i3, s4 = t4.requestId, o2 = void 0 === s4 ? void 0 : s4;
    return e3.call(this, { code: "LOGI", payload: se({ token: n3, expiring_session: r2 ? 1 : 0, req_id: o2 }), ackRequired: true }) || this;
  }
  return t$2(n2, e3), n2;
}(Ge$1), Be$2 = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this, r2 = n3.key, s4 = n3.expires_at, o2 = n3.services;
    return i3.key = r2, i3.expiresAt = s4, i3.services = o2, i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), Qe$2 = function(e3) {
  function n2(t4, n3, i3) {
    var r2, s4 = this;
    return (s4 = e3.call(this, t4, "LOGI", i3) || this).error = null, s4.newKey = null, s4.newKey = null !== (r2 = i3.new_key) && void 0 !== r2 ? r2 : null, s4.error = i3.error ? new b$2(i3) : null, s4;
  }
  return t$2(n2, e3), n2;
}(ze$2), We$2 = function(e3) {
  function n2(t4) {
    var n3 = e3.call(this) || this;
    return n3.statLog = t4, n3;
  }
  return t$2(n2, e3), n2;
}(re), Ze$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.request, i3 = t4.deferred, r2 = t4.error, s4 = void 0 === r2 ? b$2.requestFailed : r2, o2 = e3.call(this) || this;
    return o2.request = n3, o2.deferred = i3, o2.error = s4, o2;
  }
  return t$2(n2, e3), n2;
}(re);
!function(e3) {
  e3.FEATURE_LOCALCACHE = "feature:local_cache", e3.FEATURE_LOCALCACHE_EVENT = "feature:local_cache_event", e3.NOTIFICATION = "noti:stats", e3.WEBSOCKET_CONNECT = "ws:connect", e3.API_RESULT = "api:result";
}(Me$1 || (Me$1 = {}));
var Ye$2, Xe$1, Je$2, $e$1 = function() {
  function e3(e4) {
    var t4 = e4.type, n2 = e4.data, i3 = e4.ts, r2 = void 0 === i3 ? Date.now() : i3;
    this.type = t4, this.createdAt = r2, this.data = n2;
  }
  return e3.payloadify = function(e4) {
    return se({ stat_type: e4.type, ts: e4.createdAt, data: se(e4.data) });
  }, e3;
}(), et$1 = function() {
  return "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" == navigator.product;
}, tt$1 = function() {
  return !("undefined" == typeof navigator || !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Windows Phone/i.test(navigator.userAgent));
};
!function(e3) {
  e3.CHAT = "chat", e3.CALLS = "calls", e3.DESK = "desk", e3.LIVE = "live", e3.UIKIT_CHAT = "uikit-chat", e3.UIKIT_LIVE = "uikit-live";
}(Ye$2 || (Ye$2 = {})), function(e3) {
  e3.ANDROID = "android", e3.IOS = "ios", e3.JS = "js", e3.UNREAL = "unreal", e3.UNITY = "unity", e3.REACT_NATIVE = "react-native", e3.FLUTTER = "flutter";
}(Xe$1 || (Xe$1 = {})), function(e3) {
  e3.ANDROID = "android", e3.IOS = "ios", e3.WEB = "web", e3.MOBILE_WEB = "mobile_web", e3.WINDOWS = "windows";
}(Je$2 || (Je$2 = {}));
var nt$1 = "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$", it$1 = function() {
  function e3() {
  }
  return e3.sendbirdSdkUserAgentWithExtension = function(e4) {
    var t4 = et$1() ? Xe$1.REACT_NATIVE : Xe$1.JS, i3 = { main_sdk_info: "chat/".concat(t4, "/").concat(h$1.SDK_VERSION), device_os_platform: tt$1() ? "mobile-web" : "web", os_version: h$1.OS_VERSION };
    if (e4) {
      var r2 = e4.sendbirdExtensions, s4 = e4.deviceOS, o2 = e4.customData, c3 = void 0 === o2 ? {} : o2;
      s4.version && (i3.os_version = s4.version), s4.platform && (i3.device_os_platform = s4.platform), r2.length > 0 && (i3.extension_sdk_info = r2.map(function(e5) {
        var t5 = e5.product, n2 = e5.platform, i4 = e5.version;
        return "".concat(t5, "/").concat(n2, "/").concat(i4);
      }).join(",")), Object.keys(i3).forEach(function(e5) {
        return delete c3[e5];
      }), Object.keys(c3).length > 0 && (i3 = n$2(n$2({}, i3), c3));
    }
    return Object.entries(i3).map(function(e5) {
      var t5 = a$1(e5, 2), n2 = t5[0], i4 = t5[1];
      return "".concat(n2, "=").concat(i4);
    }).join("&");
  }, e3.userAgentWithExtension = function(e4) {
    var t4 = et$1() ? "reactnative" : "JS", n2 = e4.sb_syncmanager ? "s".concat(e4.sb_syncmanager) : "", i3 = e4.sb_uikit ? "u".concat(e4.sb_uikit) : "", r2 = e4["device-os-platform"] ? "o".concat(e4["device-os-platform"]) : tt$1() ? "omobile-web" : "oweb";
    return "".concat(t4, "/c").concat(h$1.SDK_VERSION, "/").concat(n2, "/").concat(i3, "/").concat(r2);
  }, e3;
}(), rt$1 = function() {
  var e3 = this;
  this.promise = new Promise(function(t4, n2) {
    e3.resolve = t4, e3.reject = function(e4) {
      n2(e4);
    };
  });
}, st$1 = function(e3) {
  function n2(t4) {
    var n3 = e3.call(this) || this;
    return n3.requestId = t4.requestId, n3;
  }
  return t$2(n2, e3), n2;
}(re), ot$1 = function(e3) {
  function n2(t4) {
    var n3 = e3.call(this) || this;
    return n3.method = ae.DELETE, n3.path = "".concat(Re$3(t4.channelType), "/").concat(t4.channelUrl, "/messages/").concat(t4.messageId), t4.messageToken && (n3.params = se({ mesg_token: t4.messageToken })), n3;
  }
  return t$2(n2, e3), n2;
}(Fe$2);
!function(e3) {
  function n2() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(n2, e3);
}(qe$2);
var at$1 = function(e3) {
  function n2(t4, n3, i3) {
    var r2, s4 = this;
    return (s4 = e3.call(this, t4, "DELM", i3) || this).channelUrl = i3.channel_url, s4.channelType = i3.channel_type, s4.messageId = Number(i3.msg_id), s4.silent = i3.silent, s4.messageCreatedAt = i3.message_created_at ? Number(i3.message_created_at) : -1, s4.senderId = null !== (r2 = i3.sender_id) && void 0 !== r2 ? r2 : void 0, s4;
  }
  return t$2(n2, e3), n2;
}(ze$2), ct$1 = function() {
  function e3(e4, t4) {
    var n2 = t4.session, i3 = t4.sdkState, r2 = t4.dispatcher, s4 = t4.logger, o2 = t4.useFetchCompat, a4 = void 0 !== o2 && o2, c3 = this;
    this._abortControl = /* @__PURE__ */ new Map(), this._shouldImportFetchCompat = false, this._iid = e4, this._session = n2, this._sdkState = i3, this._dispatcher = r2, this._dispatcher.on(function(e5) {
      e5 instanceof He$3 && c3.cancel(e5.requestId);
    }), this._logger = s4, this._shouldImportFetchCompat = a4;
  }
  return e3.prototype._createHeader = function(e4, t4) {
    var i3 = this._sdkState, r2 = i3.appId, s4 = i3.appVersion, o2 = i3.sendbirdRuntimeEnvironment, a4 = n$2(n$2({}, e4.headers), { SendBird: "JS,".concat(h$1.OS_VERSION, ",").concat(h$1.SDK_VERSION, ",").concat(r2).concat(s4 ? ",".concat(s4) : ""), "SB-User-Agent": it$1.userAgentWithExtension(this._sdkState.extensions), "Request-Sent-Timestamp": Date.now().toString(), "SB-SDK-User-Agent": it$1.sendbirdSdkUserAgentWithExtension(o2) });
    return t4 || (a4["Content-Type"] = "application/json; charset=utf-8"), e4.requireAuth && !e4.hasSessionKey && this._session.hasSession && (a4["Session-Key"] = this._session.sessionKey), a4["App-Id"] = r2, this._session && this._session.authToken && (a4["Access-Token"] = this._session.authToken), a4;
  }, e3.prototype._statLogApiResult = function(e4, t4, n2) {
    e4.path.includes("/sdk/statistics") || this._dispatcher.dispatch(new We$2(new $e$1({ type: Me$1.API_RESULT, data: { endpoint: e4.path, method: e4.method, success: !n2, latency: Date.now() - t4, error_code: null == n2 ? void 0 : n2.code, error_description: null == n2 ? void 0 : n2.message } })));
  }, e3.prototype._isBodyRequired = function(e4) {
    var t4 = e4.method;
    return t4 !== ae.GET && (t4 !== ae.DELETE || e4 instanceof ot$1);
  }, e3.prototype.send = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i3, r2, o2, a4, c3, l2, h4, d4, _2, f2, p2, E3, g2, v2, m4, y4, w3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            t4 = e4.path, n2 = e4.method, i3 = e4.uploadProgressHandler, r2 = this._isBodyRequired(e4), o2 = this._sdkState.api, a4 = "".concat(o2.host).concat(t4).concat(r2 ? "" : e4.query), c3 = r2 ? e4.payload : null, l2 = this._createHeader(e4, c3 instanceof FormData ? c3 : void 0), h4 = new AbortController(), d4 = h4.signal, this._abortControl.set(e4.requestId, h4), _2 = Date.now(), s4.label = 1;
          case 1:
            return s4.trys.push([1, 13, , 14]), i3 ? [4, import("./__bundle-d1c1a490-Bc9bYJ5D.js")] : [3, 6];
          case 2:
            f2 = s4.sent().xmlHttpRequest, s4.label = 3;
          case 3:
            return s4.trys.push([3, 5, , 6]), [4, f2(this._iid, { requestId: e4.requestId, method: e4.method, url: a4, headers: l2, data: null != c3 ? c3 : void 0, uploadProgressHandler: i3 })];
          case 4:
            return p2 = s4.sent(), this._logger.debug("receive api response", e4.requestId), this._statLogApiResult(e4, _2), [2, p2];
          case 5:
            if (!((E3 = s4.sent()) instanceof b$2 && E3.code === u$1.XMLHTTPREQUEST_NOT_SUPPORTED)) throw E3;
            return this._logger.debug("XMLHttpRequest is not available in this environment. progressHandler is ignored."), [3, 6];
          case 6:
            return this._shouldImportFetchCompat && (this._shouldImportFetchCompat = false, ("undefined" != typeof globalThis && globalThis || "undefined" != typeof self && self || "undefined" != typeof global && global || { fetch: null }).fetch = null), "undefined" != typeof AbortController ? [3, 8] : [4, import("./__bundle-8b4f432b-l0sNRNKZ.js")];
          case 7:
            s4.sent(), s4.label = 8;
          case 8:
            return "function" == typeof fetch ? [3, 10] : [4, import("./__bundle-46d64517-jl9LoYCb.js").then((n3) => n3._)];
          case 9:
            s4.sent(), s4.label = 10;
          case 10:
            return [4, fetch(a4, { method: n2, body: c3, headers: l2, signal: d4 })];
          case 11:
            return [4, (g2 = s4.sent()).json()];
          case 12:
            if (v2 = s4.sent(), g2.ok || g2.redirected) return this._logger.debug("receive api response", e4.requestId), this._statLogApiResult(e4, _2), [2, new qe$2(this._iid, v2)];
            if (v2) {
              if ((m4 = new b$2(v2)).isSessionExpiredError) {
                if (this._dispatcher.dispatch(new Ve$2({ reason: m4.code, message: m4.message })), !(e4 instanceof je$2)) return y4 = new rt$1(), this._dispatcher.dispatch(new Ze$2({ request: e4, deferred: y4, error: m4 })), [2, y4.promise];
                throw m4;
              }
              throw m4.isSessionInvalidatedError ? (this._dispatcher.dispatch(new Ve$2({ reason: m4.code, message: m4.message })), m4) : m4;
            }
            throw b$2.requestFailed;
          case 13:
            throw w3 = s4.sent(), this._statLogApiResult(e4, _2, w3), w3 instanceof b$2 ? (this._logger.debug("fail api request", w3), w3) : "AbortError" === (null == w3 ? void 0 : w3.name) ? b$2.requestCanceled : (this._logger.debug("fail api request", w3), b$2.networkError);
          case 14:
            return [2];
        }
      });
    });
  }, e3.prototype.cancel = function(e4) {
    this._abortControl.has(e4) && (this._abortControl.get(e4).abort(), this._abortControl.delete(e4));
    this._dispatcher.dispatch(new st$1({ requestId: e4 }));
  }, e3.prototype.cancelAll = function() {
    var e4, t4;
    try {
      for (var n2 = o(this._abortControl.values()), i3 = n2.next(); !i3.done; i3 = n2.next()) {
        i3.value.abort();
      }
    } catch (t5) {
      e4 = { error: t5 };
    } finally {
      try {
        i3 && !i3.done && (t4 = n2.return) && t4.call(n2);
      } finally {
        if (e4) throw e4.error;
      }
    }
    this._abortControl.clear(), this._dispatcher.dispatch(new st$1({}));
  }, e3;
}(), ut$1 = function() {
};
function lt$1(e3) {
  let t4 = e3.length;
  for (; --t4 >= 0; ) e3[t4] = 0;
}
const ht$1 = 256, dt$1 = 286, _t$1 = 30, ft$1 = 15, pt$1 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]), Et$2 = new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]), gt$1 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]), vt$1 = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), bt$1 = new Array(576);
lt$1(bt$1);
const mt$1 = new Array(60);
lt$1(mt$1);
const yt$1 = new Array(512);
lt$1(yt$1);
const wt$1 = new Array(256);
lt$1(wt$1);
const St$2 = new Array(29);
lt$1(St$2);
const Tt$2 = new Array(_t$1);
function Nt$2(e3, t4, n2, i3, r2) {
  this.static_tree = e3, this.extra_bits = t4, this.extra_base = n2, this.elems = i3, this.max_length = r2, this.has_stree = e3 && e3.length;
}
let Ct$2, At$2, It$2;
function Ot$2(e3, t4) {
  this.dyn_tree = e3, this.max_code = 0, this.stat_desc = t4;
}
lt$1(Tt$2);
const kt$1 = (e3) => e3 < 256 ? yt$1[e3] : yt$1[256 + (e3 >>> 7)], Dt$2 = (e3, t4) => {
  e3.pending_buf[e3.pending++] = 255 & t4, e3.pending_buf[e3.pending++] = t4 >>> 8 & 255;
}, Rt$2 = (e3, t4, n2) => {
  e3.bi_valid > 16 - n2 ? (e3.bi_buf |= t4 << e3.bi_valid & 65535, Dt$2(e3, e3.bi_buf), e3.bi_buf = t4 >> 16 - e3.bi_valid, e3.bi_valid += n2 - 16) : (e3.bi_buf |= t4 << e3.bi_valid & 65535, e3.bi_valid += n2);
}, Lt$2 = (e3, t4, n2) => {
  Rt$2(e3, n2[2 * t4], n2[2 * t4 + 1]);
}, xt$2 = (e3, t4) => {
  let n2 = 0;
  do {
    n2 |= 1 & e3, e3 >>>= 1, n2 <<= 1;
  } while (--t4 > 0);
  return n2 >>> 1;
}, Ut$2 = (e3, t4, n2) => {
  const i3 = new Array(16);
  let r2, s4, o2 = 0;
  for (r2 = 1; r2 <= ft$1; r2++) o2 = o2 + n2[r2 - 1] << 1, i3[r2] = o2;
  for (s4 = 0; s4 <= t4; s4++) {
    let t5 = e3[2 * s4 + 1];
    0 !== t5 && (e3[2 * s4] = xt$2(i3[t5]++, t5));
  }
}, Pt$2 = (e3) => {
  let t4;
  for (t4 = 0; t4 < dt$1; t4++) e3.dyn_ltree[2 * t4] = 0;
  for (t4 = 0; t4 < _t$1; t4++) e3.dyn_dtree[2 * t4] = 0;
  for (t4 = 0; t4 < 19; t4++) e3.bl_tree[2 * t4] = 0;
  e3.dyn_ltree[512] = 1, e3.opt_len = e3.static_len = 0, e3.sym_next = e3.matches = 0;
}, Mt$2 = (e3) => {
  e3.bi_valid > 8 ? Dt$2(e3, e3.bi_buf) : e3.bi_valid > 0 && (e3.pending_buf[e3.pending++] = e3.bi_buf), e3.bi_buf = 0, e3.bi_valid = 0;
}, Ft$2 = (e3, t4, n2, i3) => {
  const r2 = 2 * t4, s4 = 2 * n2;
  return e3[r2] < e3[s4] || e3[r2] === e3[s4] && i3[t4] <= i3[n2];
}, qt$2 = (e3, t4, n2) => {
  const i3 = e3.heap[n2];
  let r2 = n2 << 1;
  for (; r2 <= e3.heap_len && (r2 < e3.heap_len && Ft$2(t4, e3.heap[r2 + 1], e3.heap[r2], e3.depth) && r2++, !Ft$2(t4, i3, e3.heap[r2], e3.depth)); ) e3.heap[n2] = e3.heap[r2], n2 = r2, r2 <<= 1;
  e3.heap[n2] = i3;
}, Ht$2 = (e3, t4, n2) => {
  let i3, r2, s4, o2, a4 = 0;
  if (0 !== e3.sym_next) do {
    i3 = 255 & e3.pending_buf[e3.sym_buf + a4++], i3 += (255 & e3.pending_buf[e3.sym_buf + a4++]) << 8, r2 = e3.pending_buf[e3.sym_buf + a4++], 0 === i3 ? Lt$2(e3, r2, t4) : (s4 = wt$1[r2], Lt$2(e3, s4 + ht$1 + 1, t4), o2 = pt$1[s4], 0 !== o2 && (r2 -= St$2[s4], Rt$2(e3, r2, o2)), i3--, s4 = kt$1(i3), Lt$2(e3, s4, n2), o2 = Et$2[s4], 0 !== o2 && (i3 -= Tt$2[s4], Rt$2(e3, i3, o2)));
  } while (a4 < e3.sym_next);
  Lt$2(e3, 256, t4);
}, Vt$2 = (e3, t4) => {
  const n2 = t4.dyn_tree, i3 = t4.stat_desc.static_tree, r2 = t4.stat_desc.has_stree, s4 = t4.stat_desc.elems;
  let o2, a4, c3, u3 = -1;
  for (e3.heap_len = 0, e3.heap_max = 573, o2 = 0; o2 < s4; o2++) 0 !== n2[2 * o2] ? (e3.heap[++e3.heap_len] = u3 = o2, e3.depth[o2] = 0) : n2[2 * o2 + 1] = 0;
  for (; e3.heap_len < 2; ) c3 = e3.heap[++e3.heap_len] = u3 < 2 ? ++u3 : 0, n2[2 * c3] = 1, e3.depth[c3] = 0, e3.opt_len--, r2 && (e3.static_len -= i3[2 * c3 + 1]);
  for (t4.max_code = u3, o2 = e3.heap_len >> 1; o2 >= 1; o2--) qt$2(e3, n2, o2);
  c3 = s4;
  do {
    o2 = e3.heap[1], e3.heap[1] = e3.heap[e3.heap_len--], qt$2(e3, n2, 1), a4 = e3.heap[1], e3.heap[--e3.heap_max] = o2, e3.heap[--e3.heap_max] = a4, n2[2 * c3] = n2[2 * o2] + n2[2 * a4], e3.depth[c3] = (e3.depth[o2] >= e3.depth[a4] ? e3.depth[o2] : e3.depth[a4]) + 1, n2[2 * o2 + 1] = n2[2 * a4 + 1] = c3, e3.heap[1] = c3++, qt$2(e3, n2, 1);
  } while (e3.heap_len >= 2);
  e3.heap[--e3.heap_max] = e3.heap[1], ((e4, t5) => {
    const n3 = t5.dyn_tree, i4 = t5.max_code, r3 = t5.stat_desc.static_tree, s5 = t5.stat_desc.has_stree, o3 = t5.stat_desc.extra_bits, a5 = t5.stat_desc.extra_base, c4 = t5.stat_desc.max_length;
    let u4, l2, h4, d4, _2, f2, p2 = 0;
    for (d4 = 0; d4 <= ft$1; d4++) e4.bl_count[d4] = 0;
    for (n3[2 * e4.heap[e4.heap_max] + 1] = 0, u4 = e4.heap_max + 1; u4 < 573; u4++) l2 = e4.heap[u4], d4 = n3[2 * n3[2 * l2 + 1] + 1] + 1, d4 > c4 && (d4 = c4, p2++), n3[2 * l2 + 1] = d4, l2 > i4 || (e4.bl_count[d4]++, _2 = 0, l2 >= a5 && (_2 = o3[l2 - a5]), f2 = n3[2 * l2], e4.opt_len += f2 * (d4 + _2), s5 && (e4.static_len += f2 * (r3[2 * l2 + 1] + _2)));
    if (0 !== p2) {
      do {
        for (d4 = c4 - 1; 0 === e4.bl_count[d4]; ) d4--;
        e4.bl_count[d4]--, e4.bl_count[d4 + 1] += 2, e4.bl_count[c4]--, p2 -= 2;
      } while (p2 > 0);
      for (d4 = c4; 0 !== d4; d4--) for (l2 = e4.bl_count[d4]; 0 !== l2; ) h4 = e4.heap[--u4], h4 > i4 || (n3[2 * h4 + 1] !== d4 && (e4.opt_len += (d4 - n3[2 * h4 + 1]) * n3[2 * h4], n3[2 * h4 + 1] = d4), l2--);
    }
  })(e3, t4), Ut$2(n2, u3, e3.bl_count);
}, zt$2 = (e3, t4, n2) => {
  let i3, r2, s4 = -1, o2 = t4[1], a4 = 0, c3 = 7, u3 = 4;
  for (0 === o2 && (c3 = 138, u3 = 3), t4[2 * (n2 + 1) + 1] = 65535, i3 = 0; i3 <= n2; i3++) r2 = o2, o2 = t4[2 * (i3 + 1) + 1], ++a4 < c3 && r2 === o2 || (a4 < u3 ? e3.bl_tree[2 * r2] += a4 : 0 !== r2 ? (r2 !== s4 && e3.bl_tree[2 * r2]++, e3.bl_tree[32]++) : a4 <= 10 ? e3.bl_tree[34]++ : e3.bl_tree[36]++, a4 = 0, s4 = r2, 0 === o2 ? (c3 = 138, u3 = 3) : r2 === o2 ? (c3 = 6, u3 = 3) : (c3 = 7, u3 = 4));
}, Gt$2 = (e3, t4, n2) => {
  let i3, r2, s4 = -1, o2 = t4[1], a4 = 0, c3 = 7, u3 = 4;
  for (0 === o2 && (c3 = 138, u3 = 3), i3 = 0; i3 <= n2; i3++) if (r2 = o2, o2 = t4[2 * (i3 + 1) + 1], !(++a4 < c3 && r2 === o2)) {
    if (a4 < u3) do {
      Lt$2(e3, r2, e3.bl_tree);
    } while (0 != --a4);
    else 0 !== r2 ? (r2 !== s4 && (Lt$2(e3, r2, e3.bl_tree), a4--), Lt$2(e3, 16, e3.bl_tree), Rt$2(e3, a4 - 3, 2)) : a4 <= 10 ? (Lt$2(e3, 17, e3.bl_tree), Rt$2(e3, a4 - 3, 3)) : (Lt$2(e3, 18, e3.bl_tree), Rt$2(e3, a4 - 11, 7));
    a4 = 0, s4 = r2, 0 === o2 ? (c3 = 138, u3 = 3) : r2 === o2 ? (c3 = 6, u3 = 3) : (c3 = 7, u3 = 4);
  }
};
let jt$2 = false;
const Kt$2 = (e3, t4, n2, i3) => {
  Rt$2(e3, 0 + (i3 ? 1 : 0), 3), Mt$2(e3), Dt$2(e3, n2), Dt$2(e3, ~n2), n2 && e3.pending_buf.set(e3.window.subarray(t4, t4 + n2), e3.pending), e3.pending += n2;
};
var Bt$2 = (e3, t4, n2, i3) => {
  let r2, s4, o2 = 0;
  e3.level > 0 ? (2 === e3.strm.data_type && (e3.strm.data_type = ((e4) => {
    let t5, n3 = 4093624447;
    for (t5 = 0; t5 <= 31; t5++, n3 >>>= 1) if (1 & n3 && 0 !== e4.dyn_ltree[2 * t5]) return 0;
    if (0 !== e4.dyn_ltree[18] || 0 !== e4.dyn_ltree[20] || 0 !== e4.dyn_ltree[26]) return 1;
    for (t5 = 32; t5 < ht$1; t5++) if (0 !== e4.dyn_ltree[2 * t5]) return 1;
    return 0;
  })(e3)), Vt$2(e3, e3.l_desc), Vt$2(e3, e3.d_desc), o2 = ((e4) => {
    let t5;
    for (zt$2(e4, e4.dyn_ltree, e4.l_desc.max_code), zt$2(e4, e4.dyn_dtree, e4.d_desc.max_code), Vt$2(e4, e4.bl_desc), t5 = 18; t5 >= 3 && 0 === e4.bl_tree[2 * vt$1[t5] + 1]; t5--) ;
    return e4.opt_len += 3 * (t5 + 1) + 5 + 5 + 4, t5;
  })(e3), r2 = e3.opt_len + 3 + 7 >>> 3, s4 = e3.static_len + 3 + 7 >>> 3, s4 <= r2 && (r2 = s4)) : r2 = s4 = n2 + 5, n2 + 4 <= r2 && -1 !== t4 ? Kt$2(e3, t4, n2, i3) : 4 === e3.strategy || s4 === r2 ? (Rt$2(e3, 2 + (i3 ? 1 : 0), 3), Ht$2(e3, bt$1, mt$1)) : (Rt$2(e3, 4 + (i3 ? 1 : 0), 3), ((e4, t5, n3, i4) => {
    let r3;
    for (Rt$2(e4, t5 - 257, 5), Rt$2(e4, n3 - 1, 5), Rt$2(e4, i4 - 4, 4), r3 = 0; r3 < i4; r3++) Rt$2(e4, e4.bl_tree[2 * vt$1[r3] + 1], 3);
    Gt$2(e4, e4.dyn_ltree, t5 - 1), Gt$2(e4, e4.dyn_dtree, n3 - 1);
  })(e3, e3.l_desc.max_code + 1, e3.d_desc.max_code + 1, o2 + 1), Ht$2(e3, e3.dyn_ltree, e3.dyn_dtree)), Pt$2(e3), i3 && Mt$2(e3);
}, Qt$2 = { _tr_init: (e3) => {
  jt$2 || ((() => {
    let e4, t4, n2, i3, r2;
    const s4 = new Array(16);
    for (n2 = 0, i3 = 0; i3 < 28; i3++) for (St$2[i3] = n2, e4 = 0; e4 < 1 << pt$1[i3]; e4++) wt$1[n2++] = i3;
    for (wt$1[n2 - 1] = i3, r2 = 0, i3 = 0; i3 < 16; i3++) for (Tt$2[i3] = r2, e4 = 0; e4 < 1 << Et$2[i3]; e4++) yt$1[r2++] = i3;
    for (r2 >>= 7; i3 < _t$1; i3++) for (Tt$2[i3] = r2 << 7, e4 = 0; e4 < 1 << Et$2[i3] - 7; e4++) yt$1[256 + r2++] = i3;
    for (t4 = 0; t4 <= ft$1; t4++) s4[t4] = 0;
    for (e4 = 0; e4 <= 143; ) bt$1[2 * e4 + 1] = 8, e4++, s4[8]++;
    for (; e4 <= 255; ) bt$1[2 * e4 + 1] = 9, e4++, s4[9]++;
    for (; e4 <= 279; ) bt$1[2 * e4 + 1] = 7, e4++, s4[7]++;
    for (; e4 <= 287; ) bt$1[2 * e4 + 1] = 8, e4++, s4[8]++;
    for (Ut$2(bt$1, 287, s4), e4 = 0; e4 < _t$1; e4++) mt$1[2 * e4 + 1] = 5, mt$1[2 * e4] = xt$2(e4, 5);
    Ct$2 = new Nt$2(bt$1, pt$1, 257, dt$1, ft$1), At$2 = new Nt$2(mt$1, Et$2, 0, _t$1, ft$1), It$2 = new Nt$2(new Array(0), gt$1, 0, 19, 7);
  })(), jt$2 = true), e3.l_desc = new Ot$2(e3.dyn_ltree, Ct$2), e3.d_desc = new Ot$2(e3.dyn_dtree, At$2), e3.bl_desc = new Ot$2(e3.bl_tree, It$2), e3.bi_buf = 0, e3.bi_valid = 0, Pt$2(e3);
}, _tr_stored_block: Kt$2, _tr_flush_block: Bt$2, _tr_tally: (e3, t4, n2) => (e3.pending_buf[e3.sym_buf + e3.sym_next++] = t4, e3.pending_buf[e3.sym_buf + e3.sym_next++] = t4 >> 8, e3.pending_buf[e3.sym_buf + e3.sym_next++] = n2, 0 === t4 ? e3.dyn_ltree[2 * n2]++ : (e3.matches++, t4--, e3.dyn_ltree[2 * (wt$1[n2] + ht$1 + 1)]++, e3.dyn_dtree[2 * kt$1(t4)]++), e3.sym_next === e3.sym_end), _tr_align: (e3) => {
  Rt$2(e3, 2, 3), Lt$2(e3, 256, bt$1), ((e4) => {
    16 === e4.bi_valid ? (Dt$2(e4, e4.bi_buf), e4.bi_buf = 0, e4.bi_valid = 0) : e4.bi_valid >= 8 && (e4.pending_buf[e4.pending++] = 255 & e4.bi_buf, e4.bi_buf >>= 8, e4.bi_valid -= 8);
  })(e3);
} };
var Wt$2 = (e3, t4, n2, i3) => {
  let r2 = 65535 & e3, s4 = e3 >>> 16 & 65535, o2 = 0;
  for (; 0 !== n2; ) {
    o2 = n2 > 2e3 ? 2e3 : n2, n2 -= o2;
    do {
      r2 = r2 + t4[i3++] | 0, s4 = s4 + r2 | 0;
    } while (--o2);
    r2 %= 65521, s4 %= 65521;
  }
  return r2 | s4 << 16;
};
const Zt$3 = new Uint32Array((() => {
  let e3, t4 = [];
  for (var n2 = 0; n2 < 256; n2++) {
    e3 = n2;
    for (var i3 = 0; i3 < 8; i3++) e3 = 1 & e3 ? 3988292384 ^ e3 >>> 1 : e3 >>> 1;
    t4[n2] = e3;
  }
  return t4;
})());
var Yt$2 = (e3, t4, n2, i3) => {
  const r2 = Zt$3, s4 = i3 + n2;
  e3 ^= -1;
  for (let n3 = i3; n3 < s4; n3++) e3 = e3 >>> 8 ^ r2[255 & (e3 ^ t4[n3])];
  return ~e3;
}, Xt$2 = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" }, Jt$2 = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_MEM_ERROR: -4, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
const { _tr_init: $t$3, _tr_stored_block: en$3, _tr_flush_block: tn$3, _tr_tally: nn$3, _tr_align: rn$3 } = Qt$2, { Z_NO_FLUSH: sn$3, Z_PARTIAL_FLUSH: on$3, Z_FULL_FLUSH: an$3, Z_FINISH: cn$3, Z_BLOCK: un$3, Z_OK: ln$3, Z_STREAM_END: hn$3, Z_STREAM_ERROR: dn$3, Z_DATA_ERROR: _n$3, Z_BUF_ERROR: fn$3, Z_DEFAULT_COMPRESSION: pn$3, Z_FILTERED: En$3, Z_HUFFMAN_ONLY: gn$3, Z_RLE: vn$3, Z_FIXED: bn$3, Z_DEFAULT_STRATEGY: mn$3, Z_UNKNOWN: yn$3, Z_DEFLATED: wn$3 } = Jt$2, Sn$3 = 258, Tn$3 = 262, Nn$3 = 42, Cn$3 = 113, An$3 = 666, In$3 = (e3, t4) => (e3.msg = Xt$2[t4], t4), On$3 = (e3) => 2 * e3 - (e3 > 4 ? 9 : 0), kn$3 = (e3) => {
  let t4 = e3.length;
  for (; --t4 >= 0; ) e3[t4] = 0;
}, Dn$3 = (e3) => {
  let t4, n2, i3, r2 = e3.w_size;
  t4 = e3.hash_size, i3 = t4;
  do {
    n2 = e3.head[--i3], e3.head[i3] = n2 >= r2 ? n2 - r2 : 0;
  } while (--t4);
  t4 = r2, i3 = t4;
  do {
    n2 = e3.prev[--i3], e3.prev[i3] = n2 >= r2 ? n2 - r2 : 0;
  } while (--t4);
};
let Rn$2 = (e3, t4, n2) => (t4 << e3.hash_shift ^ n2) & e3.hash_mask;
const Ln$3 = (e3) => {
  const t4 = e3.state;
  let n2 = t4.pending;
  n2 > e3.avail_out && (n2 = e3.avail_out), 0 !== n2 && (e3.output.set(t4.pending_buf.subarray(t4.pending_out, t4.pending_out + n2), e3.next_out), e3.next_out += n2, t4.pending_out += n2, e3.total_out += n2, e3.avail_out -= n2, t4.pending -= n2, 0 === t4.pending && (t4.pending_out = 0));
}, xn$2 = (e3, t4) => {
  tn$3(e3, e3.block_start >= 0 ? e3.block_start : -1, e3.strstart - e3.block_start, t4), e3.block_start = e3.strstart, Ln$3(e3.strm);
}, Un$3 = (e3, t4) => {
  e3.pending_buf[e3.pending++] = t4;
}, Pn$3 = (e3, t4) => {
  e3.pending_buf[e3.pending++] = t4 >>> 8 & 255, e3.pending_buf[e3.pending++] = 255 & t4;
}, Mn$3 = (e3, t4, n2, i3) => {
  let r2 = e3.avail_in;
  return r2 > i3 && (r2 = i3), 0 === r2 ? 0 : (e3.avail_in -= r2, t4.set(e3.input.subarray(e3.next_in, e3.next_in + r2), n2), 1 === e3.state.wrap ? e3.adler = Wt$2(e3.adler, t4, r2, n2) : 2 === e3.state.wrap && (e3.adler = Yt$2(e3.adler, t4, r2, n2)), e3.next_in += r2, e3.total_in += r2, r2);
}, Fn$2 = (e3, t4) => {
  let n2, i3, r2 = e3.max_chain_length, s4 = e3.strstart, o2 = e3.prev_length, a4 = e3.nice_match;
  const c3 = e3.strstart > e3.w_size - Tn$3 ? e3.strstart - (e3.w_size - Tn$3) : 0, u3 = e3.window, l2 = e3.w_mask, h4 = e3.prev, d4 = e3.strstart + Sn$3;
  let _2 = u3[s4 + o2 - 1], f2 = u3[s4 + o2];
  e3.prev_length >= e3.good_match && (r2 >>= 2), a4 > e3.lookahead && (a4 = e3.lookahead);
  do {
    if (n2 = t4, u3[n2 + o2] === f2 && u3[n2 + o2 - 1] === _2 && u3[n2] === u3[s4] && u3[++n2] === u3[s4 + 1]) {
      s4 += 2, n2++;
      do {
      } while (u3[++s4] === u3[++n2] && u3[++s4] === u3[++n2] && u3[++s4] === u3[++n2] && u3[++s4] === u3[++n2] && u3[++s4] === u3[++n2] && u3[++s4] === u3[++n2] && u3[++s4] === u3[++n2] && u3[++s4] === u3[++n2] && s4 < d4);
      if (i3 = Sn$3 - (d4 - s4), s4 = d4 - Sn$3, i3 > o2) {
        if (e3.match_start = t4, o2 = i3, i3 >= a4) break;
        _2 = u3[s4 + o2 - 1], f2 = u3[s4 + o2];
      }
    }
  } while ((t4 = h4[t4 & l2]) > c3 && 0 != --r2);
  return o2 <= e3.lookahead ? o2 : e3.lookahead;
}, qn$2 = (e3) => {
  const t4 = e3.w_size;
  let n2, i3, r2;
  do {
    if (i3 = e3.window_size - e3.lookahead - e3.strstart, e3.strstart >= t4 + (t4 - Tn$3) && (e3.window.set(e3.window.subarray(t4, t4 + t4 - i3), 0), e3.match_start -= t4, e3.strstart -= t4, e3.block_start -= t4, e3.insert > e3.strstart && (e3.insert = e3.strstart), Dn$3(e3), i3 += t4), 0 === e3.strm.avail_in) break;
    if (n2 = Mn$3(e3.strm, e3.window, e3.strstart + e3.lookahead, i3), e3.lookahead += n2, e3.lookahead + e3.insert >= 3) for (r2 = e3.strstart - e3.insert, e3.ins_h = e3.window[r2], e3.ins_h = Rn$2(e3, e3.ins_h, e3.window[r2 + 1]); e3.insert && (e3.ins_h = Rn$2(e3, e3.ins_h, e3.window[r2 + 3 - 1]), e3.prev[r2 & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = r2, r2++, e3.insert--, !(e3.lookahead + e3.insert < 3)); ) ;
  } while (e3.lookahead < Tn$3 && 0 !== e3.strm.avail_in);
}, Hn$2 = (e3, t4) => {
  let n2, i3, r2, s4 = e3.pending_buf_size - 5 > e3.w_size ? e3.w_size : e3.pending_buf_size - 5, o2 = 0, a4 = e3.strm.avail_in;
  do {
    if (n2 = 65535, r2 = e3.bi_valid + 42 >> 3, e3.strm.avail_out < r2) break;
    if (r2 = e3.strm.avail_out - r2, i3 = e3.strstart - e3.block_start, n2 > i3 + e3.strm.avail_in && (n2 = i3 + e3.strm.avail_in), n2 > r2 && (n2 = r2), n2 < s4 && (0 === n2 && t4 !== cn$3 || t4 === sn$3 || n2 !== i3 + e3.strm.avail_in)) break;
    o2 = t4 === cn$3 && n2 === i3 + e3.strm.avail_in ? 1 : 0, en$3(e3, 0, 0, o2), e3.pending_buf[e3.pending - 4] = n2, e3.pending_buf[e3.pending - 3] = n2 >> 8, e3.pending_buf[e3.pending - 2] = ~n2, e3.pending_buf[e3.pending - 1] = ~n2 >> 8, Ln$3(e3.strm), i3 && (i3 > n2 && (i3 = n2), e3.strm.output.set(e3.window.subarray(e3.block_start, e3.block_start + i3), e3.strm.next_out), e3.strm.next_out += i3, e3.strm.avail_out -= i3, e3.strm.total_out += i3, e3.block_start += i3, n2 -= i3), n2 && (Mn$3(e3.strm, e3.strm.output, e3.strm.next_out, n2), e3.strm.next_out += n2, e3.strm.avail_out -= n2, e3.strm.total_out += n2);
  } while (0 === o2);
  return a4 -= e3.strm.avail_in, a4 && (a4 >= e3.w_size ? (e3.matches = 2, e3.window.set(e3.strm.input.subarray(e3.strm.next_in - e3.w_size, e3.strm.next_in), 0), e3.strstart = e3.w_size, e3.insert = e3.strstart) : (e3.window_size - e3.strstart <= a4 && (e3.strstart -= e3.w_size, e3.window.set(e3.window.subarray(e3.w_size, e3.w_size + e3.strstart), 0), e3.matches < 2 && e3.matches++, e3.insert > e3.strstart && (e3.insert = e3.strstart)), e3.window.set(e3.strm.input.subarray(e3.strm.next_in - a4, e3.strm.next_in), e3.strstart), e3.strstart += a4, e3.insert += a4 > e3.w_size - e3.insert ? e3.w_size - e3.insert : a4), e3.block_start = e3.strstart), e3.high_water < e3.strstart && (e3.high_water = e3.strstart), o2 ? 4 : t4 !== sn$3 && t4 !== cn$3 && 0 === e3.strm.avail_in && e3.strstart === e3.block_start ? 2 : (r2 = e3.window_size - e3.strstart, e3.strm.avail_in > r2 && e3.block_start >= e3.w_size && (e3.block_start -= e3.w_size, e3.strstart -= e3.w_size, e3.window.set(e3.window.subarray(e3.w_size, e3.w_size + e3.strstart), 0), e3.matches < 2 && e3.matches++, r2 += e3.w_size, e3.insert > e3.strstart && (e3.insert = e3.strstart)), r2 > e3.strm.avail_in && (r2 = e3.strm.avail_in), r2 && (Mn$3(e3.strm, e3.window, e3.strstart, r2), e3.strstart += r2, e3.insert += r2 > e3.w_size - e3.insert ? e3.w_size - e3.insert : r2), e3.high_water < e3.strstart && (e3.high_water = e3.strstart), r2 = e3.bi_valid + 42 >> 3, r2 = e3.pending_buf_size - r2 > 65535 ? 65535 : e3.pending_buf_size - r2, s4 = r2 > e3.w_size ? e3.w_size : r2, i3 = e3.strstart - e3.block_start, (i3 >= s4 || (i3 || t4 === cn$3) && t4 !== sn$3 && 0 === e3.strm.avail_in && i3 <= r2) && (n2 = i3 > r2 ? r2 : i3, o2 = t4 === cn$3 && 0 === e3.strm.avail_in && n2 === i3 ? 1 : 0, en$3(e3, e3.block_start, n2, o2), e3.block_start += n2, Ln$3(e3.strm)), o2 ? 3 : 1);
}, Vn$2 = (e3, t4) => {
  let n2, i3;
  for (; ; ) {
    if (e3.lookahead < Tn$3) {
      if (qn$2(e3), e3.lookahead < Tn$3 && t4 === sn$3) return 1;
      if (0 === e3.lookahead) break;
    }
    if (n2 = 0, e3.lookahead >= 3 && (e3.ins_h = Rn$2(e3, e3.ins_h, e3.window[e3.strstart + 3 - 1]), n2 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart), 0 !== n2 && e3.strstart - n2 <= e3.w_size - Tn$3 && (e3.match_length = Fn$2(e3, n2)), e3.match_length >= 3) if (i3 = nn$3(e3, e3.strstart - e3.match_start, e3.match_length - 3), e3.lookahead -= e3.match_length, e3.match_length <= e3.max_lazy_match && e3.lookahead >= 3) {
      e3.match_length--;
      do {
        e3.strstart++, e3.ins_h = Rn$2(e3, e3.ins_h, e3.window[e3.strstart + 3 - 1]), n2 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart;
      } while (0 != --e3.match_length);
      e3.strstart++;
    } else e3.strstart += e3.match_length, e3.match_length = 0, e3.ins_h = e3.window[e3.strstart], e3.ins_h = Rn$2(e3, e3.ins_h, e3.window[e3.strstart + 1]);
    else i3 = nn$3(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++;
    if (i3 && (xn$2(e3, false), 0 === e3.strm.avail_out)) return 1;
  }
  return e3.insert = e3.strstart < 2 ? e3.strstart : 2, t4 === cn$3 ? (xn$2(e3, true), 0 === e3.strm.avail_out ? 3 : 4) : e3.sym_next && (xn$2(e3, false), 0 === e3.strm.avail_out) ? 1 : 2;
}, zn$2 = (e3, t4) => {
  let n2, i3, r2;
  for (; ; ) {
    if (e3.lookahead < Tn$3) {
      if (qn$2(e3), e3.lookahead < Tn$3 && t4 === sn$3) return 1;
      if (0 === e3.lookahead) break;
    }
    if (n2 = 0, e3.lookahead >= 3 && (e3.ins_h = Rn$2(e3, e3.ins_h, e3.window[e3.strstart + 3 - 1]), n2 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart), e3.prev_length = e3.match_length, e3.prev_match = e3.match_start, e3.match_length = 2, 0 !== n2 && e3.prev_length < e3.max_lazy_match && e3.strstart - n2 <= e3.w_size - Tn$3 && (e3.match_length = Fn$2(e3, n2), e3.match_length <= 5 && (e3.strategy === En$3 || 3 === e3.match_length && e3.strstart - e3.match_start > 4096) && (e3.match_length = 2)), e3.prev_length >= 3 && e3.match_length <= e3.prev_length) {
      r2 = e3.strstart + e3.lookahead - 3, i3 = nn$3(e3, e3.strstart - 1 - e3.prev_match, e3.prev_length - 3), e3.lookahead -= e3.prev_length - 1, e3.prev_length -= 2;
      do {
        ++e3.strstart <= r2 && (e3.ins_h = Rn$2(e3, e3.ins_h, e3.window[e3.strstart + 3 - 1]), n2 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart);
      } while (0 != --e3.prev_length);
      if (e3.match_available = 0, e3.match_length = 2, e3.strstart++, i3 && (xn$2(e3, false), 0 === e3.strm.avail_out)) return 1;
    } else if (e3.match_available) {
      if (i3 = nn$3(e3, 0, e3.window[e3.strstart - 1]), i3 && xn$2(e3, false), e3.strstart++, e3.lookahead--, 0 === e3.strm.avail_out) return 1;
    } else e3.match_available = 1, e3.strstart++, e3.lookahead--;
  }
  return e3.match_available && (i3 = nn$3(e3, 0, e3.window[e3.strstart - 1]), e3.match_available = 0), e3.insert = e3.strstart < 2 ? e3.strstart : 2, t4 === cn$3 ? (xn$2(e3, true), 0 === e3.strm.avail_out ? 3 : 4) : e3.sym_next && (xn$2(e3, false), 0 === e3.strm.avail_out) ? 1 : 2;
};
function Gn$2(e3, t4, n2, i3, r2) {
  this.good_length = e3, this.max_lazy = t4, this.nice_length = n2, this.max_chain = i3, this.func = r2;
}
const jn$2 = [new Gn$2(0, 0, 0, 0, Hn$2), new Gn$2(4, 4, 8, 4, Vn$2), new Gn$2(4, 5, 16, 8, Vn$2), new Gn$2(4, 6, 32, 32, Vn$2), new Gn$2(4, 4, 16, 16, zn$2), new Gn$2(8, 16, 32, 32, zn$2), new Gn$2(8, 16, 128, 128, zn$2), new Gn$2(8, 32, 128, 256, zn$2), new Gn$2(32, 128, 258, 1024, zn$2), new Gn$2(32, 258, 258, 4096, zn$2)];
function Kn$2() {
  this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = wn$3, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new Uint16Array(1146), this.dyn_dtree = new Uint16Array(122), this.bl_tree = new Uint16Array(78), kn$3(this.dyn_ltree), kn$3(this.dyn_dtree), kn$3(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new Uint16Array(16), this.heap = new Uint16Array(573), kn$3(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new Uint16Array(573), kn$3(this.depth), this.sym_buf = 0, this.lit_bufsize = 0, this.sym_next = 0, this.sym_end = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
}
const Bn$2 = (e3) => {
  if (!e3) return 1;
  const t4 = e3.state;
  return !t4 || t4.strm !== e3 || t4.status !== Nn$3 && 57 !== t4.status && 69 !== t4.status && 73 !== t4.status && 91 !== t4.status && 103 !== t4.status && t4.status !== Cn$3 && t4.status !== An$3 ? 1 : 0;
}, Qn$2 = (e3) => {
  if (Bn$2(e3)) return In$3(e3, dn$3);
  e3.total_in = e3.total_out = 0, e3.data_type = yn$3;
  const t4 = e3.state;
  return t4.pending = 0, t4.pending_out = 0, t4.wrap < 0 && (t4.wrap = -t4.wrap), t4.status = 2 === t4.wrap ? 57 : t4.wrap ? Nn$3 : Cn$3, e3.adler = 2 === t4.wrap ? 0 : 1, t4.last_flush = -2, $t$3(t4), ln$3;
}, Wn$2 = (e3) => {
  const t4 = Qn$2(e3);
  var n2;
  return t4 === ln$3 && ((n2 = e3.state).window_size = 2 * n2.w_size, kn$3(n2.head), n2.max_lazy_match = jn$2[n2.level].max_lazy, n2.good_match = jn$2[n2.level].good_length, n2.nice_match = jn$2[n2.level].nice_length, n2.max_chain_length = jn$2[n2.level].max_chain, n2.strstart = 0, n2.block_start = 0, n2.lookahead = 0, n2.insert = 0, n2.match_length = n2.prev_length = 2, n2.match_available = 0, n2.ins_h = 0), t4;
}, Zn$2 = (e3, t4, n2, i3, r2, s4) => {
  if (!e3) return dn$3;
  let o2 = 1;
  if (t4 === pn$3 && (t4 = 6), i3 < 0 ? (o2 = 0, i3 = -i3) : i3 > 15 && (o2 = 2, i3 -= 16), r2 < 1 || r2 > 9 || n2 !== wn$3 || i3 < 8 || i3 > 15 || t4 < 0 || t4 > 9 || s4 < 0 || s4 > bn$3 || 8 === i3 && 1 !== o2) return In$3(e3, dn$3);
  8 === i3 && (i3 = 9);
  const a4 = new Kn$2();
  return e3.state = a4, a4.strm = e3, a4.status = Nn$3, a4.wrap = o2, a4.gzhead = null, a4.w_bits = i3, a4.w_size = 1 << a4.w_bits, a4.w_mask = a4.w_size - 1, a4.hash_bits = r2 + 7, a4.hash_size = 1 << a4.hash_bits, a4.hash_mask = a4.hash_size - 1, a4.hash_shift = ~~((a4.hash_bits + 3 - 1) / 3), a4.window = new Uint8Array(2 * a4.w_size), a4.head = new Uint16Array(a4.hash_size), a4.prev = new Uint16Array(a4.w_size), a4.lit_bufsize = 1 << r2 + 6, a4.pending_buf_size = 4 * a4.lit_bufsize, a4.pending_buf = new Uint8Array(a4.pending_buf_size), a4.sym_buf = a4.lit_bufsize, a4.sym_end = 3 * (a4.lit_bufsize - 1), a4.level = t4, a4.strategy = s4, a4.method = n2, Wn$2(e3);
};
var Yn$2 = { deflateInit: (e3, t4) => Zn$2(e3, t4, wn$3, 15, 8, mn$3), deflateInit2: Zn$2, deflateReset: Wn$2, deflateResetKeep: Qn$2, deflateSetHeader: (e3, t4) => Bn$2(e3) || 2 !== e3.state.wrap ? dn$3 : (e3.state.gzhead = t4, ln$3), deflate: (e3, t4) => {
  if (Bn$2(e3) || t4 > un$3 || t4 < 0) return e3 ? In$3(e3, dn$3) : dn$3;
  const n2 = e3.state;
  if (!e3.output || 0 !== e3.avail_in && !e3.input || n2.status === An$3 && t4 !== cn$3) return In$3(e3, 0 === e3.avail_out ? fn$3 : dn$3);
  const i3 = n2.last_flush;
  if (n2.last_flush = t4, 0 !== n2.pending) {
    if (Ln$3(e3), 0 === e3.avail_out) return n2.last_flush = -1, ln$3;
  } else if (0 === e3.avail_in && On$3(t4) <= On$3(i3) && t4 !== cn$3) return In$3(e3, fn$3);
  if (n2.status === An$3 && 0 !== e3.avail_in) return In$3(e3, fn$3);
  if (n2.status === Nn$3 && 0 === n2.wrap && (n2.status = Cn$3), n2.status === Nn$3) {
    let t5 = wn$3 + (n2.w_bits - 8 << 4) << 8, i4 = -1;
    if (i4 = n2.strategy >= gn$3 || n2.level < 2 ? 0 : n2.level < 6 ? 1 : 6 === n2.level ? 2 : 3, t5 |= i4 << 6, 0 !== n2.strstart && (t5 |= 32), t5 += 31 - t5 % 31, Pn$3(n2, t5), 0 !== n2.strstart && (Pn$3(n2, e3.adler >>> 16), Pn$3(n2, 65535 & e3.adler)), e3.adler = 1, n2.status = Cn$3, Ln$3(e3), 0 !== n2.pending) return n2.last_flush = -1, ln$3;
  }
  if (57 === n2.status) {
    if (e3.adler = 0, Un$3(n2, 31), Un$3(n2, 139), Un$3(n2, 8), n2.gzhead) Un$3(n2, (n2.gzhead.text ? 1 : 0) + (n2.gzhead.hcrc ? 2 : 0) + (n2.gzhead.extra ? 4 : 0) + (n2.gzhead.name ? 8 : 0) + (n2.gzhead.comment ? 16 : 0)), Un$3(n2, 255 & n2.gzhead.time), Un$3(n2, n2.gzhead.time >> 8 & 255), Un$3(n2, n2.gzhead.time >> 16 & 255), Un$3(n2, n2.gzhead.time >> 24 & 255), Un$3(n2, 9 === n2.level ? 2 : n2.strategy >= gn$3 || n2.level < 2 ? 4 : 0), Un$3(n2, 255 & n2.gzhead.os), n2.gzhead.extra && n2.gzhead.extra.length && (Un$3(n2, 255 & n2.gzhead.extra.length), Un$3(n2, n2.gzhead.extra.length >> 8 & 255)), n2.gzhead.hcrc && (e3.adler = Yt$2(e3.adler, n2.pending_buf, n2.pending, 0)), n2.gzindex = 0, n2.status = 69;
    else if (Un$3(n2, 0), Un$3(n2, 0), Un$3(n2, 0), Un$3(n2, 0), Un$3(n2, 0), Un$3(n2, 9 === n2.level ? 2 : n2.strategy >= gn$3 || n2.level < 2 ? 4 : 0), Un$3(n2, 3), n2.status = Cn$3, Ln$3(e3), 0 !== n2.pending) return n2.last_flush = -1, ln$3;
  }
  if (69 === n2.status) {
    if (n2.gzhead.extra) {
      let t5 = n2.pending, i4 = (65535 & n2.gzhead.extra.length) - n2.gzindex;
      for (; n2.pending + i4 > n2.pending_buf_size; ) {
        let r3 = n2.pending_buf_size - n2.pending;
        if (n2.pending_buf.set(n2.gzhead.extra.subarray(n2.gzindex, n2.gzindex + r3), n2.pending), n2.pending = n2.pending_buf_size, n2.gzhead.hcrc && n2.pending > t5 && (e3.adler = Yt$2(e3.adler, n2.pending_buf, n2.pending - t5, t5)), n2.gzindex += r3, Ln$3(e3), 0 !== n2.pending) return n2.last_flush = -1, ln$3;
        t5 = 0, i4 -= r3;
      }
      let r2 = new Uint8Array(n2.gzhead.extra);
      n2.pending_buf.set(r2.subarray(n2.gzindex, n2.gzindex + i4), n2.pending), n2.pending += i4, n2.gzhead.hcrc && n2.pending > t5 && (e3.adler = Yt$2(e3.adler, n2.pending_buf, n2.pending - t5, t5)), n2.gzindex = 0;
    }
    n2.status = 73;
  }
  if (73 === n2.status) {
    if (n2.gzhead.name) {
      let t5, i4 = n2.pending;
      do {
        if (n2.pending === n2.pending_buf_size) {
          if (n2.gzhead.hcrc && n2.pending > i4 && (e3.adler = Yt$2(e3.adler, n2.pending_buf, n2.pending - i4, i4)), Ln$3(e3), 0 !== n2.pending) return n2.last_flush = -1, ln$3;
          i4 = 0;
        }
        t5 = n2.gzindex < n2.gzhead.name.length ? 255 & n2.gzhead.name.charCodeAt(n2.gzindex++) : 0, Un$3(n2, t5);
      } while (0 !== t5);
      n2.gzhead.hcrc && n2.pending > i4 && (e3.adler = Yt$2(e3.adler, n2.pending_buf, n2.pending - i4, i4)), n2.gzindex = 0;
    }
    n2.status = 91;
  }
  if (91 === n2.status) {
    if (n2.gzhead.comment) {
      let t5, i4 = n2.pending;
      do {
        if (n2.pending === n2.pending_buf_size) {
          if (n2.gzhead.hcrc && n2.pending > i4 && (e3.adler = Yt$2(e3.adler, n2.pending_buf, n2.pending - i4, i4)), Ln$3(e3), 0 !== n2.pending) return n2.last_flush = -1, ln$3;
          i4 = 0;
        }
        t5 = n2.gzindex < n2.gzhead.comment.length ? 255 & n2.gzhead.comment.charCodeAt(n2.gzindex++) : 0, Un$3(n2, t5);
      } while (0 !== t5);
      n2.gzhead.hcrc && n2.pending > i4 && (e3.adler = Yt$2(e3.adler, n2.pending_buf, n2.pending - i4, i4));
    }
    n2.status = 103;
  }
  if (103 === n2.status) {
    if (n2.gzhead.hcrc) {
      if (n2.pending + 2 > n2.pending_buf_size && (Ln$3(e3), 0 !== n2.pending)) return n2.last_flush = -1, ln$3;
      Un$3(n2, 255 & e3.adler), Un$3(n2, e3.adler >> 8 & 255), e3.adler = 0;
    }
    if (n2.status = Cn$3, Ln$3(e3), 0 !== n2.pending) return n2.last_flush = -1, ln$3;
  }
  if (0 !== e3.avail_in || 0 !== n2.lookahead || t4 !== sn$3 && n2.status !== An$3) {
    let i4 = 0 === n2.level ? Hn$2(n2, t4) : n2.strategy === gn$3 ? ((e4, t5) => {
      let n3;
      for (; ; ) {
        if (0 === e4.lookahead && (qn$2(e4), 0 === e4.lookahead)) {
          if (t5 === sn$3) return 1;
          break;
        }
        if (e4.match_length = 0, n3 = nn$3(e4, 0, e4.window[e4.strstart]), e4.lookahead--, e4.strstart++, n3 && (xn$2(e4, false), 0 === e4.strm.avail_out)) return 1;
      }
      return e4.insert = 0, t5 === cn$3 ? (xn$2(e4, true), 0 === e4.strm.avail_out ? 3 : 4) : e4.sym_next && (xn$2(e4, false), 0 === e4.strm.avail_out) ? 1 : 2;
    })(n2, t4) : n2.strategy === vn$3 ? ((e4, t5) => {
      let n3, i5, r2, s4;
      const o2 = e4.window;
      for (; ; ) {
        if (e4.lookahead <= Sn$3) {
          if (qn$2(e4), e4.lookahead <= Sn$3 && t5 === sn$3) return 1;
          if (0 === e4.lookahead) break;
        }
        if (e4.match_length = 0, e4.lookahead >= 3 && e4.strstart > 0 && (r2 = e4.strstart - 1, i5 = o2[r2], i5 === o2[++r2] && i5 === o2[++r2] && i5 === o2[++r2])) {
          s4 = e4.strstart + Sn$3;
          do {
          } while (i5 === o2[++r2] && i5 === o2[++r2] && i5 === o2[++r2] && i5 === o2[++r2] && i5 === o2[++r2] && i5 === o2[++r2] && i5 === o2[++r2] && i5 === o2[++r2] && r2 < s4);
          e4.match_length = Sn$3 - (s4 - r2), e4.match_length > e4.lookahead && (e4.match_length = e4.lookahead);
        }
        if (e4.match_length >= 3 ? (n3 = nn$3(e4, 1, e4.match_length - 3), e4.lookahead -= e4.match_length, e4.strstart += e4.match_length, e4.match_length = 0) : (n3 = nn$3(e4, 0, e4.window[e4.strstart]), e4.lookahead--, e4.strstart++), n3 && (xn$2(e4, false), 0 === e4.strm.avail_out)) return 1;
      }
      return e4.insert = 0, t5 === cn$3 ? (xn$2(e4, true), 0 === e4.strm.avail_out ? 3 : 4) : e4.sym_next && (xn$2(e4, false), 0 === e4.strm.avail_out) ? 1 : 2;
    })(n2, t4) : jn$2[n2.level].func(n2, t4);
    if (3 !== i4 && 4 !== i4 || (n2.status = An$3), 1 === i4 || 3 === i4) return 0 === e3.avail_out && (n2.last_flush = -1), ln$3;
    if (2 === i4 && (t4 === on$3 ? rn$3(n2) : t4 !== un$3 && (en$3(n2, 0, 0, false), t4 === an$3 && (kn$3(n2.head), 0 === n2.lookahead && (n2.strstart = 0, n2.block_start = 0, n2.insert = 0))), Ln$3(e3), 0 === e3.avail_out)) return n2.last_flush = -1, ln$3;
  }
  return t4 !== cn$3 ? ln$3 : n2.wrap <= 0 ? hn$3 : (2 === n2.wrap ? (Un$3(n2, 255 & e3.adler), Un$3(n2, e3.adler >> 8 & 255), Un$3(n2, e3.adler >> 16 & 255), Un$3(n2, e3.adler >> 24 & 255), Un$3(n2, 255 & e3.total_in), Un$3(n2, e3.total_in >> 8 & 255), Un$3(n2, e3.total_in >> 16 & 255), Un$3(n2, e3.total_in >> 24 & 255)) : (Pn$3(n2, e3.adler >>> 16), Pn$3(n2, 65535 & e3.adler)), Ln$3(e3), n2.wrap > 0 && (n2.wrap = -n2.wrap), 0 !== n2.pending ? ln$3 : hn$3);
}, deflateEnd: (e3) => {
  if (Bn$2(e3)) return dn$3;
  const t4 = e3.state.status;
  return e3.state = null, t4 === Cn$3 ? In$3(e3, _n$3) : ln$3;
}, deflateSetDictionary: (e3, t4) => {
  let n2 = t4.length;
  if (Bn$2(e3)) return dn$3;
  const i3 = e3.state, r2 = i3.wrap;
  if (2 === r2 || 1 === r2 && i3.status !== Nn$3 || i3.lookahead) return dn$3;
  if (1 === r2 && (e3.adler = Wt$2(e3.adler, t4, n2, 0)), i3.wrap = 0, n2 >= i3.w_size) {
    0 === r2 && (kn$3(i3.head), i3.strstart = 0, i3.block_start = 0, i3.insert = 0);
    let e4 = new Uint8Array(i3.w_size);
    e4.set(t4.subarray(n2 - i3.w_size, n2), 0), t4 = e4, n2 = i3.w_size;
  }
  const s4 = e3.avail_in, o2 = e3.next_in, a4 = e3.input;
  for (e3.avail_in = n2, e3.next_in = 0, e3.input = t4, qn$2(i3); i3.lookahead >= 3; ) {
    let e4 = i3.strstart, t5 = i3.lookahead - 2;
    do {
      i3.ins_h = Rn$2(i3, i3.ins_h, i3.window[e4 + 3 - 1]), i3.prev[e4 & i3.w_mask] = i3.head[i3.ins_h], i3.head[i3.ins_h] = e4, e4++;
    } while (--t5);
    i3.strstart = e4, i3.lookahead = 2, qn$2(i3);
  }
  return i3.strstart += i3.lookahead, i3.block_start = i3.strstart, i3.insert = i3.lookahead, i3.lookahead = 0, i3.match_length = i3.prev_length = 2, i3.match_available = 0, e3.next_in = o2, e3.input = a4, e3.avail_in = s4, i3.wrap = r2, ln$3;
}, deflateInfo: "pako deflate (from Nodeca project)" };
const Xn$2 = (e3, t4) => Object.prototype.hasOwnProperty.call(e3, t4);
var Jn$2 = function(e3) {
  const t4 = Array.prototype.slice.call(arguments, 1);
  for (; t4.length; ) {
    const n2 = t4.shift();
    if (n2) {
      if ("object" != typeof n2) throw new TypeError(n2 + "must be non-object");
      for (const t5 in n2) Xn$2(n2, t5) && (e3[t5] = n2[t5]);
    }
  }
  return e3;
}, $n$2 = (e3) => {
  let t4 = 0;
  for (let n3 = 0, i3 = e3.length; n3 < i3; n3++) t4 += e3[n3].length;
  const n2 = new Uint8Array(t4);
  for (let t5 = 0, i3 = 0, r2 = e3.length; t5 < r2; t5++) {
    let r3 = e3[t5];
    n2.set(r3, i3), i3 += r3.length;
  }
  return n2;
};
let ei = true;
try {
  String.fromCharCode.apply(null, new Uint8Array(1));
} catch (e3) {
  ei = false;
}
const ti$1 = new Uint8Array(256);
for (let e3 = 0; e3 < 256; e3++) ti$1[e3] = e3 >= 252 ? 6 : e3 >= 248 ? 5 : e3 >= 240 ? 4 : e3 >= 224 ? 3 : e3 >= 192 ? 2 : 1;
ti$1[254] = ti$1[254] = 1;
var ni$1 = (e3) => {
  if ("function" == typeof TextEncoder && TextEncoder.prototype.encode) return new TextEncoder().encode(e3);
  let t4, n2, i3, r2, s4, o2 = e3.length, a4 = 0;
  for (r2 = 0; r2 < o2; r2++) n2 = e3.charCodeAt(r2), 55296 == (64512 & n2) && r2 + 1 < o2 && (i3 = e3.charCodeAt(r2 + 1), 56320 == (64512 & i3) && (n2 = 65536 + (n2 - 55296 << 10) + (i3 - 56320), r2++)), a4 += n2 < 128 ? 1 : n2 < 2048 ? 2 : n2 < 65536 ? 3 : 4;
  for (t4 = new Uint8Array(a4), s4 = 0, r2 = 0; s4 < a4; r2++) n2 = e3.charCodeAt(r2), 55296 == (64512 & n2) && r2 + 1 < o2 && (i3 = e3.charCodeAt(r2 + 1), 56320 == (64512 & i3) && (n2 = 65536 + (n2 - 55296 << 10) + (i3 - 56320), r2++)), n2 < 128 ? t4[s4++] = n2 : n2 < 2048 ? (t4[s4++] = 192 | n2 >>> 6, t4[s4++] = 128 | 63 & n2) : n2 < 65536 ? (t4[s4++] = 224 | n2 >>> 12, t4[s4++] = 128 | n2 >>> 6 & 63, t4[s4++] = 128 | 63 & n2) : (t4[s4++] = 240 | n2 >>> 18, t4[s4++] = 128 | n2 >>> 12 & 63, t4[s4++] = 128 | n2 >>> 6 & 63, t4[s4++] = 128 | 63 & n2);
  return t4;
}, ii$1 = (e3, t4) => {
  const n2 = t4 || e3.length;
  if ("function" == typeof TextDecoder && TextDecoder.prototype.decode) return new TextDecoder().decode(e3.subarray(0, t4));
  let i3, r2;
  const s4 = new Array(2 * n2);
  for (r2 = 0, i3 = 0; i3 < n2; ) {
    let t5 = e3[i3++];
    if (t5 < 128) {
      s4[r2++] = t5;
      continue;
    }
    let o2 = ti$1[t5];
    if (o2 > 4) s4[r2++] = 65533, i3 += o2 - 1;
    else {
      for (t5 &= 2 === o2 ? 31 : 3 === o2 ? 15 : 7; o2 > 1 && i3 < n2; ) t5 = t5 << 6 | 63 & e3[i3++], o2--;
      o2 > 1 ? s4[r2++] = 65533 : t5 < 65536 ? s4[r2++] = t5 : (t5 -= 65536, s4[r2++] = 55296 | t5 >> 10 & 1023, s4[r2++] = 56320 | 1023 & t5);
    }
  }
  return ((e4, t5) => {
    if (t5 < 65534 && e4.subarray && ei) return String.fromCharCode.apply(null, e4.length === t5 ? e4 : e4.subarray(0, t5));
    let n3 = "";
    for (let i4 = 0; i4 < t5; i4++) n3 += String.fromCharCode(e4[i4]);
    return n3;
  })(s4, r2);
}, ri$1 = (e3, t4) => {
  (t4 = t4 || e3.length) > e3.length && (t4 = e3.length);
  let n2 = t4 - 1;
  for (; n2 >= 0 && 128 == (192 & e3[n2]); ) n2--;
  return n2 < 0 || 0 === n2 ? t4 : n2 + ti$1[e3[n2]] > t4 ? n2 : t4;
};
var si = function() {
  this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
};
const oi$1 = Object.prototype.toString, { Z_NO_FLUSH: ai$1, Z_SYNC_FLUSH: ci$1, Z_FULL_FLUSH: ui$1, Z_FINISH: li$1, Z_OK: hi$1, Z_STREAM_END: di$1, Z_DEFAULT_COMPRESSION: _i$1, Z_DEFAULT_STRATEGY: fi$1, Z_DEFLATED: pi$1 } = Jt$2;
function Ei$1(e3) {
  this.options = Jn$2({ level: _i$1, method: pi$1, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: fi$1 }, e3 || {});
  let t4 = this.options;
  t4.raw && t4.windowBits > 0 ? t4.windowBits = -t4.windowBits : t4.gzip && t4.windowBits > 0 && t4.windowBits < 16 && (t4.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new si(), this.strm.avail_out = 0;
  let n2 = Yn$2.deflateInit2(this.strm, t4.level, t4.method, t4.windowBits, t4.memLevel, t4.strategy);
  if (n2 !== hi$1) throw new Error(Xt$2[n2]);
  if (t4.header && Yn$2.deflateSetHeader(this.strm, t4.header), t4.dictionary) {
    let e4;
    if (e4 = "string" == typeof t4.dictionary ? ni$1(t4.dictionary) : "[object ArrayBuffer]" === oi$1.call(t4.dictionary) ? new Uint8Array(t4.dictionary) : t4.dictionary, n2 = Yn$2.deflateSetDictionary(this.strm, e4), n2 !== hi$1) throw new Error(Xt$2[n2]);
    this._dict_set = true;
  }
}
function gi$1(e3, t4) {
  const n2 = new Ei$1(t4);
  if (n2.push(e3, true), n2.err) throw n2.msg || Xt$2[n2.err];
  return n2.result;
}
Ei$1.prototype.push = function(e3, t4) {
  const n2 = this.strm, i3 = this.options.chunkSize;
  let r2, s4;
  if (this.ended) return false;
  for (s4 = t4 === ~~t4 ? t4 : true === t4 ? li$1 : ai$1, "string" == typeof e3 ? n2.input = ni$1(e3) : "[object ArrayBuffer]" === oi$1.call(e3) ? n2.input = new Uint8Array(e3) : n2.input = e3, n2.next_in = 0, n2.avail_in = n2.input.length; ; ) if (0 === n2.avail_out && (n2.output = new Uint8Array(i3), n2.next_out = 0, n2.avail_out = i3), (s4 === ci$1 || s4 === ui$1) && n2.avail_out <= 6) this.onData(n2.output.subarray(0, n2.next_out)), n2.avail_out = 0;
  else {
    if (r2 = Yn$2.deflate(n2, s4), r2 === di$1) return n2.next_out > 0 && this.onData(n2.output.subarray(0, n2.next_out)), r2 = Yn$2.deflateEnd(this.strm), this.onEnd(r2), this.ended = true, r2 === hi$1;
    if (0 !== n2.avail_out) {
      if (s4 > 0 && n2.next_out > 0) this.onData(n2.output.subarray(0, n2.next_out)), n2.avail_out = 0;
      else if (0 === n2.avail_in) break;
    } else this.onData(n2.output);
  }
  return true;
}, Ei$1.prototype.onData = function(e3) {
  this.chunks.push(e3);
}, Ei$1.prototype.onEnd = function(e3) {
  e3 === hi$1 && (this.result = $n$2(this.chunks)), this.chunks = [], this.err = e3, this.msg = this.strm.msg;
};
var vi$1 = { Deflate: Ei$1, deflate: gi$1, deflateRaw: function(e3, t4) {
  return (t4 = t4 || {}).raw = true, gi$1(e3, t4);
}, gzip: function(e3, t4) {
  return (t4 = t4 || {}).gzip = true, gi$1(e3, t4);
} };
const bi$1 = 16209;
var mi$1 = function(e3, t4) {
  let n2, i3, r2, s4, o2, a4, c3, u3, l2, h4, d4, _2, f2, p2, E3, g2, v2, b3, m4, y4, w3, S4, T3, N2;
  const C2 = e3.state;
  n2 = e3.next_in, T3 = e3.input, i3 = n2 + (e3.avail_in - 5), r2 = e3.next_out, N2 = e3.output, s4 = r2 - (t4 - e3.avail_out), o2 = r2 + (e3.avail_out - 257), a4 = C2.dmax, c3 = C2.wsize, u3 = C2.whave, l2 = C2.wnext, h4 = C2.window, d4 = C2.hold, _2 = C2.bits, f2 = C2.lencode, p2 = C2.distcode, E3 = (1 << C2.lenbits) - 1, g2 = (1 << C2.distbits) - 1;
  e: do {
    _2 < 15 && (d4 += T3[n2++] << _2, _2 += 8, d4 += T3[n2++] << _2, _2 += 8), v2 = f2[d4 & E3];
    t: for (; ; ) {
      if (b3 = v2 >>> 24, d4 >>>= b3, _2 -= b3, b3 = v2 >>> 16 & 255, 0 === b3) N2[r2++] = 65535 & v2;
      else {
        if (!(16 & b3)) {
          if (64 & b3) {
            if (32 & b3) {
              C2.mode = 16191;
              break e;
            }
            e3.msg = "invalid literal/length code", C2.mode = bi$1;
            break e;
          }
          v2 = f2[(65535 & v2) + (d4 & (1 << b3) - 1)];
          continue t;
        }
        for (m4 = 65535 & v2, b3 &= 15, b3 && (_2 < b3 && (d4 += T3[n2++] << _2, _2 += 8), m4 += d4 & (1 << b3) - 1, d4 >>>= b3, _2 -= b3), _2 < 15 && (d4 += T3[n2++] << _2, _2 += 8, d4 += T3[n2++] << _2, _2 += 8), v2 = p2[d4 & g2]; ; ) {
          if (b3 = v2 >>> 24, d4 >>>= b3, _2 -= b3, b3 = v2 >>> 16 & 255, 16 & b3) {
            if (y4 = 65535 & v2, b3 &= 15, _2 < b3 && (d4 += T3[n2++] << _2, _2 += 8, _2 < b3 && (d4 += T3[n2++] << _2, _2 += 8)), y4 += d4 & (1 << b3) - 1, y4 > a4) {
              e3.msg = "invalid distance too far back", C2.mode = bi$1;
              break e;
            }
            if (d4 >>>= b3, _2 -= b3, b3 = r2 - s4, y4 > b3) {
              if (b3 = y4 - b3, b3 > u3 && C2.sane) {
                e3.msg = "invalid distance too far back", C2.mode = bi$1;
                break e;
              }
              if (w3 = 0, S4 = h4, 0 === l2) {
                if (w3 += c3 - b3, b3 < m4) {
                  m4 -= b3;
                  do {
                    N2[r2++] = h4[w3++];
                  } while (--b3);
                  w3 = r2 - y4, S4 = N2;
                }
              } else if (l2 < b3) {
                if (w3 += c3 + l2 - b3, b3 -= l2, b3 < m4) {
                  m4 -= b3;
                  do {
                    N2[r2++] = h4[w3++];
                  } while (--b3);
                  if (w3 = 0, l2 < m4) {
                    b3 = l2, m4 -= b3;
                    do {
                      N2[r2++] = h4[w3++];
                    } while (--b3);
                    w3 = r2 - y4, S4 = N2;
                  }
                }
              } else if (w3 += l2 - b3, b3 < m4) {
                m4 -= b3;
                do {
                  N2[r2++] = h4[w3++];
                } while (--b3);
                w3 = r2 - y4, S4 = N2;
              }
              for (; m4 > 2; ) N2[r2++] = S4[w3++], N2[r2++] = S4[w3++], N2[r2++] = S4[w3++], m4 -= 3;
              m4 && (N2[r2++] = S4[w3++], m4 > 1 && (N2[r2++] = S4[w3++]));
            } else {
              w3 = r2 - y4;
              do {
                N2[r2++] = N2[w3++], N2[r2++] = N2[w3++], N2[r2++] = N2[w3++], m4 -= 3;
              } while (m4 > 2);
              m4 && (N2[r2++] = N2[w3++], m4 > 1 && (N2[r2++] = N2[w3++]));
            }
            break;
          }
          if (64 & b3) {
            e3.msg = "invalid distance code", C2.mode = bi$1;
            break e;
          }
          v2 = p2[(65535 & v2) + (d4 & (1 << b3) - 1)];
        }
      }
      break;
    }
  } while (n2 < i3 && r2 < o2);
  m4 = _2 >> 3, n2 -= m4, _2 -= m4 << 3, d4 &= (1 << _2) - 1, e3.next_in = n2, e3.next_out = r2, e3.avail_in = n2 < i3 ? i3 - n2 + 5 : 5 - (n2 - i3), e3.avail_out = r2 < o2 ? o2 - r2 + 257 : 257 - (r2 - o2), C2.hold = d4, C2.bits = _2;
};
const yi$1 = 15, wi$1 = new Uint16Array([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]), Si$1 = new Uint8Array([16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]), Ti$1 = new Uint16Array([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]), Ni$1 = new Uint8Array([16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64]);
var Ci$1 = (e3, t4, n2, i3, r2, s4, o2, a4) => {
  const c3 = a4.bits;
  let u3, l2, h4, d4, _2, f2, p2 = 0, E3 = 0, g2 = 0, v2 = 0, b3 = 0, m4 = 0, y4 = 0, w3 = 0, S4 = 0, T3 = 0, N2 = null;
  const C2 = new Uint16Array(16), A2 = new Uint16Array(16);
  let I3, O3, k3, D3 = null;
  for (p2 = 0; p2 <= yi$1; p2++) C2[p2] = 0;
  for (E3 = 0; E3 < i3; E3++) C2[t4[n2 + E3]]++;
  for (b3 = c3, v2 = yi$1; v2 >= 1 && 0 === C2[v2]; v2--) ;
  if (b3 > v2 && (b3 = v2), 0 === v2) return r2[s4++] = 20971520, r2[s4++] = 20971520, a4.bits = 1, 0;
  for (g2 = 1; g2 < v2 && 0 === C2[g2]; g2++) ;
  for (b3 < g2 && (b3 = g2), w3 = 1, p2 = 1; p2 <= yi$1; p2++) if (w3 <<= 1, w3 -= C2[p2], w3 < 0) return -1;
  if (w3 > 0 && (0 === e3 || 1 !== v2)) return -1;
  for (A2[1] = 0, p2 = 1; p2 < yi$1; p2++) A2[p2 + 1] = A2[p2] + C2[p2];
  for (E3 = 0; E3 < i3; E3++) 0 !== t4[n2 + E3] && (o2[A2[t4[n2 + E3]]++] = E3);
  if (0 === e3 ? (N2 = D3 = o2, f2 = 20) : 1 === e3 ? (N2 = wi$1, D3 = Si$1, f2 = 257) : (N2 = Ti$1, D3 = Ni$1, f2 = 0), T3 = 0, E3 = 0, p2 = g2, _2 = s4, m4 = b3, y4 = 0, h4 = -1, S4 = 1 << b3, d4 = S4 - 1, 1 === e3 && S4 > 852 || 2 === e3 && S4 > 592) return 1;
  for (; ; ) {
    I3 = p2 - y4, o2[E3] + 1 < f2 ? (O3 = 0, k3 = o2[E3]) : o2[E3] >= f2 ? (O3 = D3[o2[E3] - f2], k3 = N2[o2[E3] - f2]) : (O3 = 96, k3 = 0), u3 = 1 << p2 - y4, l2 = 1 << m4, g2 = l2;
    do {
      l2 -= u3, r2[_2 + (T3 >> y4) + l2] = I3 << 24 | O3 << 16 | k3;
    } while (0 !== l2);
    for (u3 = 1 << p2 - 1; T3 & u3; ) u3 >>= 1;
    if (0 !== u3 ? (T3 &= u3 - 1, T3 += u3) : T3 = 0, E3++, 0 == --C2[p2]) {
      if (p2 === v2) break;
      p2 = t4[n2 + o2[E3]];
    }
    if (p2 > b3 && (T3 & d4) !== h4) {
      for (0 === y4 && (y4 = b3), _2 += g2, m4 = p2 - y4, w3 = 1 << m4; m4 + y4 < v2 && (w3 -= C2[m4 + y4], !(w3 <= 0)); ) m4++, w3 <<= 1;
      if (S4 += 1 << m4, 1 === e3 && S4 > 852 || 2 === e3 && S4 > 592) return 1;
      h4 = T3 & d4, r2[h4] = b3 << 24 | m4 << 16 | _2 - s4;
    }
  }
  return 0 !== T3 && (r2[_2 + T3] = p2 - y4 << 24 | 64 << 16), a4.bits = b3, 0;
};
const { Z_FINISH: Ai$1, Z_BLOCK: Ii$1, Z_TREES: Oi$1, Z_OK: ki$1, Z_STREAM_END: Di$1, Z_NEED_DICT: Ri$1, Z_STREAM_ERROR: Li$1, Z_DATA_ERROR: xi$1, Z_MEM_ERROR: Ui$1, Z_BUF_ERROR: Pi$1, Z_DEFLATED: Mi$1 } = Jt$2, Fi$1 = 16180, qi$1 = 16190, Hi$1 = 16191, Vi$1 = 16192, zi$1 = 16194, Gi$1 = 16199, ji$1 = 16200, Ki$1 = 16206, Bi$1 = 16209, Qi$1 = (e3) => (e3 >>> 24 & 255) + (e3 >>> 8 & 65280) + ((65280 & e3) << 8) + ((255 & e3) << 24);
function Wi$1() {
  this.strm = null, this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new Uint16Array(320), this.work = new Uint16Array(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
}
const Zi$1 = (e3) => {
  if (!e3) return 1;
  const t4 = e3.state;
  return !t4 || t4.strm !== e3 || t4.mode < Fi$1 || t4.mode > 16211 ? 1 : 0;
}, Yi$1 = (e3) => {
  if (Zi$1(e3)) return Li$1;
  const t4 = e3.state;
  return e3.total_in = e3.total_out = t4.total = 0, e3.msg = "", t4.wrap && (e3.adler = 1 & t4.wrap), t4.mode = Fi$1, t4.last = 0, t4.havedict = 0, t4.flags = -1, t4.dmax = 32768, t4.head = null, t4.hold = 0, t4.bits = 0, t4.lencode = t4.lendyn = new Int32Array(852), t4.distcode = t4.distdyn = new Int32Array(592), t4.sane = 1, t4.back = -1, ki$1;
}, Xi$1 = (e3) => {
  if (Zi$1(e3)) return Li$1;
  const t4 = e3.state;
  return t4.wsize = 0, t4.whave = 0, t4.wnext = 0, Yi$1(e3);
}, Ji$1 = (e3, t4) => {
  let n2;
  if (Zi$1(e3)) return Li$1;
  const i3 = e3.state;
  return t4 < 0 ? (n2 = 0, t4 = -t4) : (n2 = 5 + (t4 >> 4), t4 < 48 && (t4 &= 15)), t4 && (t4 < 8 || t4 > 15) ? Li$1 : (null !== i3.window && i3.wbits !== t4 && (i3.window = null), i3.wrap = n2, i3.wbits = t4, Xi$1(e3));
}, $i$1 = (e3, t4) => {
  if (!e3) return Li$1;
  const n2 = new Wi$1();
  e3.state = n2, n2.strm = e3, n2.window = null, n2.mode = Fi$1;
  const i3 = Ji$1(e3, t4);
  return i3 !== ki$1 && (e3.state = null), i3;
};
let er$2, tr$2, nr$2 = true;
const ir$2 = (e3) => {
  if (nr$2) {
    er$2 = new Int32Array(512), tr$2 = new Int32Array(32);
    let t4 = 0;
    for (; t4 < 144; ) e3.lens[t4++] = 8;
    for (; t4 < 256; ) e3.lens[t4++] = 9;
    for (; t4 < 280; ) e3.lens[t4++] = 7;
    for (; t4 < 288; ) e3.lens[t4++] = 8;
    for (Ci$1(1, e3.lens, 0, 288, er$2, 0, e3.work, { bits: 9 }), t4 = 0; t4 < 32; ) e3.lens[t4++] = 5;
    Ci$1(2, e3.lens, 0, 32, tr$2, 0, e3.work, { bits: 5 }), nr$2 = false;
  }
  e3.lencode = er$2, e3.lenbits = 9, e3.distcode = tr$2, e3.distbits = 5;
}, rr$2 = (e3, t4, n2, i3) => {
  let r2;
  const s4 = e3.state;
  return null === s4.window && (s4.wsize = 1 << s4.wbits, s4.wnext = 0, s4.whave = 0, s4.window = new Uint8Array(s4.wsize)), i3 >= s4.wsize ? (s4.window.set(t4.subarray(n2 - s4.wsize, n2), 0), s4.wnext = 0, s4.whave = s4.wsize) : (r2 = s4.wsize - s4.wnext, r2 > i3 && (r2 = i3), s4.window.set(t4.subarray(n2 - i3, n2 - i3 + r2), s4.wnext), (i3 -= r2) ? (s4.window.set(t4.subarray(n2 - i3, n2), 0), s4.wnext = i3, s4.whave = s4.wsize) : (s4.wnext += r2, s4.wnext === s4.wsize && (s4.wnext = 0), s4.whave < s4.wsize && (s4.whave += r2))), 0;
};
var sr$2 = { inflateReset: Xi$1, inflateReset2: Ji$1, inflateResetKeep: Yi$1, inflateInit: (e3) => $i$1(e3, 15), inflateInit2: $i$1, inflate: (e3, t4) => {
  let n2, i3, r2, s4, o2, a4, c3, u3, l2, h4, d4, _2, f2, p2, E3, g2, v2, b3, m4, y4, w3, S4, T3 = 0;
  const N2 = new Uint8Array(4);
  let C2, A2;
  const I3 = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
  if (Zi$1(e3) || !e3.output || !e3.input && 0 !== e3.avail_in) return Li$1;
  n2 = e3.state, n2.mode === Hi$1 && (n2.mode = Vi$1), o2 = e3.next_out, r2 = e3.output, c3 = e3.avail_out, s4 = e3.next_in, i3 = e3.input, a4 = e3.avail_in, u3 = n2.hold, l2 = n2.bits, h4 = a4, d4 = c3, S4 = ki$1;
  e: for (; ; ) switch (n2.mode) {
    case Fi$1:
      if (0 === n2.wrap) {
        n2.mode = Vi$1;
        break;
      }
      for (; l2 < 16; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      if (2 & n2.wrap && 35615 === u3) {
        0 === n2.wbits && (n2.wbits = 15), n2.check = 0, N2[0] = 255 & u3, N2[1] = u3 >>> 8 & 255, n2.check = Yt$2(n2.check, N2, 2, 0), u3 = 0, l2 = 0, n2.mode = 16181;
        break;
      }
      if (n2.head && (n2.head.done = false), !(1 & n2.wrap) || (((255 & u3) << 8) + (u3 >> 8)) % 31) {
        e3.msg = "incorrect header check", n2.mode = Bi$1;
        break;
      }
      if ((15 & u3) !== Mi$1) {
        e3.msg = "unknown compression method", n2.mode = Bi$1;
        break;
      }
      if (u3 >>>= 4, l2 -= 4, w3 = 8 + (15 & u3), 0 === n2.wbits && (n2.wbits = w3), w3 > 15 || w3 > n2.wbits) {
        e3.msg = "invalid window size", n2.mode = Bi$1;
        break;
      }
      n2.dmax = 1 << n2.wbits, n2.flags = 0, e3.adler = n2.check = 1, n2.mode = 512 & u3 ? 16189 : Hi$1, u3 = 0, l2 = 0;
      break;
    case 16181:
      for (; l2 < 16; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      if (n2.flags = u3, (255 & n2.flags) !== Mi$1) {
        e3.msg = "unknown compression method", n2.mode = Bi$1;
        break;
      }
      if (57344 & n2.flags) {
        e3.msg = "unknown header flags set", n2.mode = Bi$1;
        break;
      }
      n2.head && (n2.head.text = u3 >> 8 & 1), 512 & n2.flags && 4 & n2.wrap && (N2[0] = 255 & u3, N2[1] = u3 >>> 8 & 255, n2.check = Yt$2(n2.check, N2, 2, 0)), u3 = 0, l2 = 0, n2.mode = 16182;
    case 16182:
      for (; l2 < 32; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      n2.head && (n2.head.time = u3), 512 & n2.flags && 4 & n2.wrap && (N2[0] = 255 & u3, N2[1] = u3 >>> 8 & 255, N2[2] = u3 >>> 16 & 255, N2[3] = u3 >>> 24 & 255, n2.check = Yt$2(n2.check, N2, 4, 0)), u3 = 0, l2 = 0, n2.mode = 16183;
    case 16183:
      for (; l2 < 16; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      n2.head && (n2.head.xflags = 255 & u3, n2.head.os = u3 >> 8), 512 & n2.flags && 4 & n2.wrap && (N2[0] = 255 & u3, N2[1] = u3 >>> 8 & 255, n2.check = Yt$2(n2.check, N2, 2, 0)), u3 = 0, l2 = 0, n2.mode = 16184;
    case 16184:
      if (1024 & n2.flags) {
        for (; l2 < 16; ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        n2.length = u3, n2.head && (n2.head.extra_len = u3), 512 & n2.flags && 4 & n2.wrap && (N2[0] = 255 & u3, N2[1] = u3 >>> 8 & 255, n2.check = Yt$2(n2.check, N2, 2, 0)), u3 = 0, l2 = 0;
      } else n2.head && (n2.head.extra = null);
      n2.mode = 16185;
    case 16185:
      if (1024 & n2.flags && (_2 = n2.length, _2 > a4 && (_2 = a4), _2 && (n2.head && (w3 = n2.head.extra_len - n2.length, n2.head.extra || (n2.head.extra = new Uint8Array(n2.head.extra_len)), n2.head.extra.set(i3.subarray(s4, s4 + _2), w3)), 512 & n2.flags && 4 & n2.wrap && (n2.check = Yt$2(n2.check, i3, _2, s4)), a4 -= _2, s4 += _2, n2.length -= _2), n2.length)) break e;
      n2.length = 0, n2.mode = 16186;
    case 16186:
      if (2048 & n2.flags) {
        if (0 === a4) break e;
        _2 = 0;
        do {
          w3 = i3[s4 + _2++], n2.head && w3 && n2.length < 65536 && (n2.head.name += String.fromCharCode(w3));
        } while (w3 && _2 < a4);
        if (512 & n2.flags && 4 & n2.wrap && (n2.check = Yt$2(n2.check, i3, _2, s4)), a4 -= _2, s4 += _2, w3) break e;
      } else n2.head && (n2.head.name = null);
      n2.length = 0, n2.mode = 16187;
    case 16187:
      if (4096 & n2.flags) {
        if (0 === a4) break e;
        _2 = 0;
        do {
          w3 = i3[s4 + _2++], n2.head && w3 && n2.length < 65536 && (n2.head.comment += String.fromCharCode(w3));
        } while (w3 && _2 < a4);
        if (512 & n2.flags && 4 & n2.wrap && (n2.check = Yt$2(n2.check, i3, _2, s4)), a4 -= _2, s4 += _2, w3) break e;
      } else n2.head && (n2.head.comment = null);
      n2.mode = 16188;
    case 16188:
      if (512 & n2.flags) {
        for (; l2 < 16; ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        if (4 & n2.wrap && u3 !== (65535 & n2.check)) {
          e3.msg = "header crc mismatch", n2.mode = Bi$1;
          break;
        }
        u3 = 0, l2 = 0;
      }
      n2.head && (n2.head.hcrc = n2.flags >> 9 & 1, n2.head.done = true), e3.adler = n2.check = 0, n2.mode = Hi$1;
      break;
    case 16189:
      for (; l2 < 32; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      e3.adler = n2.check = Qi$1(u3), u3 = 0, l2 = 0, n2.mode = qi$1;
    case qi$1:
      if (0 === n2.havedict) return e3.next_out = o2, e3.avail_out = c3, e3.next_in = s4, e3.avail_in = a4, n2.hold = u3, n2.bits = l2, Ri$1;
      e3.adler = n2.check = 1, n2.mode = Hi$1;
    case Hi$1:
      if (t4 === Ii$1 || t4 === Oi$1) break e;
    case Vi$1:
      if (n2.last) {
        u3 >>>= 7 & l2, l2 -= 7 & l2, n2.mode = Ki$1;
        break;
      }
      for (; l2 < 3; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      switch (n2.last = 1 & u3, u3 >>>= 1, l2 -= 1, 3 & u3) {
        case 0:
          n2.mode = 16193;
          break;
        case 1:
          if (ir$2(n2), n2.mode = Gi$1, t4 === Oi$1) {
            u3 >>>= 2, l2 -= 2;
            break e;
          }
          break;
        case 2:
          n2.mode = 16196;
          break;
        case 3:
          e3.msg = "invalid block type", n2.mode = Bi$1;
      }
      u3 >>>= 2, l2 -= 2;
      break;
    case 16193:
      for (u3 >>>= 7 & l2, l2 -= 7 & l2; l2 < 32; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      if ((65535 & u3) != (u3 >>> 16 ^ 65535)) {
        e3.msg = "invalid stored block lengths", n2.mode = Bi$1;
        break;
      }
      if (n2.length = 65535 & u3, u3 = 0, l2 = 0, n2.mode = zi$1, t4 === Oi$1) break e;
    case zi$1:
      n2.mode = 16195;
    case 16195:
      if (_2 = n2.length, _2) {
        if (_2 > a4 && (_2 = a4), _2 > c3 && (_2 = c3), 0 === _2) break e;
        r2.set(i3.subarray(s4, s4 + _2), o2), a4 -= _2, s4 += _2, c3 -= _2, o2 += _2, n2.length -= _2;
        break;
      }
      n2.mode = Hi$1;
      break;
    case 16196:
      for (; l2 < 14; ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      if (n2.nlen = 257 + (31 & u3), u3 >>>= 5, l2 -= 5, n2.ndist = 1 + (31 & u3), u3 >>>= 5, l2 -= 5, n2.ncode = 4 + (15 & u3), u3 >>>= 4, l2 -= 4, n2.nlen > 286 || n2.ndist > 30) {
        e3.msg = "too many length or distance symbols", n2.mode = Bi$1;
        break;
      }
      n2.have = 0, n2.mode = 16197;
    case 16197:
      for (; n2.have < n2.ncode; ) {
        for (; l2 < 3; ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        n2.lens[I3[n2.have++]] = 7 & u3, u3 >>>= 3, l2 -= 3;
      }
      for (; n2.have < 19; ) n2.lens[I3[n2.have++]] = 0;
      if (n2.lencode = n2.lendyn, n2.lenbits = 7, C2 = { bits: n2.lenbits }, S4 = Ci$1(0, n2.lens, 0, 19, n2.lencode, 0, n2.work, C2), n2.lenbits = C2.bits, S4) {
        e3.msg = "invalid code lengths set", n2.mode = Bi$1;
        break;
      }
      n2.have = 0, n2.mode = 16198;
    case 16198:
      for (; n2.have < n2.nlen + n2.ndist; ) {
        for (; T3 = n2.lencode[u3 & (1 << n2.lenbits) - 1], E3 = T3 >>> 24, g2 = T3 >>> 16 & 255, v2 = 65535 & T3, !(E3 <= l2); ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        if (v2 < 16) u3 >>>= E3, l2 -= E3, n2.lens[n2.have++] = v2;
        else {
          if (16 === v2) {
            for (A2 = E3 + 2; l2 < A2; ) {
              if (0 === a4) break e;
              a4--, u3 += i3[s4++] << l2, l2 += 8;
            }
            if (u3 >>>= E3, l2 -= E3, 0 === n2.have) {
              e3.msg = "invalid bit length repeat", n2.mode = Bi$1;
              break;
            }
            w3 = n2.lens[n2.have - 1], _2 = 3 + (3 & u3), u3 >>>= 2, l2 -= 2;
          } else if (17 === v2) {
            for (A2 = E3 + 3; l2 < A2; ) {
              if (0 === a4) break e;
              a4--, u3 += i3[s4++] << l2, l2 += 8;
            }
            u3 >>>= E3, l2 -= E3, w3 = 0, _2 = 3 + (7 & u3), u3 >>>= 3, l2 -= 3;
          } else {
            for (A2 = E3 + 7; l2 < A2; ) {
              if (0 === a4) break e;
              a4--, u3 += i3[s4++] << l2, l2 += 8;
            }
            u3 >>>= E3, l2 -= E3, w3 = 0, _2 = 11 + (127 & u3), u3 >>>= 7, l2 -= 7;
          }
          if (n2.have + _2 > n2.nlen + n2.ndist) {
            e3.msg = "invalid bit length repeat", n2.mode = Bi$1;
            break;
          }
          for (; _2--; ) n2.lens[n2.have++] = w3;
        }
      }
      if (n2.mode === Bi$1) break;
      if (0 === n2.lens[256]) {
        e3.msg = "invalid code -- missing end-of-block", n2.mode = Bi$1;
        break;
      }
      if (n2.lenbits = 9, C2 = { bits: n2.lenbits }, S4 = Ci$1(1, n2.lens, 0, n2.nlen, n2.lencode, 0, n2.work, C2), n2.lenbits = C2.bits, S4) {
        e3.msg = "invalid literal/lengths set", n2.mode = Bi$1;
        break;
      }
      if (n2.distbits = 6, n2.distcode = n2.distdyn, C2 = { bits: n2.distbits }, S4 = Ci$1(2, n2.lens, n2.nlen, n2.ndist, n2.distcode, 0, n2.work, C2), n2.distbits = C2.bits, S4) {
        e3.msg = "invalid distances set", n2.mode = Bi$1;
        break;
      }
      if (n2.mode = Gi$1, t4 === Oi$1) break e;
    case Gi$1:
      n2.mode = ji$1;
    case ji$1:
      if (a4 >= 6 && c3 >= 258) {
        e3.next_out = o2, e3.avail_out = c3, e3.next_in = s4, e3.avail_in = a4, n2.hold = u3, n2.bits = l2, mi$1(e3, d4), o2 = e3.next_out, r2 = e3.output, c3 = e3.avail_out, s4 = e3.next_in, i3 = e3.input, a4 = e3.avail_in, u3 = n2.hold, l2 = n2.bits, n2.mode === Hi$1 && (n2.back = -1);
        break;
      }
      for (n2.back = 0; T3 = n2.lencode[u3 & (1 << n2.lenbits) - 1], E3 = T3 >>> 24, g2 = T3 >>> 16 & 255, v2 = 65535 & T3, !(E3 <= l2); ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      if (g2 && !(240 & g2)) {
        for (b3 = E3, m4 = g2, y4 = v2; T3 = n2.lencode[y4 + ((u3 & (1 << b3 + m4) - 1) >> b3)], E3 = T3 >>> 24, g2 = T3 >>> 16 & 255, v2 = 65535 & T3, !(b3 + E3 <= l2); ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        u3 >>>= b3, l2 -= b3, n2.back += b3;
      }
      if (u3 >>>= E3, l2 -= E3, n2.back += E3, n2.length = v2, 0 === g2) {
        n2.mode = 16205;
        break;
      }
      if (32 & g2) {
        n2.back = -1, n2.mode = Hi$1;
        break;
      }
      if (64 & g2) {
        e3.msg = "invalid literal/length code", n2.mode = Bi$1;
        break;
      }
      n2.extra = 15 & g2, n2.mode = 16201;
    case 16201:
      if (n2.extra) {
        for (A2 = n2.extra; l2 < A2; ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        n2.length += u3 & (1 << n2.extra) - 1, u3 >>>= n2.extra, l2 -= n2.extra, n2.back += n2.extra;
      }
      n2.was = n2.length, n2.mode = 16202;
    case 16202:
      for (; T3 = n2.distcode[u3 & (1 << n2.distbits) - 1], E3 = T3 >>> 24, g2 = T3 >>> 16 & 255, v2 = 65535 & T3, !(E3 <= l2); ) {
        if (0 === a4) break e;
        a4--, u3 += i3[s4++] << l2, l2 += 8;
      }
      if (!(240 & g2)) {
        for (b3 = E3, m4 = g2, y4 = v2; T3 = n2.distcode[y4 + ((u3 & (1 << b3 + m4) - 1) >> b3)], E3 = T3 >>> 24, g2 = T3 >>> 16 & 255, v2 = 65535 & T3, !(b3 + E3 <= l2); ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        u3 >>>= b3, l2 -= b3, n2.back += b3;
      }
      if (u3 >>>= E3, l2 -= E3, n2.back += E3, 64 & g2) {
        e3.msg = "invalid distance code", n2.mode = Bi$1;
        break;
      }
      n2.offset = v2, n2.extra = 15 & g2, n2.mode = 16203;
    case 16203:
      if (n2.extra) {
        for (A2 = n2.extra; l2 < A2; ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        n2.offset += u3 & (1 << n2.extra) - 1, u3 >>>= n2.extra, l2 -= n2.extra, n2.back += n2.extra;
      }
      if (n2.offset > n2.dmax) {
        e3.msg = "invalid distance too far back", n2.mode = Bi$1;
        break;
      }
      n2.mode = 16204;
    case 16204:
      if (0 === c3) break e;
      if (_2 = d4 - c3, n2.offset > _2) {
        if (_2 = n2.offset - _2, _2 > n2.whave && n2.sane) {
          e3.msg = "invalid distance too far back", n2.mode = Bi$1;
          break;
        }
        _2 > n2.wnext ? (_2 -= n2.wnext, f2 = n2.wsize - _2) : f2 = n2.wnext - _2, _2 > n2.length && (_2 = n2.length), p2 = n2.window;
      } else p2 = r2, f2 = o2 - n2.offset, _2 = n2.length;
      _2 > c3 && (_2 = c3), c3 -= _2, n2.length -= _2;
      do {
        r2[o2++] = p2[f2++];
      } while (--_2);
      0 === n2.length && (n2.mode = ji$1);
      break;
    case 16205:
      if (0 === c3) break e;
      r2[o2++] = n2.length, c3--, n2.mode = ji$1;
      break;
    case Ki$1:
      if (n2.wrap) {
        for (; l2 < 32; ) {
          if (0 === a4) break e;
          a4--, u3 |= i3[s4++] << l2, l2 += 8;
        }
        if (d4 -= c3, e3.total_out += d4, n2.total += d4, 4 & n2.wrap && d4 && (e3.adler = n2.check = n2.flags ? Yt$2(n2.check, r2, d4, o2 - d4) : Wt$2(n2.check, r2, d4, o2 - d4)), d4 = c3, 4 & n2.wrap && (n2.flags ? u3 : Qi$1(u3)) !== n2.check) {
          e3.msg = "incorrect data check", n2.mode = Bi$1;
          break;
        }
        u3 = 0, l2 = 0;
      }
      n2.mode = 16207;
    case 16207:
      if (n2.wrap && n2.flags) {
        for (; l2 < 32; ) {
          if (0 === a4) break e;
          a4--, u3 += i3[s4++] << l2, l2 += 8;
        }
        if (4 & n2.wrap && u3 !== (4294967295 & n2.total)) {
          e3.msg = "incorrect length check", n2.mode = Bi$1;
          break;
        }
        u3 = 0, l2 = 0;
      }
      n2.mode = 16208;
    case 16208:
      S4 = Di$1;
      break e;
    case Bi$1:
      S4 = xi$1;
      break e;
    case 16210:
      return Ui$1;
    default:
      return Li$1;
  }
  return e3.next_out = o2, e3.avail_out = c3, e3.next_in = s4, e3.avail_in = a4, n2.hold = u3, n2.bits = l2, (n2.wsize || d4 !== e3.avail_out && n2.mode < Bi$1 && (n2.mode < Ki$1 || t4 !== Ai$1)) && rr$2(e3, e3.output, e3.next_out, d4 - e3.avail_out), h4 -= e3.avail_in, d4 -= e3.avail_out, e3.total_in += h4, e3.total_out += d4, n2.total += d4, 4 & n2.wrap && d4 && (e3.adler = n2.check = n2.flags ? Yt$2(n2.check, r2, d4, e3.next_out - d4) : Wt$2(n2.check, r2, d4, e3.next_out - d4)), e3.data_type = n2.bits + (n2.last ? 64 : 0) + (n2.mode === Hi$1 ? 128 : 0) + (n2.mode === Gi$1 || n2.mode === zi$1 ? 256 : 0), (0 === h4 && 0 === d4 || t4 === Ai$1) && S4 === ki$1 && (S4 = Pi$1), S4;
}, inflateEnd: (e3) => {
  if (Zi$1(e3)) return Li$1;
  let t4 = e3.state;
  return t4.window && (t4.window = null), e3.state = null, ki$1;
}, inflateGetHeader: (e3, t4) => {
  if (Zi$1(e3)) return Li$1;
  const n2 = e3.state;
  return 2 & n2.wrap ? (n2.head = t4, t4.done = false, ki$1) : Li$1;
}, inflateSetDictionary: (e3, t4) => {
  const n2 = t4.length;
  let i3, r2, s4;
  return Zi$1(e3) ? Li$1 : (i3 = e3.state, 0 !== i3.wrap && i3.mode !== qi$1 ? Li$1 : i3.mode === qi$1 && (r2 = 1, r2 = Wt$2(r2, t4, n2, 0), r2 !== i3.check) ? xi$1 : (s4 = rr$2(e3, t4, n2, n2), s4 ? (i3.mode = 16210, Ui$1) : (i3.havedict = 1, ki$1)));
}, inflateInfo: "pako inflate (from Nodeca project)" };
var or$2 = function() {
  this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
};
const ar$2 = Object.prototype.toString, { Z_NO_FLUSH: cr$2, Z_FINISH: ur$2, Z_OK: lr$2, Z_STREAM_END: hr$2, Z_NEED_DICT: dr$2, Z_STREAM_ERROR: _r$2, Z_DATA_ERROR: fr$2, Z_MEM_ERROR: pr$2 } = Jt$2;
function Er$1(e3) {
  this.options = Jn$2({ chunkSize: 65536, windowBits: 15, to: "" }, e3 || {});
  const t4 = this.options;
  t4.raw && t4.windowBits >= 0 && t4.windowBits < 16 && (t4.windowBits = -t4.windowBits, 0 === t4.windowBits && (t4.windowBits = -15)), !(t4.windowBits >= 0 && t4.windowBits < 16) || e3 && e3.windowBits || (t4.windowBits += 32), t4.windowBits > 15 && t4.windowBits < 48 && (15 & t4.windowBits || (t4.windowBits |= 15)), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new si(), this.strm.avail_out = 0;
  let n2 = sr$2.inflateInit2(this.strm, t4.windowBits);
  if (n2 !== lr$2) throw new Error(Xt$2[n2]);
  if (this.header = new or$2(), sr$2.inflateGetHeader(this.strm, this.header), t4.dictionary && ("string" == typeof t4.dictionary ? t4.dictionary = ni$1(t4.dictionary) : "[object ArrayBuffer]" === ar$2.call(t4.dictionary) && (t4.dictionary = new Uint8Array(t4.dictionary)), t4.raw && (n2 = sr$2.inflateSetDictionary(this.strm, t4.dictionary), n2 !== lr$2))) throw new Error(Xt$2[n2]);
}
function gr$1(e3, t4) {
  const n2 = new Er$1(t4);
  if (n2.push(e3), n2.err) throw n2.msg || Xt$2[n2.err];
  return n2.result;
}
Er$1.prototype.push = function(e3, t4) {
  const n2 = this.strm, i3 = this.options.chunkSize, r2 = this.options.dictionary;
  let s4, o2, a4;
  if (this.ended) return false;
  for (o2 = t4 === ~~t4 ? t4 : true === t4 ? ur$2 : cr$2, "[object ArrayBuffer]" === ar$2.call(e3) ? n2.input = new Uint8Array(e3) : n2.input = e3, n2.next_in = 0, n2.avail_in = n2.input.length; ; ) {
    for (0 === n2.avail_out && (n2.output = new Uint8Array(i3), n2.next_out = 0, n2.avail_out = i3), s4 = sr$2.inflate(n2, o2), s4 === dr$2 && r2 && (s4 = sr$2.inflateSetDictionary(n2, r2), s4 === lr$2 ? s4 = sr$2.inflate(n2, o2) : s4 === fr$2 && (s4 = dr$2)); n2.avail_in > 0 && s4 === hr$2 && n2.state.wrap > 0 && 0 !== e3[n2.next_in]; ) sr$2.inflateReset(n2), s4 = sr$2.inflate(n2, o2);
    switch (s4) {
      case _r$2:
      case fr$2:
      case dr$2:
      case pr$2:
        return this.onEnd(s4), this.ended = true, false;
    }
    if (a4 = n2.avail_out, n2.next_out && (0 === n2.avail_out || s4 === hr$2)) if ("string" === this.options.to) {
      let e4 = ri$1(n2.output, n2.next_out), t5 = n2.next_out - e4, r3 = ii$1(n2.output, e4);
      n2.next_out = t5, n2.avail_out = i3 - t5, t5 && n2.output.set(n2.output.subarray(e4, e4 + t5), 0), this.onData(r3);
    } else this.onData(n2.output.length === n2.next_out ? n2.output : n2.output.subarray(0, n2.next_out));
    if (s4 !== lr$2 || 0 !== a4) {
      if (s4 === hr$2) return s4 = sr$2.inflateEnd(this.strm), this.onEnd(s4), this.ended = true, true;
      if (0 === n2.avail_in) break;
    }
  }
  return true;
}, Er$1.prototype.onData = function(e3) {
  this.chunks.push(e3);
}, Er$1.prototype.onEnd = function(e3) {
  e3 === lr$2 && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = $n$2(this.chunks)), this.chunks = [], this.err = e3, this.msg = this.strm.msg;
};
var vr$1 = { Inflate: Er$1, inflate: gr$1, inflateRaw: function(e3, t4) {
  return (t4 = t4 || {}).raw = true, gr$1(e3, t4);
}, ungzip: gr$1 };
const { Deflate: br$1, deflate: mr$1, deflateRaw: yr$1, gzip: wr$1 } = vi$1, { Inflate: Sr$1, inflate: Tr$1, inflateRaw: Nr$1, ungzip: Cr$1 } = vr$1;
var Ar$1, Ir$1 = { Deflate: br$1, deflate: mr$1, deflateRaw: yr$1, gzip: wr$1, Inflate: Sr$1, inflate: Tr$1, inflateRaw: Nr$1, ungzip: Cr$1, constants: Jt$2 }, Or$1 = function(e3) {
  return r$1(void 0, void 0, void 0, function() {
    var t4;
    return s$1(this, function(n2) {
      return t4 = Ir$1.ungzip(e3), [2, String.fromCharCode.apply(null, t4)];
    });
  });
}, kr$1 = function(e3) {
  return r$1(void 0, void 0, void 0, function() {
    var t4;
    return s$1(this, function(n2) {
      switch (n2.label) {
        case 0:
          return n2.trys.push([0, 2, , 3]), [4, e3()];
        case 1:
          return n2.sent(), [3, 3];
        case 2:
          if (!((t4 = n2.sent()) instanceof b$2)) throw t4;
          return t4.throwOutside(), [3, 3];
        case 3:
          return [2];
      }
    });
  });
}, Dr$1 = function(e3) {
  return r$1(void 0, void 0, void 0, function() {
    return s$1(this, function(t4) {
      switch (t4.label) {
        case 0:
          return t4.trys.push([0, 2, , 3]), [4, e3()];
        case 1:
        case 2:
          return t4.sent(), [3, 3];
        case 3:
          return [2];
      }
    });
  });
};
!function(e3) {
  e3.CONNECTING = "CONNECTING", e3.OPEN = "OPEN", e3.CLOSED = "CLOSED";
}(Ar$1 || (Ar$1 = {}));
var Rr$1, Lr$1 = function(e3) {
  function n2(t4, n3) {
    var i3 = n3.sdkState, r2 = n3.dispatcher, s4 = n3.logger, o2 = e3.call(this) || this;
    return o2.lastActive = 0, o2._iid = t4, o2._sdkState = i3, o2._dispatcher = r2, o2._logger = s4, o2;
  }
  return t$2(n2, e3), Object.defineProperty(n2.prototype, "isOpen", { get: function() {
    return this.connectionState === Ar$1.OPEN;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "connectionState", { get: function() {
    if (this._ws) switch (this._ws.readyState) {
      case 0:
        return Ar$1.CONNECTING;
      case 1:
        return Ar$1.OPEN;
    }
    return Ar$1.CLOSED;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "ws", { get: function() {
    var e4;
    return null !== (e4 = this._ws) && void 0 !== e4 ? e4 : null;
  }, enumerable: false, configurable: true }), n2.prototype._handleMessage = function(e4) {
    var t4 = this;
    e4.split("\n").forEach(function(e5) {
      if (e5) {
        var n3 = ze$2.createFromRawMessage(t4._iid, e5);
        if (t4._logger.debug("receive websocket event", n3), "LOGI" === n3.code) t4.dispatch("message", n3);
        else if ("PONG" === n3.code) t4.dispatch("pong");
        else if ("EXPR" === n3.code) {
          if (n3.payload) {
            var i3 = new Ve$2(n3.payload);
            i3.expiresIn >= 0 && t4._dispatcher.dispatch(i3);
          }
        } else "NOOP" === n3.code || t4.dispatch("message", n3);
      }
    });
  }, n2.prototype.connect = function(e4, t4) {
    return void 0 === t4 && (t4 = ""), r$1(this, void 0, void 0, function() {
      var n3 = this;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return "function" == typeof fetch ? [3, 2] : [4, import("./__bundle-46d64517-jl9LoYCb.js").then((n4) => n4._)];
          case 1:
            i3.sent(), i3.label = 2;
          case 2:
            return Dr$1(function() {
              return r$1(n3, void 0, void 0, function() {
                return s$1(this, function(e5) {
                  return fetch(this._sdkState.api.host), [2];
                });
              });
            }), this._ws = new WebSocket(e4, encodeURIComponent(t4)), this._ws.onopen = function() {
              n3._logger.debug("websocket open"), n3.dispatch("open");
            }, this._ws.onmessage = function(e5) {
              return r$1(n3, void 0, void 0, function() {
                var t5, n4, i4, o2, a4, c3, u3, l2 = this;
                return s$1(this, function(h4) {
                  switch (h4.label) {
                    case 0:
                      return (null === (u3 = this._sdkState.websocket) || void 0 === u3 ? void 0 : u3.compression) ? e5.data instanceof Blob ? ((t5 = new FileReader()).readAsArrayBuffer(e5.data), t5.onloadend = function() {
                        return r$1(l2, void 0, void 0, function() {
                          var e6, n5;
                          return s$1(this, function(i5) {
                            switch (i5.label) {
                              case 0:
                                return i5.trys.push([0, 2, , 3]), [4, Or$1(t5.result)];
                              case 1:
                                return e6 = i5.sent(), this._handleMessage(e6), [3, 3];
                              case 2:
                                return n5 = i5.sent(), this.error(n5), [3, 3];
                              case 3:
                                return [2];
                            }
                          });
                        });
                      }, [3, 12]) : [3, 1] : [3, 13];
                    case 1:
                      if (!(e5.data instanceof ArrayBuffer)) return [3, 6];
                      h4.label = 2;
                    case 2:
                      return h4.trys.push([2, 4, , 5]), [4, Or$1(new Uint8Array(e5.data))];
                    case 3:
                      return a4 = h4.sent(), this._handleMessage(a4), [3, 5];
                    case 4:
                      return n4 = h4.sent(), this.error(n4), [3, 5];
                    case 5:
                      return [3, 12];
                    case 6:
                      if (!("undefined" != typeof Buffer && e5.data instanceof Buffer)) return [3, 11];
                      h4.label = 7;
                    case 7:
                      return h4.trys.push([7, 9, , 10]), i4 = e5.data, o2 = i4.buffer.slice(i4.byteOffset, i4.byteOffset + i4.byteLength), [4, Or$1(o2)];
                    case 8:
                      return a4 = h4.sent(), this._handleMessage(a4), [3, 10];
                    case 9:
                      return c3 = h4.sent(), this.error(c3), [3, 10];
                    case 10:
                      return [3, 12];
                    case 11:
                      "string" == typeof e5.data && this._handleMessage(e5.data), h4.label = 12;
                    case 12:
                      return [3, 14];
                    case 13:
                      this._handleMessage(e5.data), h4.label = 14;
                    case 14:
                      return [2];
                  }
                });
              });
            }, this._ws.onerror = function() {
              n3._logger.debug("websocket error"), n3.dispatch("error", b$2.networkError);
            }, this._ws.onclose = function(e5) {
              n3._logger.debug("websocket close", e5.code, e5.reason), n3.cleanUpWebSocket(), n3.dispatch("close");
            }, this.lastActive = Date.now(), [2];
        }
      });
    });
  }, n2.prototype.cleanUpWebSocket = function() {
    this._ws && (this._ws.onopen = ut$1, this._ws.onmessage = ut$1, this._ws.onerror = ut$1, this._ws.onclose = ut$1, this.connectionState === Ar$1.OPEN && this._ws.close(1e3, "Normal Closure"), this._ws = void 0);
  }, n2.prototype.disconnect = function() {
    var e4 = this;
    return new Promise(function(t4) {
      if (e4._ws) {
        if (e4.connectionState === Ar$1.CLOSED) return e4.cleanUpWebSocket(), void t4();
        e4._ws.onclose = function() {
          e4.cleanUpWebSocket(), e4.dispatch("close"), t4();
        }, e4._ws.close();
      } else t4();
    });
  }, n2.prototype.send = function(e4) {
    if (!this._ws) throw b$2.connectionClosed;
    "PING" !== e4.code ? this.dispatch("ping-refresh") : this._logger.debug("send ping", e4), this._ws.send(e4.convertToMessage());
  }, n2.prototype.error = function(e4) {
    this._logger.debug("websocket error", e4), this.dispatch("error", e4);
  }, n2;
}(ne), xr$1 = function(e3) {
  function n2(t4) {
    var n3 = t4.all, i3 = t4.feed, r2 = t4.custom_types, s4 = t4.ts, o2 = e3.call(this) || this;
    return o2.all = n3, o2.feed = i3, o2.customTypes = r2, o2.ts = s4, o2;
  }
  return t$2(n2, e3), n2;
}(re), Ur$1 = function() {
  function e3(e4, t4) {
    var n2 = t4.session, i3 = t4.sdkState, r2 = t4.dispatcher, s4 = t4.logger, o2 = t4.useFetchCompat, a4 = void 0 !== o2 && o2, c3 = this;
    this._ackStateMap = /* @__PURE__ */ new Map(), this._sdkState = i3, this._dispatcher = r2, this._logger = s4, this.apiClient = new ct$1(e4, { session: n2, sdkState: i3, dispatcher: r2, logger: s4, useFetchCompat: a4 }), this.websocketClient = new Lr$1(e4, { sdkState: i3, dispatcher: r2, logger: s4 }), this.websocketClient.on("message", function(e5) {
      if (e5.payload.unread_cnt && c3._dispatcher.dispatch(new xr$1(e5.payload.unread_cnt)), e5.requestId) {
        if (c3._ackStateMap.has(e5.requestId)) {
          var t5 = c3._ackStateMap.get(e5.requestId);
          "EROR" !== e5.code ? t5.resolve(e5) : t5.reject(new b$2({ code: e5.payload.code, message: e5.payload.message }));
        }
      } else c3._dispatcher.dispatch(e5);
    }).on("close", function() {
      c3._ackStateMap.forEach(function(e5) {
        e5.reject(b$2.connectionClosed);
      }), c3._ackStateMap.clear();
    });
  }
  return e3.prototype._sendApiRequest = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this.apiClient.send(e4)];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, e3.prototype._sendWebsocketRequest = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i3, r2 = this;
      return s$1(this, function(s4) {
        if (!this._sdkState.websocket) throw b$2.connectionRequired;
        if (t4 = new rt$1(), e4.ackRequired) {
          i3 = function(i4, s5) {
            r2._ackStateMap.has(e4.requestId) && (r2._ackStateMap.delete(e4.requestId), n2 && (clearTimeout(n2), n2 = null), i4 ? (r2._logger.debug("fail websocket request", e4.requestId, i4), t4.reject(i4)) : (r2._logger.debug("receive websocket ack", e4.requestId, e4), r2._logger.debug("receive websocket ack", s5), t4.resolve(s5)));
          };
          try {
            n2 = setTimeout(function() {
              return i3(b$2.noAckTimeout);
            }, this._sdkState.websocket.responseTimeout), this._ackStateMap.set(e4.requestId, { resolve: function(e5) {
              return i3(void 0, e5);
            }, reject: function(e5) {
              return i3(e5);
            } }), this.websocketClient.send(e4);
          } catch (e5) {
            i3(e5);
          }
        } else try {
          this.websocketClient.send(e4), t4.resolve();
        } catch (e5) {
          t4.reject(e5);
        }
        return [2, t4.promise];
      });
    });
  }, e3.prototype.send = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e4 instanceof Fe$2 ? [4, this._sendApiRequest(e4)] : [3, 2];
          case 1:
          case 3:
            return [2, t4.sent()];
          case 2:
            return e4 instanceof Ge$1 ? [4, this._sendWebsocketRequest(e4)] : [3, 4];
          case 4:
            throw b$2.invalidParameters;
        }
      });
    });
  }, e3.prototype.cancel = function(e4) {
    this.apiClient.cancel(e4);
  }, e3.prototype.cancelAll = function() {
    this.apiClient.cancelAll();
  }, e3;
}();
!function(e3) {
  e3[e3.NONE = 0] = "NONE", e3[e3.INITIALIZED = 1] = "INITIALIZED", e3[e3.CONNECTING = 2] = "CONNECTING", e3[e3.CONNECTED = 3] = "CONNECTED", e3[e3.RECONNECTING = 4] = "RECONNECTING", e3[e3.INTERNAL_DISCONNECTED = 5] = "INTERNAL_DISCONNECTED", e3[e3.EXTERNAL_DISCONNECTED = 6] = "EXTERNAL_DISCONNECTED", e3[e3.LOGOUT = 7] = "LOGOUT";
}(Rr$1 || (Rr$1 = {}));
var Pr$1, Mr$1, Fr$1 = function(e3) {
  function n2(t4) {
    var n3 = t4.stateType, i3 = e3.call(this) || this;
    return i3.stateType = n3, i3;
  }
  return t$2(n2, e3), n2;
}(re), qr$1 = function(e3) {
  function n2() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  return t$2(n2, e3), n2;
}(re), Hr$1 = function(e3) {
  function n2() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  return t$2(n2, e3), n2;
}(re), Vr$1 = function(e3) {
  function n2() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  return t$2(n2, e3), n2;
}(re), zr$1 = function() {
  function e3(e4) {
    var t4, n2, i3, r2;
    this.isEnabled = null !== (t4 = e4.enabled) && void 0 !== t4 && t4, this.feedChannels = null !== (n2 = e4.feed_channels) && void 0 !== n2 ? n2 : {}, this.templateListToken = null !== (i3 = e4.template_list_token) && void 0 !== i3 ? i3 : null, this.settingsUpdatedAt = null !== (r2 = e4.settings_updated_at) && void 0 !== r2 ? r2 : 0;
  }
  return e3.payloadify = function(e4) {
    return se(oe({ enabled: e4.isEnabled, feed_channels: e4.feedChannels, template_list_token: e4.templateListToken, settings_updated_at: e4.settingsUpdatedAt }));
  }, e3;
}(), Gr$1 = function(e3) {
  return "sendbird@".concat(e3, "/changelog_include_chat_notifications");
}, jr$1 = function() {
  function e3(e4) {
    var t4;
    this.lastUpdatedAt = null !== (t4 = e4.last_updated_at) && void 0 !== t4 ? t4 : 0;
  }
  return e3.payloadify = function(e4) {
    return se(oe({ last_updated_at: e4.lastUpdatedAt }));
  }, e3;
}(), Kr$1 = function() {
  function e3(e4) {
    var t4;
    this.token = null !== (t4 = e4.template_list_token) && void 0 !== t4 ? t4 : "";
  }
  return e3.payloadify = function(e4) {
    return se(oe({ template_list_token: e4.token }));
  }, e3;
}(), Br$1 = function() {
  function e3(e4) {
    void 0 === e4 && (e4 = { min_stat_count: 100, min_interval: 10800, max_stat_count_per_request: 1e3, lower_threshold: 10, request_delay_range: 180 }), this.minStatCount = e4.min_stat_count, this.minInterval = 1e3 * e4.min_interval, this.maxStatCountPerRequest = e4.max_stat_count_per_request, this.lowerThreshold = e4.lower_threshold, this.requestDelayRange = 1e3 * e4.request_delay_range;
  }
  return e3.payloadify = function(e4) {
    return se(oe({ min_stat_count: e4.minStatCount, min_interval: e4.minInterval / 1e3, max_stat_count_per_request: e4.maxStatCountPerRequest, lower_threshold: e4.lowerThreshold, request_delay_range: e4.requestDelayRange / 1e3 }));
  }, e3;
}(), Qr$1 = function() {
  function e3(e4) {
    void 0 === e4 && (e4 = { default: { min_stat_count: 100, min_interval: 10800, max_stat_count_per_request: 1e3, lower_threshold: 10, request_delay_range: 180 } }), this.default = new Br$1(e4.default), this.realTime = new Br$1(e4.realtime);
  }
  return e3.payloadify = function(e4) {
    return se(oe({ default: Br$1.payloadify(e4.default), realtime: Br$1.payloadify(e4.realTime) }));
  }, e3;
}(), Wr$1 = 1048576, Zr$1 = 5;
!function(e3) {
  e3[e3.NONE = 0] = "NONE", e3[e3.INCLUDE_REPLY = 1] = "INCLUDE_REPLY", e3[e3.EXCLUDE_REPLY = 2] = "EXCLUDE_REPLY", e3[e3.INCLUDE_REPLY_TO_CHANNEL = 3] = "INCLUDE_REPLY_TO_CHANNEL";
}(Pr$1 || (Pr$1 = {})), function(e3) {
  e3[e3.NONE = 0] = "NONE", e3[e3.INCLUDE_REPLY = 1] = "INCLUDE_REPLY", e3[e3.EXCLUDE_REPLY = 2] = "EXCLUDE_REPLY", e3[e3.INCLUDE_REPLY_TO_CHANNEL = 3] = "INCLUDE_REPLY_TO_CHANNEL";
}(Mr$1 || (Mr$1 = {}));
var Yr$1 = function() {
  function e3(e4) {
    var t4, n2, i3, r2, s4, o2, a4, c3, u3;
    void 0 === e4 && (e4 = {}), this.emojiHash = e4.emoji_hash || "", this.uploadSizeLimit = e4.file_upload_size_limit ? e4.file_upload_size_limit * Wr$1 : Number.MAX_SAFE_INTEGER, this.useReaction = !!e4.use_reaction, this.applicationAttributes = null !== (t4 = e4.application_attributes) && void 0 !== t4 ? t4 : [], this.premiumFeatureList = null !== (n2 = e4.premium_feature_list) && void 0 !== n2 ? n2 : [], this.deviceTokenCache = this.applicationAttributes.includes("sdk_device_token_cache"), this.enabledChannelMemberShipHistory = this.applicationAttributes.includes("channel_membership_history"), this.multipleFilesMessageFileCountLimit = null !== (i3 = e4.multiple_file_send_max_size) && void 0 !== i3 ? i3 : 5, this.allowSdkStatsUpload = null === (r2 = e4.allow_sdk_log_ingestion) || void 0 === r2 || r2, this.unreadCountThreadingPolicy = null !== (s4 = e4.unread_cnt_threading_policy) && void 0 !== s4 ? s4 : Pr$1.NONE, this.lastMessageThreadingPolicy = null !== (o2 = e4.last_msg_threading_policy) && void 0 !== o2 ? o2 : Mr$1.NONE, this.uikitConfigInfo = new jr$1(null !== (a4 = e4.uikit_config) && void 0 !== a4 ? a4 : {}), this.notificationInfo = e4.notifications ? new zr$1(e4.notifications) : null, this.messageTemplateInfo = e4.message_template ? new Kr$1(e4.message_template) : null, this.statConfigInfo = e4.log_publish_config ? new Qr$1(e4.log_publish_config) : new Qr$1(), this.disableSuperGroupMack = null !== (c3 = e4.disable_supergroup_mack) && void 0 !== c3 && c3, this.configSyncNeeded = null !== (u3 = e4.config_sync_needed) && void 0 !== u3 && u3;
  }
  return e3.payloadify = function(e4) {
    return se(oe({ emoji_hash: e4.emojiHash, file_upload_size_limit: e4.uploadSizeLimit / Wr$1, application_attributes: e4.applicationAttributes, premium_feature_list: e4.premiumFeatureList, use_reaction: e4.useReaction, allow_sdk_log_ingestion: e4.allowSdkStatsUpload, unread_cnt_threading_policy: e4.unreadCountThreadingPolicy, last_msg_threading_policy: e4.lastMessageThreadingPolicy, uikit_config: e4.uikitConfigInfo ? jr$1.payloadify(e4.uikitConfigInfo) : null, notifications: e4.notificationInfo ? zr$1.payloadify(e4.notificationInfo) : null, message_template: e4.messageTemplateInfo ? Kr$1.payloadify(e4.messageTemplateInfo) : null, log_publish_config: e4.statConfigInfo ? Qr$1.payloadify(e4.statConfigInfo) : null, disable_supergroup_mack: e4.disableSuperGroupMack, config_sync_needed: e4.configSyncNeeded }));
  }, e3;
}(), Xr$1 = function(e3) {
  return "sendbird@".concat(e3, "/app_configs_info");
}, Jr$1 = function() {
  function e3(e4) {
    this._iid = "", this._iid = e4;
  }
  return e3.payloadify = function(e4) {
    return {};
  }, e3;
}(), $r$1 = function(e3) {
  function n2(t4) {
    var n3 = t4.userId, i3 = t4.metadata, r2 = e3.call(this) || this;
    return r2.method = ae.POST, r2.path = "".concat(ue, "/").concat(n3, "/metadata"), r2.params = { metadata: i3 }, r2;
  }
  return t$2(n2, e3), n2;
}(Fe$2), es$2 = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.metaData = n3, i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), ts$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.userId, i3 = t4.metadata, r2 = t4.upsert, s4 = e3.call(this) || this;
    return s4.method = ae.PUT, s4.path = "".concat(ue, "/").concat(n3, "/metadata"), s4.params = { metadata: i3, upsert: r2 }, s4;
  }
  return t$2(n2, e3), n2;
}(Fe$2), ns$2 = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.metadata = n3, i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), is$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.userId, i3 = t4.metadataKey, r2 = e3.call(this) || this;
    return r2.method = ae.DELETE, r2.path = "".concat(ue, "/").concat(n3, "/metadata/").concat(i3), r2;
  }
  return t$2(n2, e3), n2;
}(Fe$2);
!function(e3) {
  function n2() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(n2, e3);
}(qe$2);
var rs$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.userId, i3 = e3.call(this) || this;
    return i3.method = ae.DELETE, i3.path = "".concat(ue, "/").concat(n3, "/metadata"), i3;
  }
  return t$2(n2, e3), n2;
}(Fe$2);
!function(e3) {
  function n2() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(n2, e3);
}(qe$2);
var ss$2, os$2 = function(e3, t4) {
  var n2 = JSON.parse(JSON.stringify(e3));
  return n2._iid && delete n2._iid, t4 && t4(n2), n2;
}, as$2 = function(e3, t4) {
  var n2 = JSON.parse(JSON.stringify(e3));
  return n2;
}, cs$2 = function(e3) {
  return { do: function(t4) {
    e3 || t4();
  }, throw: function(t4) {
    if (!e3) throw t4;
  } };
};
!function(e3) {
  e3.ONLINE = "online", e3.OFFLINE = "offline", e3.NON_AVAILABLE = "nonavailable";
}(ss$2 || (ss$2 = {}));
var us$2, ls$2 = function(e3) {
  function i3(t4, n2) {
    var i4, r2, s4, o2, u3, l2, h4, d4, _2, f2, p2, E3, g2, v2 = this;
    return (v2 = e3.call(this, t4) || this).userId = null !== (r2 = null !== (i4 = n2.guest_id) && void 0 !== i4 ? i4 : n2.user_id) && void 0 !== r2 ? r2 : "", v2.nickname = null !== (o2 = null !== (s4 = n2.nickname) && void 0 !== s4 ? s4 : n2.name) && void 0 !== o2 ? o2 : "", v2.plainProfileUrl = null !== (l2 = null !== (u3 = n2.profile_url) && void 0 !== u3 ? u3 : n2.image) && void 0 !== l2 ? l2 : "", v2.requireAuth = null !== (h4 = n2.require_auth_for_profile_image) && void 0 !== h4 && h4, v2.metaData = null !== (d4 = n2.metadata) && void 0 !== d4 ? d4 : {}, v2.connectionStatus = ss$2.NON_AVAILABLE, T$2(ss$2, n2.is_online) ? v2.connectionStatus = n2.is_online : S$1("boolean", n2.is_online) && (v2.connectionStatus = n2.is_online ? ss$2.ONLINE : ss$2.OFFLINE), v2.isActive = null === (_2 = n2.is_active) || void 0 === _2 || _2, v2.lastSeenAt = null !== (f2 = n2.last_seen_at) && void 0 !== f2 ? f2 : null, v2.preferredLanguages = n2.preferred_languages ? c([], a$1(n2.preferred_languages), false) : null, v2.friendDiscoveryKey = null !== (p2 = n2.friend_discovery_key) && void 0 !== p2 ? p2 : null, v2.friendName = null !== (E3 = n2.friend_name) && void 0 !== E3 ? E3 : null, v2._hashValue = v2._generateHashValue(), v2._updatedAt = null !== (g2 = n2.updatedat) && void 0 !== g2 ? g2 : 0, v2;
  }
  return t$2(i3, e3), i3.payloadify = function(t4) {
    return se(oe(n$2(n$2({}, e3.payloadify.call(this, t4)), { user_id: t4.userId, nickname: t4.nickname, profile_url: t4.plainProfileUrl, require_auth_for_profile_image: t4.requireAuth, metadata: t4.metaData, is_online: t4.connectionStatus, is_active: t4.isActive, last_seen_at: t4.lastSeenAt, preferred_languages: t4.preferredLanguages, friend_discovery_key: t4.friendDiscoveryKey, friend_name: t4.friendName })));
  }, i3._buildUserFromSerializedData = function(e4) {
    var t4 = as$2(e4);
    return new i3(t4._iid, i3.payloadify(t4));
  }, i3.prototype._generateHashValue = function() {
    for (var e4, t4 = JSON.stringify({ userId: this.userId, nickname: this.nickname, plainProfileUrl: this.plainProfileUrl, friendDiscoveryKey: this.friendDiscoveryKey, friendName: this.friendName, metaData: JSON.stringify(this.metaData), performanceLanguages: null === (e4 = this.preferredLanguages) || void 0 === e4 ? void 0 : e4.toString(), requireAuth: this.requireAuth }), n2 = 0, i4 = 0; i4 < t4.length; i4++) {
      n2 = (n2 << 5) - n2 + t4.charCodeAt(i4), n2 |= 0;
    }
    return n2;
  }, Object.defineProperty(i3.prototype, "profileUrl", { get: function() {
    var e4 = uo.of(this._iid).sessionManager;
    return this.requireAuth && e4.ekey ? "".concat(this.plainProfileUrl, "?auth=").concat(e4.ekey) : this.plainProfileUrl;
  }, enumerable: false, configurable: true }), i3.prototype.serialize = function() {
    return os$2(this);
  }, i3.prototype._isValidMetaData = function(e4) {
    return !Array.isArray(e4) && Object.keys(e4).length > 0 && Object.keys(e4).map(function(t4) {
      return e4[t4];
    }).every(function(e5) {
      return S$1("string", e5);
    });
  }, i3.prototype._applyMetaData = function(e4, t4) {
    var n2 = this;
    void 0 === t4 && (t4 = false), Object.keys(e4).forEach(function(i4) {
      t4 ? delete n2.metaData[i4] : n2.metaData[i4] = e4[i4];
    });
  }, i3.prototype.createMetaData = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i4, r2, o2, a4;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return cs$2(this._isValidMetaData(e4)).throw(b$2.invalidParameters), t4 = uo.of(this._iid), n2 = t4.sdkState, i4 = t4.requestQueue, r2 = new $r$1({ userId: n2.userId, metadata: e4 }), [4, i4.send(r2)];
          case 1:
            return o2 = s4.sent(), a4 = o2.as(es$2).metaData, this._applyMetaData(a4), [2, this.metaData];
        }
      });
    });
  }, i3.prototype.updateMetaData = function(e4, t4) {
    return void 0 === t4 && (t4 = false), r$1(this, void 0, void 0, function() {
      var n2, i4, r2, o2, a4, c3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return cs$2(this._isValidMetaData(e4)).throw(b$2.invalidParameters), n2 = uo.of(this._iid), i4 = n2.sdkState, r2 = n2.requestQueue, o2 = new ts$2({ userId: i4.userId, metadata: e4, upsert: t4 }), [4, r2.send(o2)];
          case 1:
            return a4 = s4.sent(), c3 = a4.as(ns$2).metadata, this._applyMetaData(c3), [2, this.metaData];
        }
      });
    });
  }, i3.prototype.deleteMetaData = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i4, r2, o2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return cs$2(S$1("string", e4)).throw(b$2.invalidParameters), t4 = uo.of(this._iid), n2 = t4.sdkState, i4 = t4.requestQueue, r2 = new is$2({ userId: n2.userId, metadataKey: e4 }), [4, i4.send(r2)];
          case 1:
            return s4.sent(), this._applyMetaData(((o2 = {})[e4] = true, o2), true), [2, this.metaData];
        }
      });
    });
  }, i3.prototype.deleteAllMetaData = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, i4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e4 = uo.of(this._iid), t4 = e4.sdkState, n2 = e4.requestQueue, i4 = new rs$2({ userId: t4.userId }), [4, n2.send(i4)];
          case 1:
            return r2.sent(), this.metaData = {}, [2];
        }
      });
    });
  }, i3;
}(Jr$1), hs$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.userProfile, i3 = e3.call(this) || this;
    return i3.userProfile = n3, i3;
  }
  return t$2(n2, e3), n2;
}(re), ds$2 = function() {
  function e3(e4, t4) {
    var n2, i3, r2, s4, o2, a4, c3, u3, l2, h4, d4, _2, f2, p2;
    this._iid = e4, this.appInfo = new Yr$1(t4), this.user = new ls$2(e4, t4), this.connectedAt = null !== (n2 = t4.login_ts) && void 0 !== n2 ? n2 : 0, this.firstConnectedAt = 0, this.pingInterval = null !== (i3 = t4.ping_interval) && void 0 !== i3 ? i3 : 15e3, this.pongTimeout = null !== (r2 = t4.pong_timeout) && void 0 !== r2 ? r2 : 5e3, this.reconnectInterval = null !== (o2 = null === (s4 = t4.reconnect) || void 0 === s4 ? void 0 : s4.interval) && void 0 !== o2 ? o2 : 3e3, this.reconnectMaxInterval = null !== (c3 = null === (a4 = t4.reconnect) || void 0 === a4 ? void 0 : a4.max_interval) && void 0 !== c3 ? c3 : 6e4, this.reconnectRetryCount = null !== (l2 = null === (u3 = t4.reconnect) || void 0 === u3 ? void 0 : u3.retry_cnt) && void 0 !== l2 ? l2 : 5, this.reconnectIntervalMultiple = null !== (d4 = null === (h4 = t4.reconnect) || void 0 === h4 ? void 0 : h4.mul) && void 0 !== d4 ? d4 : 2, this.maxUnreadCountOnSuperGroup = null !== (_2 = t4.max_unread_cnt_on_super_group) && void 0 !== _2 ? _2 : 100, this.profileImageEncryption = !!t4.profile_image_encryption, this.concurrentCallLimit = null !== (f2 = t4.concurrent_call_limit) && void 0 !== f2 ? f2 : 5, this.backOffDelay = null !== (p2 = t4.back_off_delay) && void 0 !== p2 ? p2 : 100;
  }
  return e3.payloadify = function(e4) {
    return se(oe(n$2(n$2(n$2({}, ls$2.payloadify(e4.user)), Yr$1.payloadify(e4.appInfo)), { login_ts: e4.connectedAt, ping_interval: e4.pingInterval, pong_timeout: e4.pongTimeout, reconnect: { interval: e4.reconnectInterval, max_interval: e4.reconnectMaxInterval, retry_cnt: e4.reconnectRetryCount, mul: e4.reconnectIntervalMultiple }, max_unread_cnt_on_super_group: e4.maxUnreadCountOnSuperGroup, profile_image_encryption: e4.profileImageEncryption, concurrent_call_limit: e4.concurrentCallLimit, back_off_delay: e4.backOffDelay })));
  }, e3.prototype.apply = function() {
    var e4 = this.reconnectInterval, t4 = this.reconnectMaxInterval, n2 = this.reconnectIntervalMultiple, i3 = uo.of(this._iid);
    i3.sdkState.websocket && (i3.sdkState.websocket.pingInterval = 1e3 * this.pingInterval, i3.sdkState.websocket.pongTimeout = 1e3 * this.pongTimeout, i3.sdkState.websocket.reconnectMaxRetry = this.reconnectRetryCount, i3.sdkState.websocket.reconnectRetryStrategy = { calcTimeout: function(i4) {
      return i4 > 0 ? 1e3 * Math.min(e4 * Math.pow(n2, i4 - 1), t4) : 10;
    } }), i3.appInfo = this.appInfo, i3.sessionManager.currentUser = this.user, i3.connectedAt = this.connectedAt, this.firstConnectedAt || (i3.firstConnectedAt = this.connectedAt), i3.maxSuperGroupChannelUnreadCount = this.maxUnreadCountOnSuperGroup, i3.concurrentCallLimit = this.concurrentCallLimit, i3.backOffDelay = this.backOffDelay, i3.dispatcher.dispatch(new hs$2({ userProfile: this }));
  }, e3;
}(), _s$2 = function(e3) {
  function i3(t4) {
    var i4 = t4.request, r2 = void 0 === i4 || i4, s4 = t4.features, o2 = void 0 === s4 ? {} : s4, a4 = t4.options, c3 = void 0 === a4 ? {} : a4, u3 = t4.statConfigInfo, l2 = e3.call(this) || this;
    return l2.request = r2, l2.features = n$2({ localCache: true, notification: true }, o2), l2.options = n$2({ ingestion: true }, c3), l2.statConfigInfo = u3, l2;
  }
  return t$2(i3, e3), i3;
}(re), fs$2 = function(e3) {
  function n2(t4) {
    var n3 = e3.call(this) || this;
    return n3.configSyncNeeded = false, n3.configSyncNeeded = t4, n3;
  }
  return t$2(n2, e3), n2;
}(re), ps$2 = function(e3) {
  function i3(t4, n2, i4) {
    var r2, s4, o2, a4, c3 = this;
    return (c3 = e3.call(this, t4, n2, i4) || this).error = null, c3.services = [], c3.userProfile = new ds$2(t4, i4), c3.deviceTokenLastDeletedAt = null !== (r2 = i4.device_token_last_deleted_at) && void 0 !== r2 ? r2 : 0, c3.key = null !== (s4 = i4.key) && void 0 !== s4 ? s4 : "", c3.ekey = null !== (o2 = i4.ekey) && void 0 !== o2 ? o2 : "", c3.error = i4.error ? new b$2(i4) : null, c3.services = null !== (a4 = i4.services) && void 0 !== a4 ? a4 : [], c3;
  }
  return t$2(i3, e3), i3.asError = function(e4) {
    return new i3("", "LOGI", n$2({ user_id: "", error: true }, e4));
  }, i3.prototype.applyTo = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return this.error ? [3, 4] : (t4 = uo.of(e4)) ? (n2 = t4.sessionManager, i4 = t4.dispatcher, [4, n2.login(this)]) : [3, 2];
          case 1:
            return r2.sent(), this.userProfile.apply(), i4.dispatch(new fs$2(this.userProfile.appInfo.configSyncNeeded)), i4.dispatch(new _s$2({ request: this.userProfile.appInfo.applicationAttributes.includes("allow_sdk_request_log_publish"), features: { localCache: this.userProfile.appInfo.applicationAttributes.includes("allow_sdk_feature_local_cache_log_publish"), notification: this.userProfile.appInfo.applicationAttributes.includes("allow_sdk_noti_stats_log_publish") }, options: { ingestion: this.userProfile.appInfo.allowSdkStatsUpload }, statConfigInfo: this.userProfile.appInfo.statConfigInfo })), [3, 3];
          case 2:
            throw b$2.lostInstance;
          case 3:
            return [3, 5];
          case 4:
            throw this.error;
          case 5:
            return [2];
        }
      });
    });
  }, i3;
}(ze$2), Es$2 = function() {
  function e3() {
    this.type = Rr$1.NONE, this.name = "none";
  }
  return e3.prototype.run = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2];
      });
    });
  }, e3.prototype.onConnect = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2];
      });
    });
  }, e3.prototype.onReconnect = function(e4, t4) {
    return t4.resetReconnectCount, r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2];
      });
    });
  }, e3.prototype.onDisconnect = function(e4, t4) {
    return t4.error, t4.autoReconnect, t4.cause, r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2];
      });
    });
  }, e3.prototype.onDisconnectWebSocket = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2];
      });
    });
  }, e3.prototype.onLogout = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2];
      });
    });
  }, e3;
}(), gs$2 = function(e3) {
  function n2(t4) {
    void 0 === t4 && (t4 = {});
    var n3, i3 = this;
    return (i3 = e3.call(this) || this).type = Rr$1.LOGOUT, i3.name = "logout", i3._wasPreviouslyConnected = null === (n3 = t4.wasPreviouslyConnected) || void 0 === n3 || n3, i3;
  }
  return t$2(n2, e3), n2.prototype.run = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3, i3 = this;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return t4 = Date.now(), n3 = e4.sdkState.userId, [4, e4.logout()];
          case 1:
            return o2.sent(), [4, e4.changeState(new Os$2(), t4)];
          case 2:
            return o2.sent(), this._wasPreviouslyConnected && kr$1(function() {
              return r$1(i3, void 0, void 0, function() {
                return s$1(this, function(t5) {
                  return e4.connectionHandlers.forEach(function(e5) {
                    e5.onDisconnected && e5.onDisconnected(n3);
                  }), [2];
                });
              });
            }), [2];
        }
      });
    });
  }, n2;
}(Es$2), vs$2 = function(e3) {
  function n2() {
    var t4 = e3.call(this) || this;
    return t4.type = Rr$1.EXTERNAL_DISCONNECTED, t4.name = "externaldisconnected", t4;
  }
  return t$2(n2, e3), n2.prototype.run = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, e4.disconnect()];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, n2.prototype.onConnect = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return n3 = Date.now(), [4, e4.disconnect()];
          case 1:
            return i3.sent(), [4, e4.changeState(new Cs$2({ authToken: t4 }), n3)];
          case 2:
            return i3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onReconnect = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new Ss$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onLogout = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new gs$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2;
}(Es$2), bs$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.autoReconnect, i3 = e3.call(this) || this;
    return i3.type = Rr$1.INTERNAL_DISCONNECTED, i3.name = "internaldisconnected", i3._autoReconnect = false, i3._autoReconnect = n3, i3;
  }
  return t$2(n2, e3), n2.prototype.run = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.disconnect()];
          case 1:
            return n3.sent(), this._autoReconnect ? [4, e4.changeState(new Ss$2(), t4)] : [3, 3];
          case 2:
            n3.sent(), n3.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, n2.prototype.onConnect = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return n3 = Date.now(), [4, e4.disconnect()];
          case 1:
            return i3.sent(), [4, e4.changeState(new Cs$2({ authToken: t4 }), n3)];
          case 2:
            return i3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onReconnect = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new Ss$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onDisconnectWebSocket = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new vs$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onLogout = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new gs$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2;
}(Es$2), ms$2 = function(e3) {
  return r$1(void 0, void 0, void 0, function() {
    return s$1(this, function(t4) {
      return [2, new Promise(function(t5) {
        return setTimeout(t5, e3);
      })];
    });
  });
}, ys$2 = function() {
  function e3() {
  }
  return e3.prototype.calcTimeout = function() {
    return 0;
  }, e3;
}(), ws$2 = function(e3, t4, n2) {
  return void 0 === n2 && (n2 = new ys$2()), r$1(void 0, void 0, void 0, function() {
    var i3, r2, o2, a4, c3, u3;
    return s$1(this, function(s4) {
      switch (s4.label) {
        case 0:
          i3 = 0, r2 = null, o2 = function(e4) {
            return r2 = null != e4 ? e4 : new Error("Halted");
          }, a4 = function() {
            i3 = 0;
          }, s4.label = 1;
        case 1:
          if (!(-1 === t4 || i3 < t4)) return [3, 9];
          s4.label = 2;
        case 2:
          return s4.trys.push([2, 4, , 8]), [4, e3(o2, a4)];
        case 3:
          if (c3 = s4.sent(), r2) throw r2;
          return [2, c3];
        case 4:
          if (u3 = s4.sent(), r2) return [3, 6];
          if (++i3 === t4) throw u3;
          return [4, ms$2(n2.calcTimeout(i3))];
        case 5:
          return s4.sent(), [3, 7];
        case 6:
          throw r2;
        case 7:
          return [3, 8];
        case 8:
          return [3, 1];
        case 9:
          throw "It should not happen.";
      }
    });
  });
}, Ss$2 = function(e3) {
  function n2() {
    var t4 = null !== e3 && e3.apply(this, arguments) || this;
    return t4.type = Rr$1.RECONNECTING, t4.name = "reconnecting", t4._callbacks = [], t4;
  }
  return t$2(n2, e3), n2.prototype._halt = function(e4) {
    this._haltConnect && (this._haltConnect(e4), this._haltConnect = void 0);
  }, n2.prototype._flushCallbacks = function(e4) {
    this._haltConnect = void 0, this._resetConnect = void 0, this._callbacks.forEach(function(t4) {
      return t4(e4);
    });
  }, n2.prototype.run = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3, i3, o2, a4, c3, l2 = this;
      return s$1(this, function(h4) {
        switch (h4.label) {
          case 0:
            t4 = Date.now(), n3 = new rt$1(), this._callbacks.push(function(e5) {
              return e5 ? n3.reject(e5) : n3.resolve();
            }), kr$1(function() {
              return r$1(l2, void 0, void 0, function() {
                return s$1(this, function(t5) {
                  return e4.connectionHandlers.forEach(function(e5) {
                    e5.onReconnectStarted && e5.onReconnectStarted();
                  }), [2];
                });
              });
            }), h4.label = 1;
          case 1:
            return h4.trys.push([1, 4, , 9]), i3 = e4.sdkState.websocket, o2 = i3.reconnectMaxRetry, a4 = i3.reconnectRetryStrategy, [4, ws$2(function(t5, n4) {
              return r$1(l2, void 0, void 0, function() {
                var i4;
                return s$1(this, function(r2) {
                  switch (r2.label) {
                    case 0:
                      this._haltConnect = t5, this._resetConnect = n4, r2.label = 1;
                    case 1:
                      return r2.trys.push([1, 3, , 4]), [4, e4.connect()];
                    case 2:
                      return r2.sent(), [3, 4];
                    case 3:
                      if (i4 = r2.sent(), e4.clearLoginTimer(), i4 instanceof b$2) {
                        if (i4.code === u$1.CONNECTION_CANCELED) return t5(i4), [2];
                        if (i4.isSessionExpiredError || i4.isSessionInvalidatedError) return t5(i4), [2];
                      }
                      throw i4;
                    case 4:
                      return [2];
                  }
                });
              });
            }, o2, a4)];
          case 2:
            return h4.sent(), [4, e4.changeState(new Ts$2(), t4)];
          case 3:
            return h4.sent(), this._flushCallbacks(), kr$1(function() {
              return r$1(l2, void 0, void 0, function() {
                return s$1(this, function(t5) {
                  return e4.connectionHandlers.forEach(function(e5) {
                    e5.onReconnectSucceeded && e5.onReconnectSucceeded();
                  }), [2];
                });
              });
            }), [3, 9];
          case 4:
            return c3 = h4.sent(), v$2(c3) ? [3, 7] : c3 instanceof b$2 ? c3.code === u$1.CONNECTION_CANCELED ? [3, 6] : [4, e4.changeState(new bs$2({ autoReconnect: false }), t4)] : [3, 6];
          case 5:
            h4.sent(), h4.label = 6;
          case 6:
            return this._flushCallbacks(c3), kr$1(function() {
              return r$1(l2, void 0, void 0, function() {
                return s$1(this, function(t5) {
                  return e4.connectionHandlers.forEach(function(e5) {
                    e5.onReconnectFailed && e5.onReconnectFailed();
                  }), [2];
                });
              });
            }), [3, 8];
          case 7:
            throw c3;
          case 8:
            return [3, 9];
          case 9:
            return [2, n3.promise];
        }
      });
    });
  }, n2.prototype.onConnect = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(i3) {
        return n3 = new rt$1(), this._halt(b$2.connectionCanceled), e4.cancelConnectForRetry(), this._callbacks.push(function() {
          var i4 = Date.now();
          e4.changeState(new Cs$2({ authToken: t4 }), i4).then(function() {
            n3.resolve();
          }).catch(function(e5) {
            n3.reject(e5);
          });
        }), [2, n3.promise];
      });
    });
  }, n2.prototype.onReconnect = function(e4, t4) {
    var n3 = t4.resetReconnectCount, i3 = void 0 !== n3 && n3;
    return r$1(this, void 0, void 0, function() {
      var e5;
      return s$1(this, function(t5) {
        return e5 = new rt$1(), this._resetConnect && i3 && this._resetConnect(), this._callbacks.push(function(t6) {
          return t6 ? e5.reject(t6) : e5.resolve();
        }), [2, e5.promise];
      });
    });
  }, n2.prototype.onDisconnect = function(e4, t4) {
    t4._error;
    var n3 = t4.autoReconnect, i3 = void 0 === n3 || n3;
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n4) {
        switch (n4.label) {
          case 0:
            return t5 = Date.now(), this._halt(b$2.connectionCanceled), [4, e4.changeState(new bs$2({ autoReconnect: i3 }), t5)];
          case 1:
            return n4.sent(), [2];
        }
      });
    });
  }, n2.prototype.onDisconnectWebSocket = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), this._halt(b$2.connectionCanceled), [4, e4.changeState(new vs$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onLogout = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), this._halt(b$2.connectionCanceled), [4, e4.changeState(new gs$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2;
}(Es$2), Ts$2 = function(e3) {
  function n2() {
    var t4 = null !== e3 && e3.apply(this, arguments) || this;
    return t4.type = Rr$1.CONNECTED, t4.name = "connected", t4;
  }
  return t$2(n2, e3), n2.prototype.onReconnect = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.disconnect()];
          case 1:
            return n3.sent(), [4, e4.changeState(new Ss$2(), t4)];
          case 2:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onDisconnect = function(e4, t4) {
    var n3 = t4.autoReconnect;
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t5 = Date.now(), [4, e4.changeState(new bs$2({ autoReconnect: n3 }), t5)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onDisconnectWebSocket = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new vs$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onLogout = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new gs$2(), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2;
}(Es$2);
!function(e3) {
  e3.ExternalSetBackground = "ExternalSetBackground", e3.ExternalDisconnectWebSocket = "ExternalDisconnectWebSocket";
}(us$2 || (us$2 = {}));
var Ns$2 = function() {
  function e3(e4, t4) {
    var n2 = t4.sdkState, i3 = t4.cacheContext, r2 = t4.connectionHandlers, s4 = t4.sessionManager, o2 = t4.websocketClient, a4 = t4.dispatcher, c3 = t4.logger, u3 = t4.disableWebSocketCloseEventHandling, l2 = void 0 !== u3 && u3;
    this._disableWebSocketCloseEventHandling = false, this._webSocketClosedCause = null, this._logger = c3, this._disableWebSocketCloseEventHandling = l2, this._context = new Ls$2(e4, { sdkState: n2, cacheContext: i3, connectionHandlers: r2, sessionManager: s4, websocketClient: o2, dispatcher: a4, logger: c3 }), this._sdkState = n2, this._sessionManager = s4, this._websocketClient = o2;
  }
  return e3.prototype._registerEventDispatcher = function() {
    var e4 = this;
    this._disableWebSocketCloseEventHandling || (this._clearEventDispatcher(), this._sessionEventDispatcherContext = this._sessionManager.on("refresh", function() {
      e4.isConnecting || e4.isConnected || (e4._logger.debug("try reconnect by session key refresh"), Dr$1(function() {
        return r$1(e4, void 0, void 0, function() {
          return s$1(this, function(e5) {
            switch (e5.label) {
              case 0:
                return [4, this.reconnect()];
              case 1:
                return e5.sent(), [2];
            }
          });
        });
      }));
    }), this._websocketEventDispatcherContext = this._websocketClient.on("close", function() {
      "foreground" !== e4._sdkState.appState || e4._webSocketClosedCause || Dr$1(function() {
        return r$1(e4, void 0, void 0, function() {
          return s$1(this, function(e5) {
            switch (e5.label) {
              case 0:
                return this._sessionManager.isSessionKeyRefreshing ? [3, 2] : (this._logger.debug("try reconnect by websocket connection closed"), [4, this.reconnect()]);
              case 1:
                return e5.sent(), [3, 4];
              case 2:
                return [4, this.disconnectWebSocket()];
              case 3:
                e5.sent(), e5.label = 4;
              case 4:
                return [2];
            }
          });
        });
      });
    }));
  }, e3.prototype._clearEventDispatcher = function() {
    this._sessionEventDispatcherContext && (this._sessionEventDispatcherContext.close(), this._sessionEventDispatcherContext = void 0), this._websocketEventDispatcherContext && (this._websocketEventDispatcherContext.close(), this._websocketEventDispatcherContext = void 0);
  }, Object.defineProperty(e3.prototype, "isConnected", { get: function() {
    return this._context.currentState.type === Rr$1.CONNECTED;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isConnecting", { get: function() {
    var e4 = this._context.currentState;
    return e4.type === Rr$1.CONNECTING || e4.type === Rr$1.RECONNECTING;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "websocketClient", { get: function() {
    return this._websocketClient;
  }, enumerable: false, configurable: true }), e3.prototype.connect = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return t4 = this._context.currentState, this._webSocketClosedCause = null, [4, t4.onConnect(this._context, e4)];
          case 1:
            return n2.sent(), this._registerEventDispatcher(), [2];
        }
      });
    });
  }, e3.prototype.reconnect = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e4 = this._context.currentState, this._webSocketClosedCause = null, [4, e4.onReconnect(this._context, {})];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.resetAndReconnect = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e4 = this._context.currentState, this._webSocketClosedCause = null, [4, e4.onReconnect(this._context, { resetReconnectCount: true })];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.background = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e4 = this._context.currentState, this._webSocketClosedCause = us$2.ExternalSetBackground, [4, e4.onDisconnect(this._context, { autoReconnect: false, cause: this._webSocketClosedCause })];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.disconnect = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._context.currentState.onDisconnect(this._context, { error: e4, autoReconnect: true, cause: this._webSocketClosedCause })];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.disconnectWebSocket = function(e4) {
    return void 0 === e4 && (e4 = false), r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return t4 = this._context.currentState, e4 && (this._webSocketClosedCause = us$2.ExternalDisconnectWebSocket), [4, t4.onDisconnectWebSocket(this._context, { cause: this._webSocketClosedCause })];
          case 1:
            return n2.sent(), [2];
        }
      });
    });
  }, e3.prototype.logout = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return t4 = this._context.currentState, this._clearEventDispatcher(), [4, t4.onLogout(this._context, e4)];
          case 1:
            return n2.sent(), [2];
        }
      });
    });
  }, e3;
}(), Cs$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.authToken, i3 = e3.call(this) || this;
    return i3.type = Rr$1.CONNECTING, i3.name = "connecting", i3._authToken = "", i3._callbacks = [], i3._authToken = n3, i3;
  }
  return t$2(n2, e3), n2.prototype._halt = function(e4) {
    this._haltConnect && (this._haltConnect(e4), this._haltConnect = void 0);
  }, n2.prototype._flushCallbacks = function(e4) {
    this._haltConnect = void 0, this._callbacks.forEach(function(t4) {
      return t4(e4);
    });
  }, n2.prototype.run = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3, i3, o2 = this;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            t4 = Date.now(), n3 = new rt$1(), this._callbacks.push(function(e5) {
              return e5 ? n3.reject(e5) : n3.resolve();
            }), a4.label = 1;
          case 1:
            return a4.trys.push([1, 4, , 10]), [4, ws$2(function(t5) {
              return r$1(o2, void 0, void 0, function() {
                var n4;
                return s$1(this, function(i4) {
                  switch (i4.label) {
                    case 0:
                      this._haltConnect = t5, i4.label = 1;
                    case 1:
                      return i4.trys.push([1, 3, , 4]), [4, e4.connect(this._authToken)];
                    case 2:
                      return i4.sent(), [3, 4];
                    case 3:
                      if (n4 = i4.sent(), e4.clearLoginTimer(), n4 instanceof b$2 && n4.code === u$1.CONNECTION_CANCELED) return t5(n4), [2];
                      throw n4;
                    case 4:
                      return [2];
                  }
                });
              });
            }, e4.sdkState.websocket.connectMaxRetry)];
          case 2:
            return a4.sent(), [4, e4.changeState(new Ts$2(), t4)];
          case 3:
            return a4.sent(), kr$1(function() {
              return r$1(o2, void 0, void 0, function() {
                return s$1(this, function(t5) {
                  return this._flushCallbacks(), e4.connectionHandlers.forEach(function(t6) {
                    t6.onConnected && t6.onConnected(e4.sdkState.userId);
                  }), [2];
                });
              });
            }), [3, 10];
          case 4:
            return i3 = a4.sent(), v$2(i3) ? [3, 8] : [4, e4.disconnect()];
          case 5:
            return a4.sent(), i3 instanceof b$2 ? i3.code === u$1.CONNECTION_CANCELED ? [3, 7] : [4, e4.changeState(new Os$2(), t4)] : [3, 7];
          case 6:
            a4.sent(), a4.label = 7;
          case 7:
            return kr$1(function() {
              return r$1(o2, void 0, void 0, function() {
                return s$1(this, function(e5) {
                  return this._flushCallbacks(i3), [2];
                });
              });
            }), [3, 9];
          case 8:
            throw i3;
          case 9:
            return [3, 10];
          case 10:
            return [2, n3.promise];
        }
      });
    });
  }, n2.prototype.onConnect = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var e5;
      return s$1(this, function(t4) {
        return e5 = new rt$1(), this._callbacks.push(function(t5) {
          return t5 ? e5.reject(t5) : e5.resolve();
        }), [2, e5.promise];
      });
    });
  }, n2.prototype.onDisconnect = function(e4, t4) {
    var n3 = t4.error, i3 = void 0 === n3 ? null : n3, o2 = t4.autoReconnect, a4 = void 0 !== o2 && o2, c3 = t4.cause, u3 = void 0 === c3 ? null : c3;
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n4) {
        switch (n4.label) {
          case 0:
            return t5 = Date.now(), this._halt(null != i3 ? i3 : As$2(u3)), e4.hasSession ? [4, e4.changeState(new bs$2({ autoReconnect: a4 }), t5)] : [3, 2];
          case 1:
            return n4.sent(), [3, 4];
          case 2:
            return [4, e4.changeState(new gs$2(), t5)];
          case 3:
            n4.sent(), n4.label = 4;
          case 4:
            return [2];
        }
      });
    });
  }, n2.prototype.onDisconnectWebSocket = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return this._halt(As$2((null == t4 ? void 0 : t4.cause) || null)), n3 = Date.now(), e4.hasSession ? [4, e4.changeState(new vs$2(), n3)] : [3, 2];
          case 1:
            return i3.sent(), [3, 4];
          case 2:
            return [4, e4.changeState(new gs$2(), n3)];
          case 3:
            i3.sent(), i3.label = 4;
          case 4:
            return [2];
        }
      });
    });
  }, n2.prototype.onLogout = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return n3 = Date.now(), this._halt(null != t4 ? t4 : b$2.connectionCanceled), [4, e4.changeState(new gs$2(), n3)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, n2;
}(Es$2);
function As$2(e3) {
  var t4 = b$2.connectionCanceled;
  if (e3) {
    var n2 = null;
    switch (e3) {
      case us$2.ExternalSetBackground:
        n2 = "Connection has been canceled due to the application having externally moved to background while in ConnectingState.";
        break;
      case us$2.ExternalDisconnectWebSocket:
        n2 = "Connection has been canceled because sb.disconnectWebSocket() was called while in ConnectingState.";
    }
    n2 && t4.setDetail(n2);
  }
  return t4;
}
var Is$2, Os$2 = function(e3) {
  function n2() {
    var t4 = null !== e3 && e3.apply(this, arguments) || this;
    return t4.type = Rr$1.INITIALIZED, t4.name = "initialized", t4;
  }
  return t$2(n2, e3), n2.prototype.onConnect = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return n3 = Date.now(), [4, e4.changeState(new Cs$2({ authToken: t4 }), n3)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, n2.prototype.onLogout = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = Date.now(), [4, e4.changeState(new gs$2({ wasPreviouslyConnected: false }), t4)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2;
}(Es$2), ks$2 = function(e3) {
  function n2() {
    return e3.call(this, { code: "PING", payload: { id: Date.now(), active: 1 }, ackRequired: false }) || this;
  }
  return t$2(n2, e3), n2;
}(Ge$1), Ds$2 = function() {
  function e3(e4) {
    var t4 = e4.pingDelegate, n2 = e4.sdkState, i3 = e4.logger;
    this.pingDelegate = t4, this.sdkState = n2, this._logger = i3;
  }
  return Object.defineProperty(e3.prototype, "isWaiting", { get: function() {
    return !!this._pingTimeoutTimer;
  }, enumerable: false, configurable: true }), e3.prototype.ping = function() {
    var e4, t4 = this;
    if (!this.sdkState.websocket) throw b$2.connectionRequired;
    var n2 = new ks$2();
    try {
      var i3 = null !== (e4 = this.sdkState.websocket.pongTimeout) && void 0 !== e4 ? e4 : 5e3;
      this._pingTimeoutTimer = setTimeout(function() {
        t4._logger.debug("pinger.ping() timeout"), t4.pingDelegate.error();
      }, i3), this.pingDelegate.send(n2), this._logger.debug("pinger.ping()");
    } catch (e5) {
      this._logger.debug("pinger.ping() error", e5), this._pingTimeoutTimer && (clearTimeout(this._pingTimeoutTimer), this._pingTimeoutTimer = void 0), this.pingDelegate.error();
    }
    return n2;
  }, e3.prototype.pong = function() {
    this._logger.debug("pinger.pong()"), this._pingTimeoutTimer && (clearTimeout(this._pingTimeoutTimer), this._pingTimeoutTimer = void 0);
  }, e3.prototype.refreshTimer = function() {
    var e4, t4 = this;
    if (!this.sdkState.websocket) throw b$2.connectionRequired;
    this._logger.debug("pinger.refreshTimer()");
    var n2 = null !== (e4 = this.sdkState.websocket.pingInterval) && void 0 !== e4 ? e4 : 15e3;
    this.stop(), this._pingTimer = setInterval(function() {
      t4.ping();
    }, n2);
  }, e3.prototype.start = function() {
    this._logger.debug("pinger.start()"), this.refreshTimer(), this.ping();
  }, e3.prototype.stop = function() {
    this._logger.debug("pinger.stop()"), this._pingTimer && (clearInterval(this._pingTimer), this._pingTimer = void 0), this._pingTimeoutTimer && (clearTimeout(this._pingTimeoutTimer), this._pingTimeoutTimer = void 0);
  }, e3;
}(), Rs$2 = ["premium_feature_list", "file_upload_size_limit", "application_attributes", "emoji_hash", "multiple_file_send_max_size", "notifications", "message_template"], Ls$2 = function(e3) {
  function n2(t4, n3) {
    var i3, r2 = n3.sdkState, s4 = n3.cacheContext, o2 = n3.connectionHandlers, a4 = n3.sessionManager, c3 = n3.websocketClient, u3 = n3.dispatcher, l2 = n3.logger, h4 = n3.entryState, d4 = void 0 === h4 ? new Os$2() : h4, _2 = this;
    return (_2 = e3.call(this) || this)._stateUpdatedAt = 0, _2._connectingAt = 0, _2._connectedAt = 0, _2._logiReceivedAt = 0, _2._connectionRequestQueue = [], _2._iid = t4, _2.sdkState = r2, _2.cacheContext = s4, _2.connectionHandlers = o2, _2._sessionManager = a4, _2._websocketClient = c3, _2._dispatcher = u3, _2._logger = l2, _2._currentState = d4, (null === (i3 = _2.sdkState.websocket) || void 0 === i3 ? void 0 : i3.pingerDisabled) || (_2._pinger = new Ds$2({ pingDelegate: { send: function(e4) {
      return _2._websocketClient.send(e4);
    }, error: function(e4) {
      return _2._websocketClient.error(e4);
    } }, sdkState: _2.sdkState, logger: l2 })), _2._websocketClient.on("open", function() {
      _2._connectedAt = Date.now(), _2._tryResolveConnectionRequest();
    }).on("message", function(e4) {
      if ("LOGI" === e4.code) _2.clearLoginTimer(), _2._dispatcher.dispatch(e4.as(ps$2));
    }).on("ping-refresh", function() {
      var e4;
      return null === (e4 = _2._pinger) || void 0 === e4 ? void 0 : e4.refreshTimer();
    }).on("pong", function() {
      var e4;
      return null === (e4 = _2._pinger) || void 0 === e4 ? void 0 : e4.pong();
    }).on("error", function() {
      var e4;
      return null === (e4 = _2._pinger) || void 0 === e4 ? void 0 : e4.stop();
    }).on("close", function() {
      _2._logiProcessingTimer = setTimeout(function() {
        _2._logiProcessingTimer = void 0, _2._unresolvedLogi || _2._rejectConnectionRequest(b$2.networkError);
      }, 500);
    }), _2._dispatcher.on(function(e4) {
      e4 instanceof ps$2 && (_2._unresolvedLogi = e4, _2._tryResolveConnectionRequest());
    }), _2;
  }
  return t$2(n2, e3), Object.defineProperty(n2.prototype, "currentState", { get: function() {
    return this._currentState;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "hasSession", { get: function() {
    return this._sessionManager.session.hasSession;
  }, enumerable: false, configurable: true }), n2.prototype.changeState = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 >= this._stateUpdatedAt ? (this._currentState = e4, this._stateUpdatedAt = t4, this._dispatcher.dispatch(new Fr$1({ stateType: e4.type })), this._logger.debug("connection state changes to ".concat(e4.name)), [4, this._currentState.run(this)]) : [3, 2];
          case 1:
            return n3.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, n2.prototype._tryResolveConnectionRequest = function() {
    var e4;
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t4 = this._unresolvedLogi, this._websocketClient.isOpen && t4 ? (this._unresolvedLogi = void 0, this._logiReceivedAt = Date.now(), t4.error ? [3, 2] : [4, t4.applyTo(this._iid)]) : [3, 3];
          case 1:
            return n3.sent(), this._statLogConnection(), null === (e4 = this._pinger) || void 0 === e4 || e4.start(), this._connectionRequestQueue.forEach(function(e5) {
              return e5.resolve();
            }), this._connectionRequestQueue = [], this.sdkState.appState = "foreground", [3, 3];
          case 2:
            this._sessionManager.session.authToken = void 0, t4.error.isSessionExpiredError || t4.error.isSessionInvalidatedError ? this._dispatcher.dispatch(new Ve$2({ reason: t4.error.code, message: t4.error.message })) : this._logger.warn("login failed: ".concat(t4.error)), this._rejectConnectionRequest(t4.error), n3.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, n2.prototype._rejectConnectionRequest = function(e4) {
    var t4;
    if (null === (t4 = this._pinger) || void 0 === t4 || t4.stop(), this.clearLoginTimer(), this._connectionRequestQueue.length > 0) {
      var n3 = this._connectionRequestQueue;
      this._connectionRequestQueue = [], n3.forEach(function(t5) {
        return t5.reject(e4);
      }), this._statLogConnection(e4);
    }
  }, n2.prototype._url = function(e4) {
    var t4, n3 = e4.configTs, i3 = this.sdkState, r2 = i3.appId, s4 = i3.appVersion, o2 = i3.userId, a4 = i3.extensions, c3 = i3.sendbirdRuntimeEnvironment, u3 = this.cacheContext.localCacheEnabled, l2 = this._sessionManager.session, d4 = null === (t4 = this.sdkState.websocket) || void 0 === t4 ? void 0 : t4.compression, _2 = !!(null != a4 ? a4 : {}).sb_uikit, f2 = it$1.userAgentWithExtension(a4);
    return "".concat(this.sdkState.websocket.host, "/?p=JS&pv=").concat(encodeURIComponent(h$1.OS_VERSION), "&sv=").concat(encodeURIComponent(h$1.SDK_VERSION), "&ai=").concat(r2).concat(s4 ? "&av=".concat(s4) : "").concat(l2.hasSession ? "" : "&user_id=".concat(encodeURIComponent(o2)), "&pmce=").concat(d4 ? 1 : 0, "&active=1&device_token_types=").concat(encodeURIComponent(["gcm", "huawei", "apns"].join(",")), "&SB-User-Agent=").concat(f2, "&SB-SDK-User-Agent=").concat(encodeURIComponent(it$1.sendbirdSdkUserAgentWithExtension(c3)), "&Request-Sent-Timestamp=").concat(Date.now().toString(), "&include_extra_data=").concat(encodeURIComponent(String(Rs$2))).concat(this._sessionManager.handler ? "&expiring_session=1" : "", "&use_local_cache=").concat(u3 ? 1 : 0, "&include_poll_details=1").concat(_2 ? "&uikit_config=1" : "", "&config_ts=").concat(n3);
  }, n2.prototype._statLogConnection = function(e4) {
    var t4;
    this._dispatcher.dispatch(new We$2(new $e$1({ type: Me$1.WEBSOCKET_CONNECT, data: { host_url: null === (t4 = this.sdkState.websocket) || void 0 === t4 ? void 0 : t4.host, success: !e4, latency: this._connectedAt > 0 ? this._connectedAt - this._connectingAt : Date.now() - this._connectingAt, logi_latency: this._logiReceivedAt > 0 ? this._logiReceivedAt - this._connectingAt : void 0, error_code: null == e4 ? void 0 : e4.code, error_description: null == e4 ? void 0 : e4.message } })));
  }, n2.prototype.connect = function(e4) {
    var t4;
    return void 0 === e4 && (e4 = ""), r$1(this, void 0, void 0, function() {
      var n3, i3, r2, o2, a4, c3 = this;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this._logiProcessingTimer && (clearTimeout(this._logiProcessingTimer), this._logiProcessingTimer = void 0, this._rejectConnectionRequest(b$2.connectionCanceled)), n3 = new rt$1(), this._connectionRequestQueue.push(n3), 1 !== this._connectionRequestQueue.length ? [3, 2] : (this._connectingAt = Date.now(), this._connectedAt = 0, this._logiReceivedAt = 0, this._loginTimer = setTimeout(function() {
              c3._loginTimer = void 0, c3._rejectConnectionRequest(b$2.loginTimeout);
            }, null === (t4 = this.sdkState.websocket) || void 0 === t4 ? void 0 : t4.responseTimeout), i3 = this._sessionManager.session, e4 && (i3.authToken = e4, i3.sessionKey = void 0), r2 = 0, [4, this.cacheContext.preference.get(Xr$1(this.sdkState.appId))]);
          case 1:
            (o2 = s4.sent()) && (r2 = o2.configTs), a4 = this._url({ configTs: r2 }), i3.sessionKey || i3.authToken ? this._websocketClient.connect(a4, JSON.stringify(i3.hasSession ? { auth: i3.sessionKey } : { token: i3.authToken })) : this._websocketClient.connect(a4, JSON.stringify({})), s4.label = 2;
          case 2:
            return [2, n3.promise];
        }
      });
    });
  }, n2.prototype.cancelConnectForRetry = function() {
    this._dispatcher.dispatch(ps$2.asError(b$2.connectionRenew));
  }, n2.prototype.disconnect = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._websocketClient.disconnect()];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, n2.prototype.logout = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this.sdkState.userId = void 0, this._unresolvedLogi = void 0, [4, this.disconnect()];
          case 1:
            return e4.sent(), [4, this._sessionManager.clear()];
          case 2:
            return e4.sent(), [2];
        }
      });
    });
  }, n2.prototype.clearLoginTimer = function() {
    this._loginTimer && (clearTimeout(this._loginTimer), this._loginTimer = void 0);
  }, n2;
}(ne), xs$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.appId, i3 = t4.userId, r2 = t4.includeUIKitConfig, s4 = void 0 !== r2 && r2, o2 = t4.localCacheEnabled, a4 = void 0 === o2 || o2, c3 = t4.expiringSession, u3 = void 0 === c3 || c3, l2 = t4.configTs, h4 = void 0 === l2 ? 0 : l2, d4 = e3.call(this) || this;
    return d4.path = "".concat(le, "/").concat(i3, "/authentication"), d4.method = ae.POST, d4.params = se({ expiring_session: !!u3, include_logi: true, include_extra_data: String(Rs$2), uikit_config: s4, use_local_cache: a4, app_id: n3, config_ts: h4 }), d4.requireAuth = false, d4;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Us$2 = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.logi = new ps$2(t4, "LOGI", n3), i3;
  }
  return t$2(n2, e3), n2;
}(qe$2);
!function(e3) {
  e3[e3.ALL = 0] = "ALL", e3[e3.WEBSOCKET = 1] = "WEBSOCKET", e3[e3.API = 2] = "API";
}(Is$2 || (Is$2 = {}));
var Ps$2, Ms$2, Fs$2 = [je$2, xs$2], qs$2 = function() {
  function e3(e4, t4) {
    var n2 = t4.session, i3 = t4.sdkState, r2 = t4.dispatcher, s4 = t4.logger, a4 = t4.useFetchCompat, c3 = void 0 !== a4 && a4, u3 = this;
    this._currentConnectionStateType = Rr$1.INITIALIZED, this._lazyCallQueue = [], this.commandRouter = new Ur$1(e4, { session: n2, sdkState: i3, dispatcher: r2, logger: s4, useFetchCompat: c3 }), this._session = n2, this._logger = s4, this._dispatcher = r2, this._dispatcher.on(function(e5) {
      var t5, n3, i4;
      if (e5 instanceof Fr$1) {
        var r3 = e5.stateType;
        switch (u3._currentConnectionStateType = r3, r3) {
          case Rr$1.CONNECTED:
            u3._resolveLazyCallQueue();
            break;
          case Rr$1.INITIALIZED:
          case Rr$1.INTERNAL_DISCONNECTED:
          case Rr$1.EXTERNAL_DISCONNECTED:
          case Rr$1.LOGOUT:
            u3._session.isRefreshing || u3._rejectLazyCallQueue((null === (i4 = u3._session) || void 0 === i4 ? void 0 : i4.hasSession) ? b$2.connectionClosed : b$2.connectionRequired);
        }
      } else if (e5 instanceof qr$1) u3._session.hasChatServicePermission || u3._resolveLazyCallQueue(Is$2.API);
      else if (e5 instanceof Hr$1 || e5 instanceof Vr$1) u3._rejectLazyCallQueue(b$2.connectionClosed);
      else if (e5 instanceof Ze$2) {
        var s5 = e5.request, a5 = e5.deferred, c4 = e5.error;
        try {
          for (var l2 = o(Fs$2), h4 = l2.next(); !h4.done; h4 = l2.next()) {
            if (s5 instanceof h4.value) return void a5.reject(c4);
          }
        } catch (e6) {
          t5 = { error: e6 };
        } finally {
          try {
            h4 && !h4.done && (n3 = l2.return) && n3.call(l2);
          } finally {
            if (t5) throw t5.error;
          }
        }
        u3._lazyCallQueue.push({ command: s5, deferred: a5 });
      }
    });
  }
  return Object.defineProperty(e3.prototype, "isReady", { get: function() {
    return this._currentConnectionStateType === Rr$1.CONNECTED;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isLazyCallActivated", { get: function() {
    return this._currentConnectionStateType === Rr$1.CONNECTING || this._currentConnectionStateType === Rr$1.RECONNECTING || this._session.isRefreshing;
  }, enumerable: false, configurable: true }), e3.prototype._classifyLazyCallQueueByScope = function(e4) {
    var t4, n2 = [], i3 = [];
    switch (e4) {
      case Is$2.ALL:
        t4 = null;
        break;
      case Is$2.WEBSOCKET:
        t4 = Ge$1;
        break;
      case Is$2.API:
        t4 = Fe$2;
    }
    var r2 = false;
    return this._lazyCallQueue.forEach(function(e5) {
      !t4 || e5.command instanceof t4 || (r2 = true), r2 ? i3.push(e5) : n2.push(e5);
    }), [n2, i3];
  }, e3.prototype._resolveLazyCallQueue = function(e4) {
    var t4 = this;
    void 0 === e4 && (e4 = Is$2.ALL);
    var n2 = a$1(this._classifyLazyCallQueueByScope(e4), 2), i3 = n2[0], o2 = n2[1];
    this._lazyCallQueue = o2, i3.forEach(function(e5) {
      return r$1(t4, void 0, void 0, function() {
        var t5, n3, i4, r2, o3;
        return s$1(this, function(s4) {
          switch (s4.label) {
            case 0:
              t5 = e5.command, n3 = e5.deferred, (i4 = e5.timeout) && clearTimeout(i4), s4.label = 1;
            case 1:
              return s4.trys.push([1, 3, , 4]), [4, this.send(t5)];
            case 2:
              return r2 = s4.sent(), n3.resolve(r2), [3, 4];
            case 3:
              return o3 = s4.sent(), n3.reject(o3), [3, 4];
            case 4:
              return [2];
          }
        });
      });
    });
  }, e3.prototype._rejectLazyCallQueue = function(e4, t4) {
    var n2 = this;
    void 0 === t4 && (t4 = Is$2.ALL);
    var i3 = a$1(this._classifyLazyCallQueueByScope(t4), 2), o2 = i3[0], c3 = i3[1];
    this._lazyCallQueue = c3, o2.forEach(function(t5) {
      return r$1(n2, void 0, void 0, function() {
        var n3, i4;
        return s$1(this, function(r2) {
          return n3 = t5.deferred, i4 = t5.timeout, clearTimeout(i4), n3.reject(e4), [2];
        });
      });
    });
  }, e3.prototype.send = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i3 = this;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e4 instanceof Ge$1 ? this.isReady ? (this._logger.debug("send websocket request", e4), [4, this.commandRouter.send(e4)]) : [3, 2] : [3, 4];
          case 1:
          case 5:
          case 7:
            return [2, r2.sent()];
          case 2:
            if (this.isLazyCallActivated) return this._logger.debug("wait websocket request", e4), t4 = new rt$1(), this._lazyCallQueue.push({ command: e4, deferred: t4, timeout: setTimeout(function() {
              return i3.timeout(e4.requestId);
            }, 1e4) }), [2, t4.promise];
            throw this._logger.debug("fail websocket request"), b$2.connectionRequired;
          case 3:
          case 9:
            return [3, 11];
          case 4:
            return e4 instanceof Fe$2 ? this._session.hasSession ? (this._logger.debug("send api request", e4), [4, this.commandRouter.send(e4)]) : [3, 6] : [3, 10];
          case 6:
            return e4.hasSessionKey ? (this._logger.debug("send api request with tmp session key", e4), [4, this.commandRouter.send(e4)]) : [3, 8];
          case 8:
            if (this.isLazyCallActivated) return this._logger.debug("wait api request", e4), t4 = new rt$1(), this._lazyCallQueue.push({ command: e4, deferred: t4, timeout: setTimeout(function() {
              return i3.timeout(e4.requestId);
            }, 1e4) }), [2, t4.promise];
            throw n2 = b$2.connectionRequired, this._logger.debug("fail api request", n2), n2;
          case 10:
            throw b$2.invalidCommand;
          case 11:
            return [2];
        }
      });
    });
  }, e3.prototype.forceSend = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this._logger.debug("send forced request", e4), e4 instanceof Ge$1 || e4 instanceof Fe$2 ? [4, this.commandRouter.send(e4)] : [3, 2];
          case 1:
            return [2, t4.sent()];
          case 2:
            throw b$2.invalidCommand;
        }
      });
    });
  }, e3.prototype.timeout = function(e4) {
    this._logger.debug("timeout request", e4);
    var t4 = this._lazyCallQueue.findIndex(function(t5) {
      return t5.command.requestId === e4;
    });
    t4 > -1 && (this._lazyCallQueue[t4].deferred.reject(b$2.connectionRequired), this._lazyCallQueue.splice(t4, 1));
  }, e3.prototype.cancel = function(e4) {
    this._logger.debug("cancel api request", e4), this.commandRouter.cancel(e4);
  }, e3.prototype.cancelAll = function() {
    this._logger.debug("cancel all api requests"), this.commandRouter.cancelAll();
  }, e3;
}(), Hs$2 = "sendbird@devicetokens", Vs$2 = function() {
  function e3(e4) {
    var t4 = e4.type, n2 = e4.token, i3 = e4.device_os, r2 = e4.device_manufacturer, s4 = e4.system_push_enabled;
    this.type = t4, this.token = n2, this.deviceOS = i3, this.deviceManufacturer = r2, this.systemPushEnabled = s4;
  }
  return e3.payloadify = function(e4) {
    return se(oe({ type: e4.type, token: e4.token, device_os: e4.deviceOS, device_manufacturer: e4.deviceManufacturer, system_push_enabled: e4.systemPushEnabled }));
  }, e3;
}(), zs$2 = /* @__PURE__ */ new WeakMap(), Gs$2 = function(e3) {
  function n2(t4) {
    var n3 = t4._iid, i3 = t4.session, r2 = t4.cacheContext, s4 = t4.sdkState, o2 = t4.dispatcher, a4 = t4.requestQueue, c3 = t4.logger, u3 = t4.pushNotificationAckManager, l2 = e3.call(this) || this;
    return l2._currentConnectionStateType = Rr$1.INITIALIZED, l2._isRefreshingAuthToken = false, l2.currentUser = null, l2.session = i3, l2._iid = n3, l2._cacheContext = r2, l2._sdkState = s4, l2._dispatcher = o2, l2._requestQueue = a4, l2._logger = c3, l2._pushNotificationAckManager = u3, l2._deviceTokens = [], l2._dispatcher.on(function(e4) {
      var t5, n4, i4;
      if (e4 instanceof Fr$1) {
        var r3 = e4.stateType;
        l2._currentConnectionStateType = r3;
      } else if (e4 instanceof Ve$2 && l2.handler && !l2.isSessionKeyRefreshing) {
        if (l2._currentConnectionStateType === Rr$1.CONNECTING) return;
        (null === (t5 = e4.error) || void 0 === t5 ? void 0 : t5.isSessionInvalidatedError) ? l2.close() : ((null === (n4 = e4.error) || void 0 === n4 ? void 0 : n4.isSessionTokenExpiredError) && l2.refreshAuthToken().catch(function(e5) {
          if (v$2(e5) && "foreground" === l2._sdkState.appState) throw e5;
        }), (null === (i4 = e4.error) || void 0 === i4 ? void 0 : i4.isSessionKeyExpiredError) && (l2._logger.debug("session expired"), l2.handler.onSessionExpired && l2.handler.onSessionExpired(), l2.refreshSessionKey().catch(function(e5) {
          if (v$2(e5) && "foreground" === l2._sdkState.appState) throw e5;
        })));
      }
    }), l2;
  }
  return t$2(n2, e3), Object.defineProperty(n2.prototype, "ekey", { get: function() {
    return zs$2.get(this);
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "deviceTokens", { get: function() {
    return this._deviceTokens;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "deviceTokenLastDeletedAt", { get: function() {
    return this._deviceTokenLastDeletedAt;
  }, enumerable: false, configurable: true }), n2.prototype.indexOfDeviceToken = function(e4, t4) {
    return this._deviceTokens.findIndex(function(n3) {
      return n3.type === e4 && n3.token === t4;
    });
  }, n2.prototype.hasDeviceToken = function(e4, t4) {
    return this.indexOfDeviceToken(e4, t4) >= 0;
  }, n2.prototype.createRefreshWebsocketCommand = function(e4, t4) {
    return new Ke$2({ authToken: e4, expiringSession: true, requestId: t4 });
  }, n2.prototype._refreshSessionKeyByWebSocket = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3, i3, r2, o2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return t4 = this.createRefreshWebsocketCommand(e4), [4, this._requestQueue.forceSend(t4)];
          case 1:
            if (n3 = s4.sent(), i3 = n3.as(Qe$2), r2 = i3.newKey, o2 = i3.error) throw o2;
            return this.session.sessionKey = null != r2 ? r2 : this.session.sessionKey, [2];
        }
      });
    });
  }, n2.prototype._refreshSessionKeyByApi = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3 = this;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t4 = new je$2({ userId: this._sdkState.userId, authToken: e4, services: this.session.services && this.session.services.length > 0 ? this.session.services : void 0, expiringSession: true }), [4, ws$2(function(e5) {
              return r$1(n3, void 0, void 0, function() {
                var n4, i4, r2, o2, a4;
                return s$1(this, function(s4) {
                  switch (s4.label) {
                    case 0:
                      return s4.trys.push([0, 2, , 3]), [4, this._requestQueue.forceSend(t4)];
                    case 1:
                      return n4 = s4.sent(), i4 = n4.as(Be$2), r2 = i4.key, o2 = i4.services, this.session.sessionKey = r2, this.session.services = o2, [3, 3];
                    case 2:
                      if (a4 = s4.sent(), !this._isSessionRelatedError(a4)) throw a4;
                      return e5(a4), [3, 3];
                    case 3:
                      return [2];
                  }
                });
              });
            }, 3)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, n2.prototype._refreshSessionKey = function(e4, t4) {
    return void 0 === t4 && (t4 = true), r$1(this, void 0, void 0, function() {
      var n3, i3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            if (this._currentConnectionStateType !== Rr$1.CONNECTED) return [3, 8];
            r2.label = 1;
          case 1:
            return r2.trys.push([1, 3, , 8]), [4, this._refreshSessionKeyByWebSocket(e4)];
          case 2:
            return r2.sent(), this.complete(), [2];
          case 3:
            n3 = r2.sent(), r2.label = 4;
          case 4:
            return r2.trys.push([4, 6, , 7]), [4, this._handleSessionRefreshError(n3, t4)];
          case 5:
            return r2.sent(), [2];
          case 6:
            return r2.sent(), [3, 7];
          case 7:
            return [3, 8];
          case 8:
            return r2.trys.push([8, 10, , 12]), [4, this._refreshSessionKeyByApi(e4)];
          case 9:
            return r2.sent(), this.complete(), [3, 12];
          case 10:
            return i3 = r2.sent(), [4, this._handleSessionRefreshError(i3, t4)];
          case 11:
            return r2.sent(), [3, 12];
          case 12:
            return [2];
        }
      });
    });
  }, n2.prototype._receiveNewAuthToken = function() {
    var e4, t4 = this, n3 = new rt$1();
    if (this._isRefreshingAuthToken = true, this.session.sessionKey = void 0, this.session.authToken = void 0, null === (e4 = this.handler) || void 0 === e4 ? void 0 : e4.onSessionTokenRequired) {
      var i3 = null, o2 = function() {
        i3 && (clearTimeout(i3), i3 = null);
      }, a4 = function(e5) {
        o2(), t4._isRefreshingAuthToken && (t4._isRefreshingAuthToken = false, n3.resolve(e5));
      }, c3 = function(e5) {
        o2(), t4._isRefreshingAuthToken && (t4._isRefreshingAuthToken = false, n3.reject(e5));
      };
      i3 = setTimeout(function() {
        return c3();
      }, 1e3 * this._sdkState.sessionTokenRefreshTimeout), kr$1(function() {
        return r$1(t4, void 0, void 0, function() {
          var e5;
          return s$1(this, function(t5) {
            return (null === (e5 = this.handler) || void 0 === e5 ? void 0 : e5.onSessionTokenRequired) && this.handler.onSessionTokenRequired(a4, c3), [2];
          });
        });
      });
    } else n3.resolve(null);
    return n3.promise;
  }, n2.prototype._handleSessionRefreshError = function(e4, t4) {
    return void 0 === t4 && (t4 = false), r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e4 instanceof b$2 && (e4.isSessionTokenExpiredError || e4.code === u$1.APPLICATION_NOT_FOUND) ? (this.session.authToken = void 0, t4 ? [4, this._receiveNewAuthToken()] : [3, 6]) : [3, 6];
          case 1:
            return (n3 = i3.sent()) ? (this.session.authToken = n3, [4, this._refreshSessionKey(this.session.authToken, false)]) : [3, 3];
          case 2:
            return i3.sent(), [3, 5];
          case 3:
            return [4, this.clear()];
          case 4:
            i3.sent(), i3.label = 5;
          case 5:
            return [2];
          case 6:
            throw e4;
        }
      });
    });
  }, n2.prototype._isSessionRelatedError = function(e4) {
    return e4 instanceof b$2 && (e4.isSessionExpiredError || e4.isSessionInvalidatedError);
  }, Object.defineProperty(n2.prototype, "isSessionKeyRefreshing", { get: function() {
    return this.session.isRefreshing;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isRefreshingAuthToken", { get: function() {
    return this._isRefreshingAuthToken;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isSessionExpiring", { get: function() {
    return !!this.handler;
  }, enumerable: false, configurable: true }), n2.prototype.authenticate = function(e4, t4) {
    var n3;
    return r$1(this, void 0, void 0, function() {
      var i3, r2, o2, a4, c3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this.session.authToken = t4, i3 = 0, [4, this._cacheContext.preference.get(Xr$1(this._sdkState.appId))];
          case 1:
            return (r2 = s4.sent()) && (i3 = r2.configTs), o2 = new xs$2({ appId: this._sdkState.appId, userId: e4, includeUIKitConfig: !!(null !== (n3 = this._sdkState.extensions) && void 0 !== n3 ? n3 : {}).sb_uikit, localCacheEnabled: this._cacheContext.localCacheEnabled, expiringSession: this.isSessionExpiring, configTs: i3 }), [4, this._requestQueue.commandRouter.send(o2)];
          case 2:
            return a4 = s4.sent(), (c3 = a4.as(Us$2).logi).error ? [3, 5] : this.session.hasChatServicePermission ? [3, 4] : [4, c3.applyTo(this._iid)];
          case 3:
            s4.sent(), s4.label = 4;
          case 4:
            return [3, 6];
          case 5:
            throw c3.error;
          case 6:
            return [2];
        }
      });
    });
  }, n2.prototype.login = function(e4) {
    var t4;
    return r$1(this, void 0, void 0, function() {
      var n3, i3, r2, o2, a4, c3, u3, l2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return n3 = e4.key, i3 = e4.ekey, r2 = e4.services, o2 = e4.userProfile, a4 = e4.deviceTokenLastDeletedAt, c3 = void 0 === a4 ? 0 : a4, this.session.sessionKey = n3, this.session.services = r2, zs$2.set(this, i3), this._deviceTokenCacheEnabled = null === (t4 = null == o2 ? void 0 : o2.appInfo) || void 0 === t4 ? void 0 : t4.deviceTokenCache, u3 = this._cacheContext.preference, this._deviceTokenCacheEnabled ? [4, u3.get(Hs$2)] : [3, 5];
          case 1:
            return !(l2 = s4.sent()) || l2.lastDeletedAt < c3 ? (this._deviceTokens = [], this._deviceTokenLastDeletedAt = c3, [4, this.saveDeviceToken()]) : [3, 3];
          case 2:
            return s4.sent(), [3, 4];
          case 3:
            this._deviceTokens = l2.tokens.map(function(e5) {
              return new Vs$2(Vs$2.payloadify(e5));
            }), this._deviceTokenLastDeletedAt = l2.lastDeletedAt, s4.label = 4;
          case 4:
            return [3, 7];
          case 5:
            return [4, u3.remove(Hs$2)];
          case 6:
            s4.sent(), s4.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, n2.prototype.complete = function() {
    var e4 = this;
    this.dispatch("refresh"), this._dispatcher.dispatch(new qr$1()), kr$1(function() {
      return r$1(e4, void 0, void 0, function() {
        var e5;
        return s$1(this, function(t4) {
          return this._logger.debug("session refreshed"), (null === (e5 = this.handler) || void 0 === e5 ? void 0 : e5.onSessionRefreshed) && this.handler.onSessionRefreshed(), [2];
        });
      });
    });
  }, n2.prototype.error = function(e4) {
    var t4 = this;
    kr$1(function() {
      return r$1(t4, void 0, void 0, function() {
        var t5;
        return s$1(this, function(n3) {
          return (null === (t5 = this.handler) || void 0 === t5 ? void 0 : t5.onSessionError) && this.handler.onSessionError(e4), [2];
        });
      });
    });
  }, n2.prototype.close = function() {
    var e4 = this;
    this.dispatch("close"), this._dispatcher.dispatch(new Vr$1()), kr$1(function() {
      return r$1(e4, void 0, void 0, function() {
        var e5;
        return s$1(this, function(t4) {
          return this._logger.debug("session closed"), (null === (e5 = this.handler) || void 0 === e5 ? void 0 : e5.onSessionClosed) && this.handler.onSessionClosed(), [2];
        });
      });
    });
  }, n2.prototype.refreshAuthToken = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            if (e4 = null, !this.isSessionExpiring || this.session.isRefreshing) return [3, 9];
            this.session.isRefreshing = true, n3.label = 1;
          case 1:
            return n3.trys.push([1, 7, 8, 9]), [4, this._receiveNewAuthToken()];
          case 2:
            return (e4 = n3.sent()) ? (this._logger.debug("session refreshing.."), this.session.authToken = e4, [4, this._refreshSessionKey(this.session.authToken)]) : [3, 4];
          case 3:
            return n3.sent(), [3, 6];
          case 4:
            return [4, this.clear()];
          case 5:
            n3.sent(), n3.label = 6;
          case 6:
            return [3, 9];
          case 7:
            throw n3.sent(), t4 = e4 ? b$2.sessionTokenRefreshFailed : b$2.sessionTokenRequestFailed, this._dispatcher.dispatch(new Hr$1()), this.error(t4), this._logger.debug("refresh auth token error = ", t4), t4;
          case 8:
            return this.session.isRefreshing = false, [7];
          case 9:
            return [2];
        }
      });
    });
  }, n2.prototype.refreshSessionKey = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            if (!this.isSessionExpiring || this.session.isRefreshing) return [3, 5];
            this.session.isRefreshing = true, t4.label = 1;
          case 1:
            return t4.trys.push([1, 3, 4, 5]), [4, this._refreshSessionKey(this.session.authToken)];
          case 2:
            return t4.sent(), [3, 5];
          case 3:
            throw t4.sent(), e4 = b$2.sessionTokenRefreshFailed, this._dispatcher.dispatch(new Hr$1()), this.error(e4), e4;
          case 4:
            return this.session.isRefreshing = false, [7];
          case 5:
            return [2];
        }
      });
    });
  }, n2.prototype.setDeviceToken = function(e4, t4, n3) {
    if (this._deviceTokenCacheEnabled && this.indexOfDeviceToken(e4, t4) < 0) {
      var i3 = new Vs$2({ type: e4, token: t4, device_os: null == n3 ? void 0 : n3.deviceOS, device_manufacturer: null == n3 ? void 0 : n3.deviceManufacturer, system_push_enabled: null == n3 ? void 0 : n3.systemPushEnabled });
      return this._deviceTokens.push(i3), true;
    }
    return false;
  }, n2.prototype.unsetDeviceToken = function(e4, t4) {
    if (this._deviceTokenCacheEnabled) {
      var n3 = this.indexOfDeviceToken(e4, t4);
      n3 >= 0 && this._deviceTokens.splice(n3, 1);
    }
  }, n2.prototype.unsetDeviceTokens = function(e4) {
    this._deviceTokenCacheEnabled && (this._deviceTokens = e4 ? this._deviceTokens.filter(function(t4) {
      return t4.type !== e4;
    }) : []);
  }, n2.prototype.setDeviceTokenDeletedAt = function(e4) {
    e4 > 0 && (this._deviceTokenLastDeletedAt = e4);
  }, n2.prototype.saveDeviceToken = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._deviceTokenCacheEnabled ? [4, this._cacheContext.preference.set(Hs$2, { tokens: this._deviceTokens, lastDeletedAt: this._deviceTokenLastDeletedAt })] : [3, 2];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, n2.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this.currentUser = null, this.session.clear(), this.close(), zs$2.delete(this), this._deviceTokens = [], this._deviceTokenLastDeletedAt = 0, [4, this.saveDeviceToken()];
          case 1:
            return e4.sent(), this._pushNotificationAckManager.clear(), [2];
        }
      });
    });
  }, n2;
}(ne), js$2 = function(e3, t4) {
  var n2, i3;
  if (null !== e3 && null !== t4) {
    var r2 = Object.keys(e3), s4 = Object.keys(t4), u3 = c([], a$1(new Set(c(c([], a$1(r2), false), a$1(s4), false))), false), l2 = {};
    try {
      for (var h4 = o(u3), d4 = h4.next(); !d4.done; d4 = h4.next()) {
        var _2 = d4.value, f2 = typeof e3[_2], p2 = typeof t4[_2];
        "undefined" === f2 ? l2[_2] = t4[_2] : "undefined" === p2 ? l2[_2] = e3[_2] : f2 !== p2 ? l2[_2] = t4[_2] : "object" === f2 && e3[_2] && t4[_2] ? l2[_2] = js$2(e3[_2], t4[_2]) : l2[_2] = t4[_2];
      }
    } catch (e4) {
      n2 = { error: e4 };
    } finally {
      try {
        d4 && !d4.done && (i3 = h4.return) && i3.call(h4);
      } finally {
        if (n2) throw n2.error;
      }
    }
    return l2;
  }
  return t4;
};
!function(e3) {
  e3[e3.PENDING = 0] = "PENDING", e3[e3.COLLECT_ONLY = 1] = "COLLECT_ONLY", e3[e3.ENABLED = 2] = "ENABLED", e3[e3.DISABLED = 3] = "DISABLED";
}(Ps$2 || (Ps$2 = {})), function(e3) {
  e3.DAILY = "daily", e3.DEFAULT = "default", e3.REALTIME = "realtime";
}(Ms$2 || (Ms$2 = {}));
var Ks$2, Bs$2 = 100, Qs$2 = function() {
  function e3(e4) {
    var t4 = e4.deviceId, n2 = e4.cacheContext, i3 = e4.requestQueue;
    this.queue = [], this.flushWaitQueue = [], this.enabledState = Ps$2.PENDING, this.isFlushing = false, this._sentLogStats = [], this.deviceId = t4, this.cacheContext = n2, this.requestQueue = i3, this.logInfo = { deviceId: t4, statLogs: [], generation: 1, lastFlushedAt: 0 }, this.limit = Bs$2;
  }
  return Object.defineProperty(e3.prototype, "isEnabled", { get: function() {
    return this.enabledState === Ps$2.ENABLED;
  }, enumerable: false, configurable: true }), e3.prototype.init = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.key = e4, [4, this.cacheContext.preference.get(this.key)];
          case 1:
            return (t4 = n2.sent()) && (this.logInfo = t4), [2];
        }
      });
    });
  }, e3.prototype._mergeQueue = function() {
    this.flushWaitQueue.length > 0 && (this.queue = this.queue.concat(this.flushWaitQueue), this.flushWaitQueue = []);
  }, e3.prototype._isDuplicateStat = function(e4) {
    var t4 = this._sentLogStats.find(function(t5) {
      var n2;
      return t5.channelUrl === e4.data.channel_url && t5.messageId === (null !== (n2 = e4.data.notificationId) && void 0 !== n2 ? n2 : e4.data.message_id) && t5.action === e4.data.action;
    });
    return t4 || this._sentLogStats.push({ channelUrl: e4.data.channel_url, messageId: e4.data.message_id, action: e4.data.action }), !!t4;
  }, e3.prototype._save = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e4 = c(c([], a$1(this.queue), false), a$1(this.flushWaitQueue), false), [4, this.cacheContext.preference.set(this.key, { deviceId: this.logInfo.deviceId, statLogs: e4.map(function(e5) {
              return $e$1.payloadify(e5);
            }), generation: this.logInfo.generation++, lastFlushedAt: this.logInfo.lastFlushedAt })];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        return this.queue = [], this.flushWaitQueue = [], this.logInfo.generation = 1, this._save(), [2];
      });
    });
  }, e3;
}(), Ws$2 = function(e3) {
  function n2(t4) {
    var n3, i3, r2, s4, o2 = t4.type, a4 = t4.data, c3 = t4.ts, u3 = void 0 === c3 ? Date.now() : c3, l2 = e3.call(this, { type: o2, data: a4, ts: u3 }) || this;
    return l2.date = new Date(u3), l2.key = "".concat((n3 = l2.date, i3 = n3.getFullYear(), r2 = String(n3.getMonth() + 1).padStart(2, "0"), s4 = String(n3.getDate()).padStart(2, "0"), "".concat(i3).concat(r2).concat(s4)), "_").concat(o2), l2;
  }
  return t$2(n2, e3), n2;
}($e$1), Zs$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.deviceId, i3 = t4.statLogs, r2 = e3.call(this) || this;
    return r2.method = ae.POST, r2.path = "".concat(Se), r2.params = { device_id: n3, log_entries: i3.map(function(e4) {
      return $e$1.payloadify(e4);
    }) }, r2;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Ys$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.deviceId, i3 = t4.cacheContext, r2 = t4.requestQueue;
    return e3.call(this, { deviceId: n3, cacheContext: i3, requestQueue: r2 }) || this;
  }
  return t$2(n2, e3), Object.defineProperty(n2.prototype, "_isSendable", { get: function() {
    return 0 !== this.queue.length && Date.now() - this.logInfo.lastFlushedAt >= this.statConfig.minInterval;
  }, enumerable: false, configurable: true }), n2.prototype.init = function(t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, e3.prototype.init.call(this, t4 + ".daily")];
          case 1:
            return n3.sent(), this.queue = this.logInfo.statLogs.map(function(e4) {
              return new $e$1({ type: e4.stat_type, ts: e4.ts, data: e4.data });
            }), [2];
        }
      });
    });
  }, n2.prototype.setConfig = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3, i3, r2, o2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this.statConfig = e4, this.statConfig.minInterval = 864e5, this._mergeQueue(), t4.localCacheStat ? (this.enabledState = t4.enabledStat ? Ps$2.ENABLED : Ps$2.COLLECT_ONLY, [3, 3]) : [3, 1];
          case 1:
            return this.enabledState = Ps$2.DISABLED, [4, this.clear()];
          case 2:
            s4.sent(), s4.label = 3;
          case 3:
            return this.isEnabled && this._isSendable ? [4, this._getUploadStats()] : [3, 9];
          case 4:
            n3 = s4.sent(), i3 = Math.max(Math.floor(Math.random() * this.statConfig.requestDelayRange), 100), r2 = 0, s4.label = 5;
          case 5:
            return r2 < n3.length ? (o2 = n3.slice(r2, 1 + this.statConfig.maxStatCountPerRequest), [4, ms$2(i3)]) : [3, 9];
          case 6:
            return s4.sent(), [4, this._flush(o2)];
          case 7:
            s4.sent(), s4.label = 8;
          case 8:
            return r2 += this.statConfig.maxStatCountPerRequest, [3, 5];
          case 9:
            return [2];
        }
      });
    });
  }, n2.prototype.put = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3, i3, r2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this.enabledState === Ps$2.DISABLED ? [2, true] : (t4 = this.enabledState === Ps$2.PENDING || this.isFlushing ? this.flushWaitQueue : this.queue, n3 = a$1(t4.filter(function(t5) {
              return t5 instanceof Ws$2 && t5.key === e4.key;
            }), 1), (i3 = n3[0]) ? i3.data = js$2(i3.data, e4.data) : t4.push(e4), this.enabledState === Ps$2.PENDING ? [3, 2] : [4, this._save()]);
          case 1:
            s4.sent(), s4.label = 2;
          case 2:
            return this.isEnabled ? (this._mergeQueue(), this._isSendable ? [4, this._getUploadStats()] : [3, 5]) : [3, 5];
          case 3:
            return r2 = s4.sent(), [4, this._flush(r2)];
          case 4:
            return [2, s4.sent()];
          case 5:
            return [2, true];
        }
      });
    });
  }, n2.prototype._getUploadStats = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        return e4 = this.queue.filter(function(e5) {
          if (e5 instanceof Ws$2) {
            var t5 = /* @__PURE__ */ new Date(), n3 = a$1([e5.date.getFullYear(), t5.getFullYear()], 2), i3 = n3[0], r2 = n3[1];
            if (i3 < r2) return true;
            if (i3 === r2) {
              var s4 = a$1([e5.date.getMonth(), t5.getMonth()], 2), o2 = s4[0], c3 = s4[1];
              if (o2 < c3) return true;
              if (o2 === c3) {
                var u3 = a$1([e5.date.getDate(), t5.getDate()], 2);
                return u3[0] < u3[1];
              }
            }
          }
          return false;
        }), [2, e4];
      });
    });
  }, n2.prototype._flush = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3, i3, r2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            if (t4 = true, !(e4.length > 0)) return [3, 10];
            if (this.isFlushing) return [3, 9];
            this.isFlushing = true, s4.label = 1;
          case 1:
            return s4.trys.push([1, 4, 8, 9]), n3 = c([], a$1(e4), false).slice(0, Math.min(this.limit, this.statConfig.maxStatCountPerRequest)), i3 = new Zs$2({ deviceId: this.deviceId, statLogs: n3 }), [4, this.requestQueue.send(i3)];
          case 2:
            return s4.sent(), this.queue = c([], a$1(e4), false).slice(n3.length).concat(this.flushWaitQueue), this.flushWaitQueue = [], this.limit = Bs$2, this.logInfo.lastFlushedAt = Date.now(), [4, this._save()];
          case 3:
            return s4.sent(), [3, 9];
          case 4:
            return (r2 = s4.sent()) instanceof b$2 ? r2.code !== u$1.NON_AUTHORIZED ? [3, 6] : [4, this.clear()] : [3, 7];
          case 5:
            return s4.sent(), this.enabledState = Ps$2.DISABLED, [3, 7];
          case 6:
            r2.code === u$1.STAT_UPLOAD_NOT_ALLOWED && (this.enabledState = Ps$2.COLLECT_ONLY), s4.label = 7;
          case 7:
            return this.limit = this.limit + 20, t4 = false, [3, 9];
          case 8:
            return this.isFlushing = false, [7];
          case 9:
            return [3, 11];
          case 10:
            this.isFlushing = false, s4.label = 11;
          case 11:
            return [2, t4];
        }
      });
    });
  }, n2;
}(Qs$2), Xs$2 = function(e3) {
  function i3(t4) {
    var n2 = t4.deviceId, i4 = t4.cacheContext, r2 = t4.requestQueue;
    return e3.call(this, { deviceId: n2, cacheContext: i4, requestQueue: r2 }) || this;
  }
  return t$2(i3, e3), i3.prototype._isSendable = function(e4) {
    if (void 0 === e4 && (e4 = false), this.queue.length < this.statConfig.lowerThreshold) return false;
    if (e4) {
      if (Date.now() - this.logInfo.lastFlushedAt < this.statConfig.minInterval) return false;
    } else if (this.queue.length < this.statConfig.minStatCount) return false;
    return true;
  }, i3.prototype._filterQueueByType = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return [2, t4 ? e4.filter(function(e5) {
          return e5.type !== Me$1.FEATURE_LOCALCACHE_EVENT;
        }) : e4.filter(function(e5) {
          return e5.type === Me$1.FEATURE_LOCALCACHE_EVENT;
        })];
      });
    });
  }, i3.prototype.init = function(t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return [4, e3.prototype.init.call(this, t4 + ".default")];
          case 1:
            return i4.sent(), this.queue = this.logInfo.statLogs.map(function(e4) {
              return e4.data = n$2({ message_init_policy: "", starting_point: 0 }, e4.data), new $e$1({ type: e4.stat_type, ts: e4.ts, data: e4.data });
            }), [2];
        }
      });
    });
  }, i3.prototype.setConfig = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, i4, r2, o2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this.statConfig = e4, this._mergeQueue(), t4.requestStat || t4.localCacheStat ? (this.enabledState = t4.enabledStat ? Ps$2.ENABLED : Ps$2.COLLECT_ONLY, n2 = void 0, t4.requestStat || (n2 = false), t4.localCacheStat || (n2 = true), void 0 === n2 ? [3, 3] : (i4 = this, [4, this._filterQueueByType(this.queue, n2)])) : [3, 4];
          case 1:
            return i4.queue = s4.sent(), r2 = this, [4, this._filterQueueByType(this.flushWaitQueue, n2)];
          case 2:
            r2.flushWaitQueue = s4.sent(), this._save(), s4.label = 3;
          case 3:
            return [3, 6];
          case 4:
            return this.enabledState = Ps$2.DISABLED, [4, this.clear()];
          case 5:
            s4.sent(), s4.label = 6;
          case 6:
            return this.isEnabled && this._isSendable(true) ? (o2 = Math.max(Math.floor(Math.random() * this.statConfig.requestDelayRange), 100), [4, ms$2(o2)]) : [3, 9];
          case 7:
            return s4.sent(), [4, this._flush(this.queue)];
          case 8:
            s4.sent(), s4.label = 9;
          case 9:
            return [2];
        }
      });
    });
  }, i3.prototype.put = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.enabledState === Ps$2.DISABLED ? [2, true] : ((t4 = this.enabledState === Ps$2.PENDING || this.isFlushing ? this.flushWaitQueue : this.queue).push(e4), this.enabledState === Ps$2.PENDING ? [3, 2] : [4, this._save()]);
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return this.isEnabled ? (this._mergeQueue(), this._isSendable() ? [4, this._flush(t4)] : [3, 4]) : [3, 4];
          case 3:
            return [2, n2.sent()];
          case 4:
            return [2, true];
        }
      });
    });
  }, i3.prototype._flush = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i4, r2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            if (t4 = true, !(e4.length > 0)) return [3, 10];
            if (this.isFlushing) return [3, 9];
            this.isFlushing = true, s4.label = 1;
          case 1:
            return s4.trys.push([1, 4, 8, 9]), n2 = c([], a$1(e4), false).slice(0, Math.min(this.limit, this.statConfig.maxStatCountPerRequest)), i4 = new Zs$2({ deviceId: this.deviceId, statLogs: n2 }), [4, this.requestQueue.send(i4)];
          case 2:
            return s4.sent(), this.queue = c([], a$1(e4), false).slice(n2.length).concat(this.flushWaitQueue), this.flushWaitQueue = [], this.limit = Bs$2, this.logInfo.lastFlushedAt = Date.now(), [4, this._save()];
          case 3:
            return s4.sent(), [3, 9];
          case 4:
            return (r2 = s4.sent()) instanceof b$2 ? r2.code !== u$1.NON_AUTHORIZED ? [3, 6] : [4, this.clear()] : [3, 7];
          case 5:
            return s4.sent(), this.enabledState = Ps$2.DISABLED, [3, 7];
          case 6:
            r2.code === u$1.STAT_UPLOAD_NOT_ALLOWED && (this.enabledState = Ps$2.COLLECT_ONLY), s4.label = 7;
          case 7:
            return this.limit = this.limit + 20, t4 = false, [3, 9];
          case 8:
            return this.isFlushing = false, [7];
          case 9:
            return [3, 11];
          case 10:
            this.isFlushing = false, s4.label = 11;
          case 11:
            return [2, t4];
        }
      });
    });
  }, i3;
}(Qs$2), Js$2 = function(e3) {
  function n2(t4) {
    var n3 = t4.deviceId, i3 = t4.statLogs, r2 = e3.call(this) || this;
    return r2.method = ae.POST, r2.path = "".concat(Te$1), r2.params = { device_id: n3, log_entries: i3.map(function(e4) {
      return $e$1.payloadify(e4);
    }) }, r2;
  }
  return t$2(n2, e3), n2;
}(Fe$2), $s$2 = function(e3) {
  function i3(t4) {
    var n2 = t4.deviceId, i4 = t4.cacheContext, r2 = t4.requestQueue;
    return e3.call(this, { deviceId: n2, cacheContext: i4, requestQueue: r2 }) || this;
  }
  return t$2(i3, e3), Object.defineProperty(i3.prototype, "_isSendable", { get: function() {
    return this.queue.length >= this.statConfig.minStatCount && this.queue.length > this.statConfig.lowerThreshold || this.logInfo.lastFlushedAt > 0 && Date.now() - this.logInfo.lastFlushedAt >= this.statConfig.minInterval;
  }, enumerable: false, configurable: true }), i3.prototype.init = function(t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return [4, e3.prototype.init.call(this, t4 + ".realtime")];
          case 1:
            return i4.sent(), this.queue = this.logInfo.statLogs.map(function(e4) {
              var t5;
              return e4.data = se(n$2(n$2({}, e4.data), { message_id: null !== (t5 = e4.data.notificationId) && void 0 !== t5 ? t5 : e4.data.message_id, notificationId: void 0 })), new $e$1({ type: e4.stat_type, ts: e4.ts, data: e4.data });
            }), this._sentLogStats = this.queue.map(function(e4) {
              var t5;
              return { channelUrl: e4.data.channelUrl, messageId: null !== (t5 = e4.data.notificationId) && void 0 !== t5 ? t5 : e4.data.message_id, action: e4.data.action };
            }), [2];
        }
      });
    });
  }, i3.prototype.setConfig = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return this.statConfig = e4, this._mergeQueue(), t4.notificationStat ? (this.enabledState = t4.enabledStat ? Ps$2.ENABLED : Ps$2.COLLECT_ONLY, [3, 3]) : [3, 1];
          case 1:
            return this.enabledState = Ps$2.DISABLED, [4, this.clear()];
          case 2:
            i4.sent(), i4.label = 3;
          case 3:
            return this.isEnabled && this._isSendable ? (n2 = Math.max(Math.floor(Math.random() * this.statConfig.requestDelayRange), 100), [4, ms$2(n2)]) : [3, 6];
          case 4:
            return i4.sent(), [4, this._flush(this.queue)];
          case 5:
            i4.sent(), i4.label = 6;
          case 6:
            return [2];
        }
      });
    });
  }, i3.prototype.put = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.enabledState === Ps$2.DISABLED ? [2, true] : (t4 = this.enabledState === Ps$2.PENDING || this.isFlushing ? this.flushWaitQueue : this.queue, this._isDuplicateStat(e4) ? [2, true] : (t4.push(e4), this.enabledState === Ps$2.PENDING ? [3, 2] : [4, this._save()]));
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return this.isEnabled ? (this._mergeQueue(), this.isEnabled && this._isSendable ? [4, this._flush(t4)] : [3, 4]) : [3, 4];
          case 3:
            return [2, n2.sent()];
          case 4:
            return [2, true];
        }
      });
    });
  }, i3.prototype._flush = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, i4, r2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            if (t4 = true, !(e4.length > 0)) return [3, 10];
            if (this.isFlushing) return [3, 9];
            this.isFlushing = true, s4.label = 1;
          case 1:
            return s4.trys.push([1, 4, 8, 9]), n2 = c([], a$1(e4), false).slice(0, Math.min(this.limit, this.statConfig.maxStatCountPerRequest)), i4 = new Js$2({ deviceId: this.deviceId, statLogs: n2 }), [4, this.requestQueue.send(i4)];
          case 2:
            return s4.sent(), this.queue = c([], a$1(e4), false).slice(n2.length).concat(this.flushWaitQueue), this.flushWaitQueue = [], this.limit = Bs$2, this.logInfo.lastFlushedAt = Date.now(), [4, this._save()];
          case 3:
            return s4.sent(), [3, 9];
          case 4:
            return (r2 = s4.sent()) instanceof b$2 ? r2.code !== u$1.NON_AUTHORIZED ? [3, 6] : [4, this.clear()] : [3, 7];
          case 5:
            return s4.sent(), this.enabledState = Ps$2.DISABLED, [3, 7];
          case 6:
            r2.code === u$1.STAT_UPLOAD_NOT_ALLOWED && (this.enabledState = Ps$2.COLLECT_ONLY), s4.label = 7;
          case 7:
            return this.limit = this.limit + 20, t4 = false, [3, 9];
          case 8:
            return this.isFlushing = false, [7];
          case 9:
            return [3, 11];
          case 10:
            this.isFlushing = false, s4.label = 11;
          case 11:
            return [2, t4];
        }
      });
    });
  }, i3;
}(Qs$2), eo = function() {
  function e3(e4) {
    var t4 = e4.cacheContext, n2 = e4.requestQueue, i3 = e4.dispatcher, r2 = e4.logger;
    this._collectRequestStat = true, this._collectFeatureLocalCacheStat = true, this._collectionNotificationStat = true, this._retryCount = 0, this.deviceId = ee(), this.cacheContext = t4, this.requestQueue = n2, this.dispatcher = i3, this.logger = r2, this._dailyStatCollector = new Ys$2({ deviceId: this.deviceId, cacheContext: this.cacheContext, requestQueue: this.requestQueue }), this._defaultStatCollector = new Xs$2({ deviceId: this.deviceId, cacheContext: this.cacheContext, requestQueue: this.requestQueue }), this._notificationStatCollector = new $s$2({ deviceId: this.deviceId, cacheContext: this.cacheContext, requestQueue: this.requestQueue });
  }
  return e3.prototype._migration = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, i3, r2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return [4, this.cacheContext.preference.get(this.key)];
          case 1:
            return (e4 = s4.sent()) ? (t4 = [], e4.statLogs.forEach(function(e5) {
              e5.stat_type === Me$1.FEATURE_LOCALCACHE && t4.push(new $e$1({ type: e5.stat_type, ts: e5.ts, data: e5.data }));
            }), [4, this.cacheContext.preference.set(this.key + ".daily", { deviceId: e4.deviceId, statLogs: t4.map(function(e5) {
              return $e$1.payloadify(e5);
            }), generation: e4.generation, lastFlushedAt: e4.lastFlushedAt })]) : [3, 6];
          case 2:
            return s4.sent(), i3 = [], e4.statLogs.forEach(function(e5) {
              e5.stat_type !== Me$1.FEATURE_LOCALCACHE && e5.stat_type !== Me$1.NOTIFICATION && (e5.stat_type === Me$1.FEATURE_LOCALCACHE_EVENT && (e5.data = n$2({ message_init_policy: "", starting_point: 0 }, e5.data)), i3.push(new $e$1({ type: e5.stat_type, ts: e5.ts, data: e5.data })));
            }), [4, this.cacheContext.preference.set(this.key + ".default", { deviceId: e4.deviceId, statLogs: i3.map(function(e5) {
              return $e$1.payloadify(e5);
            }), generation: e4.generation, lastFlushedAt: e4.lastFlushedAt })];
          case 3:
            return s4.sent(), r2 = [], e4.statLogs.forEach(function(e5) {
              var t5;
              e5.stat_type === Me$1.NOTIFICATION && (e5.data = se(n$2(n$2({}, e5.data), { message_id: null !== (t5 = e5.data.notificationId) && void 0 !== t5 ? t5 : e5.data.message_id, notificationId: void 0 })), r2.push(new $e$1({ type: e5.stat_type, ts: e5.ts, data: e5.data })));
            }), [4, this.cacheContext.preference.set(this.key + ".realtime", { deviceId: e4.deviceId, statLogs: r2.map(function(e5) {
              return $e$1.payloadify(e5);
            }), generation: e4.generation, lastFlushedAt: e4.lastFlushedAt })];
          case 4:
            return s4.sent(), [4, this.cacheContext.preference.remove(this.key)];
          case 5:
            s4.sent(), s4.label = 6;
          case 6:
            return [2];
        }
      });
    });
  }, e3.prototype.init = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.key = e4, [4, this._migration()];
          case 1:
            return n2.sent(), [4, this._dailyStatCollector.init(this.key)];
          case 2:
            return n2.sent(), [4, this._defaultStatCollector.init(this.key)];
          case 3:
            return n2.sent(), [4, this._notificationStatCollector.init(this.key)];
          case 4:
            return n2.sent(), this.commandEventContext || (this.commandEventContext = this.dispatcher.on(function(e5) {
              return r$1(t4, void 0, void 0, function() {
                var t5, n3, i3, r2, o2, a4;
                return s$1(this, function(s4) {
                  return e5 instanceof We$2 ? (t5 = e5.statLog, this.put(t5)) : e5 instanceof _s$2 && (n3 = e5.request, i3 = e5.features, r2 = e5.options, o2 = e5.statConfigInfo, this._retryCount = 0, this._collectRequestStat = n3, this._collectFeatureLocalCacheStat = null == i3 ? void 0 : i3.localCache, this._collectionNotificationStat = null == i3 ? void 0 : i3.notification, this._statConfig = o2, this._dailyStatCollector.setConfig(this._statConfig.default, { localCacheStat: this._collectFeatureLocalCacheStat, enabledStat: r2.ingestion }), this._defaultStatCollector.setConfig(this._statConfig.default, { requestStat: this._collectRequestStat, localCacheStat: this._collectFeatureLocalCacheStat, enabledStat: r2.ingestion }), this._notificationStatCollector.setConfig(null !== (a4 = this._statConfig.realTime) && void 0 !== a4 ? a4 : this._statConfig.default, { notificationStat: this._collectionNotificationStat, enabledStat: r2.ingestion })), [2];
                });
              });
            })), [2];
        }
      });
    });
  }, e3.prototype.put = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return t4 = true, e4 instanceof Ws$2 ? this._collectFeatureLocalCacheStat ? [4, this._dailyStatCollector.put(e4)] : [3, 2] : [3, 3];
          case 1:
            t4 = n2.sent(), n2.label = 2;
          case 2:
            return [3, 13];
          case 3:
            switch (e4.type) {
              case Me$1.API_RESULT:
              case Me$1.WEBSOCKET_CONNECT:
                return [3, 4];
              case Me$1.FEATURE_LOCALCACHE:
              case Me$1.FEATURE_LOCALCACHE_EVENT:
                return [3, 7];
              case Me$1.NOTIFICATION:
                return [3, 10];
            }
            return [3, 13];
          case 4:
            return this._collectRequestStat ? [4, this._defaultStatCollector.put(e4)] : [3, 6];
          case 5:
            t4 = n2.sent(), n2.label = 6;
          case 6:
            return [3, 13];
          case 7:
            return this._collectFeatureLocalCacheStat ? [4, this._defaultStatCollector.put(e4)] : [3, 9];
          case 8:
            t4 = n2.sent(), n2.label = 9;
          case 9:
            return [3, 13];
          case 10:
            return this._collectionNotificationStat ? [4, this._notificationStatCollector.put(e4)] : [3, 12];
          case 11:
            t4 = n2.sent(), n2.label = 12;
          case 12:
            return [3, 13];
          case 13:
            return t4 ? this._retryCount = 0 : (this._retryCount++, this._retryCount > 20 && (this._dailyStatCollector.enabledState = Ps$2.COLLECT_ONLY, this._defaultStatCollector.enabledState = Ps$2.COLLECT_ONLY, this._notificationStatCollector.enabledState = Ps$2.COLLECT_ONLY, this.logger.debug(b$2.statLogUploadLimitExceededError))), [2];
        }
      });
    });
  }, e3.prototype.close = function() {
    this.commandEventContext && (this.commandEventContext.close(), this.commandEventContext = void 0);
  }, e3;
}(), to = function() {
  function e3(e4) {
    var t4 = e4.limit, n2 = void 0 === t4 ? 5 : t4;
    this.workersByKey = {}, this.limit = n2;
  }
  return e3.prototype.run = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return this.workersByKey[e4] || (this.workersByKey[e4] = []), this.workersByKey[e4].length < this.limit ? (this.workersByKey[e4].push(t4), [4, t4()]) : [3, 2];
          case 1:
            return n2 = i3.sent(), this.workersByKey[e4].pop(), [2, n2];
          case 2:
            throw b$2.tooManyRequests;
        }
      });
    });
  }, e3.prototype.clear = function(e4) {
    this.workersByKey[e4] = [];
  }, e3;
}();
!function(e3) {
  e3.DELIVERY_RECEIPT = "delivery_receipt", e3.PUSH_ACKNOWLEDGEMENT = "push_acknowledgement";
}(Ks$2 || (Ks$2 = {}));
var no, io = function(e3) {
  function n2() {
    var t4 = null !== e3 && e3.apply(this, arguments) || this;
    return t4._pushAckedCache = {}, t4;
  }
  return t$2(n2, e3), n2.prototype.isAcked = function(e4, t4) {
    var n3, i3 = "".concat(e4, "_").concat(t4);
    return null !== (n3 = this._pushAckedCache[i3]) && void 0 !== n3 && n3;
  }, n2.prototype.markAsAcked = function(e4, t4) {
    var n3 = "".concat(e4, "_").concat(t4);
    this._pushAckedCache[n3] = true;
  }, n2.prototype.clear = function() {
    uo.of(this._iid).logger.debug("clear push acked cache"), this._pushAckedCache = {};
  }, n2.prototype.parseData = function(e4) {
    var t4, n3, i3, r2, s4 = uo.of(this._iid).logger, o2 = e4.sendbird;
    if ("string" == typeof o2) try {
      o2 = JSON.parse(o2);
    } catch (e5) {
      throw s4.info("push notification payload does not contain sendbird payload in JSON format."), b$2.malformedDataError;
    }
    if (!o2 || "object" != typeof o2) throw s4.info("push notification payload does not contain sendbird payload in JSON format."), b$2.malformedDataError;
    var a4 = null !== (t4 = o2.push_tracking_id) && void 0 !== t4 ? t4 : "", c3 = o2.notification_message_id, u3 = o2.notification_channel_key, l2 = o2.notification_template_key, h4 = o2.notification_event_deadline, d4 = null !== (n3 = o2.session_key) && void 0 !== n3 ? n3 : {}, _2 = null !== (i3 = null == d4 ? void 0 : d4.key) && void 0 !== i3 ? i3 : "", f2 = null !== (r2 = null == d4 ? void 0 : d4.topics) && void 0 !== r2 ? r2 : [];
    if ("string" != typeof a4 || 0 === a4.length) throw s4.info("push tracking id is not available"), b$2.malformedDataError;
    if ("string" != typeof c3 || 0 === c3.length) throw s4.info("message id is not available"), b$2.malformedDataError;
    return { pushTrackingId: a4, sessionKey: _2, sessionTopics: f2, messageId: c3, channelKey: u3, templateKey: l2, notificationEventDeadline: h4 };
  }, n2;
}(Jr$1), ro = function(e3) {
  this.name = e3.name, this._custom = e3.custom, this._usedByModerationEngine = e3.used_by_moderation_engine;
}, so = function(e3) {
  function n2() {
    var t4 = e3.call(this) || this;
    return t4.method = ae.GET, t4.path = ke$2, t4;
  }
  return t$2(n2, e3), n2;
}(Fe$2), oo = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.reportCategories = n3.categories, i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), ao = function(e3) {
  function n2(t4) {
    var n3 = e3.call(this, t4) || this;
    return n3._categories = [], n3;
  }
  return t$2(n2, e3), n2.prototype.categories = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return 0 !== this._categories.length ? [3, 2] : [4, this._fetchCategories()];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2, this._categories];
        }
      });
    });
  }, n2.prototype._fetchCategories = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n3, i3, r2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return e4 = uo.of(this._iid).requestQueue, t4 = new so(), [4, e4.send(t4)];
          case 1:
            return n3 = s4.sent(), (i3 = n3.as(oo).reportCategories) && (r2 = this._categories).push.apply(r2, c([], a$1(i3.map(function(e5) {
              return new ro(e5);
            })), false)), [2];
        }
      });
    });
  }, n2;
}(Jr$1), co = {}, uo = function() {
  function e3(e4, t4) {
    var n2, i3, r2, s4, o2, a4, c3, u3, l2;
    if (this.connectedAt = 0, this.firstConnectedAt = 0, this.connectionHandlers = /* @__PURE__ */ new Map(), this.userEventHandlers = /* @__PURE__ */ new Map(), !co[e4]) {
      co[e4] = this;
      var d4 = null !== (n2 = t4.options) && void 0 !== n2 ? n2 : new L$2(), _2 = this.sdkState = { appId: t4.appId, appVersion: null !== (i3 = t4.appVersion) && void 0 !== i3 ? i3 : "", appState: "foreground", userId: void 0, extensions: {}, api: { host: null !== (r2 = t4.apiHost) && void 0 !== r2 ? r2 : "https://api-".concat(t4.appId, ".sendbird.com") }, websocket: { host: null !== (s4 = t4.websocketHost) && void 0 !== s4 ? s4 : "wss://ws-".concat(t4.appId, ".sendbird.com"), pingerDisabled: !!t4.noPingpong, pingInterval: void 0, pongTimeout: void 0, connectMaxRetry: 2, compression: true, reconnectMaxRetry: -1, reconnectRetryStrategy: new ys$2(), responseTimeout: d4.websocketResponseTimeout }, sessionTokenRefreshTimeout: d4.sessionTokenRefreshTimeout };
      this.appInfo = void 0, this.subscribedUnreadMessageCount = { all: 0, feed: 0, customTypes: {}, ts: 0 };
      var f2 = this.logger = t4.logger;
      this.connectedAt = 0, this.firstConnectedAt = 0, this.connectionHandlers = /* @__PURE__ */ new Map(), this.userEventHandlers = /* @__PURE__ */ new Map();
      var p2 = this.cacheContext = new P$1({ encryption: t4.encryption, store: t4.store, localCacheEnabled: null !== (o2 = t4.localCacheEnabled) && void 0 !== o2 && o2, localCacheConfig: null !== (a4 = t4.localCacheConfig) && void 0 !== a4 ? a4 : new q() });
      this.debugMode = null !== (c3 = t4.debugMode) && void 0 !== c3 && c3, this.maxSuperGroupChannelUnreadCount = h$1.DEFAULT_MAX_UNREAD_COUNT_OF_SUPER_GROUP_CHANNEL, this.useMemberInfoInMessage = d4.useMemberInfoInMessage, this.typingIndicatorInvalidateTime = d4.typingIndicatorInvalidateTime, this.typingIndicatorThrottle = d4.typingIndicatorThrottle, this.concurrentCallLimit = void 0, this.backOffDelay = void 0;
      var E3 = this.dispatcher = new ie(), g2 = new $();
      this.requestQueue = new qs$2(e4, { session: g2, sdkState: _2, dispatcher: E3, logger: f2, useFetchCompat: t4.useFetchCompat }), this.pushNotificationAckManager = new io(e4), this.sessionManager = new Gs$2({ _iid: e4, session: g2, cacheContext: p2, sdkState: _2, dispatcher: E3, requestQueue: this.requestQueue, logger: f2, pushNotificationAckManager: this.pushNotificationAckManager }), this.connectionManager = new Ns$2(e4, { sdkState: _2, cacheContext: this.cacheContext, connectionHandlers: this.connectionHandlers, dispatcher: E3, sessionManager: this.sessionManager, websocketClient: this.requestQueue.commandRouter.websocketClient, disableWebSocketCloseEventHandling: null !== (u3 = t4.disableWebSocketCloseEventHandling) && void 0 !== u3 && u3, logger: f2 }), this.statManager = new eo({ cacheContext: this.cacheContext, requestQueue: this.requestQueue, dispatcher: this.dispatcher, logger: f2 }), this.appStateToggleEnabled = null === (l2 = t4.appStateToggleEnabled) || void 0 === l2 || l2, this.messageBackgroundSyncThrottleController = new to({ limit: 5 }), this.reportCategoryManager = new ao(e4);
    }
    return co[e4];
  }
  return e3.of = function(e4) {
    if (co[e4]) return co[e4];
    throw b$2.lostInstance;
  }, e3.clear = function(e4) {
    co[e4] && delete co[e4];
  }, e3.prototype.hasExtension = function(e4) {
    return this.sdkState.extensions && this.sdkState.extensions[e4];
  }, e3;
}(), lo = function() {
  function e3() {
  }
  return e3.prototype.init = function(e4, t4) {
    var n2 = t4.sdkState, i3 = t4.dispatcher, r2 = t4.sessionManager, s4 = t4.requestQueue, o2 = t4.logger;
    t4.onlineDetector;
    var a4 = t4.cacheContext;
    this._iid = e4, this._cacheContext = a4, this._sdkState = n2, this._dispatcher = i3, this._sessionManager = r2, this._requestQueue = s4, this._logger = o2;
  }, e3;
}();
!function(e3) {
  e3.UNKNOWN = "UNKNOWN", e3.EVENT_CHANNEL_CREATED = "EVENT_CHANNEL_CREATED", e3.EVENT_CHANNEL_UPDATED = "EVENT_CHANNEL_UPDATED", e3.EVENT_CHANNEL_DELETED = "EVENT_CHANNEL_DELETED", e3.EVENT_CHANNEL_READ = "EVENT_CHANNEL_READ", e3.EVENT_CHANNEL_DELIVERED = "EVENT_CHANNEL_DELIVERED", e3.EVENT_CHANNEL_INVITED = "EVENT_CHANNEL_INVITED", e3.EVENT_CHANNEL_JOINED = "EVENT_CHANNEL_JOINED", e3.EVENT_CHANNEL_LEFT = "EVENT_CHANNEL_LEFT", e3.EVENT_CHANNEL_ACCEPTED_INVITE = "EVENT_CHANNEL_ACCEPTED_INVITE", e3.EVENT_CHANNEL_DECLINED_INVITE = "EVENT_CHANNEL_DECLINED_INVITE", e3.EVENT_CHANNEL_OPERATOR_UPDATED = "EVENT_CHANNEL_OPERATOR_UPDATED", e3.EVENT_CHANNEL_BANNED = "EVENT_CHANNEL_BANNED", e3.EVENT_CHANNEL_UNBANNED = "EVENT_CHANNEL_UNBANNED", e3.EVENT_CHANNEL_MUTED = "EVENT_CHANNEL_MUTED", e3.EVENT_CHANNEL_UNMUTED = "EVENT_CHANNEL_UNMUTED", e3.EVENT_CHANNEL_FROZEN = "EVENT_CHANNEL_FROZEN", e3.EVENT_CHANNEL_UNFROZEN = "EVENT_CHANNEL_UNFROZEN", e3.EVENT_CHANNEL_HIDDEN = "EVENT_CHANNEL_HIDDEN", e3.EVENT_CHANNEL_UNHIDDEN = "EVENT_CHANNEL_UNHIDDEN", e3.EVENT_CHANNEL_RESET_HISTORY = "EVENT_CHANNEL_RESET_HISTORY", e3.EVENT_CHANNEL_TYPING_STATUS_UPDATE = "EVENT_CHANNEL_TYPING_STATUS_UPDATE", e3.EVENT_CHANNEL_MEMBER_COUNT_UPDATED = "EVENT_CHANNEL_MEMBER_COUNT_UPDATED", e3.EVENT_CHANNEL_METADATA_CREATED = "EVENT_CHANNEL_METADATA_CREATED", e3.EVENT_CHANNEL_METADATA_UPDATED = "EVENT_CHANNEL_METADATA_UPDATED", e3.EVENT_CHANNEL_METADATA_DELETED = "EVENT_CHANNEL_METADATA_DELETED", e3.EVENT_CHANNEL_METACOUNTER_CREATED = "EVENT_CHANNEL_METACOUNTER_CREATED", e3.EVENT_CHANNEL_METACOUNTER_UPDATED = "EVENT_CHANNEL_METACOUNTER_UPDATED", e3.EVENT_CHANNEL_METACOUNTER_DELETED = "EVENT_CHANNEL_METACOUNTER_DELETED", e3.EVENT_MESSAGE_SENT = "EVENT_MESSAGE_SENT", e3.EVENT_MESSAGE_RECEIVED = "EVENT_MESSAGE_RECEIVED", e3.EVENT_MESSAGE_UPDATED = "EVENT_MESSAGE_UPDATED", e3.EVENT_PINNED_MESSAGE_UPDATED = "EVENT_PINNED_MESSAGE_UPDATED", e3.REQUEST_CHANNEL = "REQUEST_CHANNEL", e3.REQUEST_CHANNEL_CHANGELOGS = "REQUEST_CHANNEL_CHANGELOGS", e3.REFRESH_CHANNEL = "REFRESH_CHANNEL", e3.CHANNEL_LASTACCESSEDAT_UPDATED = "CHANNEL_LASTACCESSEDAT_UPDATED", e3.SYNC_CHANNEL_BACKGROUND = "SYNC_CHANNEL_BACKGROUND", e3.SYNC_CHANNEL_CHANGELOGS = "SYNC_CHANNEL_CHANGELOGS", e3.EVENT_MESSAGE_SENT_SUCCESS = "EVENT_MESSAGE_SENT_SUCCESS", e3.EVENT_MESSAGE_SENT_FAILED = "EVENT_MESSAGE_SENT_FAILED", e3.EVENT_MESSAGE_SENT_PENDING = "EVENT_MESSAGE_SENT_PENDING", e3.EVENT_MESSAGE_DELETED = "EVENT_MESSAGE_DELETED", e3.EVENT_MESSAGE_FEEDBACK_ADDED = "EVENT_MESSAGE_FEEDBACK_ADDED", e3.EVENT_MESSAGE_FEEDBACK_UPDATED = "EVENT_MESSAGE_FEEDBACK_UPDATED", e3.EVENT_MESSAGE_FEEDBACK_DELETED = "EVENT_MESSAGE_FEEDBACK_DELETED", e3.EVENT_MESSAGE_READ = "EVENT_MESSAGE_READ", e3.EVENT_MESSAGE_DELIVERED = "EVENT_MESSAGE_DELIVERED", e3.EVENT_MESSAGE_REACTION_UPDATED = "EVENT_MESSAGE_REACTION_UPDATED", e3.EVENT_MESSAGE_THREADINFO_UPDATED = "EVENT_MESSAGE_THREADINFO_UPDATED", e3.EVENT_MESSAGE_OFFSET_UPDATED = "EVENT_MESSAGE_OFFSET_UPDATED", e3.REQUEST_MESSAGE = "REQUEST_MESSAGE", e3.EVENT_THREAD_INFO_UPDATED = "EVENT_THREADINFO_UPDATED", e3.EVENT_POLL_UPDATED = "EVENT_POLL_UPDATED", e3.EVENT_POLL_VOTED = "EVENT_POLL_VOTED", e3.SYNC_POLL_CHANGELOGS = "SYNC_POLL_CHANGELOGS", e3.REQUEST_RESEND_MESSAGE = "REQUEST_RESEND_MESSAGE", e3.REQUEST_THREADED_MESSAGE = "REQUEST_THREADED_MESSAGE", e3.REQUEST_MESSAGE_CHANGELOGS = "REQUEST_MESSAGE_CHANGELOGS", e3.SYNC_MESSAGE_FILL = "SYNC_MESSAGE_FILL", e3.SYNC_MESSAGE_BACKGROUND = "SYNC_MESSAGE_BACKGROUND", e3.SYNC_MESSAGE_CHANGELOGS = "SYNC_MESSAGE_CHANGELOGS", e3.LOCAL_MESSAGE_PENDING_CREATED = "LOCAL_MESSAGE_PENDING_CREATED", e3.LOCAL_MESSAGE_FAILED = "LOCAL_MESSAGE_FAILED", e3.LOCAL_MESSAGE_CANCELED = "LOCAL_MESSAGE_CANCELED", e3.LOCAL_MESSAGE_RESEND_STARTED = "LOCAL_MESSAGE_RESEND_STARTED";
}(no || (no = {}));
var ho;
n$2({}, no);
var fo = function(e3) {
  return e3.startsWith("EVENT_") || e3.startsWith("LOCAL_MESSAGE_") || e3 === no.SYNC_MESSAGE_FILL || e3 === no.SYNC_MESSAGE_CHANGELOGS || e3 === no.SYNC_POLL_CHANGELOGS;
}, po = function(e3) {
  function n2(t4) {
    var n3 = t4.messages, i3 = t4.source, r2 = t4.isWebSocketEventComing, s4 = void 0 !== r2 && r2, o2 = e3.call(this) || this;
    return o2.messages = n3, o2.source = i3, o2.isWebSocketEventComing = s4, o2;
  }
  return t$2(n2, e3), n2;
}(re), Eo = function(e3) {
  function n2(t4) {
    var n3 = t4.messageIds, i3 = t4.source, r2 = t4.isWebSocketEventComing, s4 = void 0 !== r2 && r2, o2 = e3.call(this) || this;
    return o2.messageIds = n3, o2.source = i3, o2.isWebSocketEventComing = s4, o2;
  }
  return t$2(n2, e3), n2;
}(re), go = function(e3) {
  function n2(t4) {
    var n3 = t4.messageDeletionTimestamp, i3 = t4.channelUrl, r2 = t4.source, s4 = e3.call(this) || this;
    return s4.messageDeletionTimestamp = n3, s4.channelUrl = i3, s4.source = r2, s4;
  }
  return t$2(n2, e3), n2;
}(re), vo = function(e3) {
  function n2(t4) {
    var n3 = t4.event, i3 = t4.source, r2 = t4.isWebSocketEventComing, s4 = void 0 !== r2 && r2, o2 = e3.call(this) || this;
    return o2.event = n3, o2.source = i3, o2.isWebSocketEventComing = s4, o2;
  }
  return t$2(n2, e3), n2;
}(re), bo = function(e3) {
  function n2(t4) {
    var n3 = t4.event, i3 = t4.source, r2 = t4.isWebSocketEventComing, s4 = void 0 !== r2 && r2, o2 = e3.call(this) || this;
    return o2.event = n3, o2.source = i3, o2.isWebSocketEventComing = s4, o2;
  }
  return t$2(n2, e3), n2;
}(re), mo = function(e3) {
  function n2(t4) {
    var n3 = t4.reqId, i3 = t4.source, r2 = e3.call(this) || this;
    return r2.reqId = n3, r2.source = i3, r2;
  }
  return t$2(n2, e3), n2;
}(re), yo = function(e3) {
  function n2(t4) {
    var n3 = t4.polls, i3 = t4.source, r2 = e3.call(this) || this;
    return r2.polls = n3, r2.source = i3, r2;
  }
  return t$2(n2, e3), n2;
}(re), wo = function(e3) {
  function n2(t4) {
    var n3 = t4.event, i3 = t4.source, r2 = e3.call(this) || this;
    return r2.event = n3, r2.source = i3, r2;
  }
  return t$2(n2, e3), n2;
}(re), So = function(e3) {
  function n2(t4) {
    var n3 = t4.event, i3 = t4.source, r2 = e3.call(this) || this;
    return r2.event = n3, r2.source = i3, r2;
  }
  return t$2(n2, e3), n2;
}(re);
!function(e3) {
  e3.OPEN = "open", e3.CLOSED = "closed";
}(ho || (ho = {}));
var To = "removed", No = function(e3) {
  switch (e3) {
    case "open":
      return ho.OPEN;
    case "closed":
      return ho.CLOSED;
    default:
      return null;
  }
}, Co = function(e3) {
  return !e3 || !!e3.text && S$1("string", e3.text);
}, Ao = function(e3) {
  function i3(t4, n2) {
    var i4, r2, s4, o2, a4, c3, u3, l2 = this;
    return (l2 = e3.call(this, t4) || this).pollId = 0, l2.id = 0, l2.text = null, l2.voteCount = 0, l2.createdBy = null, l2.createdAt = 0, l2.updatedAt = 0, l2._lastVotedAt = 0, l2.pollId = null !== (i4 = n2.poll_id) && void 0 !== i4 ? i4 : 0, l2.id = null !== (r2 = n2.id) && void 0 !== r2 ? r2 : 0, l2.text = null !== (s4 = n2.text) && void 0 !== s4 ? s4 : null, l2.voteCount = null !== (o2 = n2.vote_count) && void 0 !== o2 ? o2 : 0, l2.createdBy = null !== (a4 = n2.created_by) && void 0 !== a4 ? a4 : null, l2.createdAt = null !== (c3 = n2.created_at) && void 0 !== c3 ? c3 : 0, l2.updatedAt = null !== (u3 = n2.updated_at) && void 0 !== u3 ? u3 : 0, l2;
  }
  return t$2(i3, e3), i3.payloadify = function(t4) {
    return se(oe(n$2(n$2({}, e3.payloadify.call(this, t4)), { vote_count: t4.voteCount, poll_id: t4.pollId, text: t4.text, created_at: t4.createdAt, id: t4.id, created_by: t4.createdBy, updated_at: t4.updatedAt })));
  }, i3;
}(Jr$1), Io = function(e3) {
  function i3(t4, n2) {
    var i4, r2, s4, o2, a4, c3, u3, l2, h4, d4, _2, f2, p2, E3 = this;
    return (E3 = e3.call(this, t4) || this).id = 0, E3.title = null, E3.createdAt = 0, E3.updatedAt = 0, E3.closeAt = -1, E3.status = ho.CLOSED, E3.messageId = 0, E3.data = null, E3.voterCount = -1, E3.options = [], E3.createdBy = null, E3.allowUserSuggestion = false, E3.allowMultipleVotes = false, E3.votedPollOptionIds = [], E3.id = null !== (i4 = n2.id) && void 0 !== i4 ? i4 : 0, E3.title = null !== (r2 = n2.title) && void 0 !== r2 ? r2 : null, E3.createdAt = null !== (s4 = n2.created_at) && void 0 !== s4 ? s4 : 0, E3.updatedAt = null !== (o2 = n2.updated_at) && void 0 !== o2 ? o2 : 0, E3.closeAt = null !== (a4 = n2.close_at) && void 0 !== a4 ? a4 : -1, E3.status = null !== (c3 = No(n2.status)) && void 0 !== c3 ? c3 : ho.CLOSED, E3.messageId = null !== (u3 = n2.message_id) && void 0 !== u3 ? u3 : 0, E3.data = null !== (l2 = n2.data) && void 0 !== l2 ? l2 : null, E3.voterCount = null !== (h4 = n2.voter_count) && void 0 !== h4 ? h4 : -1, E3.options = n2.options ? n2.options.map(function(e4) {
      return new Ao(E3._iid, e4);
    }) : [], E3.createdBy = null !== (d4 = n2.created_by) && void 0 !== d4 ? d4 : null, E3.allowUserSuggestion = null !== (_2 = n2.allow_user_suggestion) && void 0 !== _2 && _2, E3.allowMultipleVotes = null !== (f2 = n2.allow_multiple_votes) && void 0 !== f2 && f2, E3.votedPollOptionIds = null !== (p2 = n2.voted_option_ids) && void 0 !== p2 ? p2 : [], E3;
  }
  return t$2(i3, e3), i3.prototype._applyPollUpdatePayload = function(e4) {
    var t4, n2, i4, r2, s4, o2, a4, c3, u3 = this;
    this.title = null !== (t4 = e4.title) && void 0 !== t4 ? t4 : this.title, this.updatedAt = null !== (n2 = e4.updated_at) && void 0 !== n2 ? n2 : this.updatedAt, this.closeAt = null !== (i4 = e4.close_at) && void 0 !== i4 ? i4 : this.closeAt, this.status = null !== (r2 = No(e4.status)) && void 0 !== r2 ? r2 : this.status, this.data = null !== (s4 = e4.data) && void 0 !== s4 ? s4 : this.data, this.voterCount = null !== (o2 = e4.voter_count) && void 0 !== o2 ? o2 : this.voterCount, e4.options && (this.options = e4.options.map(function(e5) {
      return new Ao(u3._iid, e5);
    }), this.votedPollOptionIds = e4.options.filter(function(e5) {
      return e5.vote_count > 0;
    }).map(function(e5) {
      return e5.id;
    })), this.allowUserSuggestion = null !== (a4 = e4.allow_user_suggestion) && void 0 !== a4 ? a4 : this.allowUserSuggestion, this.allowMultipleVotes = null !== (c3 = e4.allow_multiple_votes) && void 0 !== c3 ? c3 : this.allowMultipleVotes;
  }, i3.payloadify = function(t4) {
    return se(oe(n$2(n$2({}, e3.payloadify.call(this, t4)), { id: t4.id, title: t4.title, created_at: t4.createdAt, updated_at: t4.updatedAt, close_at: t4.closeAt, status: t4.status, message_id: t4.messageId, data: t4.data, voter_count: t4.voterCount, options: t4.options.map(function(e4) {
      return Ao.payloadify(e4);
    }), created_by: t4.createdBy, allow_user_suggestion: t4.allowUserSuggestion, allow_multiple_votes: t4.allowMultipleVotes, voted_option_ids: t4.votedPollOptionIds })));
  }, i3.prototype.applyPollUpdateEvent = function(e4) {
    var t4 = e4._payload.poll;
    return !(!t4 || this.id !== t4.id || t4.updated_at < this.updatedAt) && (this._applyPollUpdatePayload(t4), true);
  }, i3.prototype.applyPollVoteEvent = function(e4) {
    if (this.id !== e4.pollId) return false;
    var t4 = this.options, n2 = t4.map(function(e5) {
      return e5.id;
    }), i4 = e4._payload, r2 = Math.floor(i4.ts / 1e3);
    return i4.updated_vote_counts.forEach(function(e5) {
      var i5 = n2.indexOf(e5.option_id);
      if (i5 > -1) {
        var s4 = t4[i5];
        r2 >= s4._lastVotedAt && (s4.voteCount = e5.vote_count, s4._lastVotedAt = r2);
      }
    }), i4.req_id && i4.voted_option_ids && (this.votedPollOptionIds = i4.voted_option_ids), "number" == typeof i4.voter_count && (this.voterCount = i4.voter_count), true;
  }, i3.prototype.serialize = function() {
    return os$2(this);
  }, i3;
}(Jr$1), Oo = function() {
  function e3(e4, t4) {
    var n2;
    this.limit = 20, this._isLoading = false, this._hasNext = true, this._token = "", this._iid = e4, this.limit = null !== (n2 = t4.limit) && void 0 !== n2 ? n2 : 20;
  }
  return Object.defineProperty(e3.prototype, "hasNext", { get: function() {
    return this._hasNext;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isLoading", { get: function() {
    return this._isLoading;
  }, enumerable: false, configurable: true }), e3.prototype._validate = function() {
    return S$1("number", this.limit) && this.limit > 0;
  }, e3;
}(), ko = function(e3) {
  function n2(t4, n3, i3, r2) {
    var s4 = e3.call(this, t4, r2) || this;
    return s4.channelUrl = n3, s4.channelType = i3, s4;
  }
  return t$2(n2, e3), n2.prototype._validate = function() {
    return e3.prototype._validate.call(this) && S$1("string", this.channelUrl) && T$2(H$1, this.channelType);
  }, n2;
}(Oo), Do = function(e3) {
  this.pollId = 0, this.messageId = 0, this.pollId = e3.poll_id, this.messageId = e3.message_id, this._payload = e3;
}, Ro = function(e3) {
  function n2(t4) {
    var n3 = t4.title, i3 = t4.optionTexts, r2 = t4.data, s4 = t4.allowUserSuggestion, o2 = t4.allowMultipleVotes, a4 = t4.closeAt, c3 = e3.call(this) || this;
    return c3.method = ae.POST, c3.path = me$1, c3.params = { title: n3, options: i3, data: r2, allow_user_suggestion: s4, allow_multiple_votes: o2, close_at: a4 }, c3;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Lo = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.poll = new Io(t4, n3), i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), xo = function(e3) {
  function n2(t4) {
    var n3 = t4.channelUrl, i3 = t4.channelType, r2 = t4.pollId, s4 = e3.call(this) || this;
    return s4.method = ae.GET, s4.path = "".concat(me$1, "/").concat(encodeURIComponent(r2)), s4.params = { channel_url: n3, channel_type: i3 }, s4;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Uo = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.poll = new Io(t4, n3), i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), Po = function(e3) {
  function n2(t4) {
    var n3 = t4.channelUrl, i3 = t4.channelType, r2 = t4.pollId, s4 = t4.pollOptionId, o2 = e3.call(this) || this;
    return o2.method = ae.GET, o2.path = "".concat(me$1, "/").concat(encodeURIComponent(r2), "/options/").concat(encodeURIComponent(s4)), o2.params = { channel_url: n3, channel_type: i3 }, o2;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Mo = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.pollOption = new Ao(t4, n3), i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), Fo = function(e3) {
  function n2(t4) {
    var n3 = t4.channelType, i3 = t4.channelUrl, r2 = t4.timestamp, s4 = t4.token, o2 = e3.call(this) || this;
    return o2.method = ae.GET, o2.path = "".concat(Re$3(n3), "/").concat(encodeURIComponent(i3), "/polls/changelogs"), o2.params = se({ change_ts: r2, token: s4 }), o2;
  }
  return t$2(n2, e3), n2;
}(Fe$2), qo = function(e3) {
  function n2(t4, n3) {
    var i3 = e3.call(this, t4, n3) || this;
    return i3.updatedPolls = n3.updated.map(function(e4) {
      return function(e5, t5) {
        return new Io(e5, t5);
      }(t4, e4);
    }), i3.deletedPollIds = n3.deleted.map(function(e4) {
      return e4;
    }), i3.hasMore = n3.has_more, i3.nextToken = n3.next, i3;
  }
  return t$2(n2, e3), n2;
}(qe$2), Ho = { title: "", optionTexts: [], data: void 0, allowUserSuggestion: void 0, allowMultipleVotes: void 0, closeAt: -1 }, Vo = function(e3) {
  return S$1("string", e3.title) && (t4 = e3.optionTexts, C$1("string", t4) && t4.every(function(e4) {
    return "" !== e4.trim();
  })) && Co(e3.data) && S$1("boolean", e3.allowUserSuggestion, true) && S$1("boolean", e3.allowMultipleVotes, true) && S$1("number", e3.closeAt, true);
  var t4;
}, zo = { channelUrl: "", channelType: H$1.BASE, pollId: 0, pollOptionId: 0 }, Go = function(e3) {
  return S$1("string", e3.channelUrl) && "" !== e3.channelUrl && T$2(H$1, e3.channelType) && S$1("number", e3.pollId) && e3.pollId > 0 && S$1("number", e3.pollOptionId) && e3.pollOptionId > 0;
}, jo = { channelUrl: "", channelType: H$1.BASE, pollId: 0 }, Ko = function(e3) {
  return S$1("string", e3.channelUrl) && "" !== e3.channelUrl && T$2(H$1, e3.channelType) && S$1("number", e3.pollId);
}, Bo = {}, Qo = function() {
  function e3(e4, t4) {
    var n2 = t4.sdkState, i3 = t4.dispatcher, r2 = t4.sessionManager, s4 = t4.requestQueue, o2 = t4.logger;
    this._iid = e4, this._sdkState = n2, this._sessionManager = r2, this._requestQueue = s4, this._dispatcher = i3, this._logger = o2, Bo[e4] = this;
  }
  return e3.of = function(e4) {
    return Bo[e4];
  }, e3.prototype.buildPollFromSerializedData = function(e4) {
    var t4 = as$2(e4);
    return new Io(this._iid, Io.payloadify(t4));
  }, e3.prototype.get = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, i3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return cs$2(Ko(e4)).throw(b$2.invalidParameters), t4 = new xo(n$2({}, e4)), [4, this._requestQueue.send(t4)];
          case 1:
            return i3 = r2.sent(), [2, i3.as(Uo).poll];
        }
      });
    });
  }, e3.prototype.create = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, i3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return cs$2(Vo(e4)).throw(b$2.invalidParameters), t4 = new Ro(n$2({}, e4)), [4, this._requestQueue.send(t4)];
          case 1:
            return i3 = r2.sent(), [2, i3.as(Lo).poll];
        }
      });
    });
  }, e3.prototype.getOption = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, i3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return cs$2(Go(e4)).throw(b$2.invalidParameters), t4 = new Po(n$2({}, e4)), [4, this._requestQueue.send(t4)];
          case 1:
            return i3 = r2.sent(), [2, i3.as(Mo).pollOption];
        }
      });
    });
  }, e3.prototype.getPollChangeLogs = function(e4, t4, n2, i3) {
    return void 0 === i3 && (i3 = no.SYNC_POLL_CHANGELOGS), r$1(this, void 0, void 0, function() {
      var r2, o2, a4, c3, u3, l2, h4;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return r2 = new Fo(oe({ channelType: t4, channelUrl: e4, timestamp: "number" == typeof n2 ? n2 : null, token: "string" == typeof n2 ? n2 : null })), [4, this._requestQueue.send(r2)];
          case 1:
            return o2 = s4.sent(), a4 = o2.as(qo), c3 = a4.updatedPolls, u3 = a4.deletedPollIds, l2 = a4.hasMore, h4 = a4.nextToken, c3.length > 0 && this._dispatcher.dispatch(new yo({ polls: c3, source: i3 })), [2, { updatedPolls: c3, deletedPollIds: u3, hasMore: l2, token: h4 }];
        }
      });
    });
  }, e3;
}(), Wo = function(e3) {
  function n2(t4) {
    var n3 = t4.channelUrl, i3 = t4.channelType, r2 = t4.token, s4 = t4.limit, o2 = e3.call(this) || this;
    return o2.method = ae.GET, o2.path = me$1, o2.params = { channel_url: n3, channel_type: i3, token: r2, limit: s4 }, o2;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Zo = function(e3) {
  function n2(t4, n3) {
    var i3, r2 = this;
    return (r2 = e3.call(this, t4, n3) || this).polls = (null !== (i3 = n3.polls) && void 0 !== i3 ? i3 : []).map(function(e4) {
      return new Io(t4, e4);
    }), r2.token = n3.next, r2;
  }
  return t$2(n2, e3), n2;
}(qe$2), Yo = function(e3) {
  function i3(t4, n2) {
    return e3.call(this, t4, n2.channelUrl, n2.channelType, n2) || this;
  }
  return t$2(i3, e3), i3.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, i4, r2, o2, a4;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, t4 = new Wo(n$2(n$2({}, this), { token: this._token })), [4, e4.send(t4)]) : [3, 2] : [3, 5];
          case 1:
            return i4 = s4.sent(), r2 = i4.as(Zo), o2 = r2.polls, a4 = r2.token, this._token = a4, this._hasNext = !!a4, this._isLoading = false, [2, o2];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i3;
}(ko), Xo = function(e3) {
  function n2(t4) {
    var n3 = t4.channelUrl, i3 = t4.channelType, r2 = t4.pollId, s4 = t4.pollOptionId, o2 = t4.token, a4 = t4.limit, c3 = e3.call(this) || this;
    return c3.method = ae.GET, c3.path = "".concat(me$1, "/").concat(encodeURIComponent(r2), "/options/").concat(encodeURIComponent(s4), "/voters"), c3.params = { channel_url: n3, channel_type: i3, token: o2, limit: a4 }, c3;
  }
  return t$2(n2, e3), n2;
}(Fe$2), Jo = function(e3) {
  function n2(t4, n3) {
    var i3, r2 = this;
    return (r2 = e3.call(this, t4, n3) || this).voters = (null !== (i3 = n3.voters) && void 0 !== i3 ? i3 : []).map(function(e4) {
      return new ls$2(t4, e4);
    }), r2.token = n3.next, r2;
  }
  return t$2(n2, e3), n2;
}(qe$2), $o = function(e3) {
  function i3(t4, n2) {
    var i4 = e3.call(this, t4, n2.channelUrl, n2.channelType, n2) || this;
    return i4.pollId = n2.pollId, i4.pollOptionId = n2.pollOptionId, i4;
  }
  return t$2(i3, e3), i3.prototype._validate = function() {
    return e3.prototype._validate.call(this) && S$1("number", this.pollId) && S$1("number", this.pollOptionId);
  }, i3.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, i4, r2, o2, a4;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, t4 = new Xo(n$2(n$2({}, this), { pollId: this.pollId, pollOptionId: this.pollOptionId, token: this._token })), [4, e4.send(t4)]) : [3, 2] : [3, 5];
          case 1:
            return i4 = s4.sent(), r2 = i4.as(Jo), o2 = r2.voters, a4 = r2.token, this._token = a4, this._hasNext = !!a4, this._isLoading = false, [2, o2];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i3;
}(ko);
var ke$1, Pe$2 = function() {
  function r2(e3, t4, n2) {
    var r3, i3;
    this.width = 0, this.height = 0, this.realWidth = 0, this.realHeight = 0, this._requireAuth = false, this._iid = e3, this.plainUrl = t4.url, this.width = t4.width, this.height = t4.height, this.realWidth = null !== (r3 = t4.real_width) && void 0 !== r3 ? r3 : t4.width, this.realHeight = null !== (i3 = t4.real_height) && void 0 !== i3 ? i3 : t4.height, this._requireAuth = n2;
  }
  return r2.payloadify = function(n2) {
    return se(oe(n2 instanceof r2 ? { url: n2.plainUrl, width: n2.width, height: n2.height, real_width: n2.realWidth, real_height: n2.realHeight } : { url: "", width: n2.maxWidth, height: n2.maxHeight, real_width: 0, real_height: 0 }));
  }, Object.defineProperty(r2.prototype, "url", { get: function() {
    var e3 = uo.of(this._iid).sessionManager;
    return this._requireAuth && e3.ekey ? "".concat(this.plainUrl, "?auth=").concat(e3.ekey) : this.plainUrl;
  }, enumerable: false, configurable: true }), r2;
}(), Re$2 = function(t4) {
  function n2(n3) {
    var r2 = t4.call(this) || this;
    if (r2.method = ae.POST, r2.path = "".concat(he), r2.params = se({ file: n3.file, channel_url: n3.channelUrl }), n3.thumbnailSizes) for (var a4 = 0; a4 < n3.thumbnailSizes.length; a4++) {
      var o2 = n3.thumbnailSizes[a4], u3 = o2.maxWidth, c3 = o2.maxHeight;
      r2.params["thumbnail".concat(a4 + 1)] = "".concat(u3, ",").concat(c3);
    }
    return r2.requestId = n3.requestId, r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), xe$1 = function(e3) {
  function t4(t5, n2) {
    var r2, i3, s4, a4, o2 = this;
    return (o2 = e3.call(this, t5, n2) || this).url = n2.url, o2.fileSize = null !== (r2 = n2.file_size) && void 0 !== r2 ? r2 : 0, o2.thumbnails = null !== (s4 = null === (i3 = n2.thumbnails) || void 0 === i3 ? void 0 : i3.map(function(e4) {
      return new Pe$2(t5, e4, false);
    })) && void 0 !== s4 ? s4 : [], o2.requireAuth = null !== (a4 = n2.require_auth) && void 0 !== a4 && a4, o2;
  }
  return t$2(t4, e3), t4;
}(qe$2), De$2 = function(n2) {
  function i3(e3, t4) {
    var r2, i4, s4, a4, o2, u3 = this;
    return (u3 = n2.call(this, e3) || this).replyCount = 0, u3.memberCount = 0, u3.lastRepliedAt = 0, u3.updatedAt = 0, u3.replyCount = null !== (r2 = t4.reply_count) && void 0 !== r2 ? r2 : 0, u3.memberCount = null !== (i4 = t4.member_count) && void 0 !== i4 ? i4 : 0, u3.mostRepliedUsers = t4.most_replies && C$1("object", t4.most_replies) ? t4.most_replies.map(function(e4) {
      return new ls$2(u3._iid, e4);
    }) : [], u3.unreadReplyCount = null !== (s4 = t4.unread_message_count) && void 0 !== s4 ? s4 : 0, u3.isPushNotificationEnabled = "number" == typeof t4.push_enabled ? t4.push_enabled > 0 : void 0, u3.lastRepliedAt = null !== (a4 = t4.last_replied_at) && void 0 !== a4 ? a4 : 0, u3.updatedAt = null !== (o2 = t4.updated_at) && void 0 !== o2 ? o2 : 0, u3;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { reply_count: r2.replyCount, unread_message_count: r2.unreadReplyCount, member_count: r2.memberCount, most_replies: Array.isArray(r2.mostRepliedUsers) ? r2.mostRepliedUsers.map(function(e3) {
      return ls$2.payloadify(e3);
    }) : [], push_enabled: "boolean" == typeof r2.isPushNotificationEnabled ? r2.isPushNotificationEnabled ? 1 : 0 : void 0, last_replied_at: r2.lastRepliedAt, updated_at: r2.updatedAt })));
  }, Object.defineProperty(i3.prototype, "_isUpdateRequired", { get: function() {
    return void 0 === this.unreadReplyCount || void 0 === this.isPushNotificationEnabled;
  }, enumerable: false, configurable: true }), i3.prototype._updateFrom = function(e3) {
    var t4, n3;
    this.unreadReplyCount = null !== (t4 = e3.unreadReplyCount) && void 0 !== t4 ? t4 : this.unreadReplyCount, this.isPushNotificationEnabled = null !== (n3 = e3.isPushNotificationEnabled) && void 0 !== n3 ? n3 : this.isPushNotificationEnabled;
  }, i3;
}(Jr$1);
!function(e3) {
  e3.ADD = "add", e3.DELETE = "delete";
}(ke$1 || (ke$1 = {}));
var Le$1, Fe$1 = function(e3) {
  var t4;
  this.messageId = 0, this.operation = null, this.updatedAt = 0;
  var n2 = S$1("string", e3.msg_id) ? parseInt(e3.msg_id) : e3.msg_id, r2 = e3.user_id, i3 = e3.operation ? e3.operation.toLowerCase() : null, s4 = e3.reaction, a4 = e3.updated_at, o2 = e3.count, u3 = e3.sampled_user_ids, c3 = null !== (t4 = e3.sampled_user_info) && void 0 !== t4 ? t4 : {};
  n2 && S$1("string", r2) && S$1("string", i3) && T$2(ke$1, i3) && S$1("string", s4) && s4 && S$1("number", a4) && (this.messageId = n2, this.userId = r2, this.key = s4, this.operation = i3, this.updatedAt = a4, this._count = o2, this._sampledUserIds = u3, this._sampledUserInfoList = c3);
}, qe$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3, s4 = this;
    return (s4 = e3.call(this, t5) || this).userId = n2, s4.nickname = r2.nickname, s4.plainProfileUrl = r2.profile_url, s4.requireAuth = null !== (i3 = r2.require_auth_for_profile_image) && void 0 !== i3 && i3, s4;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "profileUrl", { get: function() {
    var e4 = uo.of(this._iid).sessionManager;
    return this.requireAuth && e4.ekey ? "".concat(this.plainProfileUrl, "?auth=").concat(e4.ekey) : this.plainProfileUrl;
  }, enumerable: false, configurable: true }), t4.payloadify = function(e4) {
    return { nickname: e4.nickname, profile_url: e4.plainProfileUrl, require_auth_for_profile_image: e4.requireAuth };
  }, t4;
}(Jr$1), ze$1 = function(i3) {
  function s4(e3, t4) {
    var r2, s5, a4, o$1, u3, c$1, l2, f2, y4, _2 = this;
    (_2 = i3.call(this, e3) || this)._sampledUserInfoList = [], _2._count = 0, _2._hasCurrentUserReacted = false;
    var g2 = t4.key, b3 = c([], a$1(null !== (o$1 = null !== (a4 = t4.sampled_user_ids) && void 0 !== a4 ? a4 : t4.user_ids) && void 0 !== o$1 ? o$1 : []), false), I3 = null !== (c$1 = null !== (u3 = t4.last_ts) && void 0 !== u3 ? u3 : t4.updated_at) && void 0 !== c$1 ? c$1 : 0, E3 = null !== (l2 = t4.is_self_included) && void 0 !== l2 ? l2 : b3.includes(uo.of(e3).sdkState.userId), T3 = null !== (f2 = t4.sampled_user_info) && void 0 !== f2 ? f2 : {};
    S$1("string", g2) && g2 && C$1("string", b3) && b3.length > 0 && S$1("number", I3) && (_2.key = g2, _2._sampledUserIds = b3, _2._updatedAt = I3, _2._count = null !== (y4 = t4.count) && void 0 !== y4 ? y4 : b3.length, _2._hasCurrentUserReacted = E3, Object.keys(T3).forEach(function(t5) {
      _2._sampledUserInfoList.push(new qe$1(e3, t5, T3[t5]));
    }));
    var w3 = {};
    try {
      for (var M4 = o(_2.sampledUserIds), S4 = M4.next(); !S4.done; S4 = M4.next()) {
        w3[S4.value] = _2.updatedAt;
      }
    } catch (e4) {
      r2 = { error: e4 };
    } finally {
      try {
        S4 && !S4.done && (s5 = M4.return) && s5.call(M4);
      } finally {
        if (r2) throw r2.error;
      }
    }
    return _2._version = w3, _2;
  }
  return t$2(s4, i3), Object.defineProperty(s4.prototype, "isEmpty", { get: function() {
    return 0 === this._count;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "userIds", { get: function() {
    return this._sampledUserIds;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "sampledUserIds", { get: function() {
    return this._sampledUserIds;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "sampledUserInfoList", { get: function() {
    return this._sampledUserInfoList;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "count", { get: function() {
    return this._count;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "updatedAt", { get: function() {
    return this._updatedAt;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "hasCurrentUserReacted", { get: function() {
    return this._hasCurrentUserReacted;
  }, enumerable: false, configurable: true }), s4.payloadify = function(n2) {
    var r2 = {};
    return n2._sampledUserInfoList.forEach(function(e3) {
      r2[e3.userId] = qe$1.payloadify(e3);
    }), se(oe({ key: n2.key, sampled_user_ids: n2._sampledUserIds, sampled_user_info: r2, count: n2._count, is_self_included: n2._hasCurrentUserReacted, last_ts: n2._updatedAt }));
  }, s4.prototype.applyEvent = function(e3) {
    var t4 = this;
    if (e3.key === this.key && this.updatedAt <= e3.updatedAt) if (e3._sampledUserIds) this._sampledUserIds = e3._sampledUserIds, this._sampledUserInfoList = [], Object.keys(e3._sampledUserInfoList).forEach(function(n3) {
      t4._sampledUserInfoList.push(new qe$1(t4._iid, n3, e3._sampledUserInfoList[n3]));
    }), this._count = e3._count, void 0 !== e3._hasCurrentUserReacted && (this._hasCurrentUserReacted = e3._hasCurrentUserReacted), this._updatedAt = e3.updatedAt;
    else {
      if (!this._version[e3.userId] || this._version[e3.userId] <= e3.updatedAt) {
        var n2 = this._sampledUserIds.indexOf(e3.userId);
        switch (e3.operation) {
          case ke$1.ADD:
            n2 < 0 && this._sampledUserIds.push(e3.userId);
            break;
          case ke$1.DELETE:
            n2 >= 0 && this._sampledUserIds.splice(n2, 1);
        }
        this._count = this._sampledUserIds.length, this._version[e3.userId] = e3.updatedAt;
      }
      this._updatedAt = Math.max(this.updatedAt, e3.updatedAt);
    }
  }, s4;
}(Jr$1), Be$1 = function() {
  function n2(e3) {
    this.secureUrl = null, this.type = null, this.width = 0, this.height = 0, this.alt = null, this.url = e3.url, e3.secure_url && (this.secureUrl = e3.secure_url), e3.type && (this.type = e3.type), e3.width && (this.width = e3.width), e3.height && (this.height = e3.height), e3.alt && (this.alt = e3.alt);
  }
  return n2.payloadify = function(n3) {
    var r2, i3;
    return se(oe({ url: n3.url, secure_url: n3.secureUrl, type: n3.type, width: null !== (r2 = n3.width) && void 0 !== r2 ? r2 : 0, height: null !== (i3 = n3.height) && void 0 !== i3 ? i3 : 0, alt: n3.alt }));
  }, n2;
}(), je$1 = function() {
  function n2(e3) {
    this.title = null, this.url = null, this.description = null, this.defaultImage = null, e3["og:title"] && (this.title = e3["og:title"]), e3["og:url"] && (this.url = e3["og:url"]), e3["og:description"] && (this.description = e3["og:description"]), e3["og:image"] && (this.defaultImage = new Be$1(e3["og:image"]));
  }
  return n2.payloadify = function(n3) {
    return se(oe({ "og:title": n3.title, "og:url": n3.url, "og:description": n3.description, "og:image": n3.defaultImage ? Be$1.payloadify(n3.defaultImage) : null }));
  }, n2;
}(), Ke$1 = function() {
  function n2(e3) {
    var t4, n3;
    this.volume = 0, this.name = null !== (t4 = e3.name) && void 0 !== t4 ? t4 : "default", this.volume = null !== (n3 = e3.volume) && void 0 !== n3 ? n3 : 1;
  }
  return n2.prototype.serialize = function() {
    return { name: this.name, volume: this.volume };
  }, n2.payloadify = function(n3) {
    return se(oe({ name: n3.name, volume: n3.volume }));
  }, n2;
}();
!function(e3) {
  e3.GOOD = "good", e3.BAD = "bad";
}(Le$1 || (Le$1 = {}));
var Qe$1 = function() {
  function n2(e3) {
    this.id = e3.id, this.rating = e3.rating, this.comment = e3.comment;
  }
  return n2._getStatus = function(e3) {
    return e3 ? "id" in e3 ? "SUBMITTED" : "NO_FEEDBACK" : "NOT_APPLICABLE";
  }, n2._isSubmitted = function(e3) {
    return "SUBMITTED" === n2._getStatus(e3);
  }, n2._getPayloadByStatus = function(e3) {
    return "NO_FEEDBACK" === e3 ? {} : null;
  }, n2.payloadify = function(n3) {
    return se(oe({ id: n3.id, rating: n3.rating, comment: n3.comment }));
  }, n2;
}(), Ge = function(n2) {
  function i3(e3, t4) {
    var r2, i4 = this;
    return (i4 = n2.call(this, e3, t4) || this).isBlockedByMe = false, i4.role = T$2(V, t4.role) ? t4.role : V.NONE, i4.isBlockedByMe = null !== (r2 = t4.is_blocked_by_me) && void 0 !== r2 && r2, i4;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { role: r2.role, is_blocked_by_me: r2.isBlockedByMe })));
  }, i3;
}(ls$2), Ve$1 = function() {
  function n2(e3) {
    this.key = e3.key, this.value = C$1("string", e3.value) ? c([], a$1(e3.value), false) : [];
  }
  return n2.payloadify = function(n3) {
    var r2;
    return se(oe({ key: n3.key, value: null !== (r2 = n3.value) && void 0 !== r2 ? r2 : [] }));
  }, n2;
}(), He$2 = function(e3) {
  switch (e3) {
    case G.BASE:
      return "";
    case G.USER:
      return "MESG";
    case G.FILE:
      return "FILE";
    case G.ADMIN:
      return "ADMM";
  }
}, We$1 = function(n2) {
  function i3(e3, t4) {
    var r2, i4, s4, a4, o2, u3, l2, d4, h4, p2 = this;
    (p2 = n2.call(this, e3) || this).channelType = H$1.BASE, p2.messageType = G.BASE, p2.mentionType = null, p2.mentionedUsers = null, p2.mentionedUserIds = null, p2.metaArrays = [], p2.extendedMessage = {}, p2.createdAt = 0, p2.updatedAt = 0, p2.channelUrl = t4.channel_url, p2.channelType = T$2(H$1, t4.channel_type) ? t4.channel_type : H$1.GROUP, t4.channel && (t4.channel.channel_url && (p2.channelUrl = t4.channel.channel_url), t4.channel.channel_type && (p2.channelType = t4.channel.channel_type)), p2.data = null !== (r2 = t4.data) && void 0 !== r2 ? r2 : "", p2.customType = null !== (i4 = t4.custom_type) && void 0 !== i4 ? i4 : "", p2.mentionType = T$2(B, t4.mention_type) ? t4.mention_type : null, p2.mentionedUsers = t4.mentioned_users ? t4.mentioned_users.map(function(e4) {
      return new ls$2(p2._iid, e4);
    }) : null, p2.mentionedUserIds = null !== (s4 = t4.mentioned_user_ids) && void 0 !== s4 ? s4 : null, p2.mentionedUsers && !p2.mentionedUserIds && (p2.mentionedUserIds = p2.mentionedUsers.map(function(e4) {
      return e4.userId;
    }));
    var m4 = null !== (a4 = t4.metaarray) && void 0 !== a4 ? a4 : {}, v2 = null !== (o2 = t4.metaarray_key_order) && void 0 !== o2 ? o2 : Object.keys(m4).sort(function(e4, t5) {
      return e4.localeCompare(t5);
    });
    p2.metaArrays = [];
    for (var y4 = 0; y4 < v2.length; y4++) {
      var _2 = v2[y4];
      p2.metaArrays.push(new Ve$1({ key: _2, value: m4[_2] || [] }));
    }
    return t4.sorted_metaarray && (p2.metaArrays = t4.sorted_metaarray.map(function(e4) {
      return new Ve$1(e4);
    })), p2.extendedMessage = null !== (u3 = t4.extended_message) && void 0 !== u3 ? u3 : {}, p2.extendedMessagePayload = t4.extended_message_payload, p2.createdAt = null !== (d4 = null !== (l2 = t4.created_at) && void 0 !== l2 ? l2 : t4.ts) && void 0 !== d4 ? d4 : 0, p2.updatedAt = null !== (h4 = t4.updated_at) && void 0 !== h4 ? h4 : 0, p2;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    var i4, s4;
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { channel_url: r2.channelUrl, channel_type: r2.channelType, type: He$2(r2.messageType), data: r2.data, custom_type: r2.customType, mention_type: r2.mentionType, mentioned_user_ids: r2.mentionedUserIds, mentioned_users: null === (i4 = r2.mentionedUsers) || void 0 === i4 ? void 0 : i4.map(function(e3) {
      return ls$2.payloadify(e3);
    }), sorted_metaarray: null === (s4 = r2.metaArrays) || void 0 === s4 ? void 0 : s4.map(function(e3) {
      return Ve$1.payloadify(e3);
    }), extended_message: r2.extendedMessage, extended_message_payload: r2.extendedMessagePayload, created_at: r2.createdAt, updated_at: r2.updatedAt })));
  }, i3.prototype.isIdentical = function(e3) {
    return true;
  }, i3.prototype.isEqual = function(e3) {
    return w$1(this, e3);
  }, i3.prototype.isUserMessage = function() {
    return this.messageType === G.USER;
  }, i3.prototype.isFileMessage = function() {
    return this.messageType === G.FILE && !Object.prototype.hasOwnProperty.call(this, "fileInfoList");
  }, i3.prototype.isMultipleFilesMessage = function() {
    return this.messageType === G.FILE && Object.prototype.hasOwnProperty.call(this, "fileInfoList");
  }, i3.prototype.isAdminMessage = function() {
    return this.messageType === G.ADMIN;
  }, i3.prototype.serialize = function() {
    return os$2(this);
  }, i3.prototype.getMetaArraysByKeys = function(e3) {
    return this.metaArrays.filter(function(t4) {
      return e3.includes(t4.key);
    });
  }, i3;
}(Jr$1), Ye$1 = function(e3) {
  function t4(t5, n2) {
    var r2, i3, s4 = this;
    return (s4 = e3.call(this, t5) || this).channelUrl = null !== (r2 = n2.channel_url) && void 0 !== r2 ? r2 : "", s4.channelType = null !== (i3 = n2.channel_type) && void 0 !== i3 ? i3 : H$1.GROUP, s4.reader = new ls$2(s4._iid, n2.user), s4.readAt = n2.ts, s4;
  }
  return t$2(t4, e3), t4;
}(Jr$1), Je$1 = function(e3) {
  function t4(t5) {
    var n2 = t5.channelUrl;
    return e3.call(this, { code: "READ", ackRequired: true, payload: { channel_url: n2 } }) || this;
  }
  return t$2(t4, e3), t4;
}(Ge$1);
(function(n2) {
  function s4(r2) {
    var s5 = n2.call(this) || this, a4 = r2.channelUrl, o2 = r2.channelType, u3 = r2.userId, c3 = r2.notificationIds;
    return s5.method = ae.PUT, s5.path = "".concat(Re$3(o2), "/").concat(encodeURIComponent(a4), "/messages/mark_as_read"), s5.params = se(oe({ user_id: u3, message_ids: c3 })), s5;
  }
  return t$2(s4, n2), s4;
})(Fe$2);
var Ze$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "READ", r2) || this;
    return i3.readStatus = new Ye$1(t5, r2), i3;
  }
  return t$2(t4, e3), t4;
}(ze$2);
(function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.readAt = n2.ts, r2.unreadMessageCount = n2.unread_message_count, r2;
  }
  return t$2(t4, e3), t4;
})(qe$2);
var et = function(e3) {
  function t4(t5) {
    var n2 = t5.channelUrl, r2 = t5.messageId;
    return e3.call(this, { code: "READ", ackRequired: true, payload: { channel_url: n2, parent_message_id: r2 } }) || this;
  }
  return t$2(t4, e3), t4;
}(Ge$1), tt = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.pushEnabled, o2 = e3.call(this) || this;
    return o2.method = ae.PUT, o2.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/thread_push"), o2.params = { push_enabled: a4 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    return e3.call(this, t5, n2) || this;
  }
  t$2(t4, e3);
}(qe$2);
var nt = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.rating, o2 = t5.comment, u3 = e3.call(this) || this;
    return u3.method = ae.POST, u3.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/feedbacks"), u3.params = { rating: a4, comment: o2 }, u3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), rt = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.feedback = new Qe$1(n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), it = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.feedbackId, o2 = t5.rating, u3 = t5.comment, c3 = e3.call(this) || this;
    return c3.method = ae.PUT, c3.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/feedbacks/").concat(a4), c3.params = { rating: o2, comment: u3 }, c3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), st = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.feedback = new Qe$1(n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), at = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.feedbackId, o2 = e3.call(this) || this;
    return o2.method = ae.DELETE, o2.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/feedbacks/").concat(a4), o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.feedback = new Qe$1(n2), r2;
  }
  t$2(t4, e3);
}(qe$2);
var ot, ut, ct = function(i3) {
  function s4(e3, t4) {
    var n2, r2, s5, a4, o2, c3 = this;
    return (c3 = i3.call(this, e3) || this).plainUrl = "", c3.fileName = null, c3.mimeType = null, c3.fileSize = 0, c3.thumbnails = [], c3._requireAuth = false, c3.plainUrl = null !== (n2 = t4.url) && void 0 !== n2 ? n2 : "", c3.fileName = null !== (r2 = t4.file_name) && void 0 !== r2 ? r2 : null, c3.mimeType = null !== (s5 = t4.file_type) && void 0 !== s5 ? s5 : null, c3.fileSize = null !== (a4 = t4.file_size) && void 0 !== a4 ? a4 : 0, c3._requireAuth = null !== (o2 = t4.require_auth) && void 0 !== o2 && o2, c3.thumbnails = t4.thumbnails ? t4.thumbnails.map(function(e4) {
      var t5;
      return new Pe$2(c3._iid, "string" == typeof e4 ? { url: e4, width: 0, height: 0 } : n$2(n$2({}, e4), { url: (null !== (t5 = e4.url) && void 0 !== t5 ? t5 : "").split("auth=")[0] }), c3._requireAuth);
    }) : [], c3;
  }
  return t$2(s4, i3), s4.payloadify = function(n2) {
    var r2;
    return se(oe({ url: n2.plainUrl, file_name: n2.fileName, file_type: n2.mimeType, file_size: n2.fileSize, thumbnails: null === (r2 = n2.thumbnails) || void 0 === r2 ? void 0 : r2.map(function(e3) {
      var t4;
      return { url: (null !== (t4 = e3.plainUrl) && void 0 !== t4 ? t4 : "").split("auth=")[0], width: e3.width, height: e3.height, real_width: e3.realWidth, real_height: e3.realHeight };
    }), require_auth: n2._requireAuth }));
  }, Object.defineProperty(s4.prototype, "url", { get: function() {
    var e3 = uo.of(this._iid).sessionManager;
    return this._requireAuth && e3.ekey ? "".concat(this.plainUrl, "?auth=").concat(e3.ekey) : this.plainUrl;
  }, enumerable: false, configurable: true }), s4;
}(Jr$1), lt = function(e3) {
  var t4 = e3.channelUrl, n2 = e3.channelType, r2 = e3.parentMessage;
  this.channelUrl = t4, this.channelType = n2, this.parentMessage = r2;
};
!function(e3) {
  e3.NUMBER = "number", e3.ENUM = "enum", e3.TEXT = "text", e3.REGEX = "regex", e3.DECIMAL_PLACE = "decimal_place";
}(ot || (ot = {})), function(e3) {
  e3.TEXT = "text", e3.TEXTAREA = "textarea", e3.NUMBER = "number", e3.PHONE = "phone", e3.EMAIL = "email", e3.CHIP = "chip";
}(ut || (ut = {}));
var dt, ht, ft = function() {
  function n2(e3, t4) {
    var n3 = t4.id, r2 = t4.name, i3 = t4.items, s4 = t4.version, a4 = t4.is_submitted;
    this.messageId = e3, this.id = n3, this.name = r2, this.items = i3.map(function(e4) {
      return new pt(e4);
    }).sort(function(e4, t5) {
      return e4.sortOrder - t5.sortOrder;
    }), this.version = null != s4 ? s4 : 1, this._isSubmitted = a4;
  }
  return Object.defineProperty(n2.prototype, "isSubmitted", { get: function() {
    var e3;
    return null !== (e3 = this._isSubmitted) && void 0 !== e3 ? e3 : this.items.some(function(e4) {
      return Array.isArray(e4.submittedValues);
    });
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isSubmittable", { get: function() {
    return this.items.every(function(e3) {
      return e3.required ? !!(Array.isArray(e3.draftValues) && e3.draftValues.length > 0) && e3.isValid(e3.draftValues) : !(Array.isArray(e3.draftValues) && e3.draftValues.length > 0) || e3.isValid(e3.draftValues);
    });
  }, enumerable: false, configurable: true }), n2.payloadify = function(n3) {
    return se(oe({ id: n3.id, name: n3.name, items: n3.items.map(function(e3) {
      return pt.payloadify(e3);
    }), version: n3.version, is_submitted: n3._isSubmitted }));
  }, n2.isMessageFormPayload = function(e3) {
    return Boolean(null == e3 ? void 0 : e3.message_form);
  }, n2;
}(), pt = function() {
  function n2(t4) {
    var n3 = t4.id, r2 = t4.name, i3 = t4.required, s4 = t4.sort_order, a4 = t4.placeholder, o2 = t4.style, u3 = t4.item_type, c3 = t4.validators, l2 = t4.value, d4 = t4.values;
    this.id = n3, this.name = r2, this.required = i3, this.sortOrder = s4, this.placeholder = a4, 0 === Object.keys(o2).length ? this.style = { layout: u3 } : this.style = se({ layout: o2.layout, options: o2.options, defaultOptions: o2.default_options, resultCount: o2.result_count }), d4 ? this.submittedValues = d4 : l2 && (this.submittedValues = [l2]), this._validators = c3;
  }
  return n2.prototype.isValid = function(e3) {
    var t4 = this;
    return e3.every(function(e4) {
      var n3 = function(e5, t5) {
        return t5.every(function(t6) {
          switch (t6.key) {
            case ot.NUMBER:
              var n4 = Number(e5);
              return !(isNaN(n4) || t6.min && "number" != typeof t6.min || t6.max && "number" != typeof t6.max || "number" == typeof t6.min && n4 < t6.min || "number" == typeof t6.max && n4 > t6.max);
            case ot.ENUM:
              return "string" == typeof e5 && (!(t6.enums && Array.isArray(t6.enums) && t6.enums.length > 0 && !t6.enums.includes(e5)) || t6.allow_other);
            case ot.TEXT:
              return !("string" != typeof e5 || "number" == typeof t6.min_length && e5.length < t6.min_length || "number" == typeof t6.max_length && e5.length > t6.max_length);
            case ot.REGEX:
              if ("string" != typeof e5) return false;
              if (t6.regex) {
                if ("string" != typeof t6.regex) return false;
                if (!new RegExp(t6.regex).test(e5)) return false;
              }
              return true;
            case ot.DECIMAL_PLACE:
              return 0 !== e5.length && (n4 = Number(e5), !(isNaN(n4) || (!t6.max_decimal_place || "number" == typeof t6.max_decimal_place) && t6.max_decimal_place && !function(e6, t7) {
                var n5 = e6.toString(), r2 = n5.indexOf(".");
                return -1 === r2 || n5.slice(r2 + 1).length <= t7;
              }(n4, t6.max_decimal_place)));
            default:
              return true;
          }
        });
      }(e4, t4._validators);
      return n3;
    });
  }, n2.payloadify = function(n3) {
    return se(oe({ id: n3.id, name: n3.name, required: n3.required, sort_order: n3.sortOrder, placeholder: n3.placeholder, style: se({ layout: n3.style.layout, options: n3.style.options, default_options: n3.style.defaultOptions, result_count: n3.style.resultCount }), item_type: n3.style.layout, validators: n3._validators, values: n3.submittedValues }));
  }, n2;
}(), mt = function(t4) {
  function n2(n3) {
    var r2 = t4.call(this) || this;
    return r2.method = ae.POST, r2.path = "".concat(Oe$1, "/").concat(n3.formId, "/submit"), r2.params = se({ message_id: n3.messageId, items: n3.items }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2);
!function(e3) {
  e3.PENDING = "pending", e3.SENT = "sent", e3.FAILED = "failed", e3.CANCELED = "canceled";
}(dt || (dt = {})), function(e3) {
  e3.PENDING = "pending", e3.IN_QUEUE = "in_queue", e3.SENT = "sent", e3.FAILED = "failed", e3.CANCELED = "canceled", e3.REMOVED = "removed";
}(ht || (ht = {}));
var vt, yt = function(i3) {
  function s4(e3, t4) {
    var n2, r2, s5, a4, o2, u3, c3, l2, d4, h4 = this;
    return (h4 = i3.call(this, e3, t4) || this).parentMessage = null, h4.silent = false, h4.isOperatorMessage = false, h4.threadInfo = null, h4.reactions = [], h4.appleCriticalAlertOptions = null, h4.scheduledInfo = null, h4.suggestedReplies = null, h4.myFeedback = null, h4.myFeedbackStatus = "NOT_APPLICABLE", h4.messageForm = null, h4._isContinuousMessages = false, h4._scheduledStatus = null, h4._poll = null, h4.messageId = null !== (r2 = null !== (n2 = t4.msg_id) && void 0 !== n2 ? n2 : t4.message_id) && void 0 !== r2 ? r2 : 0, h4.parentMessageId = null !== (s5 = "string" == typeof t4.parent_message_id ? parseInt(t4.parent_message_id) : t4.parent_message_id) && void 0 !== s5 ? s5 : 0, h4.threadInfo = t4.thread_info ? new De$2(h4._iid, t4.thread_info) : null, t4.reactions_summary ? h4.reactions = t4.reactions_summary.map(function(t5) {
      return new ze$1(e3, t5);
    }) : t4.reactions ? h4.reactions = t4.reactions.map(function(t5) {
      return new ze$1(e3, t5);
    }) : h4.reactions = [], h4.ogMetaData = t4.og_tag ? new je$1(t4.og_tag) : null, h4.silent = null !== (a4 = t4.silent) && void 0 !== a4 && a4, h4.isOperatorMessage = null !== (o2 = t4.is_op_msg) && void 0 !== o2 && o2, h4.appleCriticalAlertOptions = t4.apple_critical_alert_options ? new Ke$1(t4.apple_critical_alert_options) : null, "number" == typeof t4.scheduled_message_id && "number" == typeof t4.scheduled_at && t4.scheduled_status && (h4.scheduledInfo = { scheduledMessageId: t4.scheduled_message_id, scheduledAt: t4.scheduled_at }, h4._scheduledStatus = t4.scheduled_status), h4._isContinuousMessages = null !== (u3 = t4.is_continuous_messages) && void 0 !== u3 && u3, h4.myFeedback = Qe$1._isSubmitted(t4.feedback) ? new Qe$1(t4.feedback) : null, h4.myFeedbackStatus = Qe$1._getStatus(t4.feedback), h4.suggestedReplies = null !== (l2 = null === (c3 = t4.extended_message_payload) || void 0 === c3 ? void 0 : c3.suggested_replies) && void 0 !== l2 ? l2 : null, h4.messageForm = ft.isMessageFormPayload(t4.extended_message_payload) ? new ft(h4.messageId, t4.extended_message_payload.message_form) : null, h4.message = null !== (d4 = t4.message) && void 0 !== d4 ? d4 : "", h4._poll = t4.poll ? new Io(h4._iid, t4.poll) : null, h4;
  }
  return t$2(s4, i3), s4.payloadify = function(n2) {
    var r2, s5;
    return se(oe(n$2(n$2({}, i3.payloadify.call(this, n2)), { message_id: n2.messageId, parent_message_id: n2.parentMessageId, thread_info: n2.threadInfo ? De$2.payloadify(n2.threadInfo) : null, reactions_summary: n2.reactions.map(function(e3) {
      return ze$1.payloadify(e3);
    }), og_tag: n2.ogMetaData ? je$1.payloadify(n2.ogMetaData) : null, silent: n2.silent, is_op_msg: n2.isOperatorMessage, apple_critical_alert_options: n2.appleCriticalAlertOptions ? Ke$1.payloadify(n2.appleCriticalAlertOptions) : null, scheduled_message_id: null === (r2 = n2.scheduledInfo) || void 0 === r2 ? void 0 : r2.scheduledMessageId, scheduled_at: null === (s5 = n2.scheduledInfo) || void 0 === s5 ? void 0 : s5.scheduledAt, scheduled_status: n2._scheduledStatus, feedback: n2.myFeedback ? Qe$1.payloadify(n2.myFeedback) : Qe$1._getPayloadByStatus(n2.myFeedbackStatus), message: n2.message, poll: n2._poll ? Io.payloadify(n2._poll) : null })));
  }, s4._getParentMessageInfoPayload = function(n2) {
    return se(oe({ type: He$2(n2.messageType), ts: n2.createdAt, user: n2.sender ? Ge.payloadify(n2.sender) : null, message: n2.message, file: { url: n2.plainUrl, name: n2.name, type: n2.type, require_auth: n2.requireAuth }, files: Array.isArray(n2.fileInfoList) ? n2.fileInfoList.map(function(e3) {
      return ct.payloadify(e3);
    }) : null }));
  }, s4.prototype.isIdentical = function(e3) {
    return this.messageId === e3.messageId;
  }, s4.prototype.applyThreadInfoUpdateEvent = function(e3) {
    return this.messageId === e3.targetMessageId && (e3.threadInfo._isUpdateRequired && this.threadInfo && e3.threadInfo._updateFrom(this.threadInfo), this.threadInfo = e3.threadInfo, true);
  }, s4.prototype._findReactionIndex = function(e3) {
    for (var t4 = 0; t4 < this.reactions.length; t4++) if (this.reactions[t4].key === e3) return t4;
    return -1;
  }, s4.prototype.applyReactionEvent = function(e3) {
    var t4 = uo.of(this._iid).sdkState;
    if (this.messageId === e3.messageId) switch (e3.operation) {
      case ke$1.ADD:
        e3.userId === t4.userId && (e3._hasCurrentUserReacted = true), -1 !== (r2 = this._findReactionIndex(e3.key)) ? this.reactions[r2].applyEvent(e3) : e3._sampledUserIds ? this.reactions.push(new ze$1(this._iid, { key: e3.key, sampled_user_ids: e3._sampledUserIds, sampled_user_info: e3._sampledUserInfoList, count: e3._count, is_self_included: e3._hasCurrentUserReacted, last_ts: e3.updatedAt })) : this.reactions.push(new ze$1(this._iid, { key: e3.key, user_ids: [e3.userId], updated_at: e3.updatedAt }));
        break;
      case ke$1.DELETE:
        var r2;
        -1 !== (r2 = this._findReactionIndex(e3.key)) && (e3._sampledUserIds ? 0 === e3._count ? this.reactions.splice(r2, 1) : (e3.userId === t4.userId && (e3._hasCurrentUserReacted = false), this.reactions[r2].applyEvent(e3)) : (this.reactions[r2].applyEvent(e3), this.reactions[r2].isEmpty && this.reactions.splice(r2, 1)));
    }
  }, s4.prototype.applyParentMessage = function(e3) {
    if (!this.parentMessage) return this.parentMessage = e3, true;
    if (this.parentMessageId === e3.messageId) {
      var t4 = this.parentMessage.updatedAt;
      if (e3.updatedAt >= t4) return this.parentMessage = e3, true;
    }
    return false;
  }, s4.prototype.applyPoll = function(e3) {
    return !(this._poll && this._poll.id === e3.id && this._poll.updatedAt > e3.updatedAt) && (this._poll = e3, true);
  }, Object.defineProperty(s4.prototype, "poll", { get: function() {
    return this._poll;
  }, enumerable: false, configurable: true }), s4.prototype._triggerThreadInfoUpdatedEvent = function() {
    return r$1(this, void 0, void 0, function() {
      var e3;
      return s$1(this, function(t4) {
        return (e3 = uo.of(this._iid).dispatcher).dispatch(new lt({ channelType: H$1.GROUP, channelUrl: this.channelUrl, parentMessage: this })), e3.dispatch(new po({ messages: [this], source: no.EVENT_MESSAGE_THREADINFO_UPDATED })), [2];
      });
    });
  }, s4.prototype.markThreadAsRead = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new et({ channelUrl: this.channelUrl, messageId: this.messageId }), [4, e3.send(t4)];
          case 1:
            return r2.sent(), this.threadInfo && 0 !== this.threadInfo.unreadReplyCount ? (this.threadInfo.unreadReplyCount = 0, [4, this._triggerThreadInfoUpdatedEvent()]) : [3, 3];
          case 2:
            r2.sent(), r2.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, s4.prototype.setPushNotificationEnabled = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return t4 = uo.of(this._iid).requestQueue, r2 = new tt({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, pushEnabled: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), this.threadInfo && this.threadInfo.isPushNotificationEnabled !== e3 && (this.threadInfo.isPushNotificationEnabled = e3), [2];
        }
      });
    });
  }, s4.prototype.submitMessageForm = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            if (t4 = uo.of(this._iid).requestQueue, r2 = null, i4 = null, s5 = this.messageForm, !e3 && s5) {
              if (!s5.isSubmittable) throw new b$2({ code: u$1.INVALID_PARAMETER, message: "The form is not submittable. Please check all form items are valid before submitting." });
              if (s5.isSubmitted) throw new b$2({ code: u$1.INVALID_PARAMETER, message: "The form has already been submitted." });
              r2 = s5.id, i4 = s5.items.reduce(function(e4, t5) {
                return e4.push({ form_item_id: t5.id, values: Array.isArray(t5.draftValues) ? t5.draftValues : [] }), e4;
              }, []);
            } else e3 && (r2 = e3.formId, i4 = Object.entries(e3.answers).reduce(function(e4, t5) {
              var n2 = a$1(t5, 2), r3 = n2[0], i5 = n2[1], s6 = Number(r3);
              if (Number.isNaN(s6)) throw new b$2({ code: u$1.INVALID_PARAMETER, message: "Keys in answers must be numeric string." });
              return e4.push({ form_item_id: s6, value: i5 }), e4;
            }, []));
            if (!r2 || !i4) throw new b$2({ code: u$1.INVALID_PARAMETER, message: "Missing one or more required inputs: formId, answers." });
            return a4 = new mt({ messageId: this.messageId, formId: r2, items: i4 }), [4, t4.send(a4)];
          case 1:
            return o2.sent(), [2];
        }
      });
    });
  }, s4.prototype.submitFeedback = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5, a4, o2;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return t4 = uo.of(this._iid), r2 = t4.requestQueue, i4 = t4.dispatcher, s5 = new nt({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, rating: e3.rating, comment: e3.comment }), [4, r2.send(s5)];
          case 1:
            return a4 = u3.sent(), o2 = a4.as(rt), this.myFeedback = o2.feedback, this.myFeedbackStatus = "SUBMITTED", i4.dispatch(new po({ messages: [this], source: no.EVENT_MESSAGE_FEEDBACK_ADDED })), [2];
        }
      });
    });
  }, s4.prototype.updateFeedback = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5, a4, o2;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return t4 = uo.of(this._iid), r2 = t4.requestQueue, i4 = t4.dispatcher, s5 = new it({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, feedbackId: e3.id, rating: e3.rating, comment: e3.comment }), [4, r2.send(s5)];
          case 1:
            return a4 = u3.sent(), o2 = a4.as(st), this.myFeedback = o2.feedback, this.myFeedbackStatus = "SUBMITTED", i4.dispatch(new po({ messages: [this], source: no.EVENT_MESSAGE_FEEDBACK_UPDATED })), [2];
        }
      });
    });
  }, s4.prototype.deleteFeedback = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return t4 = uo.of(this._iid), r2 = t4.requestQueue, i4 = t4.dispatcher, s5 = new at({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, feedbackId: e3 }), [4, r2.send(s5)];
          case 1:
            return a4.sent(), this.myFeedback = null, this.myFeedbackStatus = "NO_FEEDBACK", i4.dispatch(new po({ messages: [this], source: no.EVENT_MESSAGE_FEEDBACK_DELETED })), [2];
        }
      });
    });
  }, s4;
}(We$1), _t = function(n2) {
  function i3(e3, t4) {
    var r2, i4, s4, a4, o2 = this;
    if ((o2 = n2.call(this, e3, t4) || this).reqId = "", o2.replyToChannel = false, o2.errorCode = 0, o2.sender = t4.user ? new Ge(o2._iid, t4.user) : t4.sender_id, o2.reqId = null !== (i4 = null !== (r2 = t4.req_id) && void 0 !== r2 ? r2 : t4.request_id) && void 0 !== i4 ? i4 : "", o2.replyToChannel = null !== (s4 = t4.is_reply_to_channel) && void 0 !== s4 && s4, t4.request_state && T$2(Z, t4.request_state) && (o2.sendingStatus = t4.request_state), !o2.sendingStatus) if (o2.messageId > 0) o2.sendingStatus = Z.SUCCEEDED;
    else if (o2.scheduledInfo) switch (t4.scheduled_status && (o2._scheduledStatus = t4.scheduled_status), t4.scheduled_status) {
      case ht.SENT:
      case ht.IN_QUEUE:
        o2.sendingStatus = Z.SUCCEEDED;
        break;
      case ht.PENDING:
        o2.sendingStatus = Z.SCHEDULED;
        break;
      case ht.FAILED:
      case ht.REMOVED:
        o2.sendingStatus = Z.FAILED;
        break;
      case ht.CANCELED:
        o2.sendingStatus = Z.CANCELED;
    }
    else o2.sendingStatus = Z.PENDING;
    return o2.errorCode = null !== (a4 = t4.error_code) && void 0 !== a4 ? a4 : 0, o2._messageToken = t4.mesg_token, o2;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { user: Ge.payloadify(r2.sender), req_id: r2.reqId, is_reply_to_channel: r2.replyToChannel, request_state: r2.sendingStatus, error_code: r2.errorCode, mesg_token: r2._messageToken })));
  }, Object.defineProperty(i3.prototype, "isResendable", { get: function() {
    return (this.sendingStatus === Z.FAILED || this.sendingStatus === Z.CANCELED) && I$2(this.errorCode);
  }, enumerable: false, configurable: true }), i3.prototype.isIdentical = function(e3) {
    return this.messageId > 0 && e3.messageId > 0 ? this.messageId === e3.messageId : this.reqId === e3.reqId;
  }, i3;
}(yt), gt = { prevResultSize: 0, nextResultSize: 0, isInclusive: false, reverse: false, messageTypeFilter: j.ALL, customTypesFilter: void 0, senderUserIdsFilter: void 0, includeReactions: false, includeMetaArray: false, includeParentMessageInfo: false }, bt = function(e3) {
  return S$1("number", e3.prevResultSize) && S$1("number", e3.nextResultSize) && S$1("boolean", e3.isInclusive) && S$1("boolean", e3.reverse) && S$1("string", e3.messageTypeFilter) && T$2(j, e3.messageTypeFilter) && C$1("string", e3.customTypesFilter, true) && C$1("string", e3.senderUserIdsFilter, true) && S$1("boolean", e3.includeMetaArray) && S$1("boolean", e3.includeReactions) && S$1("boolean", e3.includeParentMessageInfo);
}, It$1 = function(n2) {
  function i3(r2, i4) {
    var s4, a4, o2, c3 = this;
    if ((c3 = n2.call(this, r2, i4) || this).translations = {}, c3.messageType = G.ADMIN, c3.translations = null !== (s4 = i4.translations) && void 0 !== s4 ? s4 : {}, i4.parent_message_info) {
      var l2 = i4.parent_message_info;
      c3.parentMessage = At$1(r2, se(oe(n$2(n$2({}, l2), { message_id: c3.parentMessageId, channel_url: c3.channelUrl, channel_type: c3.channelType, file: l2.file, url: null === (a4 = l2.file) || void 0 === a4 ? void 0 : a4.url, require_auth: null === (o2 = l2.file) || void 0 === o2 ? void 0 : o2.require_auth }))));
    }
    return c3;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { translations: r2.translations, parent_message_info: r2.parentMessage ? n2._getParentMessageInfoPayload.call(this, r2.parentMessage) : null })));
  }, i3.prototype.getThreadedMessagesByTimestamp = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n3 = n$2(n$2({}, gt), t4), cs$2(this.messageId > 0 && S$1("number", e3) && bt(n3)).throw(b$2.invalidParameters), [4, la.of(this._iid).getThreadedMessagesByTimestamp(this, e3, n3)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, i3;
}(yt), Et$1 = function() {
  function n2(e3) {
    var t4, n3;
    this.detail = {}, this.type = null !== (t4 = e3.type) && void 0 !== t4 ? t4 : "", this.vendor = null !== (n3 = e3.vendor) && void 0 !== n3 ? n3 : "", e3.detail && S$1("object", e3.detail) && !Array.isArray(e3.detail) && (this.detail = e3.detail);
  }
  return n2.payloadify = function(n3) {
    return se(oe({ type: n3.type, vendor: n3.vendor, detail: n3.detail }));
  }, n2;
}(), Tt$1 = function() {
  function t4(e3) {
    this.status = e3.status, e3.original_message_info && (this.originalMessageInfo = { createdAt: e3.original_message_info.ts, messageId: e3.original_message_info.id });
  }
  return t4.payloadify = function(t5) {
    return se({ status: t5.status, original_message_info: t5.originalMessageInfo ? { id: t5.originalMessageInfo.messageId, ts: t5.originalMessageInfo.createdAt } : void 0 });
  }, t4;
}(), wt = function(n2) {
  function i3(r2, i4) {
    var s4, a4, o$1, c3, l2, d4, h4, f2 = this;
    if ((f2 = n2.call(this, r2, i4) || this).messageParams = null, f2.mentionedMessageTemplate = void 0, f2.translations = {}, f2.translationTargetLanguages = [], f2.messageSurvivalSeconds = -1, f2.plugins = [], f2.messageType = G.USER, f2.translations = null !== (o$1 = i4.translations) && void 0 !== o$1 ? o$1 : {}, f2.translationTargetLanguages = null !== (c3 = i4.target_langs) && void 0 !== c3 ? c3 : [], 0 === Object.keys(f2.translations).length && f2.translationTargetLanguages.length > 0) try {
      for (var p2 = o(f2.translationTargetLanguages), m4 = p2.next(); !m4.done; m4 = p2.next()) {
        var y4 = m4.value;
        f2.translations[y4] = "";
      }
    } catch (e3) {
      s4 = { error: e3 };
    } finally {
      try {
        m4 && !m4.done && (a4 = p2.return) && a4.call(p2);
      } finally {
        if (s4) throw s4.error;
      }
    }
    if (f2.mentionedMessageTemplate = i4.mentioned_message_template, f2.messageSurvivalSeconds = null !== (l2 = i4.message_survival_seconds) && void 0 !== l2 ? l2 : -1, f2.plugins = i4.plugins ? i4.plugins.map(function(e3) {
      return new Et$1(e3);
    }) : [], i4.parent_message_info) {
      var _2 = i4.parent_message_info;
      f2.parentMessage = At$1(r2, se(oe(n$2(n$2({}, _2), { created_at: _2.ts, message_id: f2.parentMessageId, channel_url: f2.channelUrl, channel_type: f2.channelType, file: _2.file, url: null === (d4 = _2.file) || void 0 === d4 ? void 0 : d4.url, require_auth: null === (h4 = _2.file) || void 0 === h4 ? void 0 : h4.require_auth }))));
    }
    return i4.review_info && (f2.messageReviewInfo = new Tt$1(i4.review_info)), f2;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { translations: r2.translations, message_survival_seconds: r2.messageSurvivalSeconds, mentioned_message_template: r2.mentionedMessageTemplate, plugins: r2.plugins.map(function(e3) {
      return Et$1.payloadify(e3);
    }), parent_message_info: r2.parentMessage ? n2._getParentMessageInfoPayload.call(this, r2.parentMessage) : null, review_info: r2.messageReviewInfo ? Tt$1.payloadify(r2.messageReviewInfo) : void 0 })));
  }, i3.prototype.getThreadedMessagesByTimestamp = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n3 = n$2(n$2({}, gt), t4), cs$2(this.messageId > 0 && S$1("number", e3) && bt(n3)).throw(b$2.invalidParameters), [4, la.of(this._iid).getThreadedMessagesByTimestamp(this, e3, n3)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, i3;
}(_t), Mt$1 = function(n2) {
  function i3(r2, i4) {
    var s4, a4, o2, c3, l2, d4, h4, f2, p2 = this;
    if ((p2 = n2.call(this, r2, i4) || this).messageParams = null, p2.fileInfoList = [], p2.messageSurvivalSeconds = -1, p2.messageType = G.FILE, p2.data = null !== (o2 = null !== (a4 = null === (s4 = i4.file) || void 0 === s4 ? void 0 : s4.data) && void 0 !== a4 ? a4 : i4.custom) && void 0 !== o2 ? o2 : "", p2.fileInfoList = null !== (l2 = null === (c3 = i4.files) || void 0 === c3 ? void 0 : c3.map(function(e3) {
      return new ct(r2, e3);
    })) && void 0 !== l2 ? l2 : [], p2.messageSurvivalSeconds = null !== (d4 = i4.message_survival_seconds) && void 0 !== d4 ? d4 : -1, i4.parent_message_info) {
      var m4 = i4.parent_message_info;
      p2.parentMessage = At$1(r2, se(oe(n$2(n$2({}, m4), { created_at: m4.ts, message_id: p2.parentMessageId, channel_url: p2.channelUrl, channel_type: p2.channelType, file: m4.file, url: null === (h4 = m4.file) || void 0 === h4 ? void 0 : h4.url, require_auth: null === (f2 = m4.file) || void 0 === f2 ? void 0 : f2.require_auth }))));
    }
    return p2;
  }
  return t$2(i3, n2), i3.prototype.getThreadedMessagesByTimestamp = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n3 = n$2(n$2({}, gt), t4), cs$2(this.messageId > 0 && S$1("number", e3) && bt(n3)).throw(b$2.invalidParameters), [4, la.of(this._iid).getThreadedMessagesByTimestamp(this, e3, n3)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, i3.payloadify = function(r2) {
    var i4, s4, a4, o2, c3, l2;
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { file: { name: null !== (s4 = null === (i4 = r2.fileInfoList[0]) || void 0 === i4 ? void 0 : i4.fileName) && void 0 !== s4 ? s4 : "", size: null !== (o2 = null === (a4 = r2.fileInfoList[0]) || void 0 === a4 ? void 0 : a4.fileSize) && void 0 !== o2 ? o2 : 0, type: null !== (l2 = null === (c3 = r2.fileInfoList[0]) || void 0 === c3 ? void 0 : c3.mimeType) && void 0 !== l2 ? l2 : "", data: r2.data }, files: Array.isArray(r2.fileInfoList) ? r2.fileInfoList.map(function(e3) {
      return ct.payloadify(e3);
    }) : null, message_survival_seconds: r2.messageSurvivalSeconds, parent_message_info: r2.parentMessage ? n2._getParentMessageInfoPayload.call(this, r2.parentMessage) : null })));
  }, i3._isMultipleFilesMessagePayload = function(e3) {
    var t4 = e3.files;
    return Array.isArray(t4) && t4.length >= 2;
  }, i3._isMultipleFilesMessageSerializedData = function(e3) {
    var t4 = e3.fileInfoList;
    return Array.isArray(t4);
  }, i3;
}(_t);
!function(e3) {
  e3.SENT = "SENT", e3.READ = "READ";
}(vt || (vt = {}));
var St$1 = function(n2) {
  function i3(e3, t4) {
    var r2, i4, s4 = this;
    if ((s4 = n2.call(this, e3, t4) || this).notificationData = null, s4.notificationId = t4.notification_message_id, s4.messageType = G.ADMIN, s4.messageStatus = null !== (r2 = t4.message_status) && void 0 !== r2 ? r2 : vt.SENT, s4.priority = null !== (i4 = t4.priority) && void 0 !== i4 ? i4 : X.NORMAL, s4.notificationEventDeadline = t4.notification_event_deadline, 0 === s4.extendedMessage.sub_type) try {
      var a4 = JSON.parse(s4.extendedMessage.sub_data), o2 = a4.label, u3 = a4.tags, c3 = void 0 === u3 ? [] : u3, l2 = a4.template_key, d4 = a4.template_variables;
      s4.notificationData = { label: o2, tags: c3, templateKey: l2, templateVariables: d4 };
    } catch (e4) {
    }
    return s4;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), { notification_message_id: r2.notificationId, message_status: r2.messageStatus, priority: r2.priority, notification_event_deadline: r2.notificationEventDeadline })));
  }, i3.prototype.isIdentical = function(e3) {
    return this.notificationId === e3.notificationId;
  }, i3;
}(We$1), Ut$1 = function(e3) {
  if (e3.notificationId) return St$1.payloadify(e3);
  switch (e3.messageType) {
    case G.USER:
      return wt.payloadify(e3);
    case G.FILE:
      return e3.fileInfoList ? Mt$1.payloadify(e3) : Nt$1.payloadify(e3);
    case G.ADMIN:
      return It$1.payloadify(e3);
    default:
      throw b$2.unknown;
  }
}, At$1 = function(e3, t4) {
  if (t4.notification_message_id) return new St$1(e3, t4);
  switch (t4.type) {
    case "MESG":
      return new wt(e3, t4);
    case "FILE":
      return Mt$1._isMultipleFilesMessagePayload(t4) ? new Mt$1(e3, t4) : new Nt$1(e3, t4);
    case "ADMM":
    case "BRDM":
      return new It$1(e3, t4);
    default:
      return null;
  }
}, Nt$1 = function(i3) {
  function s4(n2, r2) {
    var s5, a4, o2, c3, l2, d4, h4, f2, p2, m4, v2, y4, _2, b3, I3 = this;
    (I3 = i3.call(this, n2, r2) || this).messageParams = null, I3.plainUrl = "", I3.requireAuth = false, I3.thumbnails = [], I3.messageSurvivalSeconds = -1, I3.messageType = G.FILE;
    var E3 = r2.file;
    if (I3.plainUrl = (null !== (a4 = null !== (s5 = null == E3 ? void 0 : E3.url) && void 0 !== s5 ? s5 : r2.url) && void 0 !== a4 ? a4 : "").split("?auth=")[0], I3.name = null !== (c3 = null !== (o2 = null == E3 ? void 0 : E3.name) && void 0 !== o2 ? o2 : r2.name) && void 0 !== c3 ? c3 : "File", I3.size = null !== (d4 = null !== (l2 = null == E3 ? void 0 : E3.size) && void 0 !== l2 ? l2 : r2.size) && void 0 !== d4 ? d4 : 0, I3.data = null !== (f2 = null !== (h4 = null == E3 ? void 0 : E3.data) && void 0 !== h4 ? h4 : r2.custom) && void 0 !== f2 ? f2 : "", I3.type = E3 ? null !== (p2 = E3.type) && void 0 !== p2 ? p2 : "" : null !== (m4 = r2.type) && void 0 !== m4 ? m4 : "", I3.requireAuth = null !== (v2 = r2.require_auth) && void 0 !== v2 && v2, I3.thumbnails = r2.thumbnails ? r2.thumbnails.map(function(e3) {
      var t4;
      return new Pe$2(I3._iid, "string" == typeof e3 ? { url: e3, width: 0, height: 0 } : n$2(n$2({}, e3), { url: (null !== (t4 = e3.url) && void 0 !== t4 ? t4 : "").split("auth=")[0] }), I3.requireAuth);
    }) : [], I3.messageSurvivalSeconds = null !== (y4 = r2.message_survival_seconds) && void 0 !== y4 ? y4 : -1, r2.parent_message_info) {
      var T3 = r2.parent_message_info;
      I3.parentMessage = At$1(n2, se(oe(n$2(n$2({}, T3), { created_at: T3.ts, message_id: I3.parentMessageId, channel_url: I3.channelUrl, channel_type: I3.channelType, file: T3.file, url: null === (_2 = T3.file) || void 0 === _2 ? void 0 : _2.url, require_auth: null === (b3 = T3.file) || void 0 === b3 ? void 0 : b3.require_auth }))));
    }
    return I3;
  }
  return t$2(s4, i3), s4.payloadify = function(n2) {
    var r2;
    return se(oe(n$2(n$2({}, i3.payloadify.call(this, n2)), { url: n2.plainUrl, require_auth: n2.requireAuth, file: { name: n2.name, size: n2.size, type: n2.type, data: n2.data }, thumbnails: null === (r2 = n2.thumbnails) || void 0 === r2 ? void 0 : r2.map(function(e3) {
      return { url: e3.plainUrl, width: e3.width, height: e3.height, real_width: e3.realWidth, real_height: e3.realHeight };
    }), message_survival_seconds: n2.messageSurvivalSeconds, parent_message_info: n2.parentMessage ? i3._getParentMessageInfoPayload.call(this, n2.parentMessage) : null })));
  }, Object.defineProperty(s4.prototype, "url", { get: function() {
    var e3 = uo.of(this._iid).sessionManager;
    return this.requireAuth && e3.ekey ? "".concat(this.plainUrl, "?auth=").concat(e3.ekey) : this.plainUrl;
  }, enumerable: false, configurable: true }), s4.prototype.getThreadedMessagesByTimestamp = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n2 = n$2(n$2({}, gt), t4), cs$2(this.messageId > 0 && S$1("number", e3) && bt(n2)).throw(b$2.invalidParameters), [4, la.of(this._iid).getThreadedMessagesByTimestamp(this, e3, n2)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, s4;
}(_t), Ct$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = n2.file, i3 = n2.fileUrl, s4 = n2.fileName, a4 = n2.fileSize, o2 = n2.mimeType, u3 = n2.thumbnailSizes, c3 = n2._uploadedMetaData, l2 = n2._thumbnails, d4 = e3.call(this, t5) || this;
    return d4._plainUrl = i3, d4.file = r2, d4.fileName = s4, d4.fileSize = a4, d4.mimeType = o2, d4.thumbnailSizes = u3, d4._uploadedMetaData = c3, d4._thumbnails = l2, d4;
  }
  return t$2(t4, e3), t4.getPlainUrl = function(e4) {
    return e4 instanceof t4 ? e4._plainUrl : e4.fileUrl;
  }, Object.defineProperty(t4.prototype, "fileUrl", { get: function() {
    var e4, t5 = uo.of(this._iid).sessionManager;
    return this._plainUrl && (null === (e4 = this._uploadedMetaData) || void 0 === e4 ? void 0 : e4.requireAuth) && t5.ekey ? "".concat(this._plainUrl, "?auth=").concat(t5.ekey) : this._plainUrl;
  }, set: function(e4) {
    this._plainUrl = e4;
  }, enumerable: false, configurable: true }), t4.prototype.toJSON = function() {
    return { file: this.file, fileUrl: this._plainUrl, fileName: this.fileName, fileSize: this.fileSize, mimeType: this.mimeType, thumbnailSizes: this.thumbnailSizes, _thumbnails: this._thumbnails, _uploadedMetaData: this._uploadedMetaData };
  }, t4;
}(Jr$1), Ot$1 = function(n2) {
  function i3(r2) {
    var i4, s4, a4, o2, u3 = [];
    return r2.mentionType === B.USERS && (r2.mentionedUserIds ? u3 = r2.mentionedUserIds : r2.mentionedUsers && (u3 = r2.mentionedUsers.map(function(e3) {
      return e3.userId;
    }))), n2.call(this, { code: "FILE", ackRequired: true, payload: se(oe({ channel_url: r2.channelUrl, files: r2.files ? xt$1(r2.files) : null, url: r2.url, name: null !== (i4 = r2.fileName) && void 0 !== i4 ? i4 : "", type: null !== (s4 = r2.mimeType) && void 0 !== s4 ? s4 : "", size: null !== (a4 = r2.fileSize) && void 0 !== a4 ? a4 : 0, custom: r2.data, custom_type: r2.customType, thumbnails: null === (o2 = r2._thumbnails) || void 0 === o2 ? void 0 : o2.map(function(e3) {
      return Pe$2.payloadify(e3);
    }), require_auth: r2.requireAuth, metaarray: r2.metaArrays, mention_type: r2.mentionType, mentioned_user_ids: u3, push_option: r2.pushNotificationDeliveryOption && r2.pushNotificationDeliveryOption !== W.DEFAULT ? r2.pushNotificationDeliveryOption : void 0, apple_critical_alert_options: r2.appleCriticalAlertOptions ? Ke$1.payloadify(r2.appleCriticalAlertOptions) : null, silent: r2.silent, reply_to_channel: r2.isReplyToChannel, parent_message_id: r2.parentMessageId ? r2.parentMessageId : null, req_id: r2.reqId, poll_id: r2.pollId, pin_message: r2.isPinnedMessage, message: r2.message })) }) || this;
  }
  return t$2(i3, n2), i3;
}(Ge$1), kt = function(n2) {
  function s4(r2) {
    var s5, a4, o2 = this;
    o2 = n2.call(this) || this;
    var u3 = [];
    return r2.mentionType === B.USERS && (r2.mentionedUserIds ? u3 = r2.mentionedUserIds : r2.mentionedUsers && (u3 = r2.mentionedUsers.map(function(e3) {
      return e3.userId;
    }))), o2.method = ae.POST, o2.path = "".concat(Re$3(r2.channelType), "/").concat(encodeURIComponent(r2.channelUrl), "/messages"), o2.params = se(oe({ message_type: G.FILE, user_id: r2.userId, files: r2.files ? xt$1(r2.files) : null, url: r2.fileUrl, mention_type: r2.mentionType, mentioned_user_ids: u3, file_name: r2.fileName, file_size: r2.fileSize, file_type: r2.mimeType, data: r2.data, custom_type: r2.customType, thumbnails: null === (s5 = r2._thumbnails) || void 0 === s5 ? void 0 : s5.map(function(e3) {
      return Pe$2.payloadify(e3);
    }), require_auth: r2.requireAuth, sorted_metaarray: null === (a4 = r2.metaArrays) || void 0 === a4 ? void 0 : a4.map(function(e3) {
      return Ve$1.payloadify(e3);
    }), push_option: r2.pushNotificationDeliveryOption, parent_message_id: r2.parentMessageId ? r2.parentMessageId : null, apple_critical_alert_options: r2.appleCriticalAlertOptions ? Ke$1.payloadify(r2.appleCriticalAlertOptions) : null, reply_to_channel: r2.isReplyToChannel, req_id: r2.reqId, poll_id: r2.pollId, pin_message: r2.isPinnedMessage })), o2;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Pt$1 = function(e3) {
  function t4(t5, r2, i3) {
    var s4, a4, o2, u3, c3 = this;
    (c3 = e3.call(this, t5, "FILE", i3) || this).message = i3.files && i3.files.length >= 2 ? new Mt$1(t5, i3) : new Nt$1(t5, i3);
    var l2 = uo.of(t5).sdkState;
    return c3.isMentioned = xe$2(c3.message.mentionType, null !== (o2 = null !== (s4 = c3.message.mentionedUserIds) && void 0 !== s4 ? s4 : null === (a4 = c3.message.mentionedUsers) || void 0 === a4 ? void 0 : a4.map(function(e4) {
      return e4.userId;
    })) && void 0 !== o2 ? o2 : [], l2.userId), c3.forceUpdateLastMessage = null !== (u3 = i3.force_update_last_message) && void 0 !== u3 && u3, c3;
  }
  return t$2(t4, e3), t4;
}(ze$2), Rt$1 = function(e3) {
  function t4(t5, r2) {
    var i3, s4, a4, o2, u3 = this;
    (u3 = e3.call(this, t5, r2) || this).message = r2.files && r2.files.length >= 2 ? new Mt$1(t5, r2) : new Nt$1(t5, r2);
    var c3 = uo.of(t5).sdkState;
    return u3.isMentioned = xe$2(u3.message.mentionType, null !== (a4 = null !== (i3 = u3.message.mentionedUserIds) && void 0 !== i3 ? i3 : null === (s4 = u3.message.mentionedUsers) || void 0 === s4 ? void 0 : s4.map(function(e4) {
      return e4.userId;
    })) && void 0 !== a4 ? a4 : [], c3.userId), u3.forceUpdateLastMessage = null !== (o2 = r2.force_update_last_message) && void 0 !== o2 && o2, u3;
  }
  return t$2(t4, e3), t4;
}(qe$2);
function xt$1(n2) {
  return n2.map(function(n3) {
    var r2, i3;
    return se(oe({ url: Ct$1.getPlainUrl(n3), file_name: n3.fileName, file_type: n3.mimeType, file_size: n3.fileSize, thumbnails: null === (r2 = n3._thumbnails) || void 0 === r2 ? void 0 : r2.map(function(e3) {
      return Pe$2.payloadify(e3);
    }), require_auth: null === (i3 = n3._uploadedMetaData) || void 0 === i3 ? void 0 : i3.requireAuth }));
  });
}
var Dt$1;
!function(e3) {
  e3[e3.PENDING = 0] = "PENDING", e3[e3.UPLOADING = 1] = "UPLOADING", e3[e3.UPLOADED = 2] = "UPLOADED", e3[e3.SENDING = 3] = "SENDING", e3[e3.FAILED = 4] = "FAILED";
}(Dt$1 || (Dt$1 = {}));
var Lt$1 = function() {
  function e3(e4, t4) {
    var n2 = t4.sdkState, r2 = t4.dispatcher, i3 = t4.requestQueue, s4 = t4.onlineDetector, a4 = t4.cacheContext, o2 = this;
    this._queueMap = /* @__PURE__ */ new Map(), this._iid = e4, this._sdkState = n2, this._requestQueue = i3, this._cacheContext = a4, this._dispatcher = r2, this._dispatcher.on(function(e5) {
      e5 instanceof Fr$1 && (o2._connectionState = e5.stateType);
    }), this._onlineDetector = s4;
  }
  return Object.defineProperty(e3.prototype, "_shouldSendThroughWebSocket", { get: function() {
    return this._connectionState === Rr$1.CONNECTED || this._connectionState === Rr$1.CONNECTING || this._connectionState === Rr$1.RECONNECTING;
  }, enumerable: false, configurable: true }), e3.prototype._sendFileMessage = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return n2 = this._createSendFileMessageRequestParams(e4, t4), this._shouldSendThroughWebSocket ? (r2 = new Ot$1(n2), [4, this._requestQueue.send(r2)]) : [3, 2];
          case 1:
            return i3 = s4.sent(), [2, i3.as(Pt$1).message];
          case 2:
            return r2 = new kt(n$2(n$2({}, n2), { userId: this._sdkState.userId })), [4, this._requestQueue.send(r2)];
          case 3:
            return i3 = s4.sent(), [2, i3.as(Rt$1).message];
        }
      });
    });
  }, e3.prototype._createSendFileMessageRequestParams = function(e4, t4) {
    var n2 = n$2(n$2({}, t4.params), { channelUrl: e4.url, channelType: e4.channelType, reqId: t4.requestId, url: "" });
    if (t4.multipleFileUploadInfo) {
      var r2 = t4.params;
      n2.files = r2.fileInfoList;
    } else {
      r2 = t4.params;
      n2.url = r2.fileUrl, n2.requireAuth = r2.requireAuth;
    }
    return n2;
  }, e3.prototype._resolveMessageQueue = function(e4) {
    var t4;
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4, o$1, u3, c3, l2, d4, h4, f2, p2;
      return s$1(this, function(m4) {
        switch (m4.label) {
          case 0:
            if (!(n2 = this._queueMap.get(e4.url))) return [3, 21];
            if (n2.isResolving) return [3, 20];
            n2.isResolving = true, r2 = [], i3 = true, m4.label = 1;
          case 1:
            m4.trys.push([1, 15, 16, 17]), s4 = o(n2.messageQueue), a4 = s4.next(), m4.label = 2;
          case 2:
            if (a4.done) return [3, 14];
            switch (o$1 = a4.value, o$1.state) {
              case Dt$1.PENDING:
              case Dt$1.UPLOADING:
                return [3, 3];
              case Dt$1.UPLOADED:
                return [3, 4];
              case Dt$1.FAILED:
                return [3, 12];
            }
            return [3, 13];
          case 3:
            return i3 = false, r2.push(o$1), [3, 13];
          case 4:
            if (!i3) return [3, 10];
            m4.label = 5;
          case 5:
            return m4.trys.push([5, 8, , 9]), o$1.state = Dt$1.SENDING, [4, this._sendFileMessage(e4, o$1)];
          case 6:
            return u3 = m4.sent(), o$1.deferred.resolve(u3), [4, ms$2(100)];
          case 7:
            return m4.sent(), [3, 9];
          case 8:
            return c3 = m4.sent(), o$1.deferred.reject(c3), [3, 9];
          case 9:
            return [3, 11];
          case 10:
            r2.push(o$1), m4.label = 11;
          case 11:
            return [3, 13];
          case 12:
            return l2 = null !== (t4 = o$1.error) && void 0 !== t4 ? t4 : b$2.unknown, o$1.deferred.reject(l2.code === u$1.REQUEST_CANCELED ? b$2.fileUploadCanceled : l2), [3, 13];
          case 13:
            return a4 = s4.next(), [3, 2];
          case 14:
            return [3, 17];
          case 15:
            return d4 = m4.sent(), f2 = { error: d4 }, [3, 17];
          case 16:
            try {
              a4 && !a4.done && (p2 = s4.return) && p2.call(s4);
            } finally {
              if (f2) throw f2.error;
            }
            return [7];
          case 17:
            return h4 = n2.isResolveRequestPending, n2.messageQueue = r2, n2.isResolving = false, n2.isResolveRequestPending = false, h4 ? [4, this._resolveMessageQueue(e4)] : [3, 19];
          case 18:
            m4.sent(), m4.label = 19;
          case 19:
            return [3, 21];
          case 20:
            n2.isResolveRequestPending = true, m4.label = 21;
          case 21:
            return [2];
        }
      });
    });
  }, e3.prototype._uploadNextPendingItem = function(e4) {
    var t4;
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4, o2, u3, c3, l2, d4;
      return s$1(this, function(h4) {
        switch (h4.label) {
          case 0:
            return (n2 = this._queueMap.get(e4.url)) && (r2 = n2.messageQueue.find(function(e5) {
              return e5.state === Dt$1.PENDING;
            })) ? r2.multipleFileUploadInfo ? (i3 = r2.multipleFileUploadInfo, s4 = i3.uploadIndex, a4 = i3.uploadCount, o2 = i3.requestHandler, d4 = r2.params, u3 = d4.fileInfoList[s4], !k(u3.file) || (null === (t4 = u3._uploadedMetaData) || void 0 === t4 ? void 0 : t4.isUploaded) ? [3, 2] : [4, this._tryUploadNextItemAndUpdateItemState(e4, n2, r2)]) : [3, 4] : [3, 9];
          case 1:
            return h4.sent(), [3, 3];
          case 2:
            r2.state = s4 < a4 - 1 ? Dt$1.PENDING : Dt$1.UPLOADED, h4.label = 3;
          case 3:
            return c3 = d4.fileInfoList[s4], l2 = r2.multipleFileUploadInfo.uploadIndex++, r2.multipleFileUploadInfo.isCopy || null == o2 || o2._triggerOnFileUploaded(r2.requestId, l2, c3, r2.error), [3, 7];
          case 4:
            return d4 = r2.params, k(d4.file) ? [4, this._tryUploadNextItemAndUpdateItemState(e4, n2, r2)] : [3, 6];
          case 5:
            return h4.sent(), [3, 7];
          case 6:
            d4.thumbnailSizes = [], r2.state = Dt$1.UPLOADED, h4.label = 7;
          case 7:
            return this._uploadNextPendingItem(e4), [4, this._resolveMessageQueue(e4)];
          case 8:
            h4.sent(), h4.label = 9;
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype._tryUploadNextItemAndUpdateItemState = function(e4, t4, r2) {
    return r$1(this, void 0, void 0, function() {
      var i3, s4, a4, o2, u3, c3;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            return [4, this._onlineDetector.isOnline()];
          case 1:
            if (i3 = l2.sent(), !uo.of(this._iid).sessionManager.currentUser || !i3) return r2.error = b$2.connectionRequired, r2.state = Dt$1.FAILED, [2];
            if (!(t4.uploadQueue.length < 6)) return [3, 9];
            r2.state = Dt$1.UPLOADING, t4.uploadQueue.push(r2), l2.label = 2;
          case 2:
            return l2.trys.push([2, 7, , 8]), r2.multipleFileUploadInfo ? (s4 = r2.multipleFileUploadInfo, a4 = s4.uploadIndex, o2 = s4.uploadCount, u3 = r2.params, [4, this._uploadNextFileForMultipleFilesItemAndUpdateParams(e4, r2, u3)]) : [3, 4];
          case 3:
            return l2.sent(), r2.state = a4 < o2 - 1 ? Dt$1.PENDING : Dt$1.UPLOADED, [3, 6];
          case 4:
            return u3 = r2.params, [4, this._uploadNextFileForSingleFileItemAndUpdateParams(e4, r2, u3)];
          case 5:
            l2.sent(), r2.state = Dt$1.UPLOADED, l2.label = 6;
          case 6:
            return [3, 8];
          case 7:
            switch ((c3 = l2.sent()).code) {
              case u$1.REQUEST_FAILED:
                r2.error = new b$2({ code: u$1.NETWORK_ERROR, message: "Failed to upload a file." });
                break;
              case u$1.REQUEST_CANCELED:
                r2.error = b$2.fileUploadCanceled;
                break;
              default:
                r2.error = c3;
            }
            return r2.state = Dt$1.FAILED, [3, 8];
          case 8:
            this._dequeueUploadItem(t4, r2), l2.label = 9;
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype._dequeueUploadItem = function(e4, t4) {
    var n2 = e4.uploadQueue.findIndex(function(e5) {
      return e5.requestId === t4.requestId;
    });
    n2 >= 0 && e4.uploadQueue.splice(n2, 1);
  }, e3.prototype._uploadNextFileForSingleFileItemAndUpdateParams = function(e4, t4, n2) {
    var r2, i3, s4;
    return r$1(this, void 0, void 0, function() {
      var a4, o2, u3, c3, l2, d4, h4, f2, p2, m4;
      return s$1(this, function(v2) {
        switch (v2.label) {
          case 0:
            return a4 = new Re$2({ file: n2.file, channelUrl: e4.url, thumbnailSizes: n2.thumbnailSizes, requestId: t4.requestId }), [4, this._requestQueue.send(a4)];
          case 1:
            return o2 = v2.sent(), u3 = o2.as(xe$1), c3 = u3.url, l2 = u3.fileSize, d4 = void 0 === l2 ? n2.fileSize : l2, h4 = u3.thumbnails, f2 = void 0 === h4 ? [] : h4, p2 = u3.requireAuth, m4 = void 0 !== p2 && p2, n2.fileName = null !== (r2 = n2.fileName) && void 0 !== r2 ? r2 : n2.file.name, n2.mimeType = null !== (i3 = n2.mimeType) && void 0 !== i3 ? i3 : n2.file.type, n2.fileSize = null !== (s4 = n2.fileSize) && void 0 !== s4 ? s4 : n2.file.size, n2.fileUrl = c3, n2.fileSize = d4, n2.requireAuth = m4, n2._thumbnails = f2, [2];
        }
      });
    });
  }, e3.prototype._uploadNextFileForMultipleFilesItemAndUpdateParams = function(e4, t4, n2) {
    var r2, i3, s4;
    return r$1(this, void 0, void 0, function() {
      var a4, o2, c3, l2, d4, h4, f2, p2, m4, v2, y4;
      return s$1(this, function(_2) {
        switch (_2.label) {
          case 0:
            return a4 = t4.multipleFileUploadInfo.uploadIndex, o2 = n2.fileInfoList[a4], c3 = new Re$2({ file: o2.file, channelUrl: e4.url, thumbnailSizes: o2.thumbnailSizes, requestId: t4.requestId }), [4, this._requestQueue.send(c3)];
          case 1:
            return l2 = _2.sent(), d4 = l2.as(xe$1), h4 = d4.url, f2 = d4.fileSize, p2 = void 0 === f2 ? o2.fileSize : f2, m4 = d4.thumbnails, v2 = d4.requireAuth, y4 = void 0 !== v2 && v2, o2.fileName = null !== (r2 = o2.fileName) && void 0 !== r2 ? r2 : o2.file.name, o2.mimeType = null !== (i3 = o2.mimeType) && void 0 !== i3 ? i3 : o2.file.type, o2.fileSize = null !== (s4 = o2.fileSize) && void 0 !== s4 ? s4 : o2.file.size, o2.file = void 0, o2.fileUrl = h4, o2.fileSize = p2, o2._thumbnails = m4, o2._uploadedMetaData = n$2(n$2({}, o2._uploadedMetaData), { requireAuth: y4, isUploaded: true }), o2 instanceof Ct$1 || (n2.fileInfoList[a4] = new Ct$1(this._iid, o2)), [2];
        }
      });
    });
  }, e3.prototype.request = function(e4, t4, n2, r2) {
    return void 0 === r2 && (r2 = {}), r$1(this, void 0, void 0, function() {
      var i3, s4, a4, o2, c3;
      return s$1(this, function(l2) {
        return this._queueMap.has(e4.url) || (i3 = { messageQueue: [], uploadQueue: [], isResolving: false, isResolveRequestPending: false }, this._queueMap.set(e4.url, i3)), s4 = this._queueMap.get(e4.url), a4 = new rt$1(), o2 = { requestId: t4, params: n2, state: Dt$1.PENDING, deferred: a4 }, function(e5) {
          return "fileInfoList" in e5;
        }(n2) && (c3 = n$2({ uploadIndex: 0, uploadCount: n2.fileInfoList.length }, r2), o2.multipleFileUploadInfo = c3), s4.messageQueue.push(o2), this._uploadNextPendingItem(e4), [2, a4.promise];
      });
    });
  }, e3.prototype.cancel = function(e4, t4) {
    var n2, r2, i3 = this._queueMap.get(e4.url);
    if (i3) {
      var s4 = t4 ? [i3.messageQueue.find(function(e5) {
        return e5.requestId === t4;
      })] : c([], a$1(i3.messageQueue), false);
      try {
        for (var a4 = o(s4), o$1 = a4.next(); !o$1.done; o$1 = a4.next()) {
          var u3 = o$1.value;
          if (u3) switch (u3.state) {
            case Dt$1.PENDING:
              if (u3.state = Dt$1.FAILED, u3.error = b$2.requestCanceled, u3.multipleFileUploadInfo && !u3.multipleFileUploadInfo.isCopy) {
                var c$1 = u3.multipleFileUploadInfo, l2 = c$1.uploadIndex, d4 = c$1.requestHandler, h4 = u3.params.fileInfoList[l2];
                null == d4 || d4._triggerOnFileUploaded(u3.requestId, l2, h4, b$2.fileUploadCanceled);
              }
              this._resolveMessageQueue(e4);
              break;
            case Dt$1.UPLOADING:
              this._requestQueue.cancel(u3.requestId), this._dispatcher.dispatch(new st$1({ requestId: u3.requestId }));
          }
        }
      } catch (e5) {
        n2 = { error: e5 };
      } finally {
        try {
          o$1 && !o$1.done && (r2 = a4.return) && r2.call(a4);
        } finally {
          if (n2) throw n2.error;
        }
      }
    } else t4 && (this._requestQueue.cancel(t4), this._dispatcher.dispatch(new st$1({ requestId: t4 })));
  }, e3;
}();
var Ft$1, qt$1, zt$1 = { prevResultSize: 0, nextResultSize: 0, isInclusive: false, reverse: false, messageTypeFilter: j.ALL, customTypesFilter: void 0, senderUserIdsFilter: void 0, replyType: Q.NONE, includeReactions: false, includeMetaArray: false, includeParentMessageInfo: false, includeThreadInfo: false, showSubchannelMessagesOnly: false }, Bt$1 = function(e3) {
  return S$1("number", e3.prevResultSize) && S$1("number", e3.nextResultSize) && S$1("boolean", e3.isInclusive) && S$1("boolean", e3.reverse) && S$1("string", e3.messageTypeFilter) && T$2(j, e3.messageTypeFilter) && C$1("string", e3.customTypesFilter, true) && C$1("string", e3.senderUserIdsFilter, true) && T$2(Q, e3.replyType) && S$1("boolean", e3.includeMetaArray) && S$1("boolean", e3.includeReactions) && S$1("boolean", e3.includeParentMessageInfo) && S$1("boolean", e3.includeThreadInfo) && S$1("boolean", e3.showSubchannelMessagesOnly);
}, jt$1 = { replyType: Q.NONE, includeReactions: false, includeThreadInfo: false, includeMetaArray: false, includeParentMessageInfo: false }, Kt$1 = function(e3) {
  return T$2(Q, e3.replyType) && S$1("boolean", e3.includeReactions) && S$1("boolean", e3.includeMetaArray) && S$1("boolean", e3.includeParentMessageInfo) && S$1("boolean", e3.includeThreadInfo);
};
!function(e3) {
  e3.MESSAGE = "message";
}(Ft$1 || (Ft$1 = {})), function(e3) {
  e3.INTERNAL_BACKSYNC = "internal_backsync", e3.INTERNAL_FILL_GAP = "internal_fill_gap", e3.EXTERNAL_LEGACY = "external_legacy", e3.EXTERNAL_COLLECTION = "external_collection";
}(qt$1 || (qt$1 = {}));
var Qt$1, Gt$1 = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.includeMetaArray, o2 = t5.includeReactions, u3 = t5.includeThreadInfo, c3 = t5.includeParentMessageInfo, l2 = e3.call(this) || this;
    return l2.method = ae.GET, l2.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(encodeURIComponent(s4)), l2.params = { is_sdk: true, with_sorted_meta_array: a4, include_reactions_summary: null != o2 && o2, include_thread_info: u3, include_parent_message_info: c3, include_poll_details: true }, l2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Vt$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.message = n2 ? At$1(t5, n$2({}, n2)) : null, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Ht$1 = function(n2) {
  function s4(r2) {
    var s5 = r2.channelType, a4 = r2.channelUrl, o2 = r2.timestamp, u3 = r2.token, c3 = r2.prevResultSize, l2 = r2.nextResultSize, d4 = r2.isInclusive, h4 = r2.reverse, f2 = r2.messageTypeFilter, p2 = r2.customTypesFilter, m4 = r2.senderUserIdsFilter, v2 = r2.replyType, y4 = r2.includeMetaArray, _2 = r2.includeReactions, g2 = r2.parentMessageId, b3 = r2.includeThreadInfo, I3 = r2.includeParentMessageInfo, E3 = r2.showSubchannelMessagesOnly, T3 = r2.checkingHasNext, M4 = r2.checkingContinuousMessages, S4 = r2.sdkSource, U2 = n2.call(this) || this;
    return U2.method = ae.GET, U2.path = "".concat(Re$3(s5), "/").concat(encodeURIComponent(a4), "/messages"), U2.params = se(oe({ is_sdk: true, prev_limit: c3, next_limit: l2, include: d4, reverse: h4, message_ts: o2, message_id: u3, message_type: null != f2 ? f2 : null, custom_types: p2, sender_ids: m4, include_reply_type: v2, with_sorted_meta_array: y4, include_reactions_summary: _2, parent_message_id: g2, include_thread_info: b3, include_parent_message_info: I3, show_subchannel_message_only: E3, include_poll_details: true, checking_has_next: T3, checking_continuous_messages: M4, sdk_source: S4 })), U2;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Wt$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return void 0 !== n2.is_continuous_messages && (r2.isContinuousMessages = n2.is_continuous_messages), void 0 !== n2.has_next && (r2.hasNext = n2.has_next), r2.messages = n2.messages.map(function(e4) {
      return At$1(t5, e4);
    }), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Yt$1 = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.timestamp, a4 = t5.token, o2 = t5.replyType, u3 = t5.includeMetaArray, c3 = t5.includeReactions, l2 = t5.includeThreadInfo, d4 = t5.includeParentMessageInfo, h4 = e3.call(this) || this;
    return h4.method = ae.GET, h4.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/changelogs"), h4.params = { change_ts: s4, token: a4, with_sorted_meta_array: u3, include_reactions_summary: c3, include_thread_info: l2, include_reply_type: o2, include_parent_message_info: d4, include_poll_details: true }, h4;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Jt$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.updatedMessages = n2.updated.map(function(e4) {
      return At$1(t5, e4);
    }), r2.deletedMessagesInfo = n2.deleted.map(function(e4) {
      return { messageId: e4.message_id, deletedAt: e4.deleted_at };
    }), r2.hasMore = n2.has_more, r2.nextToken = n2.next, r2.forceUseNextToken = n2.force_use_next_token || false, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Xt$1 = function(e3) {
  function t4(t5) {
    var n2 = t5.channelUrl, r2 = t5.scheduledMessageId, s4 = e3.call(this) || this;
    return s4.method = ae.GET, s4.path = "".concat(de, "/").concat(encodeURIComponent(n2), "/scheduled_messages/").concat(encodeURIComponent(r2)), s4.params = {}, s4;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Zt$2 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.message = n2 ? At$1(t5, n$2({}, n2)) : null, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2);
!function(e3) {
  e3.MUTED = "muted", e3.BANNED = "banned";
}(Qt$1 || (Qt$1 = {}));
var $t$2 = function() {
  function n2(e3) {
    var t4, n3, r2, i3;
    this.restrictionType = null, T$2(Qt$1, e3.restriction_type) && (this.restrictionType = e3.restriction_type), this.description = null !== (t4 = e3.description) && void 0 !== t4 ? t4 : null, this.endAt = null !== (r2 = null !== (n3 = e3.end_at) && void 0 !== n3 ? n3 : e3.muted_end_at) && void 0 !== r2 ? r2 : -1, this.remainingDuration = null !== (i3 = e3.remaining_duration) && void 0 !== i3 ? i3 : -1;
  }
  return n2.payloadify = function(n3) {
    return se(oe({ restriction_type: n3.restrictionType, description: n3.description, end_at: n3.endAt, remaining_duration: n3.remainingDuration }));
  }, n2;
}(), en$2 = function(n2) {
  function i3(e3, t4) {
    var r2 = n2.call(this, e3, t4) || this;
    return r2.restrictionInfo = new $t$2(t4), r2;
  }
  return t$2(i3, n2), i3.payloadify = function(r2) {
    return se(oe(n$2(n$2({}, n2.payloadify.call(this, r2)), $t$2.payloadify(r2.restrictionInfo))));
  }, i3;
}(ls$2), tn$2 = function(e3) {
  function t4(t5, n2) {
    var r2, i3 = this;
    return (i3 = e3.call(this, t5, n2) || this).isMuted = false, i3.isMuted = null !== (r2 = n2.is_muted) && void 0 !== r2 && r2, i3;
  }
  return t$2(t4, e3), t4;
}(ls$2), nn$2 = function() {
  function e3() {
    this._onPending = ut$1, this._onFailed = ut$1, this._onSucceeded = ut$1;
  }
  return e3.prototype._trigger = function(e4) {
    switch (null == e4 ? void 0 : e4.sendingStatus) {
      case Z.PENDING:
        0 === e4.errorCode && this._onPending(e4);
        break;
      case Z.SCHEDULED:
      case Z.SUCCEEDED:
        this._onSucceeded(e4);
    }
  }, e3.prototype._triggerFailed = function(e4, t4) {
    switch (null == t4 ? void 0 : t4.sendingStatus) {
      case Z.FAILED:
      case Z.CANCELED:
        this._onFailed(e4, t4.scheduledInfo ? null : t4);
    }
  }, e3.prototype.onPending = function(e4) {
    return this._onPending = e4, this;
  }, e3.prototype.onFailed = function(e4) {
    return this._onFailed = e4, this;
  }, e3.prototype.onSucceeded = function(e4) {
    return this._onSucceeded = e4, this;
  }, e3;
}(), rn$2 = { data: void 0, customType: void 0, mentionType: B.USERS, mentionedUserIds: void 0, mentionedUsers: void 0, metaArrays: void 0, parentMessageId: void 0, isReplyToChannel: false, pushNotificationDeliveryOption: void 0, appleCriticalAlertOptions: void 0, isPinnedMessage: false, pollId: void 0 }, sn$2 = function(e3) {
  return S$1("string", e3.data, true) && S$1("string", e3.customType, true) && T$2(B, e3.mentionType) && C$1("string", e3.mentionedUserIds, true) && C$1(ls$2, e3.mentionedUsers, true) && C$1(Ve$1, e3.metaArrays, true) && S$1("number", e3.parentMessageId, true) && S$1("boolean", e3.isReplyToChannel) && T$2(W, e3.pushNotificationDeliveryOption, true) && S$1(Ke$1, e3.appleCriticalAlertOptions, true) && S$1("boolean", e3.isPinnedMessage, true) && S$1("number", e3.pollId, true);
}, an$2 = function(e3) {
  return { isReplyToChannel: e3.isReplyToChannel, pushNotificationDeliveryOption: e3.pushNotificationDeliveryOption, pollId: e3.pollId };
}, on$2 = n$2(n$2({}, rn$2), { message: "", mentionedMessageTemplate: void 0, translationTargetLanguages: void 0, extendedMessagePayload: void 0 });
function un$2(e3) {
  var n2, r2, i3;
  return null !== (n2 = e3.messageParams) && void 0 !== n2 ? n2 : oe(n$2(n$2({}, e3), { mentionType: e3.mentionType, mentionedUserIds: null !== (r2 = e3.mentionedUserIds) && void 0 !== r2 ? r2 : null === (i3 = e3.mentionedUsers) || void 0 === i3 ? void 0 : i3.map(function(e4) {
    return e4.userId;
  }), mentionedMessageTemplate: e3.mentionedMessageTemplate, translationTargetLanguages: Object.keys(e3.translations), pushNotificationDeliveryOption: W.DEFAULT, parentMessageId: null, isReplyToChannel: false, isPinnedMessage: false }));
}
var cn$2, ln$2 = function(n2) {
  var r2;
  return se(oe({ data: n2.data, customType: n2.customType, mentionType: n2.mentionType, mentionedUsers: n2.mentionedUsers, mentionedUserIds: n2.mentionedUserIds, mentionedMessageTemplate: n2.mentionedMessageTemplate, metaArrays: n2.metaArrays, pollId: null === (r2 = n2.poll) || void 0 === r2 ? void 0 : r2.id, parentMessageId: n2.parentMessageId, appleCriticalAlertOptions: n2.appleCriticalAlertOptions, message: n2.message, translationTargetLanguages: Object.keys(n2.translations), extendedMessagePayload: n2.extendedMessagePayload }));
}, dn$2 = function(e3) {
  return sn$2(e3) && S$1("string", e3.message) && S$1("string", e3.mentionedMessageTemplate, true) && C$1("string", e3.translationTargetLanguages, true) && S$1("object", e3.extendedMessagePayload, true);
};
!function(e3) {
  e3.FILE = "file", e3.BLOB = "blob", e3.BLOB_LIKE_OBJECT = "blobLikeObject", e3.URL = "url";
}(cn$2 || (cn$2 = {}));
var hn$2 = function(e3) {
  return "undefined" != typeof window && "Blob" in window && "undefined" != typeof Blob && e3 instanceof Blob;
}, fn$2 = function(e3) {
  return e3 === cn$2.BLOB || e3 === cn$2.FILE;
}, pn$2 = function(e3) {
  return { file: e3.file, fileKey: e3.fileKey, fileType: e3.fileType, isReplyToChannel: e3.isReplyToChannel, pushNotificationDeliveryOption: e3.pushNotificationDeliveryOption };
}, mn$2 = n$2(n$2({}, rn$2), { file: void 0, fileKey: void 0, fileUrl: void 0, fileName: void 0, fileType: void 0, fileSize: void 0, mimeType: void 0, thumbnailSizes: void 0, requireAuth: false, message: void 0 });
function vn$2(e3) {
  var n2, r2, i3, s4;
  return null !== (n2 = e3.messageParams) && void 0 !== n2 ? n2 : oe(n$2(n$2({}, e3), { fileUrl: e3.plainUrl, fileName: e3.name, fileSize: e3.size, mimeType: e3.type, mentionType: e3.mentionType, mentionedUserIds: null !== (r2 = e3.mentionedUserIds) && void 0 !== r2 ? r2 : null === (i3 = e3.mentionedUsers) || void 0 === i3 ? void 0 : i3.map(function(e4) {
    return e4.userId;
  }), pushNotificationDeliveryOption: W.DEFAULT, parentMessageId: null, isReplyToChannel: false, thumbnailSizes: null === (s4 = e3.thumbnails) || void 0 === s4 ? void 0 : s4.map(function(e4) {
    return { maxWidth: e4.width, maxHeight: e4.height };
  }), requireAuth: e3.requireAuth, isPinnedMessage: false, _thumbnails: e3.thumbnails, message: e3.message }));
}
var yn$2, _n$2 = function(n2, r2) {
  var i3, s4;
  return n2.messageParams ? (!n2.url && k(r2) && (n2.messageParams.file = r2), n2.messageParams) : se(oe({ data: n2.data, customType: n2.customType, mentionType: n2.mentionType, mentionedUsers: n2.mentionedUsers, mentionedUserIds: n2.mentionedUserIds, metaArrays: n2.metaArrays, parentMessageId: n2.parentMessageId, appleCriticalAlertOptions: n2.appleCriticalAlertOptions, file: r2, fileUrl: n2.url, fileName: n2.name, fileSize: n2.size, mimeType: n2.type, thumbnailSizes: null === (i3 = n2.thumbnails) || void 0 === i3 ? void 0 : i3.map(function(e3) {
    return { maxWidth: e3.width, maxHeight: e3.height };
  }), message: n2.message, pollId: null === (s4 = n2.poll) || void 0 === s4 ? void 0 : s4.id }));
}, gn$2 = function(e3) {
  return sn$2(e3) && (k(e3.file) || S$1("string", e3.fileUrl)) && S$1("string", e3.fileName, true) && S$1("string", e3.mimeType, true) && S$1("number", e3.fileSize, true) && S$1("string", e3.message, true) && (null === e3.thumbnailSizes || void 0 === e3.thumbnailSizes || Array.isArray(e3.thumbnailSizes) && e3.thumbnailSizes.every(function(e4) {
    return S$1("object", e4) && e4.maxWidth > 0 && e4.maxHeight > 0;
  }));
}, bn$2 = { data: void 0, customType: void 0, mentionType: B.USERS, mentionedUserIds: void 0, mentionedUsers: void 0, metaArrays: void 0, pushNotificationDeliveryOption: void 0, appleCriticalAlertOptions: void 0 }, In$2 = function(e3) {
  return S$1("string", e3.data, true) && S$1("string", e3.customType, true) && T$2(B, e3.mentionType) && C$1("string", e3.mentionedUserIds, true) && C$1(ls$2, e3.mentionedUsers, true) && C$1(Ve$1, e3.metaArrays, true) && T$2(W, e3.pushNotificationDeliveryOption, true) && S$1(Ke$1, e3.appleCriticalAlertOptions, true);
}, En$2 = n$2(n$2({}, bn$2), { message: void 0, mentionedMessageTemplate: void 0, translationTargetLanguages: void 0, pollId: void 0 }), Tn$2 = function(e3) {
  return In$2(e3) && S$1("string", e3.mentionedMessageTemplate, true) && S$1("string", e3.message, true) && C$1("string", e3.translationTargetLanguages, true) && S$1("number", e3.pollId, true);
}, wn$2 = n$2({}, bn$2), Mn$2 = function(e3) {
  function t4(t5) {
    var n2 = t5.channelUrl, r2 = t5.channelType, s4 = t5.token, a4 = t5.limit, o2 = e3.call(this) || this;
    return o2.method = ae.GET, o2.path = "".concat(Re$3(r2), "/").concat(encodeURIComponent(n2), "/operators"), o2.params = { token: s4, limit: a4 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Sn$2 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.operators = n2.operators.map(function(e4) {
      return new ls$2(t5, e4);
    }), r2.token = n2.next, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Un$2 = function(e3) {
  function t4(t5, n2, r2, i3) {
    return e3.call(this, t5, n2, r2, i3) || this;
  }
  return t$2(t4, e3), t4.prototype._validate = function() {
    return e3.prototype._validate.call(this);
  }, t4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, r2, i3, s4, a4, o2;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : (e4 = [], this._hasNext ? (this._isLoading = true, t5 = uo.of(this._iid).requestQueue, r2 = new Mn$2(n$2(n$2({}, this), { channelUrl: this.channelUrl, token: this._token })), [4, t5.send(r2)]) : [3, 2]) : [3, 5];
          case 1:
            return i3 = c3.sent(), s4 = i3.as(Sn$2), a4 = s4.operators, o2 = s4.token, this._token = o2, this._hasNext = !!o2, this._isLoading = false, [2, a4];
          case 2:
            return [2, e4];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(ko), An$2 = function(e3) {
  function n2(t4, n3, r2, i3) {
    var s4, a4, o2, u3, c3, l2, d4, h4, f2, p2, m4 = this;
    return (m4 = e3.call(this, t4, n3, r2, i3) || this).reverse = false, m4.messageTypeFilter = j.ALL, m4.customTypesFilter = null, m4.senderUserIdsFilter = null, m4.replyType = Q.NONE, m4.includeMetaArray = false, m4.includeReactions = false, m4.includeParentMessageInfo = false, m4.includeThreadInfo = false, m4.showSubchannelMessagesOnly = false, m4._edge = Number.MAX_SAFE_INTEGER, m4.reverse = null !== (s4 = i3.reverse) && void 0 !== s4 && s4, m4.messageTypeFilter = null !== (a4 = i3.messageTypeFilter) && void 0 !== a4 ? a4 : j.ALL, m4.customTypesFilter = null !== (o2 = i3.customTypesFilter) && void 0 !== o2 ? o2 : null, m4.senderUserIdsFilter = null !== (u3 = i3.senderUserIdsFilter) && void 0 !== u3 ? u3 : null, m4.replyType = null !== (c3 = i3.replyType) && void 0 !== c3 ? c3 : Q.NONE, m4.includeMetaArray = null !== (l2 = i3.includeMetaArray) && void 0 !== l2 && l2, m4.includeReactions = null !== (d4 = i3.includeReactions) && void 0 !== d4 && d4, m4.includeParentMessageInfo = null !== (h4 = i3.includeParentMessageInfo) && void 0 !== h4 && h4, m4.includeThreadInfo = null !== (f2 = i3.includeThreadInfo) && void 0 !== f2 && f2, m4.showSubchannelMessagesOnly = null !== (p2 = i3.showSubchannelMessagesOnly) && void 0 !== p2 && p2, m4;
  }
  return t$2(n2, e3), n2.prototype._validate = function() {
    return e3.prototype._validate.call(this) && S$1("boolean", this.reverse) && T$2(j, this.messageTypeFilter) && T$2(Q, this.replyType) && C$1("string", this.customTypesFilter, true) && C$1("string", this.senderUserIdsFilter, true) && S$1("boolean", this.includeMetaArray) && S$1("boolean", this.includeReactions) && S$1("boolean", this.includeParentMessageInfo) && S$1("boolean", this.includeThreadInfo) && S$1("boolean", this.showSubchannelMessagesOnly);
  }, n2.prototype.load = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, [4, la.of(this._iid).getMessagesByTimestamp(this.channelUrl, this.channelType, this._edge, oe({ prevResultSize: this.limit, nextResultSize: 0, isInclusive: false, reverse: this.reverse, messageTypeFilter: this.messageTypeFilter, customTypesFilter: this.customTypesFilter, replyType: this.replyType, senderUserIdsFilter: this.senderUserIdsFilter, includeReactions: this.includeReactions, includeMetaArray: this.includeMetaArray, includeParentMessageInfo: this.includeParentMessageInfo, includeThreadInfo: this.includeThreadInfo, showSubchannelMessagesOnly: this.showSubchannelMessagesOnly }))]) : [3, 2] : [3, 5];
          case 1:
            return e4 = n3.sent(), this._edge = Math.min.apply(Math, c([Number.MAX_SAFE_INTEGER], a$1(e4.map(function(e5) {
              return e5.createdAt;
            })), false)), this._hasNext = e4.length >= this.limit, this._isLoading = false, [2, e4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, n2;
}(ko), Nn$2 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.limit, o2 = t5.token;
    return (n2 = e3.call(this) || this).method = ae.GET, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/mute"), n2.params = { limit: a4, token: o2 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Cn$2 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    r2.mutedUsers = [];
    var i3 = n2.next, s4 = n2.muted_list;
    return r2.token = i3, s4 && s4.length > 0 && (r2.mutedUsers = s4.map(function(e4) {
      return new en$2(t5, e4);
    })), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), On$2 = function(e3) {
  function t4(t5, n2, r2, i3) {
    return e3.call(this, t5, n2, r2, i3) || this;
  }
  return t$2(t4, e3), t4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, r2, i3, s4, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, t5 = new Nn$2(n$2(n$2({}, this), { token: this._token })), [4, e4.send(t5)]) : [3, 2] : [3, 5];
          case 1:
            return r2 = o2.sent(), i3 = r2.as(Cn$2), s4 = i3.mutedUsers, a4 = i3.token, this._token = a4, this._hasNext = !!a4, this._isLoading = false, [2, s4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(ko), kn$2 = function(t4) {
  function n2(n3) {
    var r2 = this, s4 = n3.channelUrl, a4 = n3.channelType, o2 = n3.limit, u3 = n3.token;
    return (r2 = t4.call(this) || this).method = ae.GET, r2.path = "".concat(Re$3(a4), "/").concat(encodeURIComponent(s4), "/ban"), r2.params = se({ limit: o2, token: u3 }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Pn$2 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    r2.bannedUsers = [];
    var i3 = n2.next, s4 = n2.banned_list;
    return r2.token = i3, s4 && s4.length > 0 && (r2.bannedUsers = s4.map(function(e4) {
      return new en$2(t5, e4.user);
    })), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Rn$1 = function(e3) {
  function t4(t5, n2, r2, i3) {
    return e3.call(this, t5, n2, r2, i3) || this;
  }
  return t$2(t4, e3), t4.prototype._validate = function() {
    return e3.prototype._validate.call(this);
  }, t4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, r2, i3, s4, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, t5 = new kn$2(n$2(n$2({}, this), { token: this._token })), [4, e4.send(t5)]) : [3, 2] : [3, 5];
          case 1:
            return r2 = o2.sent(), i3 = r2.as(Pn$2), s4 = i3.bannedUsers, a4 = i3.token, this._token = a4, this._hasNext = !!a4, this._isLoading = false, [2, s4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(ko);
!function(e3) {
  e3.SPAM = "spam", e3.HARASSING = "harassing", e3.SUSPICIOUS = "suspicious", e3.INAPPROPRIATE = "inappropriate";
}(yn$2 || (yn$2 = {}));
var xn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.operatorUserIds;
    return (n2 = e3.call(this) || this).method = ae.POST, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/operators"), n2.params = { operator_ids: a4 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var Dn$2 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.operatorUserIds;
    return (n2 = e3.call(this) || this).method = ae.DELETE, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/operators"), n2.params = { operator_ids: a4 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    return e3.call(this, t5, n2) || this;
  }
  t$2(t4, e3);
}(qe$2);
var Ln$2 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.userId;
    return (n2 = e3.call(this) || this).method = ae.GET, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/mute/").concat(a4), n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Fn$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    r2.isMuted = false, r2.startAt = 0, r2.endAt = 0;
    var i3 = n2.is_muted, s4 = n2.start_at, a4 = n2.end_at, o2 = n2.remaining_duration, u3 = n2.description;
    return r2.isMuted = i3, r2.startAt = s4, r2.endAt = a4, r2.remainingDuration = o2, r2.description = u3, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), qn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.keys;
    return (n2 = e3.call(this) || this).method = ae.GET, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metadata"), n2.params = { keys: a4, include_ts: true }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), zn$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this, i3 = n2.metadata, s4 = n2.ts;
    return r2.metadata = i3, r2.ts = s4, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Bn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.metadata;
    return (n2 = e3.call(this) || this).method = ae.POST, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metadata"), n2.params = { metadata: a4, include_ts: true }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), jn$1 = function(e3) {
  function t4(t5, n2) {
    var r2, i3, s4 = this;
    return (s4 = e3.call(this, t5, n2) || this).metaData = null !== (r2 = n2.metadata) && void 0 !== r2 ? r2 : {}, s4.ts = null !== (i3 = n2.ts) && void 0 !== i3 ? i3 : null, s4;
  }
  return t$2(t4, e3), t4;
}(qe$2), Kn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.metadata, o2 = t5.upsert;
    return (n2 = e3.call(this) || this).method = ae.PUT, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metadata"), n2.params = { metadata: a4, include_ts: true, upsert: null != o2 && o2 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Qn$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this, i3 = n2.metadata, s4 = n2.ts;
    return r2.metadata = i3, r2.ts = s4, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Gn$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "SYEV", r2) || this;
    return r2.data && (i3.created = r2.data.created, i3.updated = r2.data.updated, i3.deleted = r2.data.deleted), i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), Vn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.key;
    return (n2 = e3.call(this) || this).method = ae.DELETE, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metadata/").concat(a4), n2.params = { include_ts: true }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Hn$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this, i3 = n2.ts;
    return r2.ts = i3, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Wn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType;
    return (n2 = e3.call(this) || this).method = ae.DELETE, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metadata"), n2.params = { include_ts: true }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Yn$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this, i3 = n2.ts;
    return r2.ts = i3, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Jn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.keys;
    return (n2 = e3.call(this) || this).method = ae.GET, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metacounter"), n2.params = { keys: a4 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Xn$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.metaCounter = n2, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Zn$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.metaCounter;
    return (n2 = e3.call(this) || this).method = ae.POST, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metacounter"), n2.params = { metacounter: a4 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), $n$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.metaCounter = n2, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), er$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.metaCounter, o2 = t5.upsert, u3 = void 0 !== o2 && o2, c3 = t5.mode, l2 = void 0 === c3 ? "set" : c3;
    return (n2 = e3.call(this) || this).method = ae.PUT, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metacounter"), n2.params = { metacounter: a4, upsert: u3, mode: l2 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), tr$1 = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.metaCounter = n2, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), nr$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "SYEV", r2) || this;
    return r2.data && (i3.created = r2.data.created, i3.updated = r2.data.updated, i3.deleted = r2.data.deleted), i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), rr$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.key;
    return (n2 = e3.call(this) || this).method = ae.DELETE, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metacounter/").concat(a4), n2.params = {}, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    return e3.call(this, t5, n2) || this;
  }
  t$2(t4, e3);
}(qe$2);
var ir$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType;
    return (n2 = e3.call(this) || this).method = ae.DELETE, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/metacounter"), n2.params = {}, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var sr$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.userId, o2 = t5.seconds, u3 = t5.description;
    return (n2 = e3.call(this) || this).method = ae.POST, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/mute"), n2.params = { user_id: a4, seconds: o2, description: u3 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    return e3.call(this, t5, n2) || this;
  }
  t$2(t4, e3);
}(qe$2);
var ar$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "SYEV", r2) || this;
    return i3.user = new en$2(t5, r2.data), i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), or$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.userId;
    return (n2 = e3.call(this) || this).method = ae.DELETE, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/mute/").concat(encodeURIComponent(a4)), n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var ur$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "SYEV", r2) || this;
    return i3.user = new en$2(t5, r2.data), i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), cr$1 = function(t4) {
  function n2(n3) {
    var r2 = this, s4 = n3.channelUrl, a4 = n3.channelType, o2 = n3.userId, u3 = n3.seconds, c3 = n3.description;
    return (r2 = t4.call(this) || this).method = ae.POST, r2.path = "".concat(Re$3(a4), "/").concat(encodeURIComponent(s4), "/ban"), r2.params = se({ user_id: o2, seconds: u3, description: c3 }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var lr$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "SYEV", r2) || this;
    return i3.user = new en$2(t5, r2.data), r2.data.member_count && (i3.memberCount = r2.data.member_count), r2.data.joined_member_count && (i3.joinedMemberCount = r2.data.joined_member_count), i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), dr$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.userId;
    return (n2 = e3.call(this) || this).method = ae.DELETE, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/ban/").concat(encodeURIComponent(a4)), n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var hr$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "SYEV", r2) || this;
    return i3.user = new en$2(t5, r2.data), i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), fr$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.channelUrl, s4 = t5.channelType, a4 = t5.freezing;
    return (n2 = e3.call(this) || this).method = ae.PUT, n2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/freeze"), n2.params = { freeze: a4 }, n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var pr$1 = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "SYEV", r2) || this;
    return i3.freeze = r2.data.freeze, i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), mr = function(e3) {
  return e3 instanceof ro ? e3._custom ? "custom" : e3.name : e3;
}, vr = function(e3) {
  if (e3 instanceof ro && e3._custom) return e3.name;
}, yr = function(t4) {
  function n2(n3) {
    var r2 = this, s4 = n3.channelUrl, a4 = n3.channelType, o2 = n3.category, u3 = n3.userId, c3 = n3.description;
    return (r2 = t4.call(this) || this).method = ae.POST, r2.path = "".concat(Le$2(a4), "/").concat(encodeURIComponent(s4)), r2.params = se({ report_category: mr(o2), reporting_user_id: u3, report_description: c3, custom_report_category_name: vr(o2) }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), _r$1 = function(t4) {
  function n2(n3) {
    var r2 = this, s4 = n3.channelUrl, a4 = n3.channelType, o2 = n3.category, u3 = n3.userId, c3 = n3.offendingUserId, l2 = n3.description;
    return (r2 = t4.call(this) || this).method = ae.POST, r2.path = "".concat(ge$1, "/users/").concat(c3), r2.params = se({ channel_url: s4, channel_type: a4 === H$1.OPEN ? "open_channels" : "group_channels", report_category: mr(o2), reporting_user_id: u3, report_description: l2, custom_report_category_name: vr(o2) }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), gr = function(t4) {
  function n2(n3) {
    var r2 = this, s4 = n3.channelUrl, a4 = n3.channelType, o2 = n3.category, u3 = n3.userId, c3 = n3.offendingUserId, l2 = n3.messageId, d4 = n3.description;
    return (r2 = t4.call(this) || this).method = ae.POST, r2.path = "".concat(Le$2(a4), "/").concat(encodeURIComponent(s4), "/messages/").concat(l2), r2.params = se({ report_category: mr(o2), reporting_user_id: u3, report_description: d4, offending_user_id: c3, custom_report_category_name: vr(o2) }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), br = function(n2) {
  function i3(r2) {
    var i4 = [];
    return r2.mentionType === B.USERS && (r2.mentionedUserIds ? i4 = r2.mentionedUserIds : r2.mentionedUsers && (i4 = r2.mentionedUsers.map(function(e3) {
      return e3.userId;
    }))), n2.call(this, { code: "MESG", ackRequired: true, payload: se(oe({ channel_url: r2.channelUrl, message: r2.message, data: r2.data, custom_type: r2.customType, metaarray: r2.metaArrays, mention_type: r2.mentionType, mentioned_user_ids: i4, mentioned_message_template: r2.mentionedMessageTemplate, target_langs: r2.translationTargetLanguages, push_option: r2.pushNotificationDeliveryOption && r2.pushNotificationDeliveryOption !== W.DEFAULT ? r2.pushNotificationDeliveryOption : void 0, apple_critical_alert_options: r2.appleCriticalAlertOptions, silent: r2.silent, reply_to_channel: r2.isReplyToChannel, parent_message_id: r2.parentMessageId ? r2.parentMessageId : null, req_id: r2.reqId, poll_id: r2.pollId, pin_message: r2.isPinnedMessage, extended_message_payload: r2.extendedMessagePayload })) }) || this;
  }
  return t$2(i3, n2), i3;
}(Ge$1), Ir = function(e3) {
  function t4(t5, r2, i3) {
    var s4, a4, o2, u3, c3 = this;
    (c3 = e3.call(this, t5, "MESG", i3) || this).message = new wt(t5, i3);
    var l2 = uo.of(t5).sdkState;
    return c3.isMentioned = xe$2(c3.message.mentionType, null !== (o2 = null !== (s4 = c3.message.mentionedUserIds) && void 0 !== s4 ? s4 : null === (a4 = c3.message.mentionedUsers) || void 0 === a4 ? void 0 : a4.map(function(e4) {
      return e4.userId;
    })) && void 0 !== o2 ? o2 : [], l2.userId), c3.forceUpdateLastMessage = null !== (u3 = i3.force_update_last_message) && void 0 !== u3 && u3, c3;
  }
  return t$2(t4, e3), t4;
}(ze$2), Er = function(n2) {
  function i3(r2) {
    var i4 = null;
    return r2.mentionType === B.USERS && (r2.mentionedUserIds ? i4 = r2.mentionedUserIds : r2.mentionedUsers && (i4 = r2.mentionedUsers.map(function(e3) {
      return e3.userId;
    }))), n2.call(this, { code: "MEDI", ackRequired: true, payload: se(oe({ channel_url: r2.channelUrl, msg_id: r2.messageId, message: r2.message, data: r2.data, custom_type: r2.customType, metaarray: r2.metaArrayParams, mention_type: r2.mentionType, mentioned_user_ids: i4, mentioned_message_template: r2.mentionedMessageTemplate, apple_critical_alert_options: r2.appleCriticalAlertOptions ? Ke$1.payloadify(r2.appleCriticalAlertOptions) : null, poll_id: r2.pollId })) }) || this;
  }
  return t$2(i3, n2), i3;
}(Ge$1), Tr = function(e3) {
  function i3(r2, i4, s4) {
    var a4, o2, u3, c3, l2, d4 = this;
    (d4 = e3.call(this, r2, "MEDI", s4) || this).message = new wt(r2, s4);
    var h4 = uo.of(r2).sdkState;
    return d4.mentionCountChange = Ue$1({ mentionType: null === (a4 = s4.old_values) || void 0 === a4 ? void 0 : a4.mention_type, mentionedUserIds: null !== (u3 = null === (o2 = s4.old_values) || void 0 === o2 ? void 0 : o2.mentioned_user_ids) && void 0 !== u3 ? u3 : [] }, oe({ mentionType: d4.message.mentionType, mentionedUserIds: null !== (c3 = d4.message.mentionedUserIds) && void 0 !== c3 ? c3 : null === (l2 = d4.message.mentionedUsers) || void 0 === l2 ? void 0 : l2.map(function(e4) {
      return e4.userId;
    }) }), h4.userId), d4;
  }
  return t$2(i3, e3), i3;
}(ze$2), wr = function(n2) {
  function i3(r2) {
    var i4 = null;
    return r2.mentionType === B.USERS && (r2.mentionedUserIds ? i4 = r2.mentionedUserIds : r2.mentionedUsers && (i4 = r2.mentionedUsers.map(function(e3) {
      return e3.userId;
    }))), n2.call(this, { code: "FEDI", ackRequired: true, payload: se(oe({ channel_url: r2.channelUrl, msg_id: r2.messageId, data: r2.data, custom_type: r2.customType, metaarray: r2.metaArrayParams, mention_type: r2.mentionType, mentioned_user_ids: i4, apple_critical_alert_options: r2.appleCriticalAlertOptions })) }) || this;
  }
  return t$2(i3, n2), i3;
}(Ge$1), Mr = function(e3) {
  function i3(r2, i4, s4) {
    var a4, o2, u3, c3, l2, d4 = this;
    (d4 = e3.call(this, r2, "FEDI", s4) || this).message = new Nt$1(r2, s4);
    var h4 = uo.of(r2).sdkState;
    return d4.mentionCountChange = Ue$1({ mentionType: null === (a4 = s4.old_values) || void 0 === a4 ? void 0 : a4.mention_type, mentionedUserIds: null !== (u3 = null === (o2 = s4.old_values) || void 0 === o2 ? void 0 : o2.mentioned_user_ids) && void 0 !== u3 ? u3 : [] }, oe({ mentionType: d4.message.mentionType, mentionedUserIds: null !== (c3 = d4.message.mentionedUserIds) && void 0 !== c3 ? c3 : null === (l2 = d4.message.mentionedUsers) || void 0 === l2 ? void 0 : l2.map(function(e4) {
      return e4.userId;
    }) }), h4.userId), d4;
  }
  return t$2(i3, e3), i3;
}(ze$2), Sr = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.reactionKey, o2 = e3.call(this) || this;
    return o2.method = ae.POST, o2.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/reactions"), o2.params = { reaction: a4 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Ur = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.reactionEvent = new Fe$1(n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Ar = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.reactionKey, o2 = e3.call(this) || this;
    return o2.method = ae.DELETE, o2.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/reactions"), o2.params = { reaction: a4 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Nr = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.reactionEvent = new Fe$1(n$2({}, n2)), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Cr = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = t5.translationTargetLanguages, o2 = e3.call(this) || this;
    return o2.method = ae.POST, o2.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(encodeURIComponent(s4), "/translation"), o2.params = { target_langs: a4 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Or = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.message = new wt(t5, n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), kr = function(n2) {
  function s4(r2) {
    var s5, a4 = this;
    a4 = n2.call(this) || this;
    var o2 = [];
    r2.mentionType === B.USERS && (r2.mentionedUserIds ? o2 = r2.mentionedUserIds : r2.mentionedUsers && (o2 = r2.mentionedUsers.map(function(e3) {
      return e3.userId;
    })));
    var u3 = r2.channelType, c3 = r2.channelUrl;
    return a4.method = ae.POST, a4.path = "".concat(Re$3(u3), "/").concat(encodeURIComponent(c3), "/scheduled_messages"), a4.params = se(oe({ req_id: r2.reqId, scheduled_at: r2.scheduledAt, message_type: K$1.USER, message: r2.message, custom_type: r2.customType, data: r2.data, mention_type: r2.mentionType, mentioned_user_ids: o2, sorted_metaarray: null === (s5 = r2.metaArrays) || void 0 === s5 ? void 0 : s5.map(function(e3) {
      return Ve$1.payloadify(e3);
    }), apple_critical_alert_options: r2.appleCriticalAlertOptions ? Ke$1.payloadify(r2.appleCriticalAlertOptions) : null, target_langs: r2.translationTargetLanguages, push_option: r2.pushNotificationDeliveryOption })), a4;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Pr = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.message = new wt(t5, n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Rr = function(e3) {
  function n2(n3) {
    var r2, s4, a4 = this;
    a4 = e3.call(this) || this;
    var o2 = [];
    n3.mentionType === B.USERS && (n3.mentionedUserIds ? o2 = n3.mentionedUserIds : n3.mentionedUsers && (o2 = n3.mentionedUsers.map(function(e4) {
      return e4.userId;
    })));
    var u3 = n3.channelType, c3 = n3.channelUrl;
    return a4.method = ae.POST, a4.path = "".concat(Re$3(u3), "/").concat(encodeURIComponent(c3), "/scheduled_messages"), a4.params = oe({ req_id: n3.reqId, scheduled_at: n3.scheduledAt, message_type: K$1.FILE, url: n3.fileUrl, file_name: n3.fileName, file_size: n3.fileSize, file_type: n3.mimeType, thumbnails: null === (r2 = n3._thumbnails) || void 0 === r2 ? void 0 : r2.map(function(e4) {
      return Pe$2.payloadify(e4);
    }), custom_type: n3.customType, data: n3.data, require_auth: n3.requireAuth, mention_type: n3.mentionType, mentioned_user_ids: o2, sorted_metaarray: null === (s4 = n3.metaArrays) || void 0 === s4 ? void 0 : s4.map(function(e4) {
      return Ve$1.payloadify(e4);
    }), apple_critical_alert_options: n3.appleCriticalAlertOptions ? Ke$1.payloadify(n3.appleCriticalAlertOptions) : null, push_option: n3.pushNotificationDeliveryOption }), a4;
  }
  return t$2(n2, e3), n2;
}(Fe$2), xr = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.message = new Nt$1(t5, n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Dr = function(e3) {
  function t4(t5) {
    var n2 = t5.pollId, r2 = t5.title, s4 = t5.data, a4 = t5.allowUserSuggestion, o2 = t5.allowMultipleVotes, u3 = t5.closeAt, c3 = e3.call(this) || this;
    return c3.method = ae.PUT, c3.path = "".concat(me$1, "/").concat(encodeURIComponent(n2)), c3.params = { title: r2, data: s4, allow_user_suggestion: a4, allow_multiple_votes: o2, close_at: u3 }, c3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Lr = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.poll = new Io(t5, n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Fr = function(e3) {
  function t4(t5) {
    var n2 = t5.pollId, r2 = e3.call(this) || this;
    return r2.method = ae.DELETE, r2.path = "".concat(me$1, "/").concat(encodeURIComponent(n2)), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var qr = function(e3) {
  function t4(t5) {
    var n2 = t5.pollId, r2 = e3.call(this) || this;
    return r2.method = ae.PUT, r2.path = "".concat(me$1, "/").concat(encodeURIComponent(n2), "/close"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), zr = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.poll = new Io(t5, n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Br = function(e3) {
  function t4(t5) {
    var n2 = t5.channelUrl, r2 = t5.channelType, s4 = t5.pollId, a4 = t5.optionText, o2 = e3.call(this) || this;
    return o2.method = ae.POST, o2.path = "".concat(me$1, "/").concat(encodeURIComponent(s4), "/options"), o2.params = { channel_url: n2, channel_type: r2, text: a4 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), jr = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.poll = new Io(t5, n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Kr = function(e3) {
  function t4(t5) {
    var n2 = t5.pollId, r2 = t5.pollOptionId, s4 = t5.optionText, a4 = e3.call(this) || this;
    return a4.method = ae.PUT, a4.path = "".concat(me$1, "/").concat(encodeURIComponent(n2), "/options/").concat(encodeURIComponent(r2)), a4.params = { text: s4 }, a4;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Qr = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.poll = new Io(t5, n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Gr = function(e3) {
  function t4(t5) {
    var n2 = t5.pollId, r2 = t5.pollOptionId, s4 = e3.call(this) || this;
    return s4.method = ae.DELETE, s4.path = "".concat(me$1, "/").concat(encodeURIComponent(n2), "/options/").concat(encodeURIComponent(r2)), s4;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var Vr = function(t4) {
  function n2(n3) {
    var r2 = n3.reqId, i3 = n3.channelType, s4 = n3.channelUrl, a4 = n3.pollId, o2 = n3.pollOptionIds;
    return t4.call(this, { code: "VOTE", ackRequired: true, payload: se({ req_id: r2, channel_type: i3 === H$1.OPEN ? "open_channels" : "group_channels", channel_url: s4, poll_id: a4, option_ids: o2 }) }) || this;
  }
  return t$2(n2, t4), n2;
}(Ge$1), Hr = function(e3) {
  function t4(t5, n2, r2) {
    var i3 = e3.call(this, t5, "VOTE", r2) || this;
    return i3.event = new Do(r2), i3.channelUrl = r2.channel_url, i3.channelType = r2.channel_type, i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), Wr = 100, Yr = "GroupChannel", Jr = "url", Xr = 100, Zr = "Message", $r = "messageId", ti = "NotificationMessage", ni = "notificationId", ri = "Poll", ii = "pollId", ai = "FeedChannel", oi = "url", ui = "UserInfo", ci = "userId";
function li(e3) {
  var n2, r2, i3;
  return null !== (n2 = e3.messageParams) && void 0 !== n2 ? n2 : oe(n$2(n$2({}, e3), { isReplyToChannel: false, mentionedUserIds: null !== (r2 = e3.mentionedUserIds) && void 0 !== r2 ? r2 : null === (i3 = e3.mentionedUsers) || void 0 === i3 ? void 0 : i3.map(function(e4) {
    return e4.userId;
  }), pushNotificationDeliveryOption: W.DEFAULT, isPinnedMessage: false, fileInfoList: e3.fileInfoList.map(function(e4) {
    var t4;
    return { fileUrl: e4.plainUrl, fileName: e4.fileName, fileSize: e4.fileSize, mimeType: e4.mimeType, thumbnailSizes: null === (t4 = e4.thumbnails) || void 0 === t4 ? void 0 : t4.map(function(e5) {
      return { maxWidth: e5.width, maxHeight: e5.height };
    }), _thumbnails: e4.thumbnails, _uploadedMetaData: { requireAuth: e4._requireAuth, isUploaded: true } };
  }) }));
}
var di = n$2(n$2({}, rn$2), { fileInfoList: [], message: "" }), hi = function(e3) {
  return (k(e3.file) || S$1("string", e3.fileUrl)) && S$1("string", e3.fileName, true) && S$1("string", e3.mimeType, true) && S$1("number", e3.fileSize, true) && (void 0 === e3.thumbnailSizes || Array.isArray(e3.thumbnailSizes) && e3.thumbnailSizes.every(function(e4) {
    return e4.maxWidth > 0 && e4.maxHeight > 0;
  }));
}, fi = function(e3) {
  function t4() {
    var t5 = null !== e3 && e3.apply(this, arguments) || this;
    return t5._onFileUploaded = ut$1, t5;
  }
  return t$2(t4, e3), t4.prototype._triggerOnFileUploaded = function(e4, t5, n2, r2) {
    this._onFileUploaded(e4, t5, n2, r2);
  }, t4.prototype.onFileUploaded = function(e4) {
    return this._onFileUploaded = e4, this;
  }, t4.prototype.onPending = function(t5) {
    return e3.prototype.onPending.call(this, t5), this;
  }, t4.prototype.onFailed = function(t5) {
    return e3.prototype.onFailed.call(this, t5), this;
  }, t4.prototype.onSucceeded = function(t5) {
    return e3.prototype.onSucceeded.call(this, t5), this;
  }, t4;
}(nn$2), pi = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5) || this;
    return r2.message = null, r2.message = At$1(t5, n2.message), r2;
  }
  return t$2(t4, e3), t4;
}(Jr$1), mi = function(t4) {
  function n2(n3) {
    var r2 = this, s4 = n3.channelType, a4 = n3.channelUrl, o2 = n3.limit, u3 = n3.token, c3 = n3.includeReactions, l2 = n3.includeMetaArray, d4 = n3.includeParentMessageInfo, h4 = n3.includeThreadInfo, f2 = n3.includePollDetails;
    return (r2 = t4.call(this) || this).method = ae.GET, r2.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(a4), "/pinned_messages"), r2.params = se({ limit: o2, token: u3, include_reactions_summary: c3, with_sorted_meta_array: l2, include_thread_info: h4, include_parent_message_info: d4, include_poll_details: f2 }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), vi = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this, i3 = n2.pinned_messages, s4 = n2.has_more, a4 = n2.next;
    return r2.pinnedMessages = i3.map(function(e4) {
      return new pi(t5, e4);
    }), r2.hasMore = s4, r2.token = a4, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), yi = function(e3) {
  function t4(t5, n2, r2, i3) {
    var s4 = e3.call(this, t5, n2, r2, i3) || this;
    return s4.includeMetaArray = i3.includeMetaArray, s4.includeReactions = i3.includeReactions, s4.includeParentMessageInfo = i3.includeParentMessageInfo, s4.includeThreadInfo = i3.includeThreadInfo, s4.includePollDetails = i3.includePollDetails, s4;
  }
  return t$2(t4, e3), t4.prototype._validate = function() {
    return e3.prototype._validate.call(this) && S$1("boolean", this.includeMetaArray, true) && S$1("boolean", this.includeReactions, true) && S$1("boolean", this.includeParentMessageInfo, true) && S$1("boolean", this.includeThreadInfo, true) && S$1("boolean", this.includePollDetails, true);
  }, t4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, r2, i3, s4, a4, o2;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, t5 = new mi(n$2(n$2({}, this), { token: this._token })), [4, e4.send(t5)]) : [3, 2] : [3, 5];
          case 1:
            return r2 = c3.sent(), i3 = r2.as(vi), s4 = i3.pinnedMessages, a4 = i3.hasMore, o2 = i3.token, this._token = o2, this._hasNext = !!a4, this._isLoading = false, [2, s4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(ko), _i = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = e3.call(this) || this;
    return a4.method = ae.POST, a4.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/pin"), a4;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    return e3.call(this, t5, n2) || this;
  }
  t$2(t4, e3);
}(qe$2);
var gi = function(e3) {
  function t4(t5) {
    var n2 = t5.channelType, r2 = t5.channelUrl, s4 = t5.messageId, a4 = e3.call(this) || this;
    return a4.method = ae.DELETE, a4.path = "".concat(Re$3(n2), "/").concat(encodeURIComponent(r2), "/messages/").concat(s4, "/pin"), a4;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    return e3.call(this, t5, n2) || this;
  }
  t$2(t4, e3);
}(qe$2);
var bi, Ii = 2;
!function(e3) {
  e3.SEND = "send", e3.RESEND = "resend", e3.COPY = "copy";
}(bi || (bi = {}));
var Ei, Ti = function(i3) {
  function s4(e3, t4) {
    var n2, r2, s5, a4, o2, u3, l2, d4 = this;
    return (d4 = i3.call(this, e3) || this)._name = "", d4._createdAt = 0, d4.pinnedMessageIds = [], d4.channelType = H$1.BASE, d4.coverUrl = "", d4.customType = "", d4.data = "", d4.isFrozen = false, d4.isEphemeral = false, d4.creator = null, d4._messageCollectionLastAccessedAt = 0, d4._url = t4.channel_url, d4._name = null !== (n2 = t4.name) && void 0 !== n2 ? n2 : "", d4._createdAt = 1e3 * t4.created_at, d4.coverUrl = null !== (r2 = t4.cover_url) && void 0 !== r2 ? r2 : "", d4.customType = null !== (s5 = t4.custom_type) && void 0 !== s5 ? s5 : "", d4.data = null !== (a4 = t4.data) && void 0 !== a4 ? a4 : "", d4.isFrozen = null !== (o2 = t4.freeze) && void 0 !== o2 && o2, d4.isEphemeral = null !== (u3 = t4.is_ephemeral) && void 0 !== u3 && u3, d4.creator = t4.created_by ? new ls$2(d4._iid, t4.created_by) : null, t4.metadata && Object.keys(t4.metadata).length > 0 && t4.ts ? (d4._cachedMetaData = /* @__PURE__ */ new Map(), Object.keys(t4.metadata).forEach(function(e4) {
      d4._cachedMetaData.set(e4, { value: t4.metadata[e4], isRemoved: false, updatedAt: t4.ts });
    })) : "string" == typeof t4.metadata && (d4._cachedMetaData = new Map(Object.entries(JSON.parse(t4.metadata)))), d4.pinnedMessageIds = null !== (l2 = t4.pinned_message_ids) && void 0 !== l2 ? l2 : [], d4;
  }
  return t$2(s4, i3), Object.defineProperty(s4.prototype, "url", { get: function() {
    return this._url;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "name", { get: function() {
    return this._name;
  }, set: function(e3) {
    this._name = e3;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "createdAt", { get: function() {
    return this._createdAt;
  }, enumerable: false, configurable: true }), s4.prototype.toJSON = function() {
    return n$2(n$2({}, this), { url: this._url, name: this._name, createdAt: this._createdAt });
  }, s4.payloadify = function(n2) {
    return se(oe(n$2(n$2({}, i3.payloadify.call(this, n2)), { channel_url: n2.url, name: n2.name, cover_url: n2.coverUrl, custom_type: n2.customType, data: n2.data, freeze: n2.isFrozen, is_ephemeral: n2.isEphemeral, created_by: n2.creator ? ls$2.payloadify(n2.creator) : null, created_at: n2.createdAt / 1e3, metadata: n2.cachedMetaData, pinned_message_ids: n2.pinnedMessageIds })));
  }, s4.prototype.isGroupChannel = function() {
    return this.channelType === H$1.GROUP;
  }, s4.prototype.isOpenChannel = function() {
    return this.channelType === H$1.OPEN;
  }, s4.prototype.isFeedChannel = function() {
    return this.channelType === H$1.FEED;
  }, Object.defineProperty(s4.prototype, "cachedMetaData", { get: function() {
    var e3 = {};
    return this._cachedMetaData ? (this._cachedMetaData.forEach(function(t4, n2) {
      t4.isRemoved || (e3[n2] = t4.value);
    }), e3) : e3;
  }, enumerable: false, configurable: true }), Object.defineProperty(s4.prototype, "messageCollectionLastAccessedAt", { get: function() {
    return this._messageCollectionLastAccessedAt;
  }, enumerable: false, configurable: true }), s4.prototype._serializeCachedMetaData = function() {
    return this._cachedMetaData ? { cachedMetaData: JSON.stringify(Object.fromEntries(this._cachedMetaData)) } : {};
  }, s4.prototype._updateMessageCollectionLastAccessedAt = function() {
    this._messageCollectionLastAccessedAt = Date.now();
  }, s4.prototype._update = function(e3) {
    Object.assign(this, e3);
  }, s4.prototype._upsertCachedMetaData = function(e3, t4) {
    var n2 = this;
    Object.keys(e3).forEach(function(r2) {
      n2._cachedMetaData || (n2._cachedMetaData = /* @__PURE__ */ new Map());
      var i4 = n2._cachedMetaData.get(r2);
      (!i4 || i4.updatedAt <= t4) && n2._cachedMetaData.set(r2, { value: e3[r2], isRemoved: false, updatedAt: t4 });
    });
  }, s4.prototype._updateCachedMetaData = function(e3, t4) {
    var n2 = this, r2 = false;
    return this._cachedMetaData ? this._cachedMetaData.forEach(function(i4, s5) {
      var a4;
      i4.updatedAt <= t4 && (n2._cachedMetaData.set(s5, { value: null !== (a4 = e3[s5]) && void 0 !== a4 ? a4 : i4.value, isRemoved: !e3[s5], updatedAt: t4 }), r2 = true);
    }) : (this._cachedMetaData = /* @__PURE__ */ new Map(), Object.keys(e3).forEach(function(r3) {
      n2._cachedMetaData.set(r3, { value: e3[r3], isRemoved: false, updatedAt: t4 });
    }), r2 = true), { isUpdated: r2 };
  }, s4.prototype._removeFromCachedMetaData = function(e3, t4) {
    var n2 = this;
    this._cachedMetaData && e3.forEach(function(e4) {
      var r2 = n2._cachedMetaData.get(e4);
      r2 && r2.updatedAt < t4 && (r2.isRemoved = true, r2.updatedAt = t4);
    });
  }, s4.prototype._clearCachedMetaData = function() {
    this._cachedMetaData && this._cachedMetaData.clear();
  }, s4.prototype._runIfHandleableWithGroupChannel = function(e3) {
    this.isGroupChannel() ? e3(this) : this.isFeedChannel() && e3(this.groupChannel);
  }, s4.prototype._generateRequestId = function() {
    return "rq-".concat(ee());
  }, s4.prototype.isIdentical = function(e3) {
    return e3 && this.url === e3.url;
  }, s4.prototype.isEqual = function(e3) {
    return w$1(this, e3);
  }, s4.prototype.createOperatorListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new Un$2(this._iid, this.url, this.channelType, e3);
  }, s4.prototype.createMutedUserListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new On$2(this._iid, this.url, this.channelType, e3);
  }, s4.prototype.createBannedUserListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new Rn$1(this._iid, this.url, this.channelType, e3);
  }, s4.prototype.createPreviousMessageListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new An$2(this._iid, this.url, this.channelType, e3);
  }, s4.prototype.createPinnedMessageListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new yi(this._iid, this.url, this.channelType, e3);
  }, s4.prototype.addOperators = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new xn$1({ channelUrl: this.url, channelType: this.channelType, operatorUserIds: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), [2];
        }
      });
    });
  }, s4.prototype.removeOperators = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new Dn$2({ channelUrl: this.url, channelType: this.channelType, operatorUserIds: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), [2];
        }
      });
    });
  }, s4.prototype.getMyMutedInfo = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, r2, i4, s5, a4, o2, u3, c3, l2, d4;
      return s$1(this, function(h4) {
        switch (h4.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.sdkState, r2 = e3.requestQueue, i4 = new Ln$2({ channelUrl: this.url, channelType: this.channelType, userId: t4.userId }), [4, r2.send(i4)];
          case 1:
            return s5 = h4.sent(), a4 = s5.as(Fn$1), o2 = a4.isMuted, u3 = a4.startAt, c3 = a4.endAt, l2 = a4.remainingDuration, d4 = a4.description, [2, { isMuted: o2, startAt: u3, endAt: c3, remainingDuration: l2, description: d4 }];
        }
      });
    });
  }, s4.prototype.getMetaData = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5, a4, o2;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new qn$1({ channelUrl: this.url, channelType: this.channelType, keys: e3 }), [4, t4.send(r2)];
          case 1:
            return i4 = u3.sent(), s5 = i4.as(zn$1), a4 = s5.metadata, o2 = s5.ts, this._upsertCachedMetaData(a4, o2), [2, a4];
        }
      });
    });
  }, s4.prototype.getAllMetaData = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, r2, i4, s5, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new qn$1({ channelUrl: this.url, channelType: this.channelType, keys: [] }), [4, e3.send(t4)];
          case 1:
            return r2 = o2.sent(), i4 = r2.as(zn$1), s5 = i4.metadata, a4 = i4.ts, this._updateCachedMetaData(s5, a4), [2, s5];
        }
      });
    });
  }, s4.prototype.createMetaData = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return t4 = uo.of(this._iid).requestQueue, r2 = new Bn$1({ channelUrl: this.url, channelType: this.channelType, metadata: e3 }), [4, t4.send(r2)];
          case 1:
            return i4 = a4.sent(), s5 = i4.as(jn$1).metaData, this._upsertCachedMetaData(s5, 0), [2, s5];
        }
      });
    });
  }, s4.prototype.updateMetaData = function(e3, t4) {
    return void 0 === t4 && (t4 = false), r$1(this, void 0, void 0, function() {
      var r2, i4, s5, a4, o2, u3;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return r2 = uo.of(this._iid).requestQueue, i4 = new Kn$1({ channelUrl: this.url, channelType: this.channelType, metadata: e3, upsert: t4 }), [4, r2.send(i4)];
          case 1:
            return s5 = c3.sent(), a4 = s5.as(Qn$1), o2 = a4.metadata, u3 = a4.ts, this._upsertCachedMetaData(o2, u3), [2, o2];
        }
      });
    });
  }, s4.prototype.deleteMetaData = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new Vn$1({ channelUrl: this.url, channelType: this.channelType, key: e3 }), [4, t4.send(r2)];
          case 1:
            return i4 = a4.sent(), s5 = i4.as(Hn$1).ts, this._removeFromCachedMetaData([e3], s5), [2];
        }
      });
    });
  }, s4.prototype.deleteAllMetaData = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, r2, i4;
      return s$1(this, function(s5) {
        switch (s5.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new Wn$1({ channelUrl: this.url, channelType: this.channelType }), [4, e3.send(t4)];
          case 1:
            return r2 = s5.sent(), i4 = r2.as(Yn$1).ts, this._removeFromCachedMetaData(c([], a$1(this._cachedMetaData.keys()), false), i4), [2];
        }
      });
    });
  }, s4.prototype.getMetaCounters = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4;
      return s$1(this, function(s5) {
        switch (s5.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new Jn$1({ channelUrl: this.url, channelType: this.channelType, keys: e3 }), [4, t4.send(r2)];
          case 1:
            return i4 = s5.sent(), [2, i4.as(Xn$1).metaCounter];
        }
      });
    });
  }, s4.prototype.getAllMetaCounters = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new Jn$1({ channelUrl: this.url, channelType: this.channelType, keys: [] }), [4, e3.send(t4)];
          case 1:
            return r2 = i4.sent(), [2, r2.as(Xn$1).metaCounter];
        }
      });
    });
  }, s4.prototype.createMetaCounters = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4;
      return s$1(this, function(s5) {
        switch (s5.label) {
          case 0:
            return t4 = uo.of(this._iid).requestQueue, r2 = new Zn$1({ channelUrl: this.url, channelType: this.channelType, metaCounter: e3 }), [4, t4.send(r2)];
          case 1:
            return i4 = s5.sent(), [2, i4.as($n$1).metaCounter];
        }
      });
    });
  }, s4.prototype.updateMetaCounters = function(e3, t4) {
    return void 0 === t4 && (t4 = false), r$1(this, void 0, void 0, function() {
      var r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return r2 = uo.of(this._iid).requestQueue, i4 = new er$1({ channelUrl: this.url, channelType: this.channelType, metaCounter: e3, upsert: t4 }), [4, r2.send(i4)];
          case 1:
            return s5 = a4.sent(), [2, s5.as(tr$1).metaCounter];
        }
      });
    });
  }, s4.prototype.increaseMetaCounters = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4;
      return s$1(this, function(s5) {
        switch (s5.label) {
          case 0:
            return t4 = uo.of(this._iid).requestQueue, r2 = new er$1({ channelUrl: this.url, channelType: this.channelType, metaCounter: e3, upsert: false, mode: "increase" }), [4, t4.send(r2)];
          case 1:
            return i4 = s5.sent(), [2, i4.as(tr$1).metaCounter];
        }
      });
    });
  }, s4.prototype.decreaseMetaCounters = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4;
      return s$1(this, function(s5) {
        switch (s5.label) {
          case 0:
            return t4 = uo.of(this._iid).requestQueue, r2 = new er$1({ channelUrl: this.url, channelType: this.channelType, metaCounter: e3, upsert: false, mode: "decrease" }), [4, t4.send(r2)];
          case 1:
            return i4 = s5.sent(), [2, i4.as(tr$1).metaCounter];
        }
      });
    });
  }, s4.prototype.deleteMetaCounter = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new rr$1({ channelUrl: this.url, channelType: this.channelType, key: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), [2];
        }
      });
    });
  }, s4.prototype.deleteAllMetaCounters = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new ir$1({ channelUrl: this.url, channelType: this.channelType }), [4, e3.send(t4)];
          case 1:
            return r2.sent(), [2];
        }
      });
    });
  }, s4.prototype.muteUser = function(e3, t4, n2) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(r2) {
        return [2, this.muteUserWithUserId(e3.userId, t4, n2)];
      });
    });
  }, s4.prototype.muteUserWithUserId = function(e3, t4, r2) {
    return r$1(this, void 0, void 0, function() {
      var i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return cs$2(S$1("string", e3) && S$1("number", t4, true) && S$1("string", r2, true)).throw(b$2.invalidParameters), i4 = uo.of(this._iid).requestQueue, s5 = new sr$1({ channelUrl: this.url, channelType: this.channelType, userId: e3, seconds: t4, description: r2 }), [4, i4.send(s5)];
          case 1:
            return a4.sent(), [2];
        }
      });
    });
  }, s4.prototype.unmuteUser = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        return [2, this.unmuteUserWithUserId(e3.userId)];
      });
    });
  }, s4.prototype.unmuteUserWithUserId = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new or$1({ channelUrl: this.url, channelType: this.channelType, userId: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), [2];
        }
      });
    });
  }, s4.prototype.banUser = function(e3, t4, n2) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(r2) {
        return [2, this.banUserWithUserId(e3.userId, t4, n2)];
      });
    });
  }, s4.prototype.banUserWithUserId = function(e3, t4, r2) {
    return r$1(this, void 0, void 0, function() {
      var i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return cs$2(S$1("string", e3) && S$1("number", t4, true) && S$1("string", r2, true)).throw(b$2.invalidParameters), i4 = uo.of(this._iid).requestQueue, s5 = new cr$1({ channelUrl: this.url, channelType: this.channelType, userId: e3, seconds: t4, description: r2 }), [4, i4.send(s5)];
          case 1:
            return a4.sent(), [2];
        }
      });
    });
  }, s4.prototype.unbanUser = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        return [2, this.unbanUserWithUserId(e3.userId)];
      });
    });
  }, s4.prototype.unbanUserWithUserId = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new dr$1({ channelUrl: this.url, channelType: this.channelType, userId: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), [2];
        }
      });
    });
  }, s4.prototype.freeze = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new fr$1({ channelUrl: this.url, channelType: this.channelType, freezing: true }), [4, e3.send(t4)];
          case 1:
            return r2.sent(), this.isFrozen = true, [2];
        }
      });
    });
  }, s4.prototype.unfreeze = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new fr$1({ channelUrl: this.url, channelType: this.channelType, freezing: false }), [4, e3.send(t4)];
          case 1:
            return r2.sent(), this.isFrozen = false, [2];
        }
      });
    });
  }, s4.prototype.getMessagesByMessageId = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n2 = n$2(n$2({}, zt$1), t4), cs$2(S$1("number", e3) && Bt$1(n2)).throw(b$2.invalidParameters), [4, la.of(this._iid).getMessagesByMessageId(this.url, this.channelType, e3, n2)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, s4.prototype.getMessagesByTimestamp = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n2 = n$2(n$2({}, zt$1), t4), cs$2(S$1("number", e3) && Bt$1(n2)).throw(b$2.invalidParameters), [4, la.of(this._iid).getMessagesByTimestamp(this.url, this.channelType, e3, n2)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, s4.prototype.getMessageChangeLogsSinceTimestamp = function(e3, t4) {
    return void 0 === t4 && (t4 = {}), r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n2 = n$2(n$2({}, jt$1), t4), cs$2(S$1("number", e3) && Kt$1(n2)).throw(b$2.invalidParameters), [4, la.of(this._iid).getMessageChangelogs(this.url, this.channelType, e3, n2)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, s4.prototype.getMessageChangeLogsSinceToken = function(e3, t4) {
    return void 0 === t4 && (t4 = {}), r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return n2 = n$2(n$2({}, jt$1), t4), cs$2(S$1("string", e3) && Kt$1(n2)).throw(b$2.invalidParameters), [4, la.of(this._iid).getMessageChangelogs(this.url, this.channelType, e3, n2)];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, s4.prototype._createPendingSendableMessagePayload = function(r2, i4, s5) {
    var a4, o2 = uo.of(this._iid).sessionManager;
    return se(oe({ channel_url: this.url, channel_type: this.channelType, msg_id: 0, parent_message_id: r2.parentMessageId, data: r2.data, custom_type: r2.customType, mention_type: r2.mentionType, sorted_metaarray: r2.metaArrays ? r2.metaArrays.map(function(e3) {
      return Ve$1.payloadify(e3);
    }) : null, apple_critical_alert_options: r2.appleCriticalAlertOptions ? Ke$1.payloadify(r2.appleCriticalAlertOptions) : null, created_at: s5, user: o2.currentUser ? Ge.payloadify(o2.currentUser) : null, req_id: i4, request_state: Z.PENDING, mentioned_user_ids: r2.mentionedUserIds, mentioned_users: null === (a4 = r2.mentionedUsers) || void 0 === a4 ? void 0 : a4.map(function(e3) {
      return ls$2.payloadify(e3);
    }) }));
  }, s4.prototype._createPendingUserMessage = function(t4, n2, r2) {
    var i4, s5, a4 = {};
    if (t4.translationTargetLanguages) try {
      for (var o$1 = o(t4.translationTargetLanguages), c3 = o$1.next(); !c3.done; c3 = o$1.next()) {
        a4[c3.value] = "";
      }
    } catch (e3) {
      i4 = { error: e3 };
    } finally {
      try {
        c3 && !c3.done && (s5 = o$1.return) && s5.call(o$1);
      } finally {
        if (i4) throw i4.error;
      }
    }
    var l2 = se(n$2(n$2({}, this._createPendingSendableMessagePayload(t4, n2, r2)), { type: G.USER, message: t4.message, translations: a4, extended_message_payload: t4.extendedMessagePayload })), d4 = new wt(this._iid, l2);
    return d4.messageParams = t4, d4;
  }, s4.prototype._createPendingScheduledUserMessage = function(e3, t4, n2) {
    var r2 = this._createPendingUserMessage(e3, t4, n2);
    return r2.scheduledInfo = { scheduledMessageId: 0, scheduledAt: e3.scheduledAt, scheduledMessageParams: e3 }, r2;
  }, s4.prototype._createPendingFileMessage = function(t4, n2, r2) {
    var i4, s5, a4, o2, c3, l2, d4, h4 = se(n$2(n$2({}, this._createPendingSendableMessagePayload(t4, n2, r2)), { type: G.FILE, url: t4.fileUrl, file: { name: null !== (i4 = t4.fileName) && void 0 !== i4 ? i4 : null === (s5 = t4.file) || void 0 === s5 ? void 0 : s5.name, size: null !== (a4 = t4.fileSize) && void 0 !== a4 ? a4 : null === (o2 = t4.file) || void 0 === o2 ? void 0 : o2.size, type: null !== (c3 = t4.mimeType) && void 0 !== c3 ? c3 : null === (l2 = t4.file) || void 0 === l2 ? void 0 : l2.type, data: t4.data }, thumbnails: null === (d4 = t4._thumbnails) || void 0 === d4 ? void 0 : d4.map(function(e3) {
      return Pe$2.payloadify(e3);
    }), message: t4.message })), f2 = new Nt$1(this._iid, h4);
    return f2.messageParams = t4, f2;
  }, s4.prototype._createPendingMultipleFilesMessage = function(t4, n2, r2) {
    var i4 = se(n$2(n$2({}, this._createPendingSendableMessagePayload(t4, n2, r2)), { type: G.FILE, file: t4.fileInfoList.length > 0 ? { name: t4.fileInfoList[0].fileName, size: t4.fileInfoList[0].fileSize, type: t4.fileInfoList[0].mimeType, data: t4.data } : void 0, message: t4.message })), s5 = new Mt$1(this._iid, i4);
    return s5.messageParams = t4, s5;
  }, s4.prototype._validateFailedFileMessageHasFile = function(e3, t4) {
    var n2;
    return Boolean(e3.url) || k(t4) || k(null === (n2 = e3.messageParams) || void 0 === n2 ? void 0 : n2.file);
  }, s4.prototype._createPendingScheduledFileMessage = function(e3, t4, n2) {
    var r2 = this._createPendingFileMessage(e3, t4, n2);
    return r2.scheduledInfo = { scheduledMessageId: 0, scheduledAt: e3.scheduledAt, scheduledMessageParams: e3 }, r2;
  }, s4.prototype._markMessageAsFailed = function(e3, t4, n2) {
    void 0 === n2 && (n2 = false), e3.errorCode = t4.code, t4.code === u$1.REQUEST_CANCELED || t4.code === u$1.FILE_UPLOAD_CANCEL_FAILED ? e3.sendingStatus = Z.CANCELED : n2 || (e3.sendingStatus = Z.FAILED);
  }, s4.prototype.sendUserMessage = function(e3) {
    var t4 = n$2(n$2({}, on$2), e3);
    return cs$2(dn$2(t4)).throw(b$2.invalidParameters), this._sendUserMessage(t4);
  }, s4.prototype._sendUserMessage = function(e3, t4, r2) {
    var i4 = this;
    void 0 === t4 && (t4 = bi.SEND);
    var s5 = uo.of(this._iid), a4 = s5.dispatcher, o2 = s5.requestQueue, c3 = null != r2 ? r2 : this._generateRequestId(), l2 = Date.now(), d4 = new nn$2();
    return ms$2(2).then(function() {
      var r3 = i4._createPendingUserMessage(e3, c3, l2);
      a4.dispatch(new po({ messages: [r3], source: t4 === bi.RESEND ? no.LOCAL_MESSAGE_RESEND_STARTED : no.EVENT_MESSAGE_SENT_PENDING })), kr$1(function() {
        return r$1(i4, void 0, void 0, function() {
          return s$1(this, function(e4) {
            return [2, d4._trigger(r3)];
          });
        });
      });
      var s6 = new br(n$2(n$2({}, e3), { channelUrl: i4.url, channelType: i4.channelType, reqId: c3 }));
      o2.send(s6).then(function(e4) {
        var t5 = e4.as(Ir).message;
        a4.dispatch(new po({ messages: [t5], source: no.EVENT_MESSAGE_SENT_SUCCESS })), kr$1(function() {
          return r$1(i4, void 0, void 0, function() {
            return s$1(this, function(e5) {
              return [2, d4._trigger(t5)];
            });
          });
        });
      }).catch(function(t5) {
        if (v$2(t5)) throw t5;
        ms$2(2).then(function() {
          var r4 = i4._createPendingUserMessage(e3, c3, l2), s7 = uo.of(i4._iid).cacheContext, o3 = s7.localCacheEnabled && s7.localCacheConfig.enableAutoResend && O$2(t5.code);
          i4._markMessageAsFailed(r4, t5, o3), a4.dispatch(new po({ messages: [r4], source: r4.sendingStatus === Z.PENDING ? no.REQUEST_RESEND_MESSAGE : no.EVENT_MESSAGE_SENT_FAILED })), kr$1(function() {
            return r$1(i4, void 0, void 0, function() {
              return s$1(this, function(e4) {
                return [2, d4._triggerFailed(t5, r4)];
              });
            });
          });
        });
      });
    }), d4;
  }, s4.prototype._autoResendUserMessage = function(e3) {
    return cs$2(e3 instanceof wt && !!e3.messageParams).throw(b$2.invalidParameters), this._sendUserMessage(e3.messageParams, bi.SEND, e3.reqId);
  }, s4.prototype.resendUserMessage = function(e3) {
    var t4;
    return r$1(this, void 0, void 0, function() {
      var n2, r2;
      return s$1(this, function(i4) {
        return cs$2(e3 instanceof wt && !e3.scheduledInfo).throw(b$2.invalidParameters), n2 = new rt$1(), r2 = null !== (t4 = e3.messageParams) && void 0 !== t4 ? t4 : ln$2(e3), this._sendUserMessage(r2, bi.RESEND, e3.reqId).onFailed(function(e4) {
          return n2.reject(e4);
        }).onSucceeded(function(e4) {
          return n2.resolve(e4);
        }), [2, n2.promise];
      });
    });
  }, s4.prototype.updateUserMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return r2 = n$2(n$2({}, En$2), t4), cs$2(S$1("number", e3) && Tn$2(r2)).throw(b$2.invalidParameters), i4 = uo.of(this._iid).requestQueue, s5 = new Er(n$2({ channelType: this.channelType, channelUrl: this.url, messageId: e3, metaArrayParams: r2.metaArrays ? { array: r2.metaArrays, mode: "add", upsert: true } : void 0 }, r2)), [4, i4.send(s5)];
          case 1:
            return a4 = o2.sent(), [2, a4.as(Tr).message];
        }
      });
    });
  }, s4.prototype.copyUserMessage = function(e3, n2) {
    var r2, i4, a4;
    return r$1(this, void 0, void 0, function() {
      var o2, c3;
      return s$1(this, function(l2) {
        return cs$2(e3 instanceof s4 && n2 instanceof wt && n2.sendingStatus === Z.SUCCEEDED && this.url === n2.channelUrl && !n2.scheduledInfo).throw(b$2.invalidParameters), cs$2(!n2.poll).throw(b$2.notSupportedError), o2 = new rt$1(), c3 = null !== (r2 = n2.messageParams) && void 0 !== r2 ? r2 : oe(n$2(n$2({}, n2), { mentionType: n2.mentionType, mentionedUserIds: null !== (i4 = n2.mentionedUserIds) && void 0 !== i4 ? i4 : null === (a4 = n2.mentionedUsers) || void 0 === a4 ? void 0 : a4.map(function(e4) {
          return e4.userId;
        }), translationTargetLanguages: Object.keys(n2.translations), pushNotificationDeliveryOption: W.DEFAULT, parentMessageId: null, isReplyToChannel: false, isPinnedMessage: false })), e3._sendUserMessage(c3).onSucceeded(function(e4) {
          o2.resolve(e4);
        }).onFailed(function(e4) {
          return o2.reject(e4);
        }), [2, o2.promise];
      });
    });
  }, s4.prototype.translateUserMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return cs$2(e3 instanceof wt && e3.messageId > 0 && C$1("string", t4)).throw(b$2.invalidParameters), r2 = uo.of(this._iid).requestQueue, i4 = new Cr({ channelType: this.channelType, channelUrl: this.url, messageId: e3.messageId, translationTargetLanguages: t4 }), [4, r2.send(i4)];
          case 1:
            return s5 = a4.sent(), [2, s5.as(Or).message];
        }
      });
    });
  }, s4.prototype._createScheduledUserMessage = function(e3, t4) {
    var r2 = this, i4 = uo.of(this._iid).requestQueue, s5 = Date.now(), a4 = this._generateRequestId();
    ms$2(2).then(function() {
      var n2 = r2._createPendingScheduledUserMessage(e3, a4, s5);
      kr$1(function() {
        return r$1(r2, void 0, void 0, function() {
          return s$1(this, function(e4) {
            return [2, t4._trigger(n2)];
          });
        });
      });
    });
    var o2 = new kr(n$2({ reqId: a4, channelType: this.channelType, channelUrl: this.url }, e3));
    i4.send(o2).then(function(e4) {
      var n2 = e4.as(Pr).message;
      kr$1(function() {
        return r$1(r2, void 0, void 0, function() {
          return s$1(this, function(e5) {
            return [2, t4._trigger(n2)];
          });
        });
      });
    }).catch(function(n2) {
      if (v$2(n2)) throw n2;
      ms$2(2).then(function() {
        var i5 = r2._createPendingScheduledUserMessage(e3, a4, s5);
        r2._markMessageAsFailed(i5, n2), kr$1(function() {
          return r$1(r2, void 0, void 0, function() {
            return s$1(this, function(e4) {
              return [2, t4._triggerFailed(n2, i5)];
            });
          });
        });
      });
    });
  }, s4.prototype.sendFileMessage = function(e3) {
    var t4 = n$2(n$2({}, mn$2), e3);
    return cs$2(gn$2(t4)).throw(b$2.invalidParameters), this._sendFileMessage(t4);
  }, s4.prototype.sendMultipleFilesMessage = function(e3) {
    var t4, r2 = n$2(n$2({}, di), e3), i4 = uo.of(this._iid);
    cs$2(function(e4, t5) {
      return void 0 === t5 && (t5 = Zr$1), sn$2(e4) && S$1("string", e4.message, true) && Array.isArray(e4.fileInfoList) && e4.fileInfoList.length >= 2 && e4.fileInfoList.length <= t5 && e4.fileInfoList.every(function(e5) {
        return hi(e5);
      });
    }(r2, null === (t4 = i4.appInfo) || void 0 === t4 ? void 0 : t4.multipleFilesMessageFileCountLimit)).throw(b$2.invalidParameters);
    var s5 = !!e3.fileInfoList.find(function(e4) {
      var t5 = i4.appInfo.uploadSizeLimit;
      return e4.file instanceof Blob && e4.file.size > t5 || e4.fileSize > t5;
    });
    return cs$2(!s5).throw(b$2.fileSizeLimitExceededError), this._sendMultipleFilesMessage(r2);
  }, s4.prototype._sendFileMessage = function(e3, t4, r2) {
    var i4 = this;
    void 0 === t4 && (t4 = bi.SEND);
    var s5 = uo.of(this._iid).dispatcher, a4 = la.of(this._iid).fileMessageQueue, o2 = null != r2 ? r2 : this._generateRequestId(), u3 = Date.now(), c3 = new nn$2();
    return ms$2(2).then(function() {
      var r3 = i4._createPendingFileMessage(e3, o2, u3);
      s5.dispatch(new po({ messages: [r3], source: t4 === bi.RESEND ? no.LOCAL_MESSAGE_RESEND_STARTED : no.EVENT_MESSAGE_SENT_PENDING })), kr$1(function() {
        return r$1(i4, void 0, void 0, function() {
          return s$1(this, function(e4) {
            return [2, c3._trigger(r3)];
          });
        });
      }), a4.request(i4, o2, e3).then(function(e4) {
        s5.dispatch(new po({ messages: [e4], source: no.EVENT_MESSAGE_SENT_SUCCESS })), kr$1(function() {
          return r$1(i4, void 0, void 0, function() {
            return s$1(this, function(t5) {
              return [2, c3._trigger(e4)];
            });
          });
        });
      }).catch(function(t5) {
        if (v$2(t5)) throw t5;
        ms$2(2).then(function() {
          var r4 = i4._createPendingFileMessage(e3, o2, u3), a5 = uo.of(i4._iid).cacheContext, l2 = a5.localCacheEnabled && a5.localCacheConfig.enableAutoResend && O$2(t5.code);
          i4._markMessageAsFailed(r4, t5, l2), s5.dispatch(new po({ messages: [r4], source: r4.sendingStatus === Z.PENDING ? no.REQUEST_RESEND_MESSAGE : t5.code === u$1.FILE_UPLOAD_CANCEL_FAILED ? no.LOCAL_MESSAGE_CANCELED : no.EVENT_MESSAGE_SENT_FAILED })), kr$1(function() {
            return r$1(i4, void 0, void 0, function() {
              return s$1(this, function(e4) {
                return [2, c3._triggerFailed(t5, r4)];
              });
            });
          });
        });
      });
    }), c3;
  }, s4.prototype._autoResendFileMessage = function(e3) {
    cs$2(e3 instanceof Nt$1 && !!e3.messageParams).throw(b$2.invalidParameters);
    var t4 = uo.of(this._iid).logger;
    return t4.debug("autoResendFileMessage pending", e3), this._sendFileMessage(e3.messageParams, bi.SEND, e3.reqId).onFailed(function(e4) {
      t4.debug("autoResendFileMessage failed", e4);
    }).onSucceeded(function(e4) {
      t4.debug("autoResendFileMessage success", e4);
    });
  }, s4.prototype._sendMultipleFilesMessage = function(e3, t4, r2) {
    var i4 = this, s5 = uo.of(this._iid).dispatcher, a4 = la.of(this._iid).fileMessageQueue, o2 = null != r2 ? r2 : this._generateRequestId(), u3 = Date.now(), c3 = new fi();
    return ms$2(2).then(function() {
      var n2 = i4._createPendingMultipleFilesMessage(e3, o2, u3);
      s5.dispatch(new po({ messages: [n2], source: t4 === bi.RESEND ? no.LOCAL_MESSAGE_RESEND_STARTED : no.EVENT_MESSAGE_SENT_PENDING })), kr$1(function() {
        return r$1(i4, void 0, void 0, function() {
          return s$1(this, function(e4) {
            return [2, c3._trigger(n2)];
          });
        });
      }), a4.request(i4, o2, e3, { requestHandler: c3, isCopy: t4 === bi.COPY }).then(function(e4) {
        s5.dispatch(new po({ messages: [e4], source: no.EVENT_MESSAGE_SENT_SUCCESS })), kr$1(function() {
          return r$1(i4, void 0, void 0, function() {
            return s$1(this, function(t5) {
              return [2, c3._trigger(e4)];
            });
          });
        });
      }).catch(function(t5) {
        if (v$2(t5)) throw t5;
        ms$2(2).then(function() {
          var n3 = i4._createPendingMultipleFilesMessage(e3, o2, u3);
          i4._markMessageAsFailed(n3, t5), s5.dispatch(new po({ messages: [n3], source: no.EVENT_MESSAGE_SENT_FAILED })), kr$1(function() {
            return r$1(i4, void 0, void 0, function() {
              return s$1(this, function(e4) {
                return [2, c3._triggerFailed(t5, n3)];
              });
            });
          });
        });
      });
    }), c3;
  }, s4.prototype._createScheduledFileMessage = function(e3, t4, r2, i4) {
    var s5 = this, a4 = uo.of(this._iid).requestQueue, o2 = new Rr(n$2(n$2({ reqId: r2, channelType: this.channelType, channelUrl: this.url }, e3), { fileUrl: e3.fileUrl, requireAuth: e3.requireAuth }));
    a4.send(o2).then(function(e4) {
      var n2 = e4.as(xr).message;
      kr$1(function() {
        return r$1(s5, void 0, void 0, function() {
          return s$1(this, function(e5) {
            return [2, t4._trigger(n2)];
          });
        });
      });
    }).catch(function(n2) {
      if (v$2(n2)) throw n2;
      ms$2(2).then(function() {
        var a5 = s5._createPendingScheduledFileMessage(e3, r2, i4);
        s5._markMessageAsFailed(a5, n2), kr$1(function() {
          return r$1(s5, void 0, void 0, function() {
            return s$1(this, function(e4) {
              return [2, t4._triggerFailed(n2, a5)];
            });
          });
        });
      });
    });
  }, s4.prototype.sendFileMessages = function(e3) {
    var t4, n2;
    cs$2(e3.every(function(e4) {
      return gn$2(n$2(n$2({}, mn$2), e4));
    })).throw(b$2.invalidParameters);
    var r2 = new nn$2();
    try {
      for (var i4 = o(e3), s5 = i4.next(); !s5.done; s5 = i4.next()) {
        var a4 = s5.value;
        this.sendFileMessage(a4).onPending(function(e4) {
          return r2._trigger(e4);
        }).onFailed(function(e4, t5) {
          return r2._triggerFailed(e4, t5);
        }).onSucceeded(function(e4) {
          return r2._trigger(e4);
        });
      }
    } catch (e4) {
      t4 = { error: e4 };
    } finally {
      try {
        s5 && !s5.done && (n2 = i4.return) && n2.call(i4);
      } finally {
        if (t4) throw t4.error;
      }
    }
    return r2;
  }, s4.prototype.resendFileMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i4;
      return s$1(this, function(s5) {
        return n2 = this._validateFailedFileMessageHasFile(e3, t4), cs$2(e3 instanceof Nt$1 && n2 && !e3.scheduledInfo).throw(b$2.invalidParameters), r2 = new rt$1(), i4 = _n$2(e3, t4), this._sendFileMessage(i4, bi.RESEND, e3.reqId).onFailed(function(e4) {
          return r2.reject(e4);
        }).onSucceeded(function(e4) {
          return r2.resolve(e4);
        }), [2, r2.promise];
      });
    });
  }, s4.prototype.resendMessage = function(e3, t4) {
    var n2, r2;
    if (cs$2(e3 instanceof _t && !e3.scheduledInfo && e3.isResendable).throw(b$2.invalidParameters), e3.isUserMessage()) {
      var i4 = null !== (n2 = e3.messageParams) && void 0 !== n2 ? n2 : ln$2(e3);
      return this._sendUserMessage(i4, bi.RESEND, e3.reqId);
    }
    if (e3.isFileMessage()) {
      var s5 = this._validateFailedFileMessageHasFile(e3, t4);
      cs$2(s5).throw(b$2.invalidParameters);
      i4 = null !== (r2 = e3.messageParams) && void 0 !== r2 ? r2 : _n$2(e3, t4);
      return this._sendFileMessage(i4, bi.RESEND, e3.reqId);
    }
    if (e3.isMultipleFilesMessage()) throw b$2.channelTypeNotSupportedError;
  }, s4.prototype.updateFileMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return r2 = n$2(n$2({}, wn$2), t4), cs$2(S$1("number", e3) && function(e4) {
              return In$2(e4);
            }(r2)).throw(b$2.invalidParameters), i4 = uo.of(this._iid).requestQueue, s5 = new wr(n$2({ channelType: this.channelType, channelUrl: this.url, messageId: e3, metaArrayParams: r2.metaArrays ? { array: r2.metaArrays, mode: "add", upsert: true } : void 0 }, r2)), [4, i4.send(s5)];
          case 1:
            return a4 = o2.sent(), [2, a4.as(Mr).message];
        }
      });
    });
  }, s4.prototype.uploadFile = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5, a4, o2, u3;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return t4 = uo.of(this._iid).requestQueue, r2 = ee(), (i4 = new Re$2({ file: e3.file, channelUrl: this.url, thumbnailSizes: e3.thumbnailSizes, requestId: r2 })).uploadProgressHandler = e3.progressHandler, e3.uploadStartedHandler && e3.uploadStartedHandler(r2), [4, t4.send(i4)];
          case 1:
            return s5 = c3.sent(), a4 = s5.as(xe$1), o2 = a4.url, u3 = a4.thumbnails, [2, { requestId: r2, url: o2, thumbnails: u3 }];
        }
      });
    });
  }, s4.prototype.cancelUploadingFileMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), la.of(this._iid).fileMessageQueue.cancel(this, e3), [2, true];
      });
    });
  }, s4.prototype.copyFileMessage = function(e3, n2) {
    var r2, i4, a4;
    return r$1(this, void 0, void 0, function() {
      var o2, c3;
      return s$1(this, function(l2) {
        return cs$2(e3 instanceof s4 && n2 instanceof Nt$1 && n2.sendingStatus === Z.SUCCEEDED && this.url === n2.channelUrl && !n2.scheduledInfo).throw(b$2.invalidParameters), o2 = new rt$1(), c3 = oe(n$2(n$2({}, n2), { fileUrl: n2.url, fileName: n2.name, fileSize: n2.size, mimeType: n2.type, mentionType: n2.mentionType, mentionedUserIds: null !== (r2 = n2.mentionedUserIds) && void 0 !== r2 ? r2 : null === (i4 = n2.mentionedUsers) || void 0 === i4 ? void 0 : i4.map(function(e4) {
          return e4.userId;
        }), pushNotificationDeliveryOption: W.DEFAULT, parentMessageId: null, isReplyToChannel: false, thumbnailSizes: null === (a4 = n2.thumbnails) || void 0 === a4 ? void 0 : a4.map(function(e4) {
          return { maxWidth: e4.width, maxHeight: e4.height };
        }), requireAuth: n2.requireAuth, isPinnedMessage: false })), e3._sendFileMessage(c3).onSucceeded(function(e4) {
          return o2.resolve(e4);
        }).onFailed(function(e4) {
          return o2.reject(e4);
        }), [2, o2.promise];
      });
    });
  }, s4.prototype.copyMessage = function(e3, t4) {
    cs$2(e3 instanceof s4 && t4 instanceof _t && t4.sendingStatus === Z.SUCCEEDED && this.url === t4.channelUrl && !t4.scheduledInfo).throw(b$2.invalidParameters);
    var n2 = t4, r2 = e3;
    if (n2.isUserMessage()) {
      cs$2(!n2.poll).throw(b$2.notSupportedError);
      var i4 = un$2(n2);
      return r2._sendUserMessage(i4);
    }
    if (n2.isFileMessage()) {
      i4 = vn$2(n2);
      return r2._sendFileMessage(i4);
    }
    if (t4.isMultipleFilesMessage()) throw b$2.channelTypeNotSupportedError;
  }, s4.prototype.deleteMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(e3 instanceof yt).throw(b$2.invalidParameters), e3.messageId > 0 ? (t4 = uo.of(this._iid).requestQueue, r2 = new ot$1({ channelType: this.channelType, channelUrl: this.url, messageId: e3.messageId, messageToken: e3 instanceof _t ? e3._messageToken : void 0 }), [4, t4.send(r2)]) : [3, 2];
          case 1:
            i4.sent(), i4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, s4.prototype.addReaction = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return cs$2(e3 instanceof yt && e3.messageId > 0 && S$1("string", t4)).throw(b$2.invalidParameters), r2 = uo.of(this._iid).requestQueue, i4 = new Sr({ channelType: this.channelType, channelUrl: this.url, messageId: e3.messageId, reactionKey: t4 }), [4, r2.send(i4)];
          case 1:
            return s5 = a4.sent(), [2, s5.as(Ur).reactionEvent];
        }
      });
    });
  }, s4.prototype.deleteReaction = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return cs$2(e3 instanceof yt && e3.messageId > 0 && S$1("string", t4)).throw(b$2.invalidParameters), r2 = uo.of(this._iid).requestQueue, i4 = new Ar({ channelType: this.channelType, channelUrl: this.url, messageId: e3.messageId, reactionKey: t4 }), [4, r2.send(i4)];
          case 1:
            return s5 = a4.sent(), [2, s5.as(Nr).reactionEvent];
        }
      });
    });
  }, s4.prototype._updateUserMessageMetaArray = function(e3, t4, r2, i4) {
    return r$1(this, void 0, void 0, function() {
      var s5, a4, o2, u3, c3, l2;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return s5 = uo.of(this._iid), a4 = s5.dispatcher, o2 = s5.requestQueue, u3 = new Er({ channelType: this.channelType, channelUrl: this.url, messageId: e3, metaArrayParams: { array: t4, mode: r2, upsert: i4 } }), [4, o2.send(u3)];
          case 1:
            return c3 = d4.sent(), l2 = c3.as(Tr).message, a4.dispatch(new po({ messages: [l2], source: no.EVENT_MESSAGE_UPDATED })), [2, l2];
        }
      });
    });
  }, s4.prototype._updateFileMessageMetaArray = function(e3, t4, r2, i4) {
    return r$1(this, void 0, void 0, function() {
      var s5, a4, o2, u3, c3, l2;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return s5 = uo.of(this._iid), a4 = s5.dispatcher, o2 = s5.requestQueue, u3 = new wr({ channelType: this.channelType, channelUrl: this.url, messageId: e3, metaArrayParams: { array: t4, mode: r2, upsert: i4 } }), [4, o2.send(u3)];
          case 1:
            return c3 = d4.sent(), l2 = c3.as(Mr).message, a4.dispatch(new po({ messages: [l2], source: no.EVENT_MESSAGE_UPDATED })), [2, l2];
        }
      });
    });
  }, s4.prototype.createMessageMetaArrayKeys = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        return cs$2(e3 instanceof yt && e3.messageId > 0 && C$1("string", t4)).throw(b$2.invalidParameters), n2 = t4.map(function(e4) {
          return new Ve$1({ key: e4 });
        }), e3 instanceof Nt$1 ? [2, this._updateFileMessageMetaArray(e3.messageId, n2, "add", true)] : [2, this._updateUserMessageMetaArray(e3.messageId, n2, "add", true)];
      });
    });
  }, s4.prototype.deleteMessageMetaArrayKeys = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        return cs$2(e3 instanceof yt && e3.messageId > 0 && C$1("string", t4)).throw(b$2.invalidParameters), n2 = t4.map(function(e4) {
          return new Ve$1({ key: e4 });
        }), e3 instanceof Nt$1 ? [2, this._updateFileMessageMetaArray(e3.messageId, n2, "remove", true)] : [2, this._updateUserMessageMetaArray(e3.messageId, n2, "remove", true)];
      });
    });
  }, s4.prototype.addMessageMetaArrayValues = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return cs$2(e3 instanceof yt && e3.messageId > 0 && t4.every(function(e4) {
          return e4 instanceof Ve$1;
        })).throw(b$2.invalidParameters), e3 instanceof Nt$1 ? [2, this._updateFileMessageMetaArray(e3.messageId, t4, "add", true)] : [2, this._updateUserMessageMetaArray(e3.messageId, t4, "add", true)];
      });
    });
  }, s4.prototype.removeMessageMetaArrayValues = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return cs$2(e3 instanceof yt && e3.messageId > 0 && t4.every(function(e4) {
          return e4 instanceof Ve$1;
        })).throw(b$2.invalidParameters), e3 instanceof Nt$1 ? [2, this._updateFileMessageMetaArray(e3.messageId, t4, "remove", true)] : [2, this._updateUserMessageMetaArray(e3.messageId, t4, "remove", true)];
      });
    });
  }, s4.prototype.report = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return cs$2((T$2(yn$2, e3) || e3 instanceof ro) && S$1("string", t4)).throw(b$2.invalidParameters), r2 = uo.of(this._iid), i4 = r2.sdkState, s5 = r2.requestQueue, a4 = new yr({ channelUrl: this.url, channelType: this.channelType, userId: i4.userId, category: e3, description: t4 }), [4, s5.send(a4)];
          case 1:
            return o2.sent(), [2];
        }
      });
    });
  }, s4.prototype.reportUser = function(e3, t4, r2) {
    return r$1(this, void 0, void 0, function() {
      var i4, s5, a4, o2;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return cs$2(e3 instanceof ls$2 && (T$2(yn$2, t4) || t4 instanceof ro) && S$1("string", r2)).throw(b$2.invalidParameters), i4 = uo.of(this._iid), s5 = i4.sdkState, a4 = i4.requestQueue, o2 = new _r$1({ channelUrl: this.url, channelType: this.channelType, userId: s5.userId, offendingUserId: e3.userId, category: t4, description: r2 }), [4, a4.send(o2)];
          case 1:
            return u3.sent(), [2];
        }
      });
    });
  }, s4.prototype.reportMessage = function(e3, t4, r2) {
    return r$1(this, void 0, void 0, function() {
      var i4, s5, a4, o2;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return cs$2(e3 instanceof _t && (T$2(yn$2, t4) || t4 instanceof ro) && S$1("string", r2)).throw(b$2.invalidParameters), i4 = uo.of(this._iid), s5 = i4.sdkState, a4 = i4.requestQueue, o2 = new gr({ channelUrl: this.url, channelType: this.channelType, userId: s5.userId, offendingUserId: e3.sender.userId, messageId: e3.messageId, category: t4, description: r2, messageToken: e3._messageToken }), [4, a4.send(o2)];
          case 1:
            return u3.sent(), [2];
        }
      });
    });
  }, s4.prototype.updatePoll = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return cs$2(S$1("number", e3) && function(e4) {
              return S$1("string", e4.title, true) && Co(e4.data) && S$1("boolean", e4.allowUserSuggestion, true) && S$1("boolean", e4.allowMultipleVotes, true) && S$1("number", e4.closeAt, true);
            }(t4)).throw(b$2.invalidParameters), r2 = uo.of(this._iid).requestQueue, i4 = new Dr(n$2({ pollId: e3 }, t4)), [4, r2.send(i4)];
          case 1:
            return s5 = a4.sent(), [2, s5.as(Lr).poll];
        }
      });
    });
  }, s4.prototype.deletePoll = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4;
      return s$1(this, function(s5) {
        switch (s5.label) {
          case 0:
            return t4 = S$1("number", e3), cs$2(t4).throw(b$2.invalidParameters), r2 = uo.of(this._iid).requestQueue, i4 = new Fr({ pollId: e3 }), [4, r2.send(i4)];
          case 1:
            return s5.sent(), [2];
        }
      });
    });
  }, s4.prototype.closePoll = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return t4 = S$1("number", e3), cs$2(t4).throw(b$2.invalidParameters), r2 = uo.of(this._iid).requestQueue, i4 = new qr({ pollId: e3 }), [4, r2.send(i4)];
          case 1:
            return s5 = a4.sent(), [2, s5.as(zr).poll];
        }
      });
    });
  }, s4.prototype.addPollOption = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return r2 = S$1("number", e3) && S$1("string", t4) && "" !== t4.trim(), cs$2(r2).throw(b$2.invalidParameters), i4 = uo.of(this._iid).requestQueue, s5 = new Br({ channelUrl: this.url, channelType: this.channelType, pollId: e3, optionText: t4 }), [4, i4.send(s5)];
          case 1:
            return a4 = o2.sent(), [2, a4.as(jr).poll];
        }
      });
    });
  }, s4.prototype.updatePollOption = function(e3, t4, r2) {
    return r$1(this, void 0, void 0, function() {
      var i4, s5, a4, o2;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return i4 = S$1("number", e3) && S$1("number", t4) && S$1("string", r2) && "" !== r2.trim(), cs$2(i4).throw(b$2.invalidParameters), s5 = uo.of(this._iid).requestQueue, a4 = new Kr({ pollId: e3, pollOptionId: t4, optionText: r2 }), [4, s5.send(a4)];
          case 1:
            return o2 = u3.sent(), [2, o2.as(Qr).poll];
        }
      });
    });
  }, s4.prototype.deletePollOption = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return r2 = S$1("number", e3) && S$1("number", t4), cs$2(r2).throw(b$2.invalidParameters), i4 = uo.of(this._iid).requestQueue, s5 = new Gr({ pollId: e3, pollOptionId: t4 }), [4, i4.send(s5)];
          case 1:
            return a4.sent(), [2];
        }
      });
    });
  }, s4.prototype.votePoll = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var r2, i4, s5, a4, o2, u3, c3;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            return r2 = S$1("number", e3) && C$1("number", t4), cs$2(r2).throw(b$2.invalidParameters), i4 = uo.of(this._iid), s5 = i4.requestQueue, a4 = i4.dispatcher, o2 = new Vr({ reqId: this._generateRequestId(), channelUrl: this.url, channelType: this.channelType, pollId: e3, pollOptionIds: t4 }), [4, s5.send(o2)];
          case 1:
            return u3 = l2.sent(), c3 = u3.as(Hr).event, a4.dispatch(new So({ event: c3, source: no.EVENT_POLL_VOTED })), [2, c3];
        }
      });
    });
  }, s4.prototype.getPollChangeLogsSinceTimestamp = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return cs$2(S$1("number", e3)).throw(b$2.invalidParameters), [4, Qo.of(this._iid).getPollChangeLogs(this.url, this.channelType, e3)];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, s4.prototype.getPollChangeLogsSinceToken = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return cs$2(S$1("string", e3, true)), [4, Qo.of(this._iid).getPollChangeLogs(this.url, this.channelType, e3)];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, s4.prototype.createPollListQuery = function(e3) {
    return void 0 === e3 && (e3 = 10), new Yo(this._iid, { channelUrl: this.url, channelType: this.channelType, limit: e3 });
  }, s4.prototype.createPollVoterListQuery = function(e3, t4, n2) {
    return void 0 === n2 && (n2 = 20), new $o(this._iid, { channelUrl: this.url, channelType: this.channelType, pollId: e3, pollOptionId: t4, limit: n2 });
  }, s4.prototype.pinMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(S$1("number", e3) && e3 > 0).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new _i({ channelType: this.channelType, channelUrl: this.url, messageId: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), [2];
        }
      });
    });
  }, s4.prototype.unpinMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, r2;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return cs$2(S$1("number", e3) && e3 > 0).throw(b$2.invalidParameters), t4 = uo.of(this._iid).requestQueue, r2 = new gi({ channelType: this.channelType, channelUrl: this.url, messageId: e3 }), [4, t4.send(r2)];
          case 1:
            return i4.sent(), [2];
        }
      });
    });
  }, s4;
}(Jr$1), wi = function(e3) {
  function t4(t5) {
    void 0 === t5 && (t5 = {});
    var n2 = e3.call(this) || this;
    return Object.keys(t5).forEach(function(e4) {
      n2.hasOwnProperty(e4) && (n2[e4] = t5[e4]);
    }), n2;
  }
  return t$2(t4, e3), t4;
}(function() {
  this.onConnected = ut$1, this.onReconnectStarted = ut$1, this.onReconnectSucceeded = ut$1, this.onReconnectFailed = ut$1, this.onDisconnected = ut$1;
}), Mi = function(e3) {
  function t4(t5) {
    void 0 === t5 && (t5 = {});
    var n2 = e3.call(this) || this;
    return Object.keys(t5).forEach(function(e4) {
      n2.hasOwnProperty(e4) && (n2[e4] = t5[e4]);
    }), n2;
  }
  return t$2(t4, e3), t4;
}(function() {
  this.onSessionExpired = ut$1, this.onSessionTokenRequired = function(e3) {
    return e3(null);
  }, this.onSessionError = ut$1, this.onSessionRefreshed = ut$1, this.onSessionClosed = ut$1;
}), Si = function(e3) {
  function t4(t5) {
    void 0 === t5 && (t5 = {});
    var n2 = e3.call(this) || this;
    return Object.keys(t5).forEach(function(e4) {
      n2.hasOwnProperty(e4) && (n2[e4] = t5[e4]);
    }), n2;
  }
  return t$2(t4, e3), t4;
}(function() {
  this.onFriendsDiscovered = ut$1, this.onTotalUnreadMessageCountChanged = ut$1, this.onTotalUnreadMessageCountUpdated = ut$1;
}), Ui = function(t4) {
  function n2(n3) {
    var r2 = n3.limit, s4 = n3.token, a4 = n3.userIdsFilter, o2 = n3.metaDataKeyFilter, u3 = n3.metaDataValuesFilter, c3 = n3.nicknameStartsWithFilter, l2 = t4.call(this) || this;
    return l2.method = ae.GET, l2.path = ue, l2.params = se({ limit: r2, token: s4, user_ids: a4, metadatakey: o2, metadatavalues_in: u3, nickname_startswith: c3 }), l2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Ai = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.users = n2.users.map(function(e4) {
      return new ls$2(t5, e4);
    }), r2.next = n2.next, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Ni = function(e3) {
  function i3(t4, n2) {
    var r2, i4, s4, a4 = this;
    return (a4 = e3.call(this, t4, n2) || this).userIdsFilter = null, a4.metaDataKeyFilter = null, a4.metaDataValuesFilter = null, a4.nicknameStartsWithFilter = null, a4.userIdsFilter = null !== (r2 = n2.userIdsFilter) && void 0 !== r2 ? r2 : null, a4.metaDataKeyFilter = null !== (i4 = n2.metaDataKeyFilter) && void 0 !== i4 ? i4 : null, a4.metaDataValuesFilter = null !== (s4 = n2.metaDataValuesFilter) && void 0 !== s4 ? s4 : null, a4.nicknameStartsWithFilter = n2.nicknameStartsWithFilter || null, a4;
  }
  return t$2(i3, e3), i3.prototype._validate = function() {
    return e3.prototype._validate.call(this) && C$1("string", this.userIdsFilter, true) && S$1("string", this.metaDataKeyFilter, true) && C$1("string", this.metaDataValuesFilter, true) && S$1("string", this.nicknameStartsWithFilter, true);
  }, i3.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, r2, i4, s4, a4, o2;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, r2 = new Ui(oe(n$2(n$2({}, this), { token: this._token }))), [4, e4.send(r2)]) : [3, 2] : [3, 5];
          case 1:
            return i4 = c3.sent(), s4 = i4.as(Ai), a4 = s4.users, o2 = s4.next, this._token = o2, this._hasNext = !!o2, this._isLoading = false, [2, a4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i3;
}(Oo), Ci = function(t4) {
  function n2(n3) {
    var r2 = n3.userId, s4 = n3.limit, a4 = n3.token, o2 = n3.userIdsFilter, u3 = t4.call(this) || this;
    return u3.method = ae.GET, u3.path = "".concat(ue, "/").concat(r2, "/block"), u3.params = se({ limit: s4, token: a4, user_ids: o2 }), u3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Oi = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.users = n2.users.map(function(e4) {
      return new ls$2(t5, e4);
    }), r2.next = n2.next, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), ki = function(e3) {
  function i3(t4, n2) {
    var r2, i4 = this;
    return (i4 = e3.call(this, t4, n2) || this).userIdsFilter = null, i4.userIdsFilter = null !== (r2 = n2.userIdsFilter) && void 0 !== r2 ? r2 : null, i4;
  }
  return t$2(i3, e3), i3.prototype._validate = function() {
    return e3.prototype._validate.call(this) && C$1("string", this.userIdsFilter, true);
  }, i3.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, r2, i4, s4, a4, o2, c3, l2;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid), r2 = e4.sdkState, i4 = e4.requestQueue, s4 = new Ci(oe(n$2(n$2({}, this), { userId: r2.userId, token: this._token }))), [4, i4.send(s4)]) : [3, 2] : [3, 5];
          case 1:
            return a4 = d4.sent(), o2 = a4.as(Oi), c3 = o2.users, l2 = o2.next, this._token = l2, this._hasNext = !!l2, this._isLoading = false, [2, c3];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i3;
}(Oo), Pi = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.limit, s4 = t5.token, a4 = e3.call(this) || this;
    return a4.method = ae.GET, a4.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/friends"), a4.params = { limit: r2, token: s4 }, a4;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Ri = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.hasMore = n2.has_more, r2.users = n2.users.map(function(e4) {
      return new ls$2(t5, e4);
    }), r2.next = n2.next, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), xi = function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  return t$2(t4, e3), t4.prototype._validate = function() {
    return e3.prototype._validate.call(this);
  }, t4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, r2, i3, s4, a4, o2, c3, l2;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid), t5 = e4.sdkState, r2 = e4.requestQueue, i3 = new Pi(n$2(n$2({}, this), { userId: t5.userId, token: this._token })), [4, r2.send(i3)]) : [3, 2] : [3, 5];
          case 1:
            return s4 = d4.sent(), a4 = s4.as(Ri), o2 = a4.users, c3 = a4.hasMore, l2 = a4.next, this._token = l2, this._hasNext = c3, this._isLoading = false, [2, o2];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(Oo), Di = {}, Li = function() {
  function e3(e4) {
    var t4 = e4.dbname, n2 = e4.itemSizeLimit, r2 = void 0 === n2 ? 1048576 : n2, i3 = e4.cacheLimit, s4 = void 0 === i3 ? 256 : i3, a4 = e4.blockHashBase, o2 = void 0 === a4 ? 2 : a4, u3 = e4.blockHashMultiplier, c3 = void 0 === u3 ? 10 : u3, l2 = e4.blockHashConstant, d4 = void 0 === l2 ? 11 : l2, h4 = e4.transactionApplyDelay, f2 = void 0 === h4 ? 200 : h4, p2 = e4.disableLogger, m4 = void 0 !== p2 && p2;
    return Di[t4] || (this.itemSizeLimit = r2, this.cacheLimit = s4, this.blockHashBase = o2, this.blockHashMultiplier = c3, this.blockHashConstant = d4, this.transactionApplyDelay = f2, this.disableLogger = m4, Di[t4] = this), Di[t4];
  }
  return e3.get = function(e4) {
    return Di[e4];
  }, e3;
}();
!function(e3) {
  e3[e3.UNKNOWN_ERROR = 6e7] = "UNKNOWN_ERROR", e3[e3.STORE_NOT_DEFINED = 61001e3] = "STORE_NOT_DEFINED", e3[e3.STORE_NOT_AVAILABLE = 61001001] = "STORE_NOT_AVAILABLE", e3[e3.STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING = 61001002] = "STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING", e3[e3.STORE_IS_FULL = 61001003] = "STORE_IS_FULL", e3[e3.STORE_NOT_INITIALIZED = 61001004] = "STORE_NOT_INITIALIZED", e3[e3.STORE_INVALID_KEY_TYPE = 61002e3] = "STORE_INVALID_KEY_TYPE", e3[e3.STORE_BROKEN_INTEGRITY = 61002001] = "STORE_BROKEN_INTEGRITY", e3[e3.STORE_BROKEN_BLOB = 61002002] = "STORE_BROKEN_BLOB", e3[e3.STORE_ENCRYPTION_INVALID = 61002003] = "STORE_ENCRYPTION_INVALID", e3[e3.STORE_ITEM_SIZE_LIMIT_EXCEEDED = 61017e3] = "STORE_ITEM_SIZE_LIMIT_EXCEEDED", e3[e3.STORE_READ_FAILED = 61017001] = "STORE_READ_FAILED", e3[e3.STORE_WRITE_FAILED = 61017002] = "STORE_WRITE_FAILED", e3[e3.DATABASE_SCHEMA_NOT_ON_UPGRADE = 62002e3] = "DATABASE_SCHEMA_NOT_ON_UPGRADE", e3[e3.COLLECTION_NOT_READY = 63001e3] = "COLLECTION_NOT_READY", e3[e3.COLLECTION_KEY_NOT_MATCH = 63002e3] = "COLLECTION_KEY_NOT_MATCH", e3[e3.COLLECTION_QUERY_NOT_VALID = 63002001] = "COLLECTION_QUERY_NOT_VALID", e3[e3.COLLECTION_KEY_NOT_FOUND = 63004e3] = "COLLECTION_KEY_NOT_FOUND", e3[e3.COLLECTION_KEY_NOT_GIVEN = 63004001] = "COLLECTION_KEY_NOT_GIVEN", e3[e3.COLLECTION_INSERT_DUPLICATE = 63009e3] = "COLLECTION_INSERT_DUPLICATE", e3[e3.COLLECTION_WRITE_FAILED = 63017e3] = "COLLECTION_WRITE_FAILED", e3[e3.COLLECTION_ITEM_SIZE_LIMIT_EXCEEDED = 63017001] = "COLLECTION_ITEM_SIZE_LIMIT_EXCEEDED", e3[e3.INDEX_TABLE_IS_REQUIRED = 65001e3] = "INDEX_TABLE_IS_REQUIRED", e3[e3.INDEX_TYPE_NOT_MATCH = 65002e3] = "INDEX_TYPE_NOT_MATCH", e3[e3.COMPARE_TYPE_NOT_MATCH = 69002001] = "COMPARE_TYPE_NOT_MATCH", e3[e3.CIRCULAR_REFERENCE_FOUND = 69002002] = "CIRCULAR_REFERENCE_FOUND";
}(Ei || (Ei = {}));
var Fi, qi = function(e3) {
  function t4(n2) {
    var r2 = n2.code, i3 = void 0 === r2 ? Ei.UNKNOWN_ERROR : r2, s4 = n2.message, a4 = void 0 === s4 ? "Unknown error occurred." : s4, o2 = e3.call(this, a4) || this;
    return o2.code = i3, Object.setPrototypeOf(o2, t4.prototype), o2;
  }
  return t$2(t4, e3), Object.defineProperty(t4, "storeNotDefined", { get: function() {
    return new t4({ code: Ei.STORE_NOT_DEFINED, message: "Store is not defined. Specify the store on NestDB()" });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeNotAvailable", { get: function() {
    return new t4({ code: Ei.STORE_NOT_AVAILABLE, message: "Store is not available. Check your environment settings." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeNotAvailableInPrivateBrowsing", { get: function() {
    return new t4({ code: Ei.STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING, message: "Store is not available because it is in private browsing." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeIsFull", { get: function() {
    return new t4({ code: Ei.STORE_IS_FULL, message: "Store is full." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeNotInitialized", { get: function() {
    return new t4({ code: Ei.STORE_NOT_INITIALIZED, message: "Store is not initialized." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeKeyTypeIsInvalid", { get: function() {
    return new t4({ code: Ei.STORE_INVALID_KEY_TYPE, message: "Store key should be string type." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeBrokenIntegrity", { get: function() {
    return new t4({ code: Ei.STORE_BROKEN_INTEGRITY, message: "Data should be in a store but it does not. Integrity is broken." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeBrokenBlob", { get: function() {
    return new t4({ code: Ei.STORE_BROKEN_BLOB, message: "Data should be in a store but it does not. Blob data is broken." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeEncryptionInvalid", { get: function() {
    return new t4({ code: Ei.STORE_ENCRYPTION_INVALID, message: "Encryption algorithm has changed. All the store should reset." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeItemSizeExceeded", { get: function() {
    return new t4({ code: Ei.STORE_ITEM_SIZE_LIMIT_EXCEEDED, message: "The size of the item exceeds the limit that the store allows." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeReadFailed", { get: function() {
    return new t4({ code: Ei.STORE_READ_FAILED, message: "Failed to read from store." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "storeWriteFailed", { get: function() {
    return new t4({ code: Ei.STORE_WRITE_FAILED, message: "Failed to write to store." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "databaseSchemaNotOnUpgrade", { get: function() {
    return new t4({ code: Ei.DATABASE_SCHEMA_NOT_ON_UPGRADE, message: "Committing schema is not allowed when upgrade is not running." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionNotReady", { get: function() {
    return new t4({ code: Ei.COLLECTION_NOT_READY, message: "Collection is not ready due to an error during initialization." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionKeyNotMatch", { get: function() {
    return new t4({ code: Ei.COLLECTION_KEY_NOT_MATCH, message: "keyName of collection could not change." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionQueryNotValid", { get: function() {
    return new t4({ code: Ei.COLLECTION_QUERY_NOT_VALID, message: "Query parameter is not a valid format." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionInsertDuplicate", { get: function() {
    return new t4({ code: Ei.COLLECTION_INSERT_DUPLICATE, message: "The key already exists." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionKeyNotFound", { get: function() {
    return new t4({ code: Ei.COLLECTION_KEY_NOT_FOUND, message: "The key is not found." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionKeyNotGiven", { get: function() {
    return new t4({ code: Ei.COLLECTION_KEY_NOT_GIVEN, message: "The item should contain [keyName] property." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionWriteFailed", { get: function() {
    return new t4({ code: Ei.COLLECTION_WRITE_FAILED, message: "Failed to write an item." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "collectionItemSizeExceeded", { get: function() {
    return new t4({ code: Ei.COLLECTION_ITEM_SIZE_LIMIT_EXCEEDED, message: "The size of the item exceeds the limit that a collection allows." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "indexTableIsRequired", { get: function() {
    return new t4({ code: Ei.INDEX_TABLE_IS_REQUIRED, message: "Index table is required." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "indexTypesNotMatch", { get: function() {
    return new t4({ code: Ei.INDEX_TYPE_NOT_MATCH, message: "Indexed column should have primitive type." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "compareTypesNotMatch", { get: function() {
    return new t4({ code: Ei.COMPARE_TYPE_NOT_MATCH, message: "Values to compare have different types." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "circularReferenceFound", { get: function() {
    return new t4({ code: Ei.CIRCULAR_REFERENCE_FOUND, message: "Cannot handle circular referenced object." });
  }, enumerable: false, configurable: true }), t4;
}(Error);
!function(e3) {
  e3.INIT = "init", e3.READY = "ready", e3.CLOSED = "closed";
}(Fi || (Fi = {}));
var zi, Bi = function(e3, t4) {
  if (void 0 === t4 && (t4 = /* @__PURE__ */ new WeakMap()), "object" == typeof e3 && null !== e3) {
    if (t4.has(e3)) throw qi.circularReferenceFound;
    var n2;
    return t4.set(e3, true), Array.isArray(e3) ? n2 = e3.map(function(e4) {
      return Bi(e4, t4);
    }) : e3 instanceof RegExp || e3 instanceof Date ? n2 = e3 : (n2 = {}, Object.keys(e3).forEach(function(r2) {
      n2[r2] = Bi(e3[r2], t4);
    })), t4.delete(e3), n2;
  }
  return e3;
}, ji = function(e3, t4) {
  if (null == t4) return 1;
  if (null == e3) return -1;
  if (typeof e3 != typeof t4) throw qi.compareTypesNotMatch;
  var n2 = 0;
  switch (typeof e3) {
    case "boolean":
    case "number":
      n2 = e3 - t4;
      break;
    case "string":
      n2 = e3.localeCompare(t4);
  }
  return n2;
}, Ki = function(e3, t4) {
  for (var n2 = 0, r2 = 0; r2 < e3.length; r2++) n2 = e3.charCodeAt(r2) + (n2 << 6) + (n2 << 16) - n2;
  return (n2 >>> 0) % t4;
}, Qi = function(e3) {
  return new Promise(function(t4) {
    setTimeout(function() {
      return t4();
    }, e3);
  });
}, Gi = function(e3, t4) {
  if (!t4) return false;
  if ("function" != typeof e3) {
    for (var n2 in e3) {
      if (["/and", "&&"].includes(n2)) {
        if (e3[n2].some(function(e4) {
          return !Gi(e4, t4);
        })) return false;
      } else if (["/or", "||"].includes(n2)) {
        if (e3[n2].every(function(e4) {
          return !Gi(e4, t4);
        })) return false;
      } else if ("/where" === n2) {
        if (!(0, e3[n2])(t4)) return false;
      } else {
        var r2 = n2;
        if ("object" == typeof e3[r2]) {
          var i3 = e3[r2];
          for (var s4 in i3) switch (s4) {
            case "/eq":
            case "=":
              if ((a4 = t4[r2]) !== (o2 = i3[s4])) return false;
              break;
            case "/neq":
            case "!=":
              if ((a4 = t4[r2]) === (o2 = i3[s4])) return false;
              break;
            case "/gt":
            case ">":
              var a4 = t4[r2], o2 = i3[s4];
              if (!(ji(a4, o2) > 0)) return false;
              break;
            case "/gte":
            case ">=":
              a4 = t4[r2], o2 = i3[s4];
              if (!(ji(a4, o2) >= 0)) return false;
              break;
            case "/lt":
            case "<":
              a4 = t4[r2], o2 = i3[s4];
              if (!(ji(a4, o2) < 0)) return false;
              break;
            case "/lte":
            case "<=":
              a4 = t4[r2], o2 = i3[s4];
              if (!(ji(a4, o2) <= 0)) return false;
              break;
            case "/in":
              a4 = t4[r2];
              if (!(o2 = i3[s4]).includes(a4)) return false;
              break;
            case "/nin":
              a4 = t4[r2];
              if ((o2 = i3[s4]).includes(a4)) return false;
              break;
            case "/contain":
              a4 = t4[r2], o2 = i3[s4];
              if (!a4.includes(o2)) return false;
              break;
            case "/regex":
              a4 = t4[r2];
              if (!(o2 = i3[s4]).test(a4)) return false;
              break;
            case "/where":
              a4 = t4[r2];
              if (!(0, i3[s4])(a4)) return false;
          }
        } else if ("function" == typeof e3[r2]) {
          if (!e3[r2](t4[r2])) return false;
        } else if (e3[r2] !== t4[r2]) return false;
      }
    }
    return true;
  }
  return e3(t4);
}, Vi = function() {
}, Hi = function() {
  return Promise.resolve();
}, Wi = function(e3) {
  return e3;
}, Yi = function(e3, t4) {
  t4();
};
!function(e3) {
  e3[e3.FORWARD = 0] = "FORWARD", e3[e3.BACKWARD = 1] = "BACKWARD";
}(zi || (zi = {}));
var Ji, Xi, Zi, $i = function() {
  function e3(e4) {
    var t4 = e4.initialPrevValue, n2 = void 0 === t4 ? null : t4, r2 = e4.initialNextValue, i3 = void 0 === r2 ? null : r2, s4 = e4.iterator, a4 = e4.map, o2 = void 0 === a4 ? Wi : a4, u3 = e4.backward, c3 = void 0 === u3 ? Hi : u3, l2 = e4.forward, d4 = void 0 === l2 ? Hi : l2, h4 = e4.complete, f2 = void 0 === h4 ? Vi : h4;
    this._prevValue = n2, this._nextValue = i3, this._error = null, this._map = o2, this._backward = c3, this._forward = d4, this._iterator = s4, this._complete = f2;
  }
  return Object.defineProperty(e3.prototype, "prevValue", { get: function() {
    return this._map(this._prevValue);
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "nextValue", { get: function() {
    return this._map(this._nextValue);
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "error", { get: function() {
    return this._error;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "hasPrevious", { get: function() {
    return !!this._prevValue;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "hasNext", { get: function() {
    return !!this._nextValue;
  }, enumerable: false, configurable: true }), e3.prototype.prev = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            if (!this.hasPrevious) return [3, 6];
            r2.label = 1;
          case 1:
            return r2.trys.push([1, 3, , 4]), e4 = this._prevValue, t4 = this, [4, this._backward()];
          case 2:
            return t4._prevValue = r2.sent() || null, this._nextValue = e4, [3, 4];
          case 3:
            return n2 = r2.sent(), this._error = n2, [3, 4];
          case 4:
            return [4, this._iterator(this)];
          case 5:
            return [2, r2.sent()];
          case 6:
            this._complete(), r2.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, e3.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            if (!this.hasNext) return [3, 6];
            r2.label = 1;
          case 1:
            return r2.trys.push([1, 3, , 4]), e4 = this._nextValue, t4 = this, [4, this._forward()];
          case 2:
            return t4._nextValue = r2.sent() || null, this._prevValue = e4, [3, 4];
          case 3:
            return n2 = r2.sent(), this._error = n2, [3, 4];
          case 4:
            return [4, this._iterator(this)];
          case 5:
            return [2, r2.sent()];
          case 6:
            this._complete(), r2.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, e3.prototype.stop = function() {
    this._prevValue = null, this._nextValue = null, this._complete();
  }, e3;
}(), es$1 = function() {
  function e3(e4) {
    var t4 = e4.condition, n2 = void 0 === t4 ? {} : t4, r2 = e4.backward, i3 = void 0 !== r2 && r2, s4 = e4.blockManager, a4 = e4.indexer;
    this.condition = n2, this.backward = i3, this._blockManager = s4, this._indexer = a4;
  }
  return e3.prototype.findOptimizedStartPosition = function() {
    var e4 = this, t4 = ["=", "/eq", ">", ">=", "/gt", "/gte"], n2 = ["=", "/eq", "<", "<=", "/lt", "/lte"];
    if (this.backward) {
      var r2 = this._indexer.origin.length - 1;
      if ("function" != typeof this.condition) for (h4 = 0; h4 < this._indexer.fields.length; h4++) {
        var i3 = this._indexer.fields[h4], s4 = 1;
        if ("-" === i3[0] && (i3 = i3.slice(1), s4 = -1), this.condition[i3]) {
          if ("object" == typeof this.condition[i3]) {
            var a4 = s4 > 0 ? n2 : t4;
            for (var o2 in this.condition[i3]) if (a4.includes(o2)) {
              for (var u3 = r2; u3 >= 0; u3--) if (s4 * ji(this._indexer.origin[u3].columnValues[h4], this.condition[i3][o2]) <= 0) {
                r2 = u3;
                break;
              }
            }
          } else for (u3 = r2; u3 >= 0; u3--) if (s4 * ji(this._indexer.origin[u3].columnValues[h4], this.condition[i3]) <= 0) {
            r2 = u3;
            break;
          }
        }
      }
      return Math.min(r2 + 1, this._indexer.origin.length - 1);
    }
    var c3 = 0;
    if ("function" != typeof this.condition) for (var l2 = function(r3) {
      var i4 = d4._indexer.fields[r3], s5 = 1;
      if ("-" === i4[0] && (i4 = i4.slice(1), s5 = -1), d4.condition[i4]) {
        if ("object" == typeof d4.condition[i4]) Object.keys(d4.condition[i4]).forEach(function(a6) {
          if ((s5 > 0 ? t4 : n2).includes(a6)) {
            for (var o3 = c3; o3 < e4._indexer.origin.length; o3++) if (s5 * ji(e4._indexer.origin[o3].columnValues[r3], e4.condition[i4][a6]) >= 0) {
              c3 = o3;
              break;
            }
          }
        });
        else for (var a5 = c3; a5 < d4._indexer.origin.length; a5++) if (s5 * ji(d4._indexer.origin[a5].columnValues[r3], d4.condition[i4]) >= 0) {
          c3 = a5;
          break;
        }
      }
    }, d4 = this, h4 = 0; h4 < this._indexer.fields.length; h4++) l2(h4);
    return Math.max(c3 - 1, 0);
  }, e3.prototype.each = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o2, u3 = this;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            if (t4 = this.findOptimizedStartPosition(), n2 = 0, this.backward && this._indexer.origin[t4] && (n2 = this._indexer.origin[t4].keys.length - 1), r2 = function() {
              if (u3._indexer.origin[t4]) {
                if (!u3._indexer.origin[t4].keys[++n2]) {
                  if (!u3._indexer.origin[++t4]) return false;
                  n2 = 0;
                }
                return true;
              }
              return false;
            }, i3 = function() {
              if (u3._indexer.origin[t4]) {
                if (!u3._indexer.origin[t4].keys[--n2]) {
                  if (!u3._indexer.origin[--t4]) return false;
                  n2 = u3._indexer.origin[t4].keys.length - 1;
                }
                return true;
              }
              return false;
            }, s4 = null, !this._indexer.origin[t4]) return [3, 4];
            a4 = this.backward ? i3 : r2, c3.label = 1;
          case 1:
            return [4, this._blockManager.getFromBlock(this._indexer.origin[t4].keys[n2])];
          case 2:
            if ((o2 = c3.sent()) && Gi(this.condition, o2)) return s4 = o2, [3, 4];
            c3.label = 3;
          case 3:
            if (a4()) return [3, 1];
            c3.label = 4;
          case 4:
            return [4, new Promise(function(a5) {
              var o3 = new $i({ initialNextValue: Bi(s4), iterator: e4, forward: function() {
                return r$1(u3, void 0, void 0, function() {
                  var e5, s5;
                  return s$1(this, function(a6) {
                    switch (a6.label) {
                      case 0:
                        e5 = this.backward ? i3 : r2, a6.label = 1;
                      case 1:
                        return e5() ? [4, this._blockManager.getFromBlock(this._indexer.origin[t4].keys[n2])] : [3, 3];
                      case 2:
                        return (s5 = a6.sent()) && Gi(this.condition, s5) ? [2, Bi(s5)] : [3, 1];
                      case 3:
                        return [2, null];
                    }
                  });
                });
              }, backward: function() {
                return r$1(u3, void 0, void 0, function() {
                  var e5, s5;
                  return s$1(this, function(a6) {
                    switch (a6.label) {
                      case 0:
                        e5 = this.backward ? r2 : i3, a6.label = 1;
                      case 1:
                        return e5() ? [4, this._blockManager.getFromBlock(this._indexer.origin[t4].keys[n2])] : [3, 3];
                      case 2:
                        return (s5 = a6.sent()) && Gi(this.condition, s5) ? [2, Bi(s5)] : [3, 1];
                      case 3:
                        return [2, null];
                    }
                  });
                });
              }, complete: a5 });
              e4(o3);
            })];
          case 5:
            return [2, c3.sent()];
        }
      });
    });
  }, e3;
}(), ts$1 = function() {
  function e3(e4) {
    var t4 = e4.condition, n2 = void 0 === t4 ? {} : t4, r2 = e4.backward, i3 = void 0 !== r2 && r2, s4 = e4.mutex, a4 = e4.blockManager, o2 = e4.indexer;
    this._mutex = s4, this._iterator = new es$1({ condition: n2, backward: i3, blockManager: a4, indexer: o2 });
  }
  return e3.prototype.fetch = function(e4) {
    return void 0 === e4 && (e4 = {}), r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4 = this;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            if (t4 = Math.max(e4.offset || 0, 0), 0 === (n2 = "number" == typeof e4.limit ? e4.limit : Number.MAX_SAFE_INTEGER)) return [2, []];
            if (n2 < 0) throw qi.collectionQueryNotValid;
            a4.label = 1;
          case 1:
            return a4.trys.push([1, 4, , 5]), r2 = [], [4, this._mutex.lock()];
          case 2:
            return a4.sent(), [4, this._iterator.each(function(e5) {
              return r$1(s4, void 0, void 0, function() {
                return s$1(this, function(i4) {
                  return e5.error ? e5.stop() : e5.hasNext ? 0 === t4 ? (r2.push(e5.nextValue), 0 < n2 && n2 <= r2.length ? e5.stop() : e5.next()) : (t4--, e5.next()) : e5.stop(), [2];
                });
              });
            })];
          case 3:
            return a4.sent(), this._mutex.unlock(), [2, r2];
          case 4:
            throw i3 = a4.sent(), this._mutex.unlock(), i3;
          case 5:
            return [2];
        }
      });
    });
  }, e3.prototype.count = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2 = this;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return r2.trys.push([0, 3, , 4]), e4 = 0, [4, this._mutex.lock()];
          case 1:
            return r2.sent(), [4, this._iterator.each(function(t5) {
              return r$1(n2, void 0, void 0, function() {
                return s$1(this, function(n3) {
                  return t5.error ? t5.stop() : t5.hasNext ? (e4++, t5.next()) : t5.stop(), [2];
                });
              });
            })];
          case 2:
            return r2.sent(), this._mutex.unlock(), [2, e4];
          case 3:
            throw t4 = r2.sent(), this._mutex.unlock(), t4;
          case 4:
            return [2];
        }
      });
    });
  }, e3;
}(), ns$1 = function(e3) {
  return "".concat("nest", "@").concat(e3);
}, rs$1 = function(e3, t4) {
  return "".concat(ns$1(e3), "/").concat(t4);
}, is$1 = function(e3, t4) {
  return "".concat(rs$1(e3, t4), ".metadata");
}, ss$1 = function(e3, t4) {
  return "".concat(rs$1(e3, t4), "/block.");
}, as$1 = function(e3, t4) {
  return "".concat(rs$1(e3, t4), "/blob.");
}, os$1 = function() {
  function e3(e4) {
    var t4 = e4.dbname, n2 = e4.collectionName, r2 = e4.store;
    this.dbname = t4, this.collectionName = n2, this.store = r2;
  }
  return e3.prototype.get = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o2, u3, c3;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            return [4, this.store.get(e4)];
          case 1:
            return (t4 = l2.sent()) ? (n2 = t4.data, r2 = t4.type, "undefined" == typeof fetch ? [3, 4] : [4, fetch(n2)]) : [3, 5];
          case 2:
            return [4, l2.sent().blob()];
          case 3:
            return [2, l2.sent()];
          case 4:
            for (i3 = [], s4 = atob(n2.split(",")[1]), a4 = 0; a4 < s4.length; a4 += 512) {
              for (o2 = s4.slice(a4, a4 + 512), u3 = new Array(o2.length), c3 = 0; c3 < o2.length; c3++) u3[c3] = o2.charCodeAt(c3);
              i3.push(new Uint8Array(u3));
            }
            return [2, new Blob(i3, { type: r2 })];
          case 5:
            return [2, null];
        }
      });
    });
  }, e3.prototype.save = function(e4, t4) {
    return void 0 === t4 && (t4 = "".concat(Date.now())), r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4 = this;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return [4, new Promise(function(n3) {
              var r3 = function(e5, t5, n4, r4) {
                return void 0 === r4 && (r4 = 0), "".concat(as$1(e5, t5)).concat(n4, ".").concat(r4);
              }(a4.dbname, a4.collectionName, t4), i4 = new FileReader();
              i4.onload = function() {
                n3({ blobId: r3, data: i4.result, type: e4.type });
              }, i4.readAsDataURL(e4);
            })];
          case 1:
            return n2 = o2.sent(), r2 = n2.blobId, i3 = n2.data, s4 = n2.type, [4, this.store.set({ key: r2, value: { data: i3, type: s4 } })];
          case 2:
            return o2.sent(), [2, r2];
        }
      });
    });
  }, e3.prototype.remove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this.store.remove(e4)];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2 = this;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e4 = as$1(this.dbname, this.collectionName), [4, this.store.getAllKeys()];
          case 1:
            return t4 = r2.sent(), [4, Promise.all(t4.filter(function(t5) {
              return t5.startsWith(e4);
            }).map(function(e5) {
              return r$1(n2, void 0, void 0, function() {
                return s$1(this, function(t5) {
                  switch (t5.label) {
                    case 0:
                      return [4, this.store.remove(e5)];
                    case 1:
                      return [2, t5.sent()];
                  }
                });
              });
            }))];
          case 2:
            return r2.sent(), [2];
        }
      });
    });
  }, e3;
}();
!function(e3) {
  e3[e3.COMMIT = 0] = "COMMIT", e3[e3.WRITE = 1] = "WRITE", e3[e3.ERROR = 2] = "ERROR";
}(Ji || (Ji = {})), function(e3) {
  e3.PENDING = "pending", e3.PERSISTENT = "persistent", e3.VOLATILE = "volatile";
}(Xi || (Xi = {})), function(e3) {
  e3[e3.NO_CACHE = 0] = "NO_CACHE", e3[e3.DEFAULT = 1] = "DEFAULT", e3[e3.PERSISTENT = 2] = "PERSISTENT";
}(Zi || (Zi = {}));
var us$1, cs$1, ls$1 = [Xi.PENDING, Xi.VOLATILE], ds$1 = {}, hs$1 = function() {
  function e3(e4) {
    var t4 = e4.dbname, n2 = e4.limit, r2 = void 0 === n2 ? 256 : n2;
    return ds$1[t4] || (this.dbname = t4, this._items = [], this._limit = r2, ds$1[t4] = this), ds$1[t4];
  }
  return e3.get = function(e4) {
    return ds$1[e4];
  }, Object.defineProperty(e3.prototype, "items", { get: function() {
    return this._items;
  }, enumerable: false, configurable: true }), e3.prototype.find = function(e4, t4, n2) {
    return void 0 === n2 && (n2 = Zi.DEFAULT), r$1(this, void 0, void 0, function() {
      var r2, i3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return (r2 = this.get(t4)) ? [3, 2] : [4, e4.get(t4)];
          case 1:
            return (i3 = s4.sent()) && (r2 = { key: t4, value: i3, state: n2 === Zi.PERSISTENT ? Xi.PERSISTENT : Xi.VOLATILE }, this.put(r2)), [3, 3];
          case 2:
            n2 === Zi.PERSISTENT && (r2.state = Xi.PERSISTENT), s4.label = 3;
          case 3:
            return [2, r2];
        }
      });
    });
  }, e3.prototype.get = function(e4, t4) {
    void 0 === t4 && (t4 = Zi.DEFAULT);
    var n2 = this._items.map(function(e5) {
      return e5.key;
    }).indexOf(e4);
    if (n2 > -1) {
      var r2 = this._items[n2];
      return t4 === Zi.PERSISTENT && (r2.state = Xi.PERSISTENT), t4 !== Zi.NO_CACHE && this.put(r2), r2;
    }
    return null;
  }, e3.prototype.put = function(e4) {
    var t4, n2;
    if (this._limit > 0) {
      var r2 = this._items.map(function(e5) {
        return e5.key;
      }).indexOf(e4.key);
      if (r2 > -1) ls$1.includes(this._items[r2].state) && ls$1.includes(e4.state) ? (this._items.splice(r2, 1), this._items.push(e4)) : (this._items[r2].state = e4.state, this._items[r2].value = e4.value);
      else {
        this._items.push(e4);
        var i3 = this._items.filter(function(e5) {
          return e5.state === Xi.VOLATILE;
        }), s4 = i3.length - this._limit;
        if (s4 > 0) {
          var a4 = [];
          try {
            for (var o$1 = o(this._items), u3 = o$1.next(); !u3.done; u3 = o$1.next()) {
              var c3 = u3.value;
              c3.state === Xi.VOLATILE && s4 > 0 ? s4-- : a4.push(c3);
            }
          } catch (e5) {
            t4 = { error: e5 };
          } finally {
            try {
              u3 && !u3.done && (n2 = o$1.return) && n2.call(o$1);
            } finally {
              if (t4) throw t4.error;
            }
          }
          this._items = a4;
        }
      }
    }
  }, e3.prototype.remove = function(e4) {
    var t4 = this._items.map(function(e5) {
      return e5.key;
    }).indexOf(e4);
    t4 > -1 && this._items.splice(t4, 1);
  }, e3.prototype.clearByCondition = function(e4) {
    this._items = this._items.filter(function(t4) {
      return !e4(t4);
    });
  }, e3.prototype.clearForDatabase = function(e4) {
    this.clearByCondition(function(t4) {
      return t4.key.startsWith(ns$1(e4));
    });
  }, e3.prototype.clear = function(e4) {
    void 0 === e4 && (e4 = false), this._items = e4 ? [] : this._items.filter(function(e5) {
      return e5.state !== Xi.VOLATILE;
    });
  }, e3;
}(), fs$1 = function() {
  function e3(e4) {
    var t4 = e4.dbname, n2 = e4.collectionName, r2 = e4.store;
    this._requests = [], this._onCommit = /* @__PURE__ */ new Map(), this._onWrite = /* @__PURE__ */ new Map(), this._onError = /* @__PURE__ */ new Map(), this.dbname = t4, this.collectionName = n2, this.metadataKey = function(e5, t5) {
      return "".concat(rs$1(e5, t5), "/trans.metadata");
    }(t4, n2), this.recordsetKey = function(e5, t5) {
      return "".concat(rs$1(e5, t5), "/trans.recordset");
    }(t4, n2), this._store = r2;
  }
  return Object.defineProperty(e3.prototype, "generation", { get: function() {
    return this._metadata ? this._metadata.generation : 0;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "requestCount", { get: function() {
    return this._requests.length;
  }, enumerable: false, configurable: true }), e3.prototype._getReducedRecordset = function(e4) {
    return void 0 === e4 && (e4 = []), r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._store.get(this.recordsetKey)];
          case 1:
            return (t4 = n2.sent() || []).push.apply(t4, c([], a$1(e4), false)), [2, this._reduceRecordSet(t4)];
        }
      });
    });
  }, e3.prototype._reduceRecordSet = function(e4) {
    for (var t4 = [], n2 = {}, r2 = e4.length - 1; r2 >= 0; r2--) {
      for (var i3 = e4[r2], s4 = [], a4 = i3.requests.length - 1; a4 >= 0; a4--) {
        var o2 = i3.requests[a4], u3 = o2.data;
        n2[u3.key] || (s4.unshift(o2), n2[u3.key] = true);
      }
      s4.length > 0 && (i3.requests = s4, t4.unshift(i3));
    }
    return t4;
  }, e3.prototype._applyRecord = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4, o2, c3, l2, d4;
      return s$1(this, function(h4) {
        switch (h4.label) {
          case 0:
            n2 = hs$1.get(this.dbname), r2 = t4.generation, i3 = t4.requests, s4 = null, h4.label = 1;
          case 1:
            return h4.trys.push([1, 3, , 4]), [4, this._store.setMany(i3.map(function(e5) {
              return n$2(n$2({}, e5.data), { generation: r2 });
            }))];
          case 2:
            for (a4 = h4.sent(), o2 = 0; o2 < i3.length; o2++) a4[o2] instanceof Error && (s4 || (s4 = a4[o2]), c3 = i3[o2].data, n2.put(n$2(n$2({}, c3), { state: Xi.PERSISTENT })));
            return [3, 4];
          case 3:
            return l2 = h4.sent(), s4 = l2, [3, 4];
          case 4:
            return s4 ? [3, 6] : (d4 = e4.filter(function(e5) {
              return e5.generation !== r2;
            }), [4, this._store.set({ key: this.recordsetKey, value: d4 })]);
          case 5:
            return h4.sent(), this._onWrite.forEach(function(e5) {
              e5(i3.map(function(e6) {
                return e6.data;
              }));
            }), [3, 7];
          case 6:
            this._onError.forEach(function(e5) {
              s4 && e5(s4);
            }), h4.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, e3.prototype.init = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, r2, i3, s4, a4, o$1;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return e4 = this, [4, this._store.get(this.metadataKey)];
          case 1:
            return e4._metadata = u3.sent() || { generation: 1 }, [4, this._getReducedRecordset()];
          case 2:
            t4 = u3.sent(), u3.label = 3;
          case 3:
            u3.trys.push([3, 8, 9, 10]), n2 = o(t4), r2 = n2.next(), u3.label = 4;
          case 4:
            return r2.done ? [3, 7] : (i3 = r2.value, [4, this._applyRecord(t4, i3)]);
          case 5:
            u3.sent(), u3.label = 6;
          case 6:
            return r2 = n2.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return s4 = u3.sent(), a4 = { error: s4 }, [3, 10];
          case 9:
            try {
              r2 && !r2.done && (o$1 = n2.return) && o$1.call(n2);
            } finally {
              if (a4) throw a4.error;
            }
            return [7];
          case 10:
            return [2];
        }
      });
    });
  }, e3.prototype.on = function(e4, t4, n2) {
    switch (e4) {
      case Ji.COMMIT:
        this._onCommit.set(t4, n2);
        break;
      case Ji.WRITE:
        this._onWrite.set(t4, n2);
        break;
      case Ji.ERROR:
        this._onError.set(t4, n2);
    }
  }, e3.prototype.requestWrite = function(e4, t4) {
    this._requests.push({ data: e4, options: t4 }), hs$1.get(this.dbname).put(n$2({ state: Xi.PENDING }, e4));
  }, e3.prototype.requestMultipleWrite = function(e4, t4) {
    var n2, r2, i3 = hs$1.get(this.dbname);
    try {
      for (var s4 = o(e4), a4 = s4.next(); !a4.done; a4 = s4.next()) {
        var o$1 = a4.value;
        this._requests.push({ data: o$1, options: t4 }), i3.put(n$2({ state: Xi.PENDING }, o$1));
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        a4 && !a4.done && (r2 = s4.return) && r2.call(s4);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        return hs$1.get(this.dbname).clearByCondition(function(e5) {
          return e5.state === Xi.PENDING;
        }), this._requests = [], [2];
      });
    });
  }, e3.prototype.commit = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, r2, i3, s4, a4, o2, c3, l2, d4, h4, f2 = this;
      return s$1(this, function(p2) {
        switch (p2.label) {
          case 0:
            if (!((e4 = this._requests).length > 0)) return [3, 4];
            for (t4 = [], n2 = {}, o2 = e4.length - 1; o2 >= 0; o2--) r2 = e4[o2], l2 = r2.data, n2[l2.key] || (n2[l2.key] = true, t4.unshift(r2));
            return i3 = { generation: this.generation, requests: t4 }, [4, this._getReducedRecordset([i3])];
          case 1:
            return s4 = p2.sent(), [4, this._store.set({ key: this.recordsetKey, value: s4 })];
          case 2:
            return p2.sent(), this._metadata.generation++, [4, this._store.set({ key: this.metadataKey, value: this._metadata })];
          case 3:
            for (p2.sent(), a4 = hs$1.get(this.dbname), o2 = 0; o2 < t4.length; o2++) c3 = t4[o2], l2 = c3.data, d4 = c3.options, a4.put(n$2(n$2({}, l2), { state: d4 && d4.persistent ? Xi.PERSISTENT : Xi.VOLATILE }));
            this._requests = [], this._onCommit.forEach(function(t5) {
              t5(e4.map(function(e5) {
                return e5.data;
              }));
            }), h4 = Li.get(this.dbname), setTimeout(function() {
              try {
                f2._applyRecord(s4, i3);
              } catch (e5) {
                f2._onError.forEach(function(t5) {
                  return t5(e5);
                });
              }
            }, h4.transactionApplyDelay), p2.label = 4;
          case 4:
            return [2];
        }
      });
    });
  }, e3;
}(), ps$1 = function() {
  function e3(e4) {
    var t4 = e4.blockId, n2 = e4.keyName, r2 = e4.items, i3 = void 0 === r2 ? [] : r2, s4 = e4.limit;
    this.blockId = t4, this.keyName = n2, this.limit = s4, this._items = c([], a$1(i3), false);
  }
  return e3.createFromCacheItem = function(t4) {
    return t4 ? new e3(t4.value) : null;
  }, Object.defineProperty(e3.prototype, "isEmpty", { get: function() {
    return 0 === this._items.length;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "items", { get: function() {
    return this._items;
  }, enumerable: false, configurable: true }), e3.prototype.serialize = function() {
    return { blockId: this.blockId, keyName: this.keyName, limit: this.limit, items: this._items };
  }, e3.prototype.getItemByKey = function(e4) {
    var t4 = this, n2 = this._items.find(function(n3) {
      var r2 = n3[t4.keyName];
      return e4 === r2;
    });
    return null != n2 ? n2 : null;
  }, e3.prototype.has = function(e4) {
    var t4 = this;
    return this._items.map(function(e5) {
      return e5[t4.keyName];
    }).includes(e4);
  }, e3.prototype.add = function(e4) {
    var t4 = this, n2 = this._items.map(function(e5) {
      return e5[t4.keyName];
    }).indexOf(e4[this.keyName]);
    return n2 < 0 ? this._items.length < this.limit && (this._items.push(e4), true) : (this._items[n2] = e4, true);
  }, e3.prototype.remove = function(e4) {
    for (var t4 = 0; t4 < this._items.length; t4++) if (this._items[t4][this.keyName] === e4) return this._items.splice(t4, 1), true;
    return false;
  }, e3.prototype.clear = function() {
    this._items = [];
  }, e3;
}(), ms$1 = function() {
  function e3(e4) {
    var t4 = e4.dbname, n2 = e4.collectionName, r2 = e4.metadata, i3 = e4.hashFunction, s4 = void 0 === i3 ? Ki : i3, a4 = e4.transaction, o2 = e4.store;
    this.dbname = t4, this.collectionName = n2, this.hashFunction = s4, this.metadata = r2, this._transaction = a4, this._store = o2;
  }
  return Object.defineProperty(e3.prototype, "keyName", { get: function() {
    return this.metadata.keyName;
  }, enumerable: false, configurable: true }), e3.prototype.createBlockId = function(e4, t4) {
    return void 0 === t4 && (t4 = this.metadata.blockLevel), n2 = this.dbname, r2 = this.collectionName, i3 = t4, s4 = "".concat(function(e5, t5, n3) {
      var r3 = n3.base * Math.pow(n3.multiplier, t5) + n3.constant;
      return (n3.hashFunction || Ki)(e5, r3);
    }(e4, t4, { hashFunction: this.hashFunction, base: this.metadata.blockHashBase, multiplier: this.metadata.blockHashMultiplier, constant: this.metadata.blockHashConstant })), "".concat(ss$1(n2, r2)).concat(i3, ".").concat(s4);
    var n2, r2, i3, s4;
  }, e3.prototype._findBlock = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            t4 = hs$1.get(this.dbname), n2 = this.metadata.blockLevel, a4.label = 1;
          case 1:
            return n2 > 0 ? (r2 = this.createBlockId(e4, n2), [4, t4.find(this._store, r2)]) : [3, 4];
          case 2:
            if ((i3 = a4.sent()) && (s4 = ps$1.createFromCacheItem(i3), null == s4 ? void 0 : s4.getItemByKey(e4))) return [2, s4];
            a4.label = 3;
          case 3:
            return n2--, [3, 1];
          case 4:
            return [2, null];
        }
      });
    });
  }, e3.prototype.getFromBlock = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._findBlock(e4)];
          case 1:
            return [2, (t4 = n2.sent()) ? t4.getItemByKey(e4) : null];
        }
      });
    });
  }, e3.prototype.putToBlock = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return n2 = Li.get(this.dbname), r2 = this.createBlockId(e4), i3 = Math.floor(this._store.itemSizeLimit / n2.itemSizeLimit), [4, hs$1.get(this.dbname).find(this._store, r2)];
          case 1:
            return s4 = o2.sent(), (null == (a4 = s4 ? ps$1.createFromCacheItem(s4) : new ps$1({ blockId: r2, keyName: this.keyName, items: [], limit: i3 })) ? void 0 : a4.add(t4)) ? (this._transaction.requestWrite({ key: a4.blockId, value: a4.serialize() }), [2, true]) : [2, false];
        }
      });
    });
  }, e3.prototype.removeFromBlock = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._findBlock(e4)];
          case 1:
            return (t4 = n2.sent()) && t4.remove(e4) ? (this._transaction.requestWrite({ key: t4.blockId, value: t4.serialize() }), [2, true]) : [2, false];
        }
      });
    });
  }, e3.prototype.clearAllBlocks = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e4 = ss$1(this.dbname, this.collectionName), [4, this._store.getAllKeys()];
          case 1:
            return t4 = r2.sent(), n2 = t4.filter(function(t5) {
              return t5.startsWith(e4);
            }), [4, this._store.removeMany(n2)];
          case 2:
            return r2.sent(), [4, this._transaction.clear()];
          case 3:
            return r2.sent(), hs$1.get(this.dbname).clearByCondition(function(t5) {
              return t5.key.startsWith(e4);
            }), [2];
        }
      });
    });
  }, e3;
}(), vs$1 = function() {
  function e3(e4) {
    var t4 = e4.dbname, n2 = e4.collectionName, r2 = e4.keyName, i3 = e4.fields, s4 = e4.transaction, a4 = e4.store, o2 = this;
    this._origin = [], this._table = [];
    var u3 = function(e5, t5, n3) {
      return "".concat(rs$1(e5, t5), "/index.").concat(n3);
    }(t4, n2, i3.join(">"));
    this.dbname = t4, this.collectionName = n2, this.keyName = r2, this.fields = i3, this.indexerKey = u3, this._store = a4, this._transaction = s4, this._transaction.on(Ji.COMMIT, this.indexerKey, function() {
      return o2.commit();
    }), this._transaction.on(Ji.ERROR, this.indexerKey, function() {
      return o2.abort();
    });
  }
  return e3.createKey = function(e4) {
    return e4.join(">");
  }, e3.parseKey = function(e4) {
    return e4.split(">");
  }, e3.prototype._addItem = function(e4) {
    var t4 = e4[this.keyName], n2 = this.getColumnValues(e4), r2 = a$1(this.indexOf(n2), 2), i3 = r2[0];
    return r2[1] ? !this._table[i3].keys.includes(t4) && (this._table[i3].keys.push(t4), true) : (this._table.splice(i3, 0, { columnValues: n2, keys: [t4] }), true);
  }, e3.prototype._removeItem = function(e4) {
    var t4 = e4[this.keyName], n2 = this.getColumnValues(e4), r2 = a$1(this.indexOf(n2), 2), i3 = r2[0];
    if (r2[1]) {
      var s4 = this._table[i3].keys.indexOf(t4);
      if (s4 > -1) return this._table[i3].keys.splice(s4, 1), 0 === this._table[i3].keys.length && this._table.splice(i3, 1), true;
    }
    return false;
  }, Object.defineProperty(e3.prototype, "origin", { get: function() {
    return this._origin;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "table", { get: function() {
    return this._table;
  }, enumerable: false, configurable: true }), e3.prototype.getColumnValues = function(e4) {
    var t4, n2, r2, i3, s4 = [];
    try {
      for (var a4 = o(this.fields), o$1 = a4.next(); !o$1.done; o$1 = a4.next()) {
        var u3 = o$1.value;
        if ("-" === u3[0] && (u3 = u3.slice(1)), r2 = e4[u3], i3 = void 0, i3 = typeof r2, null !== r2 && "undefined" !== i3 && "boolean" !== i3 && "number" !== i3 && "string" !== i3) throw qi.indexTypesNotMatch;
        s4.push(e4[u3]);
      }
    } catch (e5) {
      t4 = { error: e5 };
    } finally {
      try {
        o$1 && !o$1.done && (n2 = a4.return) && n2.call(a4);
      } finally {
        if (t4) throw t4.error;
      }
    }
    return s4;
  }, e3.prototype.diff = function(e4, t4) {
    for (var n2 in this.fields) {
      var r2 = "-" === this.fields[n2][0] ? -1 : 1, i3 = ji(e4[n2], t4[n2]);
      if (0 !== i3) return r2 * i3;
    }
    return 0;
  }, e3.prototype.indexOf = function(e4) {
    if (this._table.length > 0) {
      for (var t4 = 0, n2 = this._table.length - 1; t4 <= n2; ) {
        var r2 = Math.floor((t4 + n2) / 2), i3 = this.diff(e4, this._table[r2].columnValues);
        if (i3 > 0) t4 = r2 + 1;
        else {
          if (!(i3 < 0)) return [r2, true];
          n2 = r2 - 1;
        }
      }
      return [t4, false];
    }
    return [0, false];
  }, e3.prototype.ensure = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, r2, i3, s4, a4, o$1, u3, c3, l2, d4, h4, f2, p2, m4, y4;
      return s$1(this, function(_2) {
        switch (_2.label) {
          case 0:
            return [4, (e4 = hs$1.get(this.dbname)).find(this._store, this.indexerKey, Zi.PERSISTENT)];
          case 1:
            return (t4 = _2.sent()) ? [3, 11] : (n2 = ss$1(this.dbname, this.collectionName), [4, this._store.getAllKeys()]);
          case 2:
            r2 = _2.sent(), _2.label = 3;
          case 3:
            _2.trys.push([3, 8, 9, 10]), i3 = o(r2), s4 = i3.next(), _2.label = 4;
          case 4:
            return s4.done ? [3, 7] : (a4 = s4.value).startsWith(n2) ? [4, e4.find(this._store, a4, Zi.NO_CACHE)] : [3, 6];
          case 5:
            if (o$1 = _2.sent(), u3 = ps$1.createFromCacheItem(o$1)) try {
              for (m4 = void 0, c3 = o(u3.items), l2 = c3.next(); !l2.done; l2 = c3.next()) d4 = l2.value, this._addItem(d4);
            } catch (e5) {
              m4 = { error: e5 };
            } finally {
              try {
                l2 && !l2.done && (y4 = c3.return) && y4.call(c3);
              } finally {
                if (m4) throw m4.error;
              }
            }
            _2.label = 6;
          case 6:
            return s4 = i3.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return h4 = _2.sent(), f2 = { error: h4 }, [3, 10];
          case 9:
            try {
              s4 && !s4.done && (p2 = i3.return) && p2.call(i3);
            } finally {
              if (f2) throw f2.error;
            }
            return [7];
          case 10:
            return this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [3, 12];
          case 11:
            this._origin = t4.value, this._table = Bi(this._origin), _2.label = 12;
          case 12:
            return [2];
        }
      });
    });
  }, e3.prototype.drop = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return hs$1.get(this.dbname).remove(this.indexerKey), [4, this._store.remove(this.indexerKey)];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, e3.prototype.addItem = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        return this._addItem(e4) && this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [2];
      });
    });
  }, e3.prototype.removeItem = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        return this._removeItem(e4) && this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [2];
      });
    });
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        return this._table = [], this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [2];
      });
    });
  }, e3.prototype.commit = function() {
    this._origin = this._table, this._table = Bi(this._origin);
  }, e3.prototype.abort = function() {
    this._table = Bi(this._origin);
  }, e3;
}(), ys$1 = function() {
  return "undefined" != typeof document && "undefined" != typeof navigator && "ReactNative" !== navigator.product;
}, _s$1 = function() {
  var e3 = (/* @__PURE__ */ new Date()).getTime();
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t4) {
    var n2 = (e3 + 16 * Math.random()) % 16 | 0;
    return e3 = Math.floor(e3 / 16), ("x" === t4 ? n2 : 3 & n2 | 8).toString(16);
  });
};
!function(e3) {
  e3[e3.PROCESSING = 0] = "PROCESSING", e3[e3.DONE = 1] = "DONE";
}(us$1 || (us$1 = {})), function(e3) {
  e3.NEWNODE = "newnode", e3.REMOVENODE = "removenode", e3.CLAIM_HOST = "claimhost", e3.SYNC_HOST = "synchost", e3.REQUEST_LOCK = "requestlock", e3.ACQUIRE_LOCK = "acquirelock", e3.RELEASE_LOCK = "releaselock";
}(cs$1 || (cs$1 = {}));
var gs$1, bs$1 = {}, Is$1 = function() {
  function e3(e4, t4) {
    void 0 === t4 && (t4 = {});
    var n2 = this;
    return this._state = us$1.PROCESSING, this._queue = [], this._activationQueue = [], bs$1[e4] && !t4.forceCreate || (this.nodeId = _s$1(), this.key = e4, ys$1() && (t4.startAsInvisible ? this.registerNode() : "visible" === document.visibilityState ? this.claimHost() : this.registerNode(), document.addEventListener("visibilitychange", function() {
      "visible" === document.visibilityState && n2.claimHost();
    }), window.addEventListener("message", function(e5) {
      var t5, r2, i3 = e5.data;
      if (null == i3 ? void 0 : i3.isNestDbMessage) {
        var s4 = i3.nodeId, a4 = i3.requestId, o$1 = i3.key, u3 = i3.op, c3 = i3.data;
        if (s4 !== n2.nodeId && o$1 === n2.key) switch (u3) {
          case cs$1.NEWNODE:
            n2._sendSync();
            break;
          case cs$1.CLAIM_HOST:
            n2._sendSync(), n2._hostId = s4;
            break;
          case cs$1.SYNC_HOST:
            if (!n2.isInSync) {
              n2._activationTimeout && clearTimeout(n2._activationTimeout);
              var l2 = c3, d4 = l2.currentItemRequestId, h4 = l2.queue, f2 = function(e6) {
                var t6 = n2._queue.findIndex(function(t7) {
                  return t7.requestId === e6.requestId;
                });
                t6 < 0 && n2._requestLock({ isNestDbMessage: true, nodeId: e6.nodeId, requestId: e6.requestId, key: n2.key, op: cs$1.REQUEST_LOCK, ts: e6.ts });
              };
              try {
                for (var p2 = o(h4), m4 = p2.next(); !m4.done; m4 = p2.next()) {
                  f2(m4.value);
                }
              } catch (e6) {
                t5 = { error: e6 };
              } finally {
                try {
                  m4 && !m4.done && (r2 = p2.return) && r2.call(p2);
                } finally {
                  if (t5) throw t5.error;
                }
              }
              n2._currentItem = n2._queue.find(function(e6) {
                return e6.requestId === d4;
              }), n2._completeSync();
            }
            break;
          case cs$1.REMOVENODE:
            n2._queue = n2._queue.filter(function(e6) {
              return e6.nodeId !== i3.nodeId;
            }), n2._currentItem && n2._currentItem.nodeId === i3.nodeId && (n2._currentItem = void 0, n2._acquire(n2._queue[0]));
            break;
          case cs$1.REQUEST_LOCK:
            n2._requestLock(i3);
            break;
          case cs$1.ACQUIRE_LOCK:
            var y4 = n2._queue.find(function(e6) {
              return e6.requestId === a4;
            });
            n2._acquire(y4);
            break;
          case cs$1.RELEASE_LOCK:
            n2._release(a4);
        }
      }
    }), window.addEventListener("beforeunload", function() {
      n2._send(cs$1.REMOVENODE);
    })), bs$1[e4] = this), bs$1[e4];
  }
  return Object.defineProperty(e3.prototype, "locked", { get: function() {
    return !!this._currentItem;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isHost", { get: function() {
    return this._hostId === this.nodeId;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isInSync", { get: function() {
    return this._state == us$1.DONE;
  }, enumerable: false, configurable: true }), e3.prototype._send = function(e4, t4) {
    var n2;
    void 0 === t4 && (t4 = {});
    var r2 = { isNestDbMessage: true, nodeId: this.nodeId, requestId: null !== (n2 = null == t4 ? void 0 : t4.requestId) && void 0 !== n2 ? n2 : _s$1(), key: this.key, op: e4, data: t4.data, ts: Date.now() };
    return ys$1() && window.postMessage(r2, "*"), r2;
  }, e3.prototype._acquire = function(e4) {
    e4 ? (this._currentItem = e4, this._currentItem.onAcquired && this._currentItem.onAcquired(e4.requestId)) : this._currentItem = void 0;
  }, e3.prototype._release = function(e4) {
    if (this._currentItem && this._currentItem.requestId === e4) {
      var t4 = this._currentItem;
      this._currentItem = void 0, t4.nodeId === this.nodeId && this._send(cs$1.RELEASE_LOCK, { requestId: t4.requestId });
      var n2 = this._queue.findIndex(function(t5) {
        return t5.requestId === e4;
      });
      n2 > -1 && this._queue.splice(n2, 1), t4.onReleased && t4.onReleased(e4);
    }
  }, e3.prototype._requestLock = function(e4) {
    var t4 = this;
    return new Promise(function(n2) {
      for (var r2 = { nodeId: e4.nodeId, requestId: e4.requestId, ts: e4.ts, onAcquired: function(e5) {
        t4.isHost && t4._send(cs$1.ACQUIRE_LOCK, { requestId: e5 }), n2();
      }, onReleased: function() {
        t4._acquire(t4._queue[0]);
      } }, i3 = false, s4 = 0; s4 < t4._queue.length; s4++) if (t4._queue[s4].ts > r2.ts) {
        t4._queue.splice(s4, 0, r2), i3 = true;
        break;
      }
      i3 || t4._queue.push(r2), t4._currentItem || t4._acquire(t4._queue[0]);
    });
  }, e3.prototype._sendSync = function() {
    var e4;
    this.isHost && this._send(cs$1.SYNC_HOST, { data: { currentItemRequestId: null === (e4 = this._currentItem) || void 0 === e4 ? void 0 : e4.requestId, queue: this._queue.map(function(e5) {
      return { nodeId: e5.nodeId, requestId: e5.requestId, ts: e5.ts };
    }) } });
  }, e3.prototype._waitUntilSyncCompleted = function() {
    return r$1(this, void 0, void 0, function() {
      var e4 = this;
      return s$1(this, function(t4) {
        return this.isHost && !this.isInSync ? [2, new Promise(function(t5) {
          e4._activationQueue.push(t5);
        })] : [2];
      });
    });
  }, e3.prototype._waitSync = function() {
    var e4 = this;
    this.isInSync || (this._activationTimeout = setTimeout(function() {
      e4._completeSync();
    }, 8));
  }, e3.prototype._completeSync = function() {
    this.isInSync || (this._state = us$1.DONE, this._activationQueue.forEach(function(e4) {
      return e4();
    }), this._activationQueue = []);
  }, e3.prototype.registerNode = function() {
    this._send(cs$1.NEWNODE), this._waitSync();
  }, e3.prototype.claimHost = function() {
    this._hostId = this.nodeId, this._send(cs$1.CLAIM_HOST), this._waitSync();
  }, e3.prototype.lock = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._waitUntilSyncCompleted()];
          case 1:
            return t4.sent(), e4 = this._send(cs$1.REQUEST_LOCK), [4, this._requestLock(e4)];
          case 2:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.unlock = function() {
    var e4;
    (null === (e4 = this._currentItem) || void 0 === e4 ? void 0 : e4.requestId) && this._release(this._currentItem.requestId);
  }, e3;
}(), Es$1 = function() {
  function e3(e4) {
    var t4 = e4.dbname, n2 = e4.collectionName, r2 = e4.keyName, i3 = e4.keyHash, s4 = e4.indexes, a4 = e4.store, o2 = this;
    this._state = Fi.INIT, this._indexers = [], this.dbname = t4, this.name = n2, this.keyName = r2, this.indexes = c([[r2]], a$1(s4.filter(function(e5) {
      return vs$1.createKey(e5) !== o2.keyName;
    })), false), this._keyHash = i3, this._store = a4, this._mutex = new Is$1(function(e5, t5) {
      return "".concat(rs$1(e5, t5), ".lock");
    }(t4, n2)), this._blobContainer = new os$1({ dbname: t4, collectionName: n2, store: a4 }), this._transaction = new fs$1({ dbname: t4, collectionName: n2, store: a4 });
  }
  return e3.metadataOf = function(e4, t4, n2) {
    return r$1(this, void 0, void 0, function() {
      var r2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return r2 = is$1(e4, t4), [4, n2.get(r2)];
          case 1:
            return [2, i3.sent()];
        }
      });
    });
  }, Object.defineProperty(e3.prototype, "state", { get: function() {
    return this._state;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isReady", { get: function() {
    return this._state === Fi.READY;
  }, enumerable: false, configurable: true }), e3.prototype.init = function() {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3, c$1, l2, d4, h4, f2, y4, _2 = this;
      return s$1(this, function(g2) {
        switch (g2.label) {
          case 0:
            return [4, this._mutex.lock()];
          case 1:
            g2.sent(), g2.label = 2;
          case 2:
            return g2.trys.push([2, 9, , 10]), t4 = Li.get(this.dbname), [4, e3.metadataOf(this.dbname, this.name, this._store)];
          case 3:
            return n2 = g2.sent(), this._metadata = n2 || { keyName: this.keyName, blockLevel: 1, blockHashBase: t4.blockHashBase, blockHashMultiplier: t4.blockHashMultiplier, blockHashConstant: t4.blockHashConstant, indexes: this.indexes }, [4, this._transaction.init()];
          case 4:
            g2.sent(), this._blockManager = new ms$1({ dbname: this.dbname, collectionName: this.name, hashFunction: this._keyHash, metadata: this._metadata, transaction: this._transaction, store: this._store }), r2 = c([], a$1(this.indexes), false), i3 = [], s4 = r2.map(function(e4) {
              return vs$1.createKey(e4);
            }), a4 = n2 ? n2.indexes.map(function(e4) {
              return vs$1.createKey(e4);
            }) : [];
            try {
              for (o$1 = o(a4), u3 = o$1.next(); !u3.done; u3 = o$1.next()) c$1 = u3.value, s4.includes(c$1) || i3.push(vs$1.parseKey(c$1));
            } catch (e4) {
              f2 = { error: e4 };
            } finally {
              try {
                u3 && !u3.done && (y4 = o$1.return) && y4.call(o$1);
              } finally {
                if (f2) throw f2.error;
              }
            }
            return (l2 = []).push.apply(l2, c([], a$1(r2.map(function(e4) {
              var t5 = new vs$1({ dbname: _2.dbname, collectionName: _2.name, keyName: _2.keyName, fields: e4, transaction: _2._transaction, store: _2._store });
              return _2._indexers.push(t5), t5.ensure();
            })), false)), l2.push.apply(l2, c([], a$1(i3.map(function(e4) {
              return new vs$1({ dbname: _2.dbname, collectionName: _2.name, keyName: _2.keyName, fields: e4, transaction: _2._transaction, store: _2._store }).drop();
            })), false)), [4, Promise.all(l2)];
          case 5:
            return g2.sent(), [4, this._transaction.commit()];
          case 6:
            return g2.sent(), s4.sort().join(",") === a4.sort().join(",") ? [3, 8] : (d4 = is$1(this.dbname, this.name), this._metadata.indexes = r2, [4, this._store.set({ key: d4, value: this._metadata })]);
          case 7:
            g2.sent(), g2.label = 8;
          case 8:
            return this._state = Fi.READY, this._mutex.unlock(), [3, 10];
          case 9:
            throw h4 = g2.sent(), this._mutex.unlock(), h4;
          case 10:
            return [2];
        }
      });
    });
  }, e3.prototype.close = function() {
    this._state = Fi.CLOSED;
  }, e3.prototype._hasPropertyOfKeyName = function(e4) {
    var t4 = e4[this.keyName];
    return "string" == typeof t4 && !!t4;
  }, e3.prototype._getIndexerBy = function(e4) {
    var t4, n2;
    void 0 === e4 && (e4 = null), e4 || (e4 = [this.keyName]);
    var r2 = vs$1.createKey(e4);
    try {
      for (var i3 = o(this._indexers), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        if (r2 === vs$1.createKey(a4.fields)) return a4;
      }
    } catch (e5) {
      t4 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (n2 = i3.return) && n2.call(i3);
      } finally {
        if (t4) throw t4.error;
      }
    }
    throw qi.indexTableIsRequired;
  }, e3.prototype._upgradeBlockLevel = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e4 = is$1(this.dbname, this.name), this._metadata.blockLevel++, [4, this._store.set({ key: e4, value: this._metadata })];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype._requestInsert = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4;
      return s$1(this, function(o$1) {
        switch (o$1.label) {
          case 0:
            return t4 = e4[this.keyName], [4, this._blockManager.getFromBlock(t4)];
          case 1:
            return o$1.sent() ? [3, 13] : [4, this._blockManager.putToBlock(t4, e4)];
          case 2:
            return o$1.sent() ? [3, 5] : [4, this._upgradeBlockLevel()];
          case 3:
            return o$1.sent(), [4, this._blockManager.putToBlock(t4, e4)];
          case 4:
            o$1.sent(), o$1.label = 5;
          case 5:
            o$1.trys.push([5, 10, 11, 12]), n2 = o(this._indexers), r2 = n2.next(), o$1.label = 6;
          case 6:
            return r2.done ? [3, 9] : [4, r2.value.addItem(e4)];
          case 7:
            o$1.sent(), o$1.label = 8;
          case 8:
            return r2 = n2.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return i3 = o$1.sent(), s4 = { error: i3 }, [3, 12];
          case 11:
            try {
              r2 && !r2.done && (a4 = n2.return) && a4.call(n2);
            } finally {
              if (s4) throw s4.error;
            }
            return [7];
          case 12:
            return [3, 14];
          case 13:
            throw qi.collectionInsertDuplicate;
          case 14:
            return [2];
        }
      });
    });
  }, e3.prototype._requestUpsert = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3, c3, l2, d4, h4, f2;
      return s$1(this, function(p2) {
        switch (p2.label) {
          case 0:
            return t4 = e4[this.keyName], [4, this._blockManager.getFromBlock(t4)];
          case 1:
            return (n2 = p2.sent()) ? [3, 13] : [4, this._blockManager.putToBlock(t4, e4)];
          case 2:
            return p2.sent() ? [3, 5] : [4, this._upgradeBlockLevel()];
          case 3:
            return p2.sent(), [4, this._blockManager.putToBlock(t4, e4)];
          case 4:
            p2.sent(), p2.label = 5;
          case 5:
            p2.trys.push([5, 10, 11, 12]), r2 = o(this._indexers), i3 = r2.next(), p2.label = 6;
          case 6:
            return i3.done ? [3, 9] : [4, (u3 = i3.value).addItem(e4)];
          case 7:
            p2.sent(), p2.label = 8;
          case 8:
            return i3 = r2.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return s4 = p2.sent(), l2 = { error: s4 }, [3, 12];
          case 11:
            try {
              i3 && !i3.done && (d4 = r2.return) && d4.call(r2);
            } finally {
              if (l2) throw l2.error;
            }
            return [7];
          case 12:
            return [3, 23];
          case 13:
            return [4, this._blockManager.putToBlock(t4, e4)];
          case 14:
            p2.sent(), p2.label = 15;
          case 15:
            p2.trys.push([15, 21, 22, 23]), a4 = o(this._indexers), o$1 = a4.next(), p2.label = 16;
          case 16:
            return o$1.done ? [3, 20] : 0 === (u3 = o$1.value).diff(u3.getColumnValues(n2), u3.getColumnValues(e4)) ? [3, 19] : [4, u3.removeItem(n2)];
          case 17:
            return p2.sent(), [4, u3.addItem(e4)];
          case 18:
            p2.sent(), p2.label = 19;
          case 19:
            return o$1 = a4.next(), [3, 16];
          case 20:
            return [3, 23];
          case 21:
            return c3 = p2.sent(), h4 = { error: c3 }, [3, 23];
          case 22:
            try {
              o$1 && !o$1.done && (f2 = a4.return) && f2.call(a4);
            } finally {
              if (h4) throw h4.error;
            }
            return [7];
          case 23:
            return [2];
        }
      });
    });
  }, e3.prototype._requestUpdate = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return t4 = e4[this.keyName], [4, this._blockManager.getFromBlock(t4)];
          case 1:
            return (n2 = c3.sent()) ? [4, this._blockManager.putToBlock(t4, e4)] : [3, 11];
          case 2:
            c3.sent(), c3.label = 3;
          case 3:
            c3.trys.push([3, 9, 10, 11]), r2 = o(this._indexers), i3 = r2.next(), c3.label = 4;
          case 4:
            return i3.done ? [3, 8] : 0 === (s4 = i3.value).diff(s4.getColumnValues(n2), s4.getColumnValues(e4)) ? [3, 7] : [4, s4.removeItem(n2)];
          case 5:
            return c3.sent(), [4, s4.addItem(e4)];
          case 6:
            c3.sent(), c3.label = 7;
          case 7:
            return i3 = r2.next(), [3, 4];
          case 8:
            return [3, 11];
          case 9:
            return a4 = c3.sent(), o$1 = { error: a4 }, [3, 11];
          case 10:
            try {
              i3 && !i3.done && (u3 = r2.return) && u3.call(r2);
            } finally {
              if (o$1) throw o$1.error;
            }
            return [7];
          case 11:
            return [2];
        }
      });
    });
  }, e3.prototype._requestRemove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4;
      return s$1(this, function(o$1) {
        switch (o$1.label) {
          case 0:
            return [4, this._blockManager.getFromBlock(e4)];
          case 1:
            return (t4 = o$1.sent()) ? [4, this._blockManager.removeFromBlock(e4)] : [3, 10];
          case 2:
            o$1.sent(), o$1.label = 3;
          case 3:
            o$1.trys.push([3, 8, 9, 10]), n2 = o(this._indexers), r2 = n2.next(), o$1.label = 4;
          case 4:
            return r2.done ? [3, 7] : [4, r2.value.removeItem(t4)];
          case 5:
            o$1.sent(), o$1.label = 6;
          case 6:
            return r2 = n2.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return i3 = o$1.sent(), s4 = { error: i3 }, [3, 10];
          case 9:
            try {
              r2 && !r2.done && (a4 = n2.return) && a4.call(n2);
            } finally {
              if (s4) throw s4.error;
            }
            return [7];
          case 10:
            return [2];
        }
      });
    });
  }, e3.prototype._requestClear = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, r2, i3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return [4, this._blockManager.clearAllBlocks()];
          case 1:
            s4.sent(), s4.label = 2;
          case 2:
            s4.trys.push([2, 7, 8, 9]), e4 = o(this._indexers), t4 = e4.next(), s4.label = 3;
          case 3:
            return t4.done ? [3, 6] : [4, t4.value.clear()];
          case 4:
            s4.sent(), s4.label = 5;
          case 5:
            return t4 = e4.next(), [3, 3];
          case 6:
            return [3, 9];
          case 7:
            return n2 = s4.sent(), r2 = { error: n2 }, [3, 9];
          case 8:
            try {
              t4 && !t4.done && (i3 = e4.return) && i3.call(e4);
            } finally {
              if (r2) throw r2.error;
            }
            return [7];
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype.getByKey = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 6];
          case 1:
            r2.sent(), r2.label = 2;
          case 2:
            return r2.trys.push([2, 4, , 5]), [4, this._blockManager.getFromBlock(e4)];
          case 3:
            return t4 = r2.sent(), this._mutex.unlock(), [2, Bi(t4)];
          case 4:
            throw n2 = r2.sent(), this._mutex.unlock(), n2;
          case 5:
            return [3, 7];
          case 6:
            throw qi.collectionNotReady;
          case 7:
            return [2];
        }
      });
    });
  }, e3.prototype.query = function(e4) {
    if (void 0 === e4 && (e4 = {}), this.isReady) return new ts$1({ condition: e4.where, mutex: this._mutex, blockManager: this._blockManager, indexer: this._getIndexerBy(e4.index), backward: !!e4.backward });
    throw qi.collectionNotReady;
  }, e3.prototype.insertOne = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            if (n2.trys.push([2, 5, , 7]), !this._hasPropertyOfKeyName(e4)) throw qi.collectionKeyNotGiven;
            return [4, this._requestInsert(Bi(e4))];
          case 3:
            return n2.sent(), [4, this._transaction.commit()];
          case 4:
            return n2.sent(), this._mutex.unlock(), [2, e4];
          case 5:
            return t4 = n2.sent(), [4, this._transaction.clear()];
          case 6:
            throw n2.sent(), this._mutex.unlock(), t4;
          case 7:
            return [3, 9];
          case 8:
            throw qi.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype.insertMany = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3 = this;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 15];
          case 1:
            c3.sent(), c3.label = 2;
          case 2:
            if (c3.trys.push([2, 12, , 14]), e4.some(function(e5) {
              return !u3._hasPropertyOfKeyName(e5);
            })) throw qi.collectionKeyNotGiven;
            c3.label = 3;
          case 3:
            c3.trys.push([3, 8, 9, 10]), t4 = o(e4), n2 = t4.next(), c3.label = 4;
          case 4:
            return n2.done ? [3, 7] : (r2 = n2.value, [4, this._requestInsert(Bi(r2))]);
          case 5:
            c3.sent(), c3.label = 6;
          case 6:
            return n2 = t4.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return i3 = c3.sent(), a4 = { error: i3 }, [3, 10];
          case 9:
            try {
              n2 && !n2.done && (o$1 = t4.return) && o$1.call(t4);
            } finally {
              if (a4) throw a4.error;
            }
            return [7];
          case 10:
            return [4, this._transaction.commit()];
          case 11:
            return c3.sent(), this._mutex.unlock(), [2, e4];
          case 12:
            return s4 = c3.sent(), [4, this._transaction.clear()];
          case 13:
            throw c3.sent(), this._mutex.unlock(), s4;
          case 14:
            return [3, 16];
          case 15:
            throw qi.collectionNotReady;
          case 16:
            return [2];
        }
      });
    });
  }, e3.prototype.upsertOne = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            if (n2.trys.push([2, 5, , 7]), !this._hasPropertyOfKeyName(e4)) throw qi.collectionKeyNotGiven;
            return [4, this._requestUpsert(Bi(e4))];
          case 3:
            return n2.sent(), [4, this._transaction.commit()];
          case 4:
            return n2.sent(), this._mutex.unlock(), [2, e4];
          case 5:
            return t4 = n2.sent(), [4, this._transaction.clear()];
          case 6:
            throw n2.sent(), this._mutex.unlock(), t4;
          case 7:
            return [3, 9];
          case 8:
            throw qi.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype.upsertMany = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3 = this;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 15];
          case 1:
            c3.sent(), c3.label = 2;
          case 2:
            if (c3.trys.push([2, 12, , 14]), e4.some(function(e5) {
              return !u3._hasPropertyOfKeyName(e5);
            })) throw qi.collectionKeyNotGiven;
            c3.label = 3;
          case 3:
            c3.trys.push([3, 8, 9, 10]), t4 = o(e4), n2 = t4.next(), c3.label = 4;
          case 4:
            return n2.done ? [3, 7] : (r2 = n2.value, [4, this._requestUpsert(Bi(r2))]);
          case 5:
            c3.sent(), c3.label = 6;
          case 6:
            return n2 = t4.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return i3 = c3.sent(), a4 = { error: i3 }, [3, 10];
          case 9:
            try {
              n2 && !n2.done && (o$1 = t4.return) && o$1.call(t4);
            } finally {
              if (a4) throw a4.error;
            }
            return [7];
          case 10:
            return [4, this._transaction.commit()];
          case 11:
            return c3.sent(), this._mutex.unlock(), [2, e4];
          case 12:
            return s4 = c3.sent(), [4, this._transaction.clear()];
          case 13:
            throw c3.sent(), this._mutex.unlock(), s4;
          case 14:
            return [3, 16];
          case 15:
            throw qi.collectionNotReady;
          case 16:
            return [2];
        }
      });
    });
  }, e3.prototype.update = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            if (n2.trys.push([2, 5, , 7]), !this._hasPropertyOfKeyName(e4)) throw qi.collectionKeyNotGiven;
            return [4, this._requestUpdate(Bi(e4))];
          case 3:
            return n2.sent(), [4, this._transaction.commit()];
          case 4:
            return n2.sent(), this._mutex.unlock(), [2, e4];
          case 5:
            return t4 = n2.sent(), [4, this._transaction.clear()];
          case 6:
            throw n2.sent(), this._mutex.unlock(), t4;
          case 7:
            return [3, 9];
          case 8:
            throw qi.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype.updateIf = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4, o$1, u3, c3, l2, d4, h4, f2, p2, m4, y4 = this;
      return s$1(this, function(_2) {
        switch (_2.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 16];
          case 1:
            _2.sent(), _2.label = 2;
          case 2:
            return _2.trys.push([2, 13, , 15]), n2 = e4.where, r2 = void 0 === n2 ? {} : n2, i3 = e4.index, s4 = void 0 === i3 ? null : i3, a4 = e4.backward, o$1 = void 0 !== a4 && a4, u3 = [], [4, new es$1({ condition: r2, blockManager: this._blockManager, backward: o$1, indexer: this._getIndexerBy(s4) }).each(function(e5) {
              return r$1(y4, void 0, void 0, function() {
                var n3;
                return s$1(this, function(i4) {
                  if (e5.error) throw e5.stop(), e5.error;
                  return e5.hasNext ? (n3 = e5.nextValue, Gi(r2, n3) && t4.set && ("function" != typeof t4.set ? Object.keys(t4.set).forEach(function(e6) {
                    var r3;
                    n3[e6] = null === (r3 = t4.set) || void 0 === r3 ? void 0 : r3[e6];
                  }) : t4.set(n3), u3.push(n3)), e5.next()) : e5.stop(), [2];
                });
              });
            })];
          case 3:
            _2.sent(), _2.label = 4;
          case 4:
            _2.trys.push([4, 9, 10, 11]), c3 = o(u3), l2 = c3.next(), _2.label = 5;
          case 5:
            return l2.done ? [3, 8] : (d4 = l2.value, [4, this._requestUpdate(Bi(d4))]);
          case 6:
            _2.sent(), _2.label = 7;
          case 7:
            return l2 = c3.next(), [3, 5];
          case 8:
            return [3, 11];
          case 9:
            return h4 = _2.sent(), p2 = { error: h4 }, [3, 11];
          case 10:
            try {
              l2 && !l2.done && (m4 = c3.return) && m4.call(c3);
            } finally {
              if (p2) throw p2.error;
            }
            return [7];
          case 11:
            return [4, this._transaction.commit()];
          case 12:
            return _2.sent(), this._mutex.unlock(), [2, u3];
          case 13:
            return f2 = _2.sent(), [4, this._transaction.clear()];
          case 14:
            throw _2.sent(), this._mutex.unlock(), f2;
          case 15:
            return [3, 17];
          case 16:
            throw this._transaction.clear(), qi.collectionNotReady;
          case 17:
            return [2];
        }
      });
    });
  }, e3.prototype.remove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return n2.trys.push([2, 5, , 7]), [4, this._requestRemove(e4)];
          case 3:
            return n2.sent(), [4, this._transaction.commit()];
          case 4:
            return n2.sent(), this._mutex.unlock(), [3, 7];
          case 5:
            return t4 = n2.sent(), [4, this._transaction.clear()];
          case 6:
            throw n2.sent(), this._mutex.unlock(), t4;
          case 7:
            return [3, 9];
          case 8:
            throw qi.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype.removeIf = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3, c3, l2, d4, h4, f2, p2, m4 = this;
      return s$1(this, function(y4) {
        switch (y4.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 15];
          case 1:
            y4.sent(), y4.label = 2;
          case 2:
            return y4.trys.push([2, 13, , 14]), t4 = e4.where, n2 = void 0 === t4 ? {} : t4, r2 = e4.index, i3 = void 0 === r2 ? null : r2, s4 = e4.backward, a4 = void 0 !== s4 && s4, o$1 = [], [4, new es$1({ condition: n2, blockManager: this._blockManager, backward: a4, indexer: this._getIndexerBy(i3) }).each(function(e5) {
              return r$1(m4, void 0, void 0, function() {
                var t5, r3;
                return s$1(this, function(i4) {
                  if (e5.error) throw e5.stop(), e5.error;
                  return e5.hasNext ? (t5 = e5.nextValue, Gi(n2, t5) && (r3 = t5[this.keyName], o$1.push(r3)), e5.next()) : e5.stop(), [2];
                });
              });
            })];
          case 3:
            y4.sent(), y4.label = 4;
          case 4:
            y4.trys.push([4, 9, 10, 11]), u3 = o(o$1), c3 = u3.next(), y4.label = 5;
          case 5:
            return c3.done ? [3, 8] : (l2 = c3.value, [4, this._requestRemove(l2)]);
          case 6:
            y4.sent(), y4.label = 7;
          case 7:
            return c3 = u3.next(), [3, 5];
          case 8:
            return [3, 11];
          case 9:
            return d4 = y4.sent(), f2 = { error: d4 }, [3, 11];
          case 10:
            try {
              c3 && !c3.done && (p2 = u3.return) && p2.call(u3);
            } finally {
              if (f2) throw f2.error;
            }
            return [7];
          case 11:
            return [4, this._transaction.commit()];
          case 12:
            return y4.sent(), this._mutex.unlock(), [2, o$1];
          case 13:
            throw h4 = y4.sent(), this._mutex.unlock(), h4;
          case 14:
            return [3, 16];
          case 15:
            throw this._transaction.clear(), qi.collectionNotReady;
          case 16:
            return [2];
        }
      });
    });
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            t4.sent(), t4.label = 2;
          case 2:
            return t4.trys.push([2, 5, , 7]), [4, this._requestClear()];
          case 3:
            return t4.sent(), [4, this._transaction.commit()];
          case 4:
            return t4.sent(), this._mutex.unlock(), [3, 7];
          case 5:
            return e4 = t4.sent(), [4, this._transaction.clear()];
          case 6:
            throw t4.sent(), this._mutex.unlock(), e4;
          case 7:
            return [3, 9];
          case 8:
            throw qi.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e3.prototype.getBlob = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._blobContainer.get(e4)];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, e3.prototype.saveBlob = function(e4, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._blobContainer.save(e4, t4)];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, e3.prototype.removeBlob = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._blobContainer.remove(e4)];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.removeAllBlobs = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._blobContainer.clear()];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, e3;
}(), Ts$1 = "[NESTDB]", ws$1 = true, Ms$1 = function() {
  function e3() {
  }
  return e3.off = function() {
    ws$1 = false;
  }, e3.log = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    ws$1 && console.log.apply(console, c(["".concat(Ts$1, "[LOG]")], a$1(e4), false));
  }, e3.warning = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    ws$1 && console.warn.apply(console, c(["".concat(Ts$1, "[WARNING]")], a$1(e4), false));
  }, e3.error = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    ws$1 && console.error.apply(console, c(["".concat(Ts$1, "[ERROR]")], a$1(e4), false));
  }, e3;
}(), Ss$1 = [{}, { a: 700400, n: "error" }], Us$1 = function() {
  function e3(e4) {
    var t4, n2, r2;
    this.encryption = null !== (t4 = e4.encryption) && void 0 !== t4 ? t4 : x, this.itemSizeLimit = null !== (n2 = e4.itemSizeLimit) && void 0 !== n2 ? n2 : 4194304, this.metadataBuffer = null !== (r2 = e4.metadataBuffer) && void 0 !== r2 ? r2 : 256;
  }
  return Object.defineProperty(e3.prototype, "_encryptionCheckKey", { get: function() {
    return "".concat(this.dbname, ".encrypt");
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "_reservedKeys", { get: function() {
    return [this._encryptionCheckKey];
  }, enumerable: false, configurable: true }), e3.prototype._getRawKey = function(e4, t4) {
    return void 0 === t4 && (t4 = ""), "".concat(e4).concat(t4);
  }, e3.prototype._generateShardPostfixArray = function(e4) {
    return void 0 === e4 && (e4 = 1), c([], a$1(Array(e4).keys()), false);
  }, e3.prototype._shardify = function(e4) {
    var t4 = this, n2 = e4.key, r2 = e4.value, i3 = JSON.stringify(this.encryption.encrypt(r2)), s4 = Math.ceil(i3.length / this.adjustedItemSizeLimit);
    return this._generateShardPostfixArray(s4).map(function(e5) {
      var r3 = { key: t4._getRawKey(n2, ".".concat(e5)), data: i3.substring(e5 * t4.adjustedItemSizeLimit, (e5 + 1) * t4.adjustedItemSizeLimit) };
      return 0 === e5 && (r3.metadata = { shards: s4 }), r3;
    });
  }, e3.prototype._resetIfEncryptionChanged = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, r2, i3, s4, a4, o2, u3, c3 = this;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            return [4, this.get(this._encryptionCheckKey)];
          case 1:
            if (e4 = l2.sent(), t4 = { encrypted: Ss$1.map(function(e5) {
              var t5;
              return null === (t5 = c3.encryption) || void 0 === t5 ? void 0 : t5.encrypt(e5);
            }) }, !e4) return [3, 8];
            if (!e4.encrypted || !Array.isArray(e4.encrypted)) return [3, 6];
            for (i3 in n2 = e4.encrypted, r2 = [], n2) r2.push(i3);
            s4 = 0, l2.label = 2;
          case 2:
            return s4 < r2.length ? (i3 = r2[s4]) in n2 ? (a4 = i3, o2 = JSON.stringify(e4.encrypted[a4]), u3 = JSON.stringify(t4.encrypted[a4]), o2 === u3 ? [3, 4] : (Ms$1.warning("Encryption algorithm has changed. Stored data would be cleared."), [4, this.clear()])) : [3, 4] : [3, 5];
          case 3:
            return l2.sent(), [3, 5];
          case 4:
            return s4++, [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return [4, this.clear()];
          case 7:
            l2.sent(), l2.label = 8;
          case 8:
            return [4, this.set({ key: this._encryptionCheckKey, value: t4 })];
          case 9:
            return l2.sent(), [2];
        }
      });
    });
  }, Object.defineProperty(e3.prototype, "adjustedItemSizeLimit", { get: function() {
    return Math.max(this.itemSizeLimit - this.metadataBuffer, 4);
  }, enumerable: false, configurable: true }), e3.prototype.usage = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, r2, i3, s4, a4, o$1, u3;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return e4 = 0, [4, this._getAllRawKeys()];
          case 1:
            t4 = c3.sent(), c3.label = 2;
          case 2:
            c3.trys.push([2, 7, 8, 9]), n2 = o(t4), r2 = n2.next(), c3.label = 3;
          case 3:
            return r2.done ? [3, 6] : (i3 = r2.value, [4, this._getRaw(i3)]);
          case 4:
            (s4 = c3.sent()) && (e4 += JSON.stringify(s4).length), c3.label = 5;
          case 5:
            return r2 = n2.next(), [3, 3];
          case 6:
            return [3, 9];
          case 7:
            return a4 = c3.sent(), o$1 = { error: a4 }, [3, 9];
          case 8:
            try {
              r2 && !r2.done && (u3 = n2.return) && u3.call(n2);
            } finally {
              if (o$1) throw o$1.error;
            }
            return [7];
          case 9:
            return [2, e4];
        }
      });
    });
  }, e3.prototype.getAllKeys = function() {
    return r$1(this, void 0, void 0, function() {
      var e4 = this;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._getAllRawKeys()];
          case 1:
            return [2, t4.sent().filter(function(e5) {
              return e5.endsWith(".0");
            }).map(function(e5) {
              return e5.replace(/\.0$/, "");
            }).filter(function(t5) {
              return !e4._reservedKeys.includes(t5);
            })];
        }
      });
    });
  }, e3.prototype.get = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o2 = this;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return t4 = this._getRawKey(e4, ".0"), [4, this._getRaw(t4)];
          case 1:
            if (!(n2 = u3.sent())) return [3, 7];
            u3.label = 2;
          case 2:
            return u3.trys.push([2, 6, , 7]), r2 = n2.data, (null == (i3 = n2.metadata) ? void 0 : i3.shards) && i3.shards > 1 ? [4, Promise.all(this._generateShardPostfixArray(null == i3 ? void 0 : i3.shards).map(function(t5) {
              return r$1(o2, void 0, void 0, function() {
                var n3, i4;
                return s$1(this, function(s5) {
                  switch (s5.label) {
                    case 0:
                      return t5 > 0 ? (n3 = this._getRawKey(e4, ".".concat(t5)), [4, this._getRaw(n3)]) : [3, 2];
                    case 1:
                      if (!(i4 = s5.sent())) throw qi.storeBrokenIntegrity;
                      return [2, i4.data];
                    case 2:
                      return [2, r2];
                  }
                });
              });
            }))] : [3, 4];
          case 3:
            return a4 = u3.sent(), [3, 5];
          case 4:
            a4 = [r2], u3.label = 5;
          case 5:
            return s4 = a4, [2, this.encryption.decrypt(JSON.parse(s4.join("")))];
          case 6:
            return u3.sent(), [2, null];
          case 7:
            return [2, null];
        }
      });
    });
  }, e3.prototype.set = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return t4 = this._shardify(e4), [4, this._setRaw(t4)];
          case 1:
            return n2.sent(), [2, n$2({}, e4.value)];
        }
      });
    });
  }, e3.prototype.setMany = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2 = this;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return t4 = [], [4, this._setRaw(t4.concat.apply(t4, c([], a$1(e4.map(function(e5) {
              return n2._shardify(e5);
            })), false)))];
          case 1:
            return r2.sent(), [2, e4.map(function(e5) {
              return e5.value;
            })];
        }
      });
    });
  }, e3.prototype.remove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4 = this;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return t4 = this._getRawKey(e4, ".0"), [4, this._getRaw(t4)];
          case 1:
            return (n2 = o2.sent()) ? (r2 = n2.metadata, i3 = this._generateShardPostfixArray(null == r2 ? void 0 : r2.shards).map(function(t5) {
              return a4._getRawKey(e4, ".".concat(t5));
            }), [4, this._removeRaw(i3)]) : [3, 3];
          case 2:
            return o2.sent(), null == (s4 = hs$1.get(this.dbname)) || s4.remove(e4), [2, true];
          case 3:
            return [2, false];
        }
      });
    });
  }, e3.prototype.removeMany = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3, c$1, l2, d4 = this;
      return s$1(this, function(h4) {
        switch (h4.label) {
          case 0:
            t4 = hs$1.get(this.dbname), n2 = [], r2 = function(e5) {
              var r3, s5, a5;
              return s$1(this, function(o2) {
                switch (o2.label) {
                  case 0:
                    return r3 = i3._getRawKey(e5, ".0"), [4, i3._getRaw(r3)];
                  case 1:
                    return (s5 = o2.sent()) && (a5 = s5.metadata, n2.push.apply(n2, c([], a$1(i3._generateShardPostfixArray(null == a5 ? void 0 : a5.shards).map(function(t5) {
                      return d4._getRawKey(e5, ".".concat(t5));
                    })), false))), null == t4 || t4.remove(e5), [2];
                }
              });
            }, i3 = this, h4.label = 1;
          case 1:
            h4.trys.push([1, 6, 7, 8]), s4 = o(e4), a4 = s4.next(), h4.label = 2;
          case 2:
            return a4.done ? [3, 5] : (o$1 = a4.value, [5, r2(o$1)]);
          case 3:
            h4.sent(), h4.label = 4;
          case 4:
            return a4 = s4.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return u3 = h4.sent(), c$1 = { error: u3 }, [3, 8];
          case 7:
            try {
              a4 && !a4.done && (l2 = s4.return) && l2.call(s4);
            } finally {
              if (c$1) throw c$1.error;
            }
            return [7];
          case 8:
            return n2.length > 0 ? [4, this._removeRaw(n2)] : [3, 10];
          case 9:
            h4.sent(), h4.label = 10;
          case 10:
            return [2, e4];
        }
      });
    });
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        return null == (e4 = hs$1.get(this.dbname)) || e4.clearForDatabase(this.dbname), [2];
      });
    });
  }, e3;
}(), As$1 = {}, Ns$1 = function(e3) {
  function t4(t5) {
    void 0 === t5 && (t5 = {});
    var n2, r2 = this;
    r2 = e3.call(this, n$2(n$2({}, t5), { itemSizeLimit: null !== (n2 = t5.itemSizeLimit) && void 0 !== n2 ? n2 : 4194304 })) || this;
    var i3 = t5.delay, s4 = void 0 === i3 ? 1 : i3;
    return r2.delay = s4, r2.observer = {}, r2;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "rawData", { get: function() {
    return As$1[this.dbname];
  }, set: function(e4) {
    As$1[this.dbname] = e4;
  }, enumerable: false, configurable: true }), t4.prototype._getAllRawKeys = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        if (As$1[this.dbname]) return [2, Object.keys(As$1[this.dbname])];
        throw qi.storeNotAvailable;
      });
    });
  }, t4.prototype._getRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return As$1[this.dbname] ? [4, Qi(this.delay)] : [3, 2];
          case 1:
            return t5.sent(), [2, As$1[this.dbname][e4] ? n$2({ key: e4 }, As$1[this.dbname][e4]) : null];
          case 2:
            throw qi.storeNotAvailable;
        }
      });
    });
  }, t4.prototype._setRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4, o$1, u3;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return As$1[this.dbname] ? [4, Qi(this.delay)] : [3, 2];
          case 1:
            c3.sent();
            try {
              for (t5 = o(e4), n2 = t5.next(); !n2.done; n2 = t5.next()) r2 = n2.value, i3 = r2.key, s4 = r2.data, a4 = r2.metadata, As$1[this.dbname][i3] = Object.freeze({ data: s4, metadata: a4 });
            } catch (e5) {
              o$1 = { error: e5 };
            } finally {
              try {
                n2 && !n2.done && (u3 = t5.return) && u3.call(t5);
              } finally {
                if (o$1) throw o$1.error;
              }
            }
            return [3, 3];
          case 2:
            throw qi.storeNotAvailable;
          case 3:
            return [2];
        }
      });
    });
  }, t4.prototype._removeRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return As$1[this.dbname] ? [4, Qi(this.delay)] : [3, 2];
          case 1:
            a4.sent();
            try {
              for (t5 = o(e4), n2 = t5.next(); !n2.done; n2 = t5.next()) r2 = n2.value, As$1[this.dbname][r2] && delete As$1[this.dbname][r2];
            } catch (e5) {
              i3 = { error: e5 };
            } finally {
              try {
                n2 && !n2.done && (s4 = t5.return) && s4.call(t5);
              } finally {
                if (i3) throw i3.error;
              }
            }
            return [3, 3];
          case 2:
            throw qi.storeNotAvailable;
          case 3:
            return [2];
        }
      });
    });
  }, t4.prototype.observe = function(e4, t5, n2) {
    var r2 = this;
    this.observer[e4] || (this.observer[e4] = {}), t5.forEach(function(t6) {
      return r2.observer[e4][t6] = n2;
    });
  }, t4.prototype.checkAvailability = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        return [2];
      });
    });
  }, t4.prototype.init = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return this.dbname = e4, As$1[this.dbname] || (As$1[this.dbname] = {}), [4, this._resetIfEncryptionChanged()];
          case 1:
            return t5.sent(), [2];
        }
      });
    });
  }, t4.prototype.set = function(t5) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2;
      return s$1(this, function(i3) {
        if ((n2 = this.observer[t5.key]) && "function" == typeof n2.set && (r2 = n2.set())) throw r2;
        return [2, e3.prototype.set.call(this, t5)];
      });
    });
  }, t4.prototype.setMany = function(t5) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4, o$1, u3;
      return s$1(this, function(c3) {
        try {
          for (n2 = o(t5), r2 = n2.next(); !r2.done; r2 = n2.next()) if (i3 = r2.value, (s4 = this.observer[i3.key]) && "function" == typeof s4.set && (a4 = s4.set())) throw a4;
        } catch (e4) {
          o$1 = { error: e4 };
        } finally {
          try {
            r2 && !r2.done && (u3 = n2.return) && u3.call(n2);
          } finally {
            if (o$1) throw o$1.error;
          }
        }
        return [2, e3.prototype.setMany.call(this, t5)];
      });
    });
  }, t4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return [4, e3.prototype.clear.call(this)];
          case 1:
            return t5.sent(), [4, Qi(this.delay)];
          case 2:
            return t5.sent(), As$1[this.dbname] = {}, [2];
        }
      });
    });
  }, t4;
}(Us$1), Cs$1 = "NestDBStore";
!function(e3) {
  e3[e3.UNINITIALIZED = 0] = "UNINITIALIZED", e3[e3.OPENING = 1] = "OPENING", e3[e3.OPEN = 2] = "OPEN", e3[e3.CLOSED = 3] = "CLOSED";
}(gs$1 || (gs$1 = {}));
var Os$1, ks$1 = function(e3) {
  function t4(t5) {
    void 0 === t5 && (t5 = {});
    var n2, r2 = this;
    return (r2 = e3.call(this, n$2(n$2({}, t5), { itemSizeLimit: null !== (n2 = t5.itemSizeLimit) && void 0 !== n2 ? n2 : 104857600 })) || this)._storeName = Cs$1, r2._state = gs$1.UNINITIALIZED, r2._openJobQueue = [], r2._window = "undefined" != typeof window ? window : void 0, r2._indexedDb = r2._window ? r2._window.indexedDB || r2._window.mozIndexedDB || r2._window.webkitIndexedDB || r2._window.msIndexedDB : void 0, r2;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "state", { get: function() {
    return this._state;
  }, enumerable: false, configurable: true }), t4.prototype.isTransactionInactiveError = function(e4) {
    return e4 instanceof Error && e4.message.includes("The transaction is inactive");
  }, t4.prototype._putToObjectStore = function(e4, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return [2, new Promise(function(n3, r2) {
          var i3 = e4.put(t5);
          i3.addEventListener("success", function(e5) {
            n3(e5.target.result);
          }), i3.addEventListener("error", function() {
            r2("Failed to write.");
          });
        })];
      });
    });
  }, t4.prototype._deleteFromObjectStore = function(e4, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return [2, new Promise(function(n3, r2) {
          var i3 = e4.delete(t5);
          i3.addEventListener("success", function() {
            return n3(t5);
          }), i3.addEventListener("error", function(e5) {
            return r2(e5.target.error);
          });
        })];
      });
    });
  }, t4.prototype._openDatabase = function(e4) {
    var t5 = this;
    return new Promise(function(n2, r2) {
      if (t5._indexedDb) {
        t5._state = gs$1.OPENING;
        var i3 = t5._indexedDb.open(e4);
        i3.addEventListener("upgradeneeded", function(e5) {
          e5.target.result.createObjectStore(Cs$1, { keyPath: "key" });
        }), i3.addEventListener("success", function(r3) {
          t5._state = gs$1.OPEN, t5._database = r3.target.result, t5._openJobQueue.forEach(function(e5) {
            return e5();
          }), t5._openJobQueue = [], t5._database.onclose = function() {
            t5._database = void 0, t5._state = gs$1.OPENING, setTimeout(function() {
              t5._openDatabase(e4);
            }, 5);
          }, n2(t5._database);
        }), i3.addEventListener("error", function(e5) {
          t5._state = gs$1.UNINITIALIZED, r2(e5.target.error);
        });
      } else r2(qi.storeNotAvailable);
    });
  }, t4.prototype._getObjectStore = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this._database ? [2, this._database.transaction(this._storeName, e4).objectStore(this._storeName)] : [3, 1];
          case 1:
            switch (this._state) {
              case gs$1.UNINITIALIZED:
              case gs$1.OPEN:
                return [3, 2];
              case gs$1.OPENING:
              case gs$1.CLOSED:
                return [3, 3];
            }
            return [3, 4];
          case 2:
            throw qi.storeNotInitialized;
          case 3:
            return [2, new Promise(function(n3) {
              t5._openJobQueue.push(function() {
                return n3(t5._getObjectStore(e4));
              });
            })];
          case 4:
            return [4, this._getObjectStore(e4)];
          case 5:
            return [2, n2.sent()];
        }
      });
    });
  }, t4.prototype._getAllRawKeys = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return [4, this._getObjectStore("readonly")];
          case 1:
            return e4 = t5.sent(), [4, new Promise(function(t6, n2) {
              var r2 = e4.getAllKeys();
              r2.addEventListener("success", function(e5) {
                t6(e5.target.result);
              }), r2.addEventListener("error", function(e5) {
                return n2(e5.target.error);
              });
            })];
          case 2:
            return [2, t5.sent()];
        }
      });
    });
  }, t4.prototype._getRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._getObjectStore("readonly")];
          case 1:
            return t5 = n2.sent(), [4, new Promise(function(n3, r2) {
              var i3 = t5.get(e4);
              i3.addEventListener("success", function(e5) {
                var t6;
                n3(null === (t6 = null == e5 ? void 0 : e5.target) || void 0 === t6 ? void 0 : t6.result);
              }), i3.addEventListener("error", function(e5) {
                return r2(e5.target.error);
              });
            })];
          case 2:
            return [2, n2.sent()];
        }
      });
    });
  }, t4.prototype._setRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4, o$1, u3, c3 = this;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            return [4, this._getObjectStore("readwrite")];
          case 1:
            t5 = l2.sent(), l2.label = 2;
          case 2:
            return l2.trys.push([2, 4, , 15]), [4, Promise.all(e4.map(function(e5) {
              return c3._putToObjectStore(t5, e5);
            }))];
          case 3:
            return l2.sent(), [3, 15];
          case 4:
            if (n2 = l2.sent(), !this.isTransactionInactiveError(n2)) return [3, 13];
            l2.label = 5;
          case 5:
            l2.trys.push([5, 10, 11, 12]), r2 = o(e4), i3 = r2.next(), l2.label = 6;
          case 6:
            return i3.done ? [3, 9] : (s4 = i3.value, [4, this._putToObjectStore(t5, s4)]);
          case 7:
            l2.sent(), l2.label = 8;
          case 8:
            return i3 = r2.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return a4 = l2.sent(), o$1 = { error: a4 }, [3, 12];
          case 11:
            try {
              i3 && !i3.done && (u3 = r2.return) && u3.call(r2);
            } finally {
              if (o$1) throw o$1.error;
            }
            return [7];
          case 12:
            return [3, 14];
          case 13:
            throw n2;
          case 14:
            return [3, 15];
          case 15:
            return [2];
        }
      });
    });
  }, t4.prototype._removeRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4, o$1, u3, c3 = this;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            return [4, this._getObjectStore("readwrite")];
          case 1:
            t5 = l2.sent(), l2.label = 2;
          case 2:
            return l2.trys.push([2, 4, , 15]), [4, Promise.all(e4.map(function(e5) {
              return c3._deleteFromObjectStore(t5, e5);
            }))];
          case 3:
            return l2.sent(), [3, 15];
          case 4:
            if (n2 = l2.sent(), !this.isTransactionInactiveError(n2)) return [3, 13];
            l2.label = 5;
          case 5:
            l2.trys.push([5, 10, 11, 12]), r2 = o(e4), i3 = r2.next(), l2.label = 6;
          case 6:
            return i3.done ? [3, 9] : (s4 = i3.value, [4, this._deleteFromObjectStore(t5, s4)]);
          case 7:
            l2.sent(), l2.label = 8;
          case 8:
            return i3 = r2.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return a4 = l2.sent(), o$1 = { error: a4 }, [3, 12];
          case 11:
            try {
              i3 && !i3.done && (u3 = r2.return) && u3.call(r2);
            } finally {
              if (o$1) throw o$1.error;
            }
            return [7];
          case 12:
            return [3, 14];
          case 13:
            throw n2;
          case 14:
            return [3, 15];
          case 15:
            return [2];
        }
      });
    });
  }, t4.prototype._triggerDatabaseClose = function() {
    this._database && this._database.onclose && this._database.onclose(new Event("dummy"));
  }, t4.prototype.checkAvailability = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            if (!((null == (e4 = "undefined" != typeof window ? window : null) ? void 0 : e4.indexedDB) || (null == e4 ? void 0 : e4.mozIndexedDB) || (null == e4 ? void 0 : e4.webkitIndexedDB) || (null == e4 ? void 0 : e4.msIndexedDB))) return [3, 6];
            if (this._indexedDb = e4.indexedDB || e4.mozIndexedDB || e4.webkitIndexedDB || e4.msIndexedDB, !this._window || !ys$1()) return [3, 4];
            if (!(ys$1() && navigator.userAgent && navigator.userAgent.includes("Edge/"))) return [3, 1];
            if (!this._window.indexedDB && (e4.PointerEvent || e4.MSPointerEvent)) throw qi.storeNotAvailableInPrivateBrowsing;
            return [3, 3];
          case 1:
            return [4, new Promise(function(e5, n3) {
              if (t5._indexedDb) try {
                var r2 = t5._indexedDb.open("_testMozilla");
                r2.onerror = function() {
                  return n3(qi.storeNotAvailableInPrivateBrowsing);
                }, r2.onsuccess = function(r3) {
                  if (r3.target.result.close(), t5._indexedDb) {
                    var i3 = t5._indexedDb.deleteDatabase("_testMozilla");
                    i3.onerror = function() {
                      return e5();
                    }, i3.onsuccess = function() {
                      return e5();
                    };
                  } else n3(qi.storeNotAvailable);
                };
              } catch (e6) {
                n3(qi.storeNotAvailableInPrivateBrowsing);
              }
              else n3(qi.storeNotAvailable);
            })];
          case 2:
            n2.sent(), n2.label = 3;
          case 3:
            return [3, 5];
          case 4:
            throw qi.storeNotAvailable;
          case 5:
            return [3, 7];
          case 6:
            throw qi.storeNotAvailable;
          case 7:
            return [2];
        }
      });
    });
  }, t4.prototype.init = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return this.dbname = e4, [4, this.checkAvailability()];
          case 1:
            return t5.sent(), [4, this._openDatabase(e4)];
          case 2:
            return t5.sent(), [4, this._resetIfEncryptionChanged()];
          case 3:
            return t5.sent(), [2];
        }
      });
    });
  }, t4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, e3.prototype.clear.call(this)];
          case 1:
            return n2.sent(), [4, this._getObjectStore("readwrite")];
          case 2:
            return t5 = n2.sent(), [4, new Promise(function(e4, n3) {
              var r2 = t5.clear();
              r2.addEventListener("success", function() {
                return e4();
              }), r2.addEventListener("error", function(e5) {
                return n3(e5.target.error);
              });
            })];
          case 3:
            return [2, n2.sent()];
        }
      });
    });
  }, t4;
}(Us$1), Ps$1 = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.AsyncStorage, i$1 = t5.itemSizeLimit, s4 = void 0 === i$1 ? 2097152 : i$1, a4 = i(t5, ["AsyncStorage", "itemSizeLimit"]);
    return (n2 = e3.call(this, n$2(n$2({}, a4), { itemSizeLimit: s4 })) || this)._asyncStorage = r2, n2;
  }
  return t$2(t4, e3), t4.prototype._isBelonging = function(e4) {
    return e4.startsWith("".concat(this.dbname, "/"));
  }, t4.prototype._getActualKey = function(e4) {
    return "".concat(this.dbname, "/").concat(e4);
  }, t4.prototype._getAllRawKeys = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._asyncStorage.getAllKeys()];
          case 1:
            return e4 = n2.sent(), [2, e4.filter(function(e5) {
              return t5._isBelonging(e5);
            }).map(function(e5) {
              return e5.substring("".concat(t5.dbname, "/").length);
            })];
        }
      });
    });
  }, t4.prototype._getRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._asyncStorage.getItem(this._getActualKey(e4))];
          case 1:
            return [2, (t5 = n2.sent()) ? JSON.parse(t5) : null];
        }
      });
    });
  }, t4.prototype._setRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4, o$1;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            t5 = [];
            try {
              for (n2 = o(e4), r2 = n2.next(); !r2.done; r2 = n2.next()) i3 = r2.value, s4 = i3.key, i3.data.length <= this.adjustedItemSizeLimit && t5.push([this._getActualKey(s4), JSON.stringify(i3)]);
            } catch (e5) {
              a4 = { error: e5 };
            } finally {
              try {
                r2 && !r2.done && (o$1 = n2.return) && o$1.call(n2);
              } finally {
                if (a4) throw a4.error;
              }
            }
            return [4, this._asyncStorage.multiSet(t5)];
          case 1:
            return u3.sent(), [2];
        }
      });
    });
  }, t4.prototype._removeRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._asyncStorage.multiRemove(e4.map(function(e5) {
              return t5._getActualKey(e5);
            }))];
          case 1:
            return n2.sent(), [2];
        }
      });
    });
  }, t4.prototype.checkAvailability = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        if (!this._asyncStorage) throw qi.storeNotAvailable;
        return [2];
      });
    });
  }, t4.prototype.init = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return this.dbname = e4, [4, this._resetIfEncryptionChanged()];
          case 1:
            return t5.sent(), [2];
        }
      });
    });
  }, t4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, e3.prototype.clear.call(this)];
          case 1:
            return n2.sent(), [4, this.getAllKeys()];
          case 2:
            return t5 = n2.sent(), [4, this.removeMany(t5)];
          case 3:
            return n2.sent(), [2];
        }
      });
    });
  }, t4;
}(Us$1), Rs$1 = function(e3) {
  function t4(t5) {
    var n2, r2 = this;
    return (r2 = e3.call(this, n$2(n$2({}, t5), { itemSizeLimit: null !== (n2 = t5.itemSizeLimit) && void 0 !== n2 ? n2 : 6291456 })) || this)._mmkv = t5.MMKV, r2;
  }
  return t$2(t4, e3), t4.prototype._isBelonging = function(e4) {
    return e4.startsWith("".concat(this.dbname, "/"));
  }, t4.prototype._getActualKey = function(e4) {
    return "".concat(this.dbname, "/").concat(e4);
  }, t4.prototype._getAllRawKeys = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._mmkv.getAllKeys()];
          case 1:
            return e4 = n2.sent(), [2, e4.filter(function(e5) {
              return t5._isBelonging(e5);
            }).map(function(e5) {
              return e5.substring("".concat(t5.dbname, "/").length);
            })];
        }
      });
    });
  }, t4.prototype._getRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._mmkv.getString(this._getActualKey(e4))];
          case 1:
            return [2, (t5 = n2.sent()) ? JSON.parse(t5) : null];
        }
      });
    });
  }, t4.prototype._setRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4;
      return s$1(this, function(o$1) {
        try {
          for (t5 = o(e4), n2 = t5.next(); !n2.done; n2 = t5.next()) r2 = n2.value, i3 = r2.key, r2.data.length <= this.adjustedItemSizeLimit && this._mmkv.set(this._getActualKey(i3), JSON.stringify(r2));
        } catch (e5) {
          s4 = { error: e5 };
        } finally {
          try {
            n2 && !n2.done && (a4 = t5.return) && a4.call(t5);
          } finally {
            if (s4) throw s4.error;
          }
        }
        return [2];
      });
    });
  }, t4.prototype._removeRaw = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4;
      return s$1(this, function(a4) {
        try {
          for (t5 = o(e4), n2 = t5.next(); !n2.done; n2 = t5.next()) r2 = n2.value, this._mmkv.delete(this._getActualKey(r2));
        } catch (e5) {
          i3 = { error: e5 };
        } finally {
          try {
            n2 && !n2.done && (s4 = t5.return) && s4.call(t5);
          } finally {
            if (i3) throw i3.error;
          }
        }
        return [2];
      });
    });
  }, t4.prototype.checkAvailability = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        if (!this._mmkv) throw qi.storeNotAvailable;
        return [2];
      });
    });
  }, t4.prototype.init = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return this.dbname = e4, [4, this._resetIfEncryptionChanged()];
          case 1:
            return t5.sent(), [2];
        }
      });
    });
  }, t4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, e3.prototype.clear.call(this)];
          case 1:
            return n2.sent(), [4, this.getAllKeys()];
          case 2:
            return t5 = n2.sent(), [4, this.removeMany(t5)];
          case 3:
            return n2.sent(), [2];
        }
      });
    });
  }, t4;
}(Us$1);
!function(e3) {
  e3.INIT = "INIT", e3.OPENING = "OPENING", e3.OPENED = "OPENED", e3.CLOSED = "CLOSED";
}(Os$1 || (Os$1 = {}));
var xs$1, Ds$1 = function() {
  function e3(e4) {
    var t4 = e4.name, n2 = e4.version, r2 = e4.store, i3 = e4.config;
    this.name = t4, this._version = n2, this._state = Os$1.INIT, this._config = i3 || new Li({ dbname: t4 }), this._store = r2, this._event = { success: Vi, error: Vi, storeReplaced: Vi, upgrade: Yi }, this._collections = /* @__PURE__ */ new Map(), this._globalMutex = new Is$1("".concat(this.name, ".lock")), this._config.disableLogger && Ms$1.off(), new hs$1({ dbname: t4, limit: this._config.cacheLimit });
  }
  return Object.defineProperty(e3.prototype, "version", { get: function() {
    return this._version;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "state", { get: function() {
    return this._state;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "store", { get: function() {
    return this._store;
  }, enumerable: false, configurable: true }), e3.prototype._initializeCollection = function(e4, t4) {
    var n2;
    return r$1(this, void 0, void 0, function() {
      var r2, i3, s4;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return i3 = this._collections.get(e4), t4 ? (r2 = new Es$1({ dbname: this.name, collectionName: e4, keyName: t4.keyName, indexes: null !== (n2 = t4.index) && void 0 !== n2 ? n2 : [[t4.keyName]], store: this._store }), [3, 3]) : [3, 1];
          case 1:
            return i3 && i3.state === Fi.READY ? [3, 3] : [4, Es$1.metadataOf(this.name, e4, this._store)];
          case 2:
            (s4 = a4.sent()) && (r2 = new Es$1({ dbname: this.name, collectionName: e4, keyName: s4.keyName, indexes: s4.indexes, store: this._store })), a4.label = 3;
          case 3:
            return r2 ? (this._collections.set(e4, r2), [4, r2.init()]) : [3, 5];
          case 4:
            a4.sent(), a4.label = 5;
          case 5:
            return [2];
        }
      });
    });
  }, e3.prototype.estimateUsage = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, (t4 = this._store, r$1(void 0, void 0, void 0, function() {
              return s$1(this, function(e5) {
                switch (e5.label) {
                  case 0:
                    return [4, t4.usage()];
                  case 1:
                    return [2, e5.sent()];
                }
              });
            }))];
          case 1:
            return [2, e4.sent()];
        }
        var t4;
      });
    });
  }, e3.prototype.commitSchema = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this._state !== Os$1.OPENING ? [3, 2] : [4, Promise.all(e4.map(function(e5) {
              return r$1(t4, void 0, void 0, function() {
                return s$1(this, function(t5) {
                  switch (t5.label) {
                    case 0:
                      return [4, this._initializeCollection(e5.collectionName, e5)];
                    case 1:
                      return t5.sent(), [2];
                  }
                });
              });
            }))];
          case 1:
            return n2.sent(), [3, 3];
          case 2:
            throw qi.databaseSchemaNotOnUpgrade;
          case 3:
            return [2];
        }
      });
    });
  }, e3.prototype.open = function() {
    var e4;
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, i3, s4, a4, o$1, u3, c3, l2, d4 = this;
      return s$1(this, function(h4) {
        switch (h4.label) {
          case 0:
            return [4, this._globalMutex.lock()];
          case 1:
            if (h4.sent(), this._state === Os$1.OPENED) return [3, 20];
            this._state = Os$1.OPENING, h4.label = 2;
          case 2:
            return h4.trys.push([2, 13, , 20]), [4, this._store.init(this.name)];
          case 3:
            return h4.sent(), f2 = this.name, t4 = "".concat(ns$1(f2), ".metadata"), n2 = { version: 0, collectionNames: [] }, [4, this._store.get(t4)];
          case 4:
            r2 = null !== (e4 = h4.sent()) && void 0 !== e4 ? e4 : n2, h4.label = 5;
          case 5:
            h4.trys.push([5, 10, 11, 12]), i3 = o(r2.collectionNames), s4 = i3.next(), h4.label = 6;
          case 6:
            return s4.done ? [3, 9] : (a4 = s4.value, [4, this._initializeCollection(a4)]);
          case 7:
            h4.sent(), h4.label = 8;
          case 8:
            return s4 = i3.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return o$1 = h4.sent(), c3 = { error: o$1 }, [3, 12];
          case 11:
            try {
              s4 && !s4.done && (l2 = i3.return) && l2.call(i3);
            } finally {
              if (c3) throw c3.error;
            }
            return [7];
          case 12:
            return [2, new Promise(function(e5, n3) {
              var i4 = function(e6) {
                r2.version < d4._version ? d4._event.upgrade(r2.version, function(n4) {
                  return r$1(d4, void 0, void 0, function() {
                    var i5;
                    return s$1(this, function(s6) {
                      switch (s6.label) {
                        case 0:
                          if (n4) return [3, 5];
                          r2.version++, r2.collectionNames = Array.from(this._collections.keys()), s6.label = 1;
                        case 1:
                          return s6.trys.push([1, 3, , 4]), [4, this._store.set({ key: t4, value: r2 })];
                        case 2:
                          return s6.sent(), e6({ continued: true }), [3, 4];
                        case 3:
                          return i5 = s6.sent(), e6({ continued: false, err: i5 }), [3, 4];
                        case 4:
                          return [3, 6];
                        case 5:
                          e6({ continued: false, err: n4 }), s6.label = 6;
                        case 6:
                          return [2];
                      }
                    });
                  });
                }) : e6({ continued: false });
              }, s5 = function(t5) {
                var a5 = t5.continued, o2 = void 0 !== a5 && a5, u4 = t5.err, c4 = void 0 === u4 ? null : u4;
                o2 ? setTimeout(function() {
                  return i4(s5);
                }, 10) : c4 ? (Ms$1.error(c4.message), d4._globalMutex.unlock(), d4._event.error(c4), n3(c4)) : Promise.all(r2.collectionNames.map(function(e6) {
                  return d4._initializeCollection(e6);
                })).then(function() {
                  d4._state = Os$1.OPENED, d4._globalMutex.unlock(), d4._event.success(), e5();
                }).catch(function(e6) {
                  Ms$1.error(e6.message), d4._globalMutex.unlock(), d4._event.error(e6), n3(e6);
                });
              };
              i4(s5);
            })];
          case 13:
            switch (u3 = h4.sent(), u3.code) {
              case Ei.STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING:
                return [3, 14];
              case Ei.STORE_NOT_AVAILABLE:
                return [3, 16];
            }
            return [3, 18];
          case 14:
            return Ms$1.warning("Access to the local storage is not allowed. Switched to MemoryStore automatically."), this._store = new Ns$1({}), this._globalMutex.unlock(), this._event.error(u3), this._event.storeReplaced(this._store), [4, this.open()];
          case 15:
            return h4.sent(), [3, 19];
          case 16:
            return Ms$1.warning("IndexedDB is not available in this environment. Switched to MemoryStore automatically. Consider using other store to save data persistently (e.g. AsyncStorage)."), this._store = new Ns$1({}), this._globalMutex.unlock(), this._event.error(u3), this._event.storeReplaced(this._store), [4, this.open()];
          case 17:
            return h4.sent(), [3, 19];
          case 18:
            throw Ms$1.error(u3.message), this._globalMutex.unlock(), this._event.error(u3), u3;
          case 19:
            return [3, 20];
          case 20:
            return [2];
        }
        var f2;
      });
    });
  }, e3.prototype.close = function() {
    this._collections.forEach(function(e4) {
      return e4.close();
    }), this._state = Os$1.CLOSED;
  }, e3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, Promise.all(Array.from(this._collections.values()).map(function(e5) {
              return e5.clear();
            }))];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, e3.prototype.reset = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return (e4 = hs$1.get(this.name)) && e4.clearForDatabase(this.name), [4, this._store.clear()];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, e3.prototype.on = function(e4, t4) {
    this._event[e4] = t4;
  }, e3.prototype.off = function(e4) {
    if ("function" == typeof this._event[e4]) if ("upgrade" === e4) this._event[e4] = Yi;
    else this._event[e4] = Vi;
  }, e3.prototype.collection = function(e4) {
    var t4 = this._collections.get(e4);
    if (t4) return t4;
    throw qi.collectionNotReady;
  }, e3;
}();
!function(e3) {
  e3[e3.VERBOSE = 0] = "VERBOSE", e3[e3.DEBUG = 1] = "DEBUG", e3[e3.INFO = 2] = "INFO", e3[e3.WARN = 3] = "WARN", e3[e3.ERROR = 4] = "ERROR", e3[e3.NONE = 5] = "NONE";
}(xs$1 || (xs$1 = {}));
var Ls$1, Fs$1 = function() {
  function e3() {
    this.level = xs$1.WARN;
  }
  return e3.prototype.verbose = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    this.level <= xs$1.VERBOSE && console.log.apply(console, c(["[verbose]"], a$1(e4), false));
  }, e3.prototype.debug = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    this.level <= xs$1.DEBUG && console.log.apply(console, c(["[debug]"], a$1(e4), false));
  }, e3.prototype.info = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    this.level <= xs$1.INFO && console.log.apply(console, c(["[info]"], a$1(e4), false));
  }, e3.prototype.warn = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    this.level <= xs$1.WARN && console.warn.apply(console, c(["[warn]"], a$1(e4), false));
  }, e3.prototype.error = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    this.level <= xs$1.ERROR && console.error.apply(console, c(["[error]"], a$1(e4), false));
  }, e3;
}(), qs$1 = function() {
  function e3(e4) {
    var t4, n2, r2, i3;
    this.messageTypeFilter = null !== (t4 = null == e4 ? void 0 : e4.messageTypeFilter) && void 0 !== t4 ? t4 : j.ALL, this.customTypesFilter = null !== (n2 = null == e4 ? void 0 : e4.customTypesFilter) && void 0 !== n2 ? n2 : null, this.senderUserIdsFilter = null !== (r2 = null == e4 ? void 0 : e4.senderUserIdsFilter) && void 0 !== r2 ? r2 : null, this.replyType = null !== (i3 = null == e4 ? void 0 : e4.replyType) && void 0 !== i3 ? i3 : Q.NONE;
  }
  return e3.prototype.clone = function() {
    var t4 = new e3(), n2 = JSON.parse(JSON.stringify(this));
    return Object.keys(n2).forEach(function(e4) {
      t4[e4] = n2[e4];
    }), t4;
  }, e3.prototype.match = function(e4) {
    switch (this.messageTypeFilter) {
      case j.USER:
        if (e4.messageType !== G.USER) return false;
        break;
      case j.FILE:
        if (e4.messageType !== G.FILE) return false;
        break;
      case j.ADMIN:
        if (e4.messageType !== G.ADMIN) return false;
    }
    if (this.customTypesFilter && this.customTypesFilter.length > 0 && !this.customTypesFilter.includes("*") && !this.customTypesFilter.includes(e4.customType)) return false;
    if (this.senderUserIdsFilter && this.senderUserIdsFilter.length > 0) {
      if (!(e4 instanceof _t)) return false;
      if (!this.senderUserIdsFilter.includes(e4.sender.userId)) return false;
    }
    if (e4 instanceof yt) switch (this.replyType) {
      case Q.NONE:
        if (e4.parentMessageId > 0) return false;
        break;
      case Q.ONLY_REPLY_TO_CHANNEL:
        if (e4 instanceof _t && e4.parentMessageId > 0 && !e4.replyToChannel) return false;
    }
    return true;
  }, e3;
}();
!function(e3) {
  e3.CHANNEL_LATEST = "channel_latest", e3.NEWEST_CHILD_MESSAGE = "newest_child_message";
}(Ls$1 || (Ls$1 = {}));
var zs$1, Bs$1 = function(e3) {
  switch (e3) {
    case Ls$1.CHANNEL_LATEST:
      return ["channelUrl", "-createdAt", "-messageId"];
    case Ls$1.NEWEST_CHILD_MESSAGE:
      return ["channelUrl", "-parentMessageId", "-createdAt", "-messageId"];
  }
}, js$1 = function() {
  return ["channelUrl", "-createdAt", "-notificationId"];
}, Ks$1 = n$2(n$2({}, on$2), { scheduledAt: void 0 }), Qs$1 = function(e3) {
  return dn$2(e3) && S$1("number", e3.scheduledAt, true);
}, Gs$1 = n$2(n$2({}, rn$2), { scheduledAt: 0, file: void 0, fileUrl: void 0, fileName: void 0, mimeType: void 0, fileSize: void 0, thumbnailSizes: void 0, requireAuth: false }), Vs$1 = function(e3) {
  return sn$2(e3) && S$1("number", e3.scheduledAt) && (k(e3.file) || S$1("string", e3.fileUrl)) && S$1("string", e3.fileName, true) && S$1("string", e3.mimeType, true) && S$1("number", e3.fileSize, true) && (null === e3.thumbnailSizes || void 0 === e3.thumbnailSizes || e3.thumbnailSizes.every(function(e4) {
    return S$1("object", e4) && e4.maxWidth > 0 && e4.maxHeight > 0;
  }));
}, Hs$1 = "UnsentMessage", Ws$1 = "reqId", Ys$1 = {}, Js$1 = function(t4) {
  function i3(e3) {
    var n2 = t4.call(this, e3) || this;
    return n2._mutex = new Is$1("unsendmessagecache.lock"), Ys$1[e3] = n2, n2;
  }
  return t$2(i3, t4), Object.defineProperty(i3.prototype, "_cacheContext", { get: function() {
    return uo.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), i3.of = function(e3, t5) {
    return void 0 === t5 && (t5 = false), Ys$1[e3] && !t5 || (Ys$1[e3] = new i3(e3)), Ys$1[e3];
  }, Object.defineProperty(i3.prototype, "collection", { get: function() {
    var e3 = this._cacheContext.nestdb, t5 = null == e3 ? void 0 : e3.collection(Hs$1);
    if (!t5) throw b$2.databaseError;
    return t5;
  }, enumerable: false, configurable: true }), Object.defineProperty(i3.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), i3.prototype._serialize = function(t5) {
    if (t5.messageId > 0) throw b$2.invalidParameters;
    var n2, r2 = n$2({}, t5.serialize());
    return t5 instanceof wt ? (t5.messageParams && (r2.messageParams = an$2(t5.messageParams)), t5.scheduledInfo && t5.scheduledInfo.scheduledMessageParams && (r2.scheduledInfo.scheduledMessageParams = (n2 = t5.scheduledInfo.scheduledMessageParams, n$2(n$2({}, an$2(n2)), { scheduledAt: n2.scheduledAt })))) : t5 instanceof Nt$1 ? (t5.messageParams && (r2.messageParams = pn$2(t5.messageParams)), t5.scheduledInfo && t5.scheduledInfo.scheduledMessageParams && (r2.scheduledInfo.scheduledMessageParams = function(e3) {
      return n$2(n$2({}, pn$2(e3)), { scheduledAt: e3.scheduledAt });
    }(t5.scheduledInfo.scheduledMessageParams))) : t5 instanceof Mt$1 && t5.messageParams && (r2.messageParams = function(t6) {
      return se({ fileInfoList: t6.fileInfoList.map(function(e3) {
        return { file: e3.file, fileUrl: Ct$1.getPlainUrl(e3), fileName: e3.fileName, fileSize: e3.fileSize, mimeType: e3.mimeType, thumbnailSizes: e3.thumbnailSizes, _thumbnails: e3._thumbnails, _uploadedMetaData: e3._uploadedMetaData };
      }), isReplyToChannel: t6.isReplyToChannel, pushNotificationDeliveryOption: t6.pushNotificationDeliveryOption });
    }(t5.messageParams)), r2;
  }, i3.prototype._deserialize = function(e3) {
    return e3 = n$2(n$2({}, e3), { messageId: parseInt(e3.messageId) }), la.of(this._iid).buildMessageFromSerializedData(e3);
  }, i3.prototype._deserializeWithMessageCreateParams = function(e3) {
    var t5, n2, r2;
    return r$1(this, void 0, void 0, function() {
      var i4, s4, a4, o2, u3, c3, l2 = this;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return i4 = la.of(this._iid), s4 = this._deserialize(e3), e3.messageParams ? s4 instanceof wt ? (o2 = e3.messageParams, s4.messageParams = i4.buildUserMessageCreateParamsFromSerializedData(o2, s4), [3, 6]) : [3, 1] : [3, 6];
          case 1:
            return s4 instanceof Nt$1 ? (o2 = e3.messageParams).fileKey && "string" == typeof o2.fileKey && fn$2(null !== (t5 = o2.fileType) && void 0 !== t5 ? t5 : "") ? (a4 = o2, [4, this.collection.getBlob(o2.fileKey)]) : [3, 3] : [3, 4];
          case 2:
            a4.file = null !== (n2 = d4.sent()) && void 0 !== n2 ? n2 : void 0, d4.label = 3;
          case 3:
            return s4.messageParams = i4.buildFileMessageCreateParamsFromSerializedData(o2, s4), [3, 6];
          case 4:
            return s4 instanceof Mt$1 && ((o2 = e3.messageParams) && o2.fileInfoList) ? (s4.messageParams = i4.buildMultipleFilesMessageCreateParamsFromSerializedData(o2, s4), [4, Promise.all(s4.messageParams.fileInfoList.map(function(e4) {
              return r$1(l2, void 0, void 0, function() {
                var t6, n3, r3, i5, s5;
                return s$1(this, function(a5) {
                  switch (a5.label) {
                    case 0:
                      return "string" == typeof (null === (n3 = e4._uploadedMetaData) || void 0 === n3 ? void 0 : n3.fileKey) && fn$2(null !== (i5 = null === (r3 = e4._uploadedMetaData) || void 0 === r3 ? void 0 : r3.fileType) && void 0 !== i5 ? i5 : "") ? (t6 = e4, [4, this.collection.getBlob(e4._uploadedMetaData.fileKey)]) : [3, 2];
                    case 1:
                      t6.file = null !== (s5 = a5.sent()) && void 0 !== s5 ? s5 : void 0, a5.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }))]) : [3, 6];
          case 5:
            d4.sent(), d4.label = 6;
          case 6:
            return s4.scheduledInfo && e3.scheduledInfo && e3.scheduledInfo.scheduledMessageParams ? s4 instanceof wt ? (u3 = e3.scheduledInfo.scheduledMessageParams, s4.scheduledInfo.scheduledMessageParams = i4.buildScheduledUserMessageCreateParamsFromSerializedData(u3, s4), [3, 10]) : [3, 7] : [3, 10];
          case 7:
            return s4 instanceof Nt$1 ? (u3 = e3.scheduledInfo.scheduledMessageParams).fileKey && "string" == typeof u3.fileKey && "string" == typeof u3.fileType && fn$2(u3.fileType) ? (c3 = u3, [4, this.collection.getBlob(u3.fileKey)]) : [3, 9] : [3, 10];
          case 8:
            c3.file = null !== (r2 = d4.sent()) && void 0 !== r2 ? r2 : void 0, d4.label = 9;
          case 9:
            s4.scheduledInfo.scheduledMessageParams = i4.buildScheduledFileMessageCreateParamsFromSerializedData(u3, s4), d4.label = 10;
          case 10:
            return [2, s4];
        }
      });
    });
  }, i3.prototype._getFileInfoBlobKey = function(e3, t5) {
    return "".concat(e3, ".").concat(t5);
  }, i3.prototype.get = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.getByKey("".concat(e3))] : [3, 2];
          case 1:
            if (t5 = n2.sent()) return [2, this._deserializeWithMessageCreateParams(t5)];
            n2.label = 2;
          case 2:
            return [2, void 0];
        }
      });
    });
  }, i3.prototype.fetch = function(e3) {
    var t5 = e3.channelUrl, n2 = e3.filter, r2 = void 0 === n2 ? new qs$1() : n2, i4 = e3.order, s4 = void 0 === i4 ? Ls$1.CHANNEL_LATEST : i4, a4 = e3.sendingStatus, o2 = e3.backward, u3 = void 0 !== o2 && o2, c3 = e3.parentMessageId;
    return r$1(this, void 0, void 0, function() {
      var e4, n3, i5, o3, l2 = this;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return this.localCacheEnabled ? (e4 = Bs$1(s4), n3 = { "/where": function(e5) {
              return !!(s4 !== Ls$1.NEWEST_CHILD_MESSAGE || c3 && 0 !== e5.parentMessageId && e5.parentMessageId === c3) && r2.match(l2._deserialize(e5));
            } }, t5 && (n3.channelUrl = t5), a4 && (n3.sendingStatus = a4), i5 = { where: n3, index: e4, backward: u3 }, [4, this.collection.query(i5)]) : [3, 3];
          case 1:
            return [4, d4.sent().fetch({})];
          case 2:
            return o3 = d4.sent(), [2, Promise.all(o3.map(function(e5) {
              return r$1(l2, void 0, void 0, function() {
                return s$1(this, function(t6) {
                  switch (t6.label) {
                    case 0:
                      return [4, this._deserializeWithMessageCreateParams(e5)];
                    case 1:
                      return [2, t6.sent()];
                  }
                });
              });
            }))];
          case 3:
            return [2, []];
        }
      });
    });
  }, i3.prototype.getAllChildMessages = function(e3, t5) {
    return void 0 === t5 && (t5 = new qs$1()), r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this.fetch({ filter: t5, order: Ls$1.NEWEST_CHILD_MESSAGE, channelUrl: e3.channelUrl, backward: false, parentMessageId: e3.messageId })];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, i3.prototype.upsert = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, Promise.all(e3.map(function(e4) {
              return r$1(t5, void 0, void 0, function() {
                var t6;
                return s$1(this, function(n3) {
                  switch (n3.label) {
                    case 0:
                      return e4 instanceof Nt$1 || e4 instanceof Mt$1 ? [4, this._mutex.lock()] : [3, 4];
                    case 1:
                      return n3.sent(), [4, this.saveBlob(e4)];
                    case 2:
                      return n3.sent(), [4, this._mutex.unlock()];
                    case 3:
                      n3.sent(), n3.label = 4;
                    case 4:
                      return t6 = this._serialize(e4), [4, this.collection.upsertOne(t6)];
                    case 5:
                      return n3.sent(), [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i3.prototype.upsertChildMessages = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, Promise.all(e3.map(function(e4) {
              return r$1(t5, void 0, void 0, function() {
                var t6;
                return s$1(this, function(n3) {
                  switch (n3.label) {
                    case 0:
                      return t6 = [], e4.threadInfo && e4.threadInfo.replyCount > 0 ? [4, this.getAllChildMessages(e4)] : [3, 2];
                    case 1:
                      t6 = n3.sent(), n3.label = 2;
                    case 2:
                      return t6.length > 0 ? (t6.forEach(function(t7) {
                        return t7.applyParentMessage(e4);
                      }), [4, this.upsert(t6)]) : [3, 4];
                    case 3:
                      n3.sent(), n3.label = 4;
                    case 4:
                      return [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i3.prototype.remove = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i4, s4, a4;
      return s$1(this, function(o$1) {
        switch (o$1.label) {
          case 0:
            if (!this.localCacheEnabled) return [3, 8];
            o$1.label = 1;
          case 1:
            o$1.trys.push([1, 6, 7, 8]), t5 = o(e3), n2 = t5.next(), o$1.label = 2;
          case 2:
            return n2.done ? [3, 5] : (r2 = n2.value, [4, this.collection.remove(r2)]);
          case 3:
            o$1.sent(), o$1.label = 4;
          case 4:
            return n2 = t5.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return i4 = o$1.sent(), s4 = { error: i4 }, [3, 8];
          case 7:
            try {
              n2 && !n2.done && (a4 = t5.return) && a4.call(t5);
            } finally {
              if (s4) throw s4.error;
            }
            return [7];
          case 8:
            return [2];
        }
      });
    });
  }, i3.prototype.removeMessagesOfChannel = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e3 } })] : [3, 2];
          case 1:
            t5.sent(), t5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i3.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e3.sent(), e3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i3.prototype.saveBlob = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i4 = this;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return e3 instanceof Nt$1 ? e3.messageParams && (r2 = e3.messageParams).file && hn$2(r2.file) ? [4, this.collection.saveBlob(r2.file, e3.reqId)] : [3, 2] : [3, 5];
          case 1:
            n2 = s4.sent(), r2.fileKey = n2, r2.fileType = cn$2.BLOB, s4.label = 2;
          case 2:
            return e3.scheduledInfo && e3.scheduledInfo.scheduledMessageParams && ((t5 = e3.scheduledInfo.scheduledMessageParams).file && hn$2(t5.file)) ? [4, this.collection.saveBlob(t5.file, e3.reqId)] : [3, 4];
          case 3:
            n2 = s4.sent(), t5.fileKey = n2, t5.fileType = cn$2.BLOB, s4.label = 4;
          case 4:
            return [3, 7];
          case 5:
            return e3 instanceof Mt$1 && ((r2 = e3.messageParams) && r2.fileInfoList && Array.isArray(r2.fileInfoList)) ? [4, Promise.all(r2.fileInfoList.map(function(t6, n3) {
              return r$1(i4, void 0, void 0, function() {
                var r3;
                return s$1(this, function(i5) {
                  switch (i5.label) {
                    case 0:
                      return t6.file && hn$2(t6.file) ? [4, this.collection.saveBlob(t6.file, this._getFileInfoBlobKey(e3.reqId, n3))] : [3, 2];
                    case 1:
                      r3 = i5.sent(), t6._uploadedMetaData || (t6._uploadedMetaData = {}), t6._uploadedMetaData.fileKey = r3, t6._uploadedMetaData.fileType = cn$2.BLOB, i5.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }))] : [3, 7];
          case 6:
            s4.sent(), s4.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, i3;
}(Jr$1), Xs$1 = {}, Zs$1 = function(e3) {
  function t4(t5) {
    var n2 = e3.call(this, t5) || this;
    return Xs$1[t5] = n2, n2;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "_sdkState", { get: function() {
    return uo.of(this._iid).sdkState;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "_cacheContext", { get: function() {
    return uo.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "_unsentMessageCache", { get: function() {
    return Js$1.of(this._iid);
  }, enumerable: false, configurable: true }), t4.of = function(e4, n2) {
    return void 0 === n2 && (n2 = false), Xs$1[e4] && !n2 || (Xs$1[e4] = new t4(e4)), Xs$1[e4];
  }, Object.defineProperty(t4.prototype, "collection", { get: function() {
    var e4 = this._cacheContext.nestdb;
    return cs$2(!!e4).throw(b$2.databaseError), e4.collection(Zr);
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), t4.prototype._serialize = function(e4) {
    return n$2(n$2({}, e4.serialize()), { messageId: "".concat(e4.messageId) });
  }, t4.prototype._deserialize = function(e4) {
    return e4 = n$2(n$2({}, e4), { messageId: parseInt(e4.messageId) }), la.of(this._iid).buildMessageFromSerializedData(e4);
  }, t4.prototype.get = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.getByKey("".concat(e4))] : [3, 2];
          case 1:
            if (t5 = n2.sent()) return [2, this._deserialize(t5)];
            n2.label = 2;
          case 2:
            return [2, void 0];
        }
      });
    });
  }, t4.prototype.fetch = function(e4) {
    var t5 = e4.channelUrl, n2 = e4.token, r2 = e4.limit, i3 = void 0 === r2 ? 100 : r2, s4 = e4.filter, a4 = void 0 === s4 ? new qs$1() : s4, o2 = e4.order, u3 = void 0 === o2 ? Ls$1.CHANNEL_LATEST : o2, c3 = e4.backward, l2 = void 0 !== c3 && c3, d4 = e4.parentMessageId, h4 = e4.isPollOnly, f2 = void 0 !== h4 && h4, p2 = e4.exactMatch, m4 = void 0 !== p2 && p2, v2 = e4.inclusive, y4 = void 0 === v2 || v2;
    return r$1(this, void 0, void 0, function() {
      var e5, r3, s5, o3 = this;
      return s$1(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this.localCacheEnabled ? (e5 = Bs$1(u3), r3 = { where: { channelUrl: t5, "/where": function(e6) {
              if (null != n2 && "" !== n2) switch (u3) {
                case Ls$1.CHANNEL_LATEST:
                  if (m4 && e6.createdAt !== n2) return false;
                  if (l2) {
                    if (y4 && e6.createdAt < n2 || !y4 && e6.createdAt <= n2) return false;
                  } else if (y4 && e6.createdAt > n2 || !y4 && e6.createdAt >= n2) return false;
                  break;
                case Ls$1.NEWEST_CHILD_MESSAGE:
                  if (!d4 || 0 === e6.parentMessageId || e6.parentMessageId !== d4) return false;
              }
              return !(f2 && !e6._poll) && a4.match(o3._deserialize(e6));
            } }, index: e5, backward: l2 }, [4, this.collection.query(r3)]) : [3, 3];
          case 1:
            return [4, c4.sent().fetch({ limit: null != i3 ? i3 : void 0 })];
          case 2:
            return s5 = c4.sent(), [2, Promise.all(s5.map(function(e6) {
              return r$1(o3, void 0, void 0, function() {
                return s$1(this, function(t6) {
                  return [2, this._deserialize(e6)];
                });
              });
            }))];
          case 3:
            return [2, []];
        }
      });
    });
  }, t4.prototype.getAllChildMessages = function(e4, t5) {
    return void 0 === t5 && (t5 = new qs$1()), r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this.fetch({ channelUrl: e4.channelUrl, token: Date.now(), limit: null, backward: false, filter: t5, order: Ls$1.NEWEST_CHILD_MESSAGE, parentMessageId: e4.messageId })];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, t4.prototype.upsert = function(e4) {
    var t5;
    return r$1(this, void 0, void 0, function() {
      var n2, r2, i3, s4, a4, o$1, u3, c3, l2 = this;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.saveBlobs(e4)] : [3, 13];
          case 1:
            d4.sent(), d4.label = 2;
          case 2:
            d4.trys.push([2, 7, 8, 9]), n2 = o(e4), r2 = n2.next(), d4.label = 3;
          case 3:
            return r2.done ? [3, 6] : (i3 = r2.value, (null === (t5 = i3.threadInfo) || void 0 === t5 ? void 0 : t5._isUpdateRequired) ? [4, this.get(i3.messageId)] : [3, 5]);
          case 4:
            (null == (s4 = d4.sent()) ? void 0 : s4.threadInfo) && i3.threadInfo._updateFrom(s4.threadInfo), d4.label = 5;
          case 5:
            return r2 = n2.next(), [3, 3];
          case 6:
            return [3, 9];
          case 7:
            return a4 = d4.sent(), u3 = { error: a4 }, [3, 9];
          case 8:
            try {
              r2 && !r2.done && (c3 = n2.return) && c3.call(n2);
            } finally {
              if (u3) throw u3.error;
            }
            return [7];
          case 9:
            return o$1 = e4.map(function(e5) {
              return l2._serialize(e5);
            }), [4, this.collection.upsertMany(o$1)];
          case 10:
            return d4.sent(), [4, this.upsertChildMessages(e4)];
          case 11:
            return d4.sent(), [4, this._unsentMessageCache.upsertChildMessages(e4)];
          case 12:
            d4.sent(), d4.label = 13;
          case 13:
            return [2];
        }
      });
    });
  }, t4.prototype.upsertChildMessages = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, Promise.all(e4.map(function(e5) {
              return r$1(t5, void 0, void 0, function() {
                var t6, n3;
                return s$1(this, function(r2) {
                  switch (r2.label) {
                    case 0:
                      return t6 = [], (null === (n3 = e5.threadInfo) || void 0 === n3 ? void 0 : n3.replyCount) && e5.threadInfo.replyCount > 0 ? [4, this.getAllChildMessages(e5)] : [3, 2];
                    case 1:
                      t6 = r2.sent(), r2.label = 2;
                    case 2:
                      return t6.length > 0 ? (t6.forEach(function(t7) {
                        return t7.applyParentMessage(e5);
                      }), [4, this.upsert(t6)]) : [3, 4];
                    case 3:
                      r2.sent(), r2.label = 4;
                    case 4:
                      return [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.remove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4;
      return s$1(this, function(o$1) {
        switch (o$1.label) {
          case 0:
            if (!this.localCacheEnabled) return [3, 8];
            o$1.label = 1;
          case 1:
            o$1.trys.push([1, 6, 7, 8]), t5 = o(e4), n2 = t5.next(), o$1.label = 2;
          case 2:
            return n2.done ? [3, 5] : (r2 = n2.value, [4, this.collection.remove("".concat(r2))]);
          case 3:
            o$1.sent(), o$1.label = 4;
          case 4:
            return n2 = t5.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return i3 = o$1.sent(), s4 = { error: i3 }, [3, 8];
          case 7:
            try {
              n2 && !n2.done && (a4 = t5.return) && a4.call(t5);
            } finally {
              if (s4) throw s4.error;
            }
            return [7];
          case 8:
            return [2];
        }
      });
    });
  }, t4.prototype.removeMessagesOfChannel = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e4 }, index: Bs$1(Ls$1.CHANNEL_LATEST) })] : [3, 6];
          case 1:
            return n2.sent(), [4, (t5 = this._cacheContext.preference).remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/sync"))];
          case 2:
            return n2.sent(), [4, t5.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/sync.meta"))];
          case 3:
            return n2.sent(), [4, t5.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/changelogs"))];
          case 4:
            return n2.sent(), [4, t5.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/changelogs.meta"))];
          case 5:
            n2.sent(), n2.label = 6;
          case 6:
            return [2];
        }
      });
    });
  }, t4.prototype.removeUnderOffset = function(e4, t5, n2) {
    return void 0 === n2 && (n2 = false), r$1(this, void 0, void 0, function() {
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e4, createdAt: n2 ? { "<=": t5 } : { "<": t5 } }, index: Bs$1(Ls$1.CHANNEL_LATEST) })] : [3, 2];
          case 1:
            r2.sent(), r2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.countBetween = function(e4, t5, n2) {
    return r$1(this, void 0, void 0, function() {
      var r2, i3 = this;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this.localCacheEnabled ? (r2 = Bs$1(Ls$1.CHANNEL_LATEST), [4, this.collection.query({ where: { channelUrl: e4, "/where": function(e5) {
              var r3 = i3._deserialize(e5);
              return n2.includes(r3.createdAt) && t5.match(r3);
            } }, index: r2 }).count()]) : [3, 2];
          case 1:
            return [2, s4.sent()];
          case 2:
            return [2, 0];
        }
      });
    });
  }, t4.prototype.saveBlobs = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5 = this;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, Promise.all(e4.map(function(e5) {
              return r$1(t5, void 0, void 0, function() {
                var t6, n3;
                return s$1(this, function(r2) {
                  switch (r2.label) {
                    case 0:
                      return e5 instanceof Nt$1 && e5.messageParams && ((t6 = e5.messageParams).file && hn$2(t6.file)) ? [4, this.collection.saveBlob(t6.file, e5.reqId)] : [3, 2];
                    case 1:
                      n3 = r2.sent(), t6.fileKey = n3, r2.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }))];
          case 1:
            return n2.sent(), [2];
        }
      });
    });
  }, t4.prototype._getGroupChannelPreferenceSize = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return t5 = 0, [4, (n2 = this._cacheContext.preference).get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/sync"))];
          case 1:
            return r2 = o2.sent(), [4, n2.get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/sync.meta"))];
          case 2:
            return i3 = o2.sent(), [4, n2.get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/changelogs"))];
          case 3:
            return s4 = o2.sent(), [4, n2.get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/changelogs.meta"))];
          case 4:
            return a4 = o2.sent(), r2 && (t5 += JSON.stringify(r2).length), i3 && (t5 += JSON.stringify(i3).length), s4 && (t5 += JSON.stringify(s4).length), a4 && (t5 += JSON.stringify(a4).length), [2, t5];
        }
      });
    });
  }, t4;
}(Jr$1), $s$1 = {}, ea = function(e3) {
  function t4(t5) {
    var n2 = e3.call(this, t5) || this;
    return $s$1[t5] = n2, n2;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "_sdkState", { get: function() {
    return uo.of(this._iid).sdkState;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "_cacheContext", { get: function() {
    return uo.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), t4.of = function(e4, n2) {
    return void 0 === n2 && (n2 = false), $s$1[e4] && !n2 || ($s$1[e4] = new t4(e4)), $s$1[e4];
  }, Object.defineProperty(t4.prototype, "collection", { get: function() {
    var e4 = this._cacheContext.nestdb;
    return cs$2(!!e4).throw(b$2.databaseError), e4.collection(ti);
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), t4.prototype._serialize = function(e4) {
    return n$2({}, e4.serialize());
  }, t4.prototype._deserialize = function(e4) {
    return la.of(this._iid).buildMessageFromSerializedData(e4);
  }, t4.prototype.get = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.getByKey(e4)] : [3, 2];
          case 1:
            if (t5 = n2.sent()) return [2, this._deserialize(t5)];
            n2.label = 2;
          case 2:
            return [2, void 0];
        }
      });
    });
  }, t4.prototype.fetch = function(e4) {
    var t5 = e4.channelUrl, n2 = e4.token, r2 = e4.limit, i3 = void 0 === r2 ? 100 : r2, s4 = e4.filter, a4 = void 0 === s4 ? new qs$1() : s4, o2 = e4.backward, u3 = void 0 !== o2 && o2, c3 = e4.exactMatch, l2 = void 0 !== c3 && c3, d4 = e4.inclusive, h4 = void 0 === d4 || d4;
    return r$1(this, void 0, void 0, function() {
      var e5, r3 = this;
      return s$1(this, function(s5) {
        switch (s5.label) {
          case 0:
            return this.localCacheEnabled ? (e5 = { where: { channelUrl: t5, "/where": function(e6) {
              if (n2) {
                if (l2 && e6.createdAt !== n2) return false;
                if (u3) {
                  if (h4 && e6.createdAt < n2 || !h4 && e6.createdAt <= n2) return false;
                } else if (h4 && e6.createdAt > n2 || !h4 && e6.createdAt >= n2) return false;
              }
              return a4.match(r3._deserialize(e6));
            } }, index: ["channelUrl", "-createdAt", "-notificationId"], backward: u3 }, [4, this.collection.query(e5)]) : [3, 3];
          case 1:
            return [4, s5.sent().fetch({ limit: null != i3 ? i3 : void 0 })];
          case 2:
            return [2, s5.sent().map(function(e6) {
              return r3._deserialize(e6);
            })];
          case 3:
            return [2, []];
        }
      });
    });
  }, t4.prototype.upsert = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2 = this;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return this.localCacheEnabled ? (t5 = e4.map(function(e5) {
              return n2._serialize(e5);
            }), [4, this.collection.upsertMany(t5)]) : [3, 2];
          case 1:
            r2.sent(), r2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.remove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, i3, s4, a4;
      return s$1(this, function(o$1) {
        switch (o$1.label) {
          case 0:
            if (!this.localCacheEnabled) return [3, 8];
            o$1.label = 1;
          case 1:
            o$1.trys.push([1, 6, 7, 8]), t5 = o(e4), n2 = t5.next(), o$1.label = 2;
          case 2:
            return n2.done ? [3, 5] : (r2 = n2.value, [4, this.collection.remove(r2)]);
          case 3:
            o$1.sent(), o$1.label = 4;
          case 4:
            return n2 = t5.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return i3 = o$1.sent(), s4 = { error: i3 }, [3, 8];
          case 7:
            try {
              n2 && !n2.done && (a4 = t5.return) && a4.call(t5);
            } finally {
              if (s4) throw s4.error;
            }
            return [7];
          case 8:
            return [2];
        }
      });
    });
  }, t4.prototype.markAsReadByTimestamp = function(e4, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.updateIf({ where: { channelUrl: e4, messageStatus: vt.SENT, createdAt: { "<": t5 } } }, { set: { messageStatus: vt.READ } })] : [3, 2];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.markAsReadByMessageIds = function(e4, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.updateIf({ where: { channelUrl: e4, notificationId: { "/in": t5 }, messageStatus: vt.SENT } }, { set: { messageStatus: vt.READ } })] : [3, 2];
          case 1:
            return [2, n2.sent().length];
          case 2:
            return [2, 0];
        }
      });
    });
  }, t4.prototype.removeMessagesOfChannel = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e4 }, index: ["channelUrl", "-createdAt", "-notificationId"] })] : [3, 6];
          case 1:
            return n2.sent(), [4, (t5 = this._cacheContext.preference).remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/sync"))];
          case 2:
            return n2.sent(), [4, t5.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/sync.meta"))];
          case 3:
            return n2.sent(), [4, t5.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/changelogs"))];
          case 4:
            return n2.sent(), [4, t5.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e4, "/message/changelogs.meta"))];
          case 5:
            n2.sent(), n2.label = 6;
          case 6:
            return [2];
        }
      });
    });
  }, t4.prototype.removeUnderOffset = function(e4, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e4, createdAt: { "<": t5 } }, index: Bs$1(Ls$1.CHANNEL_LATEST) })] : [3, 2];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.countBetween = function(e4, t5, n2) {
    return r$1(this, void 0, void 0, function() {
      var r2, i3 = this;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this.localCacheEnabled ? (r2 = ["channelUrl", "-createdAt", "-notificationId"], [4, this.collection.query({ where: { channelUrl: e4, "/where": function(e5) {
              var r3 = i3._deserialize(e5);
              return n2.includes(r3.createdAt) && t5.match(r3);
            } }, index: r2 }).count()]) : [3, 2];
          case 1:
            return [2, s4.sent()];
          case 2:
            return [2, 0];
        }
      });
    });
  }, t4;
}(Jr$1), ta = {}, na = function(e3) {
  function t4(t5) {
    var n2 = e3.call(this, t5) || this;
    return n2._observers = /* @__PURE__ */ new Map(), n2._dispatcherContext = n2._dispatcher.on(function(e4) {
      return r$1(n2, void 0, void 0, function() {
        var t6, n3, r2, i3, s4, a4, o2, u3, c3, l2, d4, h4, f2, p2, m4, v2, y4, _2, g2, b3, E3, T3 = this;
        return s$1(this, function(w3) {
          switch (w3.label) {
            case 0:
              return e4 instanceof po ? (t6 = e4.messages, E3 = e4.source, a4 = e4.isWebSocketEventComing, n3 = t6.filter(function(e5) {
                return e5 instanceof yt && e5.channelType !== H$1.OPEN && e5.messageId > 0;
              }), r2 = t6.filter(function(e5) {
                return e5 instanceof yt && e5.channelType !== H$1.OPEN && 0 === e5.messageId;
              }), i3 = t6.filter(function(e5) {
                return e5 instanceof St$1;
              }), n3.length > 0 ? [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return [4, this._messageCache.upsert(n3)];
                      case 1:
                        return e5.sent(), [4, this._unsentMessageCache.remove(n3.map(function(e6) {
                          return e6 instanceof _t ? e6.reqId : null;
                        }).filter(function(e6) {
                          return null !== e6;
                        }))];
                      case 2:
                        return e5.sent(), [2];
                    }
                  });
                });
              })] : [3, 2]) : [3, 7];
            case 1:
              w3.sent(), a4 || this._broadcastUpdateEvent(n3, E3), w3.label = 2;
            case 2:
              return r2.length > 0 ? [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return [4, this._unsentMessageCache.upsert(r2)];
                      case 1:
                        return e5.sent(), [2];
                    }
                  });
                });
              })] : [3, 4];
            case 3:
              w3.sent(), a4 || this._broadcastUpdateEvent(r2, E3), w3.label = 4;
            case 4:
              return i3.length > 0 ? [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return [4, this._notificationCache.upsert(i3)];
                      case 1:
                        return e5.sent(), [2];
                    }
                  });
                });
              })] : [3, 6];
            case 5:
              w3.sent(), a4 || this._broadcastUpdateEvent(i3, E3), w3.label = 6;
            case 6:
              return [3, 24];
            case 7:
              return e4 instanceof Eo ? (s4 = e4.messageIds, E3 = e4.source, a4 = e4.isWebSocketEventComing, o2 = s4.filter(function(e5) {
                return "number" == typeof e5;
              }), u3 = s4.filter(function(e5) {
                return "string" == typeof e5;
              }), [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return o2.length > 0 ? [4, this._messageCache.remove(o2)] : [3, 2];
                      case 1:
                        e5.sent(), e5.label = 2;
                      case 2:
                        return u3.length > 0 ? [4, this._notificationCache.remove(u3)] : [3, 4];
                      case 3:
                        e5.sent(), e5.label = 4;
                      case 4:
                        return [2];
                    }
                  });
                });
              })]) : [3, 9];
            case 8:
              return w3.sent(), a4 || this._broadcastRemoveEvent(s4, E3), [3, 24];
            case 9:
              return e4 instanceof mo ? (c3 = e4.reqId, E3 = e4.source, [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return [4, this._unsentMessageCache.remove([c3])];
                      case 1:
                        return e5.sent(), [2];
                    }
                  });
                });
              })]) : [3, 11];
            case 10:
              return w3.sent(), this._broadcastRemoveUnsentEvent(c3, E3), [3, 24];
            case 11:
              return e4 instanceof yo ? (l2 = e4.polls, E3 = e4.source, this._cacheContext.localCacheEnabled ? (d4 = l2.map(function(e5) {
                return e5.messageId;
              }), [4, Promise.all(d4.map(function(e5) {
                return T3._messageCache.get(e5);
              }))]) : [3, 14]) : [3, 15];
            case 12:
              return (h4 = w3.sent().filter(function(e5) {
                return e5;
              })).length > 0 && l2.forEach(function(e5) {
                var t7 = h4.find(function(t8) {
                  return t8.messageId === e5.messageId;
                });
                t7 && t7.applyPoll(e5);
              }), [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return [4, this._messageCache.upsert(h4)];
                      case 1:
                        return [2, e5.sent()];
                    }
                  });
                });
              })];
            case 13:
              w3.sent(), w3.label = 14;
            case 14:
              return this._broadcastPollChangeLogEvent(l2, E3), [3, 24];
            case 15:
              return e4 instanceof wo ? (f2 = e4.event, E3 = e4.source, [4, this._messageCache.get(f2.messageId)]) : [3, 19];
            case 16:
              return (p2 = w3.sent()) && p2.isUserMessage() && p2.poll && p2.poll.applyPollUpdateEvent(f2) ? [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return [4, this._messageCache.upsert([p2])];
                      case 1:
                        return [2, e5.sent()];
                    }
                  });
                });
              })] : [3, 18];
            case 17:
              w3.sent(), w3.label = 18;
            case 18:
              return this._broadcastPollUpdateEvent(f2, E3), [3, 24];
            case 19:
              return e4 instanceof So ? (m4 = e4.event, E3 = e4.source, [4, this._messageCache.get(m4.messageId)]) : [3, 23];
            case 20:
              return (v2 = w3.sent()) && v2.isUserMessage() && v2.poll && v2.poll.applyPollVoteEvent(m4) ? [4, Dr$1(function() {
                return r$1(T3, void 0, void 0, function() {
                  return s$1(this, function(e5) {
                    switch (e5.label) {
                      case 0:
                        return [4, this._messageCache.upsert([v2])];
                      case 1:
                        return [2, e5.sent()];
                    }
                  });
                });
              })] : [3, 22];
            case 21:
              w3.sent(), w3.label = 22;
            case 22:
              return this._broadcastPollVoteEvent(m4, E3), [3, 24];
            case 23:
              e4 instanceof vo ? (y4 = e4.event, E3 = e4.source, y4.messageId > 0 && this._broadcastReactionUpdateEvent(y4, E3)) : e4 instanceof bo ? (_2 = e4.event, E3 = e4.source, this._broadcastThreadUpdateEvent(_2, E3)) : e4 instanceof go && (g2 = e4.messageDeletionTimestamp, b3 = e4.channelUrl, E3 = e4.source, this._broadcastMessageRetentionEvent(g2, b3, E3)), w3.label = 24;
            case 24:
              return [2];
          }
        });
      });
    }), n2;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "_cacheContext", { get: function() {
    return uo.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "_dispatcher", { get: function() {
    return uo.of(this._iid).dispatcher;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "_messageCache", { get: function() {
    return Zs$1.of(this._iid);
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "_unsentMessageCache", { get: function() {
    return Js$1.of(this._iid);
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "_notificationCache", { get: function() {
    return ea.of(this._iid);
  }, enumerable: false, configurable: true }), t4.of = function(e4, n2) {
    var r2;
    return void 0 === n2 && (n2 = false), ta[e4] && !n2 || (ta[e4] && (null === (r2 = ta[e4]._dispatcherContext) || void 0 === r2 || r2.close()), ta[e4] = new t4(e4)), ta[e4];
  }, t4.prototype._broadcastUpdateEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onUpdate && a4.onUpdate(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastPollChangeLogEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onPollChangeLogUpdate && a4.onPollChangeLogUpdate(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastPollUpdateEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onPollUpdate && a4.onPollUpdate(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastPollVoteEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onPollVote && a4.onPollVote(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastRemoveEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onRemove && a4.onRemove(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastRemoveUnsentEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onRemoveUnsent && a4.onRemoveUnsent(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastReactionUpdateEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onReactionUpdate && a4.onReactionUpdate(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastThreadUpdateEvent = function(e4, t5) {
    var n2, r2;
    try {
      for (var i3 = o(this._observers.values()), s4 = i3.next(); !s4.done; s4 = i3.next()) {
        var a4 = s4.value;
        a4.onThreadInfoUpdate && a4.onThreadInfoUpdate(e4, t5);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        s4 && !s4.done && (r2 = i3.return) && r2.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, t4.prototype._broadcastMessageRetentionEvent = function(e4, t5, n2) {
    var r2, i3;
    try {
      for (var s4 = o(this._observers.values()), a4 = s4.next(); !a4.done; a4 = s4.next()) {
        var o$1 = a4.value;
        o$1.onDeletedByRetentionPolicy && o$1.onDeletedByRetentionPolicy(e4, t5, n2);
      }
    } catch (e5) {
      r2 = { error: e5 };
    } finally {
      try {
        a4 && !a4.done && (i3 = s4.return) && i3.call(s4);
      } finally {
        if (r2) throw r2.error;
      }
    }
  }, t4.prototype.subscribe = function(e4, t5) {
    this._observers.set(e4, t5);
  }, t4.prototype.unsubscribe = function(e4) {
    this._observers.delete(e4);
  }, t4.prototype.unsubscribeAll = function() {
    this._observers.clear();
  }, t4;
}(Jr$1), ra = {}, ia = function(e3) {
  function t4(t5, n2) {
    var r2 = n2.sdkState, i3 = n2.cacheContext, s4 = e3.call(this, t5) || this;
    return s4._users = /* @__PURE__ */ new Map(), s4._sdkState = r2, s4._cacheContext = i3, ra[t5] = s4, s4;
  }
  return t$2(t4, e3), t4.of = function(e4) {
    return ra[e4];
  }, Object.defineProperty(t4.prototype, "collection", { get: function() {
    var e4 = this._cacheContext.nestdb;
    return cs$2(!!e4).throw(b$2.databaseError), e4.collection(ui);
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "users", { get: function() {
    return c([], a$1(this._users.values()), false);
  }, enumerable: false, configurable: true }), t4.prototype._serialize = function(e4, t5) {
    return n$2(n$2({}, e4.serialize()), { updatedAt: t5 });
  }, t4.prototype._deserialize = function(e4) {
    return ls$2._buildUserFromSerializedData(e4);
  }, t4.prototype.isCachedInMemory = function(e4) {
    return this._users.has(e4);
  }, t4.prototype.getUserInfoFromCache = function(e4) {
    if (this._users.has(e4)) return this._users.get(e4);
  }, t4.prototype.get = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return this._users.has(e4) ? [3, 3] : this.localCacheEnabled ? [4, this.collection.getByKey(e4)] : [3, 2];
          case 1:
            if (t5 = r2.sent()) return n2 = this._deserialize(t5), this._users.set(n2.userId, n2), [2, n2];
            r2.label = 2;
          case 2:
            return [2, void 0];
          case 3:
            return [2, this._users.get(e4)];
        }
      });
    });
  }, t4.prototype.fetch = function(e4) {
    var t5 = e4.limit, n2 = void 0 === t5 ? 100 : t5, r2 = e4.backward, i3 = void 0 !== r2 && r2;
    return r$1(this, void 0, void 0, function() {
      var e5, t6, r3, s4 = this;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            if (!this.localCacheEnabled) return [2, []];
            a4.label = 1;
          case 1:
            return a4.trys.push([1, 4, , 5]), e5 = { index: ["-userId", "-updatedAt"], backward: i3 }, [4, this.collection.query(e5)];
          case 2:
            return [4, a4.sent().fetch({ limit: n2 })];
          case 3:
            return t6 = a4.sent(), (r3 = t6.map(function(e6) {
              return s4._deserialize(e6);
            })).forEach(function(e6) {
              s4._users.has(e6.userId) || s4._users.set(e6.userId, e6);
            }), [2, r3];
          case 4:
            return a4.sent(), [2, []];
          case 5:
            return [2];
        }
      });
    });
  }, t4.prototype.upsert = function(e4, t5) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            if (!this.localCacheEnabled) return [3, 2];
            if (n2 = this._serialize(e4, t5), r2 = this._users.get(e4.userId)) {
              if (r2._hashValue === e4._hashValue) return [2];
              if (r2._updatedAt > t5) return [2];
            }
            return this._users.set(e4.userId, ls$2._buildUserFromSerializedData(n2)), [4, this.collection.upsertOne(n2)];
          case 1:
            i3.sent(), i3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.remove = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return this._users.has(e4) && this._users.delete(e4), this.localCacheEnabled ? [4, this.collection.remove(e4)] : [3, 2];
          case 1:
            t5.sent(), t5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype.clearMemoryCache = function() {
    this._users.clear();
  }, t4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this.clearMemoryCache(), this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4;
}(Jr$1), sa = function(t4) {
  function n2(n3) {
    var r2 = this, s4 = n3.reverse, a4 = void 0 !== s4 && s4, o2 = n3.limit, u3 = void 0 === o2 ? 20 : o2, c3 = n3.keys, l2 = n3.token;
    return (r2 = t4.call(this) || this).method = ae.GET, r2.path = "".concat(Ae), r2.params = se({ token: l2, limit: u3, reverse: a4, order: J.UPDATED_AT, show_ui_template: true, show_color_variables: true, keys: c3 }), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), aa = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this, i3 = n2.next, s4 = n2.has_more, a4 = void 0 !== s4 && s4, o2 = n2.templates;
    return r2.nextToken = i3, r2.hasMore = a4, r2.templates = o2.map(function(e4) {
      return { template: JSON.stringify(e4) };
    }), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), oa = function(e3) {
  function t4(t5) {
    var n2 = this, r2 = t5.key;
    return (n2 = e3.call(this) || this).method = ae.GET, n2.path = "".concat(Ae, "/").concat(r2), n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), ua = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.template = JSON.stringify(n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), ca = {}, la = function() {
  function n2(e3, t4) {
    var n3 = t4.sdkState, r2 = t4.dispatcher, i3 = t4.requestQueue, s4 = t4.onlineDetector, a4 = t4.cacheContext;
    this._iid = e3, this._sdkState = n3, this._requestQueue = i3, this._dispatcher = r2, this._cacheContext = a4, Zs$1.of(e3), Js$1.of(e3), na.of(e3), this.fileMessageQueue = new Lt$1(e3, { sdkState: n3, dispatcher: r2, requestQueue: i3, onlineDetector: s4, cacheContext: a4 }), ca[e3] = this;
  }
  return n2.of = function(e3) {
    return ca[e3];
  }, n2.prototype._setSenderInfo = function(e3) {
    if (this._cacheContext.localCacheEnabled && (e3.messageType === G.USER || e3.messageType === G.FILE)) {
      var t4 = e3.sender;
      if (t4) {
        var n3 = ia.of(this._iid).getUserInfoFromCache(t4.user_id);
        n3 && (e3.sender = ls$2.payloadify(n3));
      }
    }
  }, n2.prototype.buildMessageFromSerializedData = function(e3) {
    var t4 = as$2(e3);
    if (t4.notificationId) return new St$1(this._iid, St$1.payloadify(t4));
    switch (this._setSenderInfo(t4), t4.messageType) {
      case G.USER:
        return new wt(this._iid, wt.payloadify(t4));
      case G.FILE:
        return Mt$1._isMultipleFilesMessageSerializedData(t4) ? new Mt$1(this._iid, Mt$1.payloadify(t4)) : new Nt$1(this._iid, Nt$1.payloadify(t4));
      case G.ADMIN:
        return new It$1(this._iid, It$1.payloadify(t4));
    }
    throw b$2.invalidParameters;
  }, n2.prototype.buildUserMessageCreateParamsFromSerializedData = function(n3, r2) {
    return se(oe({ data: r2.data, customType: r2.customType, mentionType: r2.mentionType, mentionedUserIds: r2.mentionedUserIds, mentionedUsers: r2.mentionedUsers, mentionedMessageTemplate: r2.mentionedMessageTemplate, metaArrays: r2.metaArrays, parentMessageId: r2.parentMessageId, isReplyToChannel: n3.isReplyToChannel, pushNotificationDeliveryOption: n3.pushNotificationDeliveryOption, appleCriticalAlertOptions: r2.appleCriticalAlertOptions, reqId: r2.reqId, message: r2.message, translationTargetLanguages: Object.keys(r2.translations), pollId: n3.pollId }));
  }, n2.prototype.buildFileMessageCreateParamsFromSerializedData = function(n3, r2) {
    var i3;
    return se(oe({ data: r2.data, customType: r2.customType, mentionType: r2.mentionType, mentionedUserIds: r2.mentionedUserIds, mentionedUsers: r2.mentionedUsers, metaArrays: r2.metaArrays, parentMessageId: r2.parentMessageId, isReplyToChannel: n3.isReplyToChannel, pushNotificationDeliveryOption: n3.pushNotificationDeliveryOption, appleCriticalAlertOptions: r2.appleCriticalAlertOptions, reqId: r2.reqId, file: n3.file, fileKey: n3.fileKey, fileUrl: r2.plainUrl, fileName: r2.name, fileSize: r2.size, mimeType: r2.type, thumbnailSizes: null === (i3 = r2.thumbnails) || void 0 === i3 ? void 0 : i3.map(function(e3) {
      return { maxWidth: e3.width, maxHeight: e3.height };
    }), fileType: n3.fileType, requireAuth: r2.requireAuth }));
  }, n2.prototype.buildMultipleFilesMessageCreateParamsFromSerializedData = function(t4, n3) {
    var r2 = this;
    return se({ data: n3.data, customType: n3.customType, mentionType: n3.mentionType, mentionedUserIds: n3.mentionedUserIds, mentionedUsers: n3.mentionedUsers, metaArrays: n3.metaArrays, parentMessageId: n3.parentMessageId, isReplyToChannel: t4.isReplyToChannel, pushNotificationDeliveryOption: t4.pushNotificationDeliveryOption, appleCriticalAlertOptions: n3.appleCriticalAlertOptions, reqId: n3.reqId, fileInfoList: t4.fileInfoList.map(function(e3) {
      return new Ct$1(r2._iid, e3);
    }) });
  }, n2.prototype.buildScheduledUserMessageCreateParamsFromSerializedData = function(e3, t4) {
    return n$2(n$2({}, this.buildUserMessageCreateParamsFromSerializedData(e3, t4)), { scheduledAt: e3.scheduledAt });
  }, n2.prototype.buildScheduledFileMessageCreateParamsFromSerializedData = function(e3, t4) {
    return n$2(n$2({}, this.buildFileMessageCreateParamsFromSerializedData(e3, t4)), { scheduledAt: e3.scheduledAt });
  }, n2.prototype.buildSenderFromSerializedData = function(e3) {
    var t4 = as$2(e3);
    return new Ge(this._iid, Ge.payloadify(t4));
  }, n2.prototype.getMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return t4 = new Gt$1(e3), [4, this._requestQueue.send(t4)];
          case 1:
            return n3 = r2.sent(), [2, n3.as(Vt$1).message];
        }
      });
    });
  }, n2.prototype.getScheduledMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return t4 = new Xt$1(e3), [4, this._requestQueue.send(t4)];
          case 1:
            return n3 = r2.sent(), [2, n3.as(Zt$2).message];
        }
      });
    });
  }, n2.prototype.getMessagesByMessageId = function(e3, t4, n3, r2, i3) {
    return void 0 === i3 && (i3 = no.REQUEST_MESSAGE), r$1(this, void 0, void 0, function() {
      var s4, a4, o2;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return s4 = new Ht$1(n$2(n$2(n$2({ channelType: t4, channelUrl: e3, token: String(n3) }, zt$1), r2), { sdkSource: qt$1.EXTERNAL_LEGACY })), [4, this._requestQueue.send(s4)];
          case 1:
            return a4 = c3.sent(), o2 = a4.as(Wt$1).messages, this._dispatcher.dispatch(new po({ messages: o2, source: i3 })), [2, o2];
        }
      });
    });
  }, n2.prototype.getMessagesByTimestamp = function(e3, t4, n3, r2, i3) {
    return void 0 === i3 && (i3 = no.REQUEST_MESSAGE), r$1(this, void 0, void 0, function() {
      var s4, a4, o2;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return s4 = new Ht$1(n$2(n$2(n$2({ channelType: t4, channelUrl: e3, timestamp: n3 }, zt$1), r2), { sdkSource: qt$1.EXTERNAL_LEGACY })), [4, this._requestQueue.send(s4)];
          case 1:
            return a4 = c3.sent(), o2 = a4.as(Wt$1).messages, this._dispatcher.dispatch(new po({ messages: o2, source: i3 })), [2, o2];
        }
      });
    });
  }, n2.prototype._getMessagesByTimestampForCollection = function(e3, t4, n3, r2, i3, s4, a4, o2) {
    return void 0 === i3 && (i3 = no.REQUEST_MESSAGE), r$1(this, void 0, void 0, function() {
      var c3, l2, d4, h4, f2, p2;
      return s$1(this, function(m4) {
        switch (m4.label) {
          case 0:
            return c3 = new Ht$1(n$2(n$2(n$2({ channelType: t4, channelUrl: e3, timestamp: n3 }, zt$1), r2), { checkingHasNext: s4, checkingContinuousMessages: a4, sdkSource: o2 })), [4, this._requestQueue.send(c3)];
          case 1:
            return l2 = m4.sent(), d4 = l2.as(Wt$1), h4 = d4.messages, f2 = d4.isContinuousMessages, p2 = d4.hasNext, this._dispatcher.dispatch(new po({ messages: h4, source: i3 })), [2, { messages: h4, isContinuousMessages: f2, hasNext: p2 }];
        }
      });
    });
  }, n2.prototype.getThreadedMessagesByTimestamp = function(e3, t4, n3, r2) {
    return void 0 === r2 && (r2 = no.REQUEST_THREADED_MESSAGE), r$1(this, void 0, void 0, function() {
      var i3, s4, a4, o2;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return i3 = new Ht$1(n$2(n$2(n$2({ channelUrl: e3.channelUrl, channelType: e3.channelType, timestamp: t4 }, gt), n3), { replyType: Q.ALL, parentMessageId: e3.messageId, includeThreadInfo: true })), [4, this._requestQueue.send(i3)];
          case 1:
            return s4 = c3.sent(), a4 = s4.as(Wt$1).messages, (o2 = a4.slice(1)).forEach(function(t5) {
              t5.parentMessage = e3;
            }), this._dispatcher.dispatch(new po({ messages: o2, source: r2 })), [2, { parentMessage: a4[0], threadedMessages: o2 }];
        }
      });
    });
  }, n2.prototype.getMessageTemplatesByToken = function(e3, t4) {
    return void 0 === t4 && (t4 = {}), r$1(this, void 0, void 0, function() {
      var n3, r2, i3, s4, a4, o2;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return n3 = new sa(n$2({ token: e3 }, t4)), [4, this._requestQueue.send(n3)];
          case 1:
            return r2 = c3.sent(), i3 = r2.as(aa), s4 = i3.hasMore, a4 = i3.nextToken, o2 = i3.templates, [2, { hasMore: s4, token: a4, templates: o2 }];
        }
      });
    });
  }, n2.prototype.getMessageTemplate = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n3;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return t4 = new oa({ key: e3 }), [4, this._requestQueue.send(t4)];
          case 1:
            return n3 = r2.sent(), [2, { template: n3.as(ua).template }];
        }
      });
    });
  }, n2.prototype.getMessageChangelogs = function(n3, r2, i3, s4, a4) {
    return void 0 === a4 && (a4 = no.REQUEST_MESSAGE_CHANGELOGS), r$1(this, void 0, void 0, function() {
      var o2, c3, l2, d4, h4, f2, p2, m4, v2;
      return s$1(this, function(y4) {
        switch (y4.label) {
          case 0:
            return o2 = new Yt$1(se(oe(n$2(n$2({ channelType: r2, channelUrl: n3, timestamp: "number" == typeof i3 ? i3 : null, token: "string" == typeof i3 ? i3 : null }, jt$1), s4)))), [4, this._requestQueue.send(o2)];
          case 1:
            return c3 = y4.sent(), l2 = c3.as(Jt$1), d4 = l2.updatedMessages, h4 = l2.deletedMessagesInfo, f2 = l2.hasMore, p2 = l2.nextToken, m4 = l2.forceUseNextToken, v2 = h4.map(function(e3) {
              return e3.messageId;
            }), d4.length > 0 && this._dispatcher.dispatch(new po({ messages: d4, source: a4 })), v2.length > 0 && this._dispatcher.dispatch(new Eo({ messageIds: v2, source: a4 })), [2, { updatedMessages: d4, deletedMessageIds: v2, hasMore: f2, token: p2, forceUseNextToken: m4 }];
        }
      });
    });
  }, n2;
}(), da = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5) || this;
    r2.targetMessageId = 0;
    var i3 = n2.thread_info, s4 = n2.parent_message_id, a4 = n2.channel_url, o2 = n2.channel_type;
    return i3 && S$1("object", i3) && S$1("number", s4) && S$1("string", a4) && S$1("string", o2) && (r2.threadInfo = new De$2(t5, i3), r2.targetMessageId = s4, r2.channelUrl = a4, r2.channelType = o2), r2;
  }
  return t$2(t4, e3), t4;
}(Jr$1), ha = { channelUrl: "", channelType: H$1.BASE, messageId: 0, includeReactions: false, includeMetaArray: false, includeParentMessageInfo: false, includeThreadInfo: false }, fa = function(t4) {
  function n2(n3) {
    var r2 = n3.channelCustomType, s4 = n3.keyword, a4 = n3.limit, o2 = n3.reverse, u3 = n3.exactMatch, c3 = n3.channelUrl, l2 = n3.order, d4 = n3.messageTimestampFrom, h4 = n3.messageTimestampTo, f2 = n3.advancedQuery, p2 = n3.targetFields, m4 = n3.nextToken, v2 = t4.call(this) || this;
    return v2.method = ae.GET, v2.path = "".concat(Ee$1, "/messages"), v2.params = se({ custom_type: r2, query: s4, limit: a4, reverse: o2, exact_match: u3, channel_url: c3, message_ts_from: d4, message_ts_to: h4, sort_field: l2, advanced_query: f2, target_fields: p2, after: m4 }), v2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), pa = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.messages = n2.results.map(function(e4) {
      return At$1(t5, e4);
    }), r2.hasNext = n2.has_next, r2.nextToken = n2.end_cursor, r2.totalCount = n2.total_count, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2);
!function(e3) {
  e3.SCORE = "score", e3.TIMESTAMP = "ts";
}(zs$1 || (zs$1 = {}));
var ma = function(e3) {
  function i3(t4, n2) {
    var r2, i4, s4, a4, o2, u3, c3, l2, d4, h4 = this;
    return (h4 = e3.call(this, t4, n2) || this).keyword = "", h4.reverse = false, h4.exactMatch = false, h4.channelUrl = null, h4.channelCustomType = null, h4.messageTimestampFrom = null, h4.messageTimestampTo = null, h4.order = zs$1.SCORE, h4.advancedQuery = false, h4.targetFields = null, h4._nextToken = "", h4.totalCount = -1, h4.keyword = n2.keyword, h4.reverse = null !== (r2 = n2.reverse) && void 0 !== r2 && r2, h4.exactMatch = null !== (i4 = n2.exactMatch) && void 0 !== i4 && i4, h4.channelUrl = null !== (s4 = n2.channelUrl) && void 0 !== s4 ? s4 : null, h4.channelCustomType = null !== (a4 = n2.channelCustomType) && void 0 !== a4 ? a4 : null, h4.messageTimestampFrom = null !== (o2 = n2.messageTimestampFrom) && void 0 !== o2 ? o2 : null, h4.messageTimestampTo = null !== (u3 = n2.messageTimestampTo) && void 0 !== u3 ? u3 : null, h4.order = null !== (c3 = n2.order) && void 0 !== c3 ? c3 : zs$1.SCORE, h4.advancedQuery = null !== (l2 = n2.advancedQuery) && void 0 !== l2 && l2, h4.targetFields = null !== (d4 = n2.targetFields) && void 0 !== d4 ? d4 : null, h4;
  }
  return t$2(i3, e3), i3.prototype._validate = function() {
    return e3.prototype._validate.call(this) && S$1("string", this.keyword) && this.keyword.length > 0 && S$1("boolean", this.reverse) && S$1("boolean", this.exactMatch) && S$1("string", this.channelUrl, true) && S$1("string", this.channelCustomType, true) && S$1("number", this.messageTimestampFrom, true) && S$1("number", this.messageTimestampTo, true) && T$2(zs$1, this.order) && S$1("boolean", this.advancedQuery) && C$1("string", this.targetFields, true);
  }, i3.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, r2, i4, s4, a4, o2, c3, l2;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, r2 = new fa(oe(n$2(n$2({}, this), { nextToken: this._nextToken ? this._nextToken : null }))), [4, e4.send(r2)]) : [3, 2] : [3, 5];
          case 1:
            return i4 = d4.sent(), s4 = i4.as(pa), a4 = s4.messages, o2 = s4.hasNext, c3 = s4.nextToken, l2 = s4.totalCount, this._nextToken = c3, this._hasNext = o2, this._isLoading = false, this.totalCount = l2, [2, a4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i3;
}(Oo), va = function(n2) {
  function s4(r2) {
    var s5 = r2.channelType, a4 = r2.channelUrl, o2 = r2.limit, u3 = r2.token, c3 = n2.call(this) || this;
    return c3.method = ae.GET, c3.path = "".concat(Re$3(s5), "/").concat(encodeURIComponent(a4), "/messages/parent_thread_message"), c3.params = se(oe({ limit: o2, token: u3 })), c3;
  }
  return t$2(s4, n2), s4;
}(Fe$2), ya = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.token = n2.next, r2.messages = n2.messages.map(function(e4) {
      return At$1(t5, e4);
    }), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), _a$2 = function(e3) {
  function t4(t5, n2, r2, i3) {
    var s4 = e3.call(this, t5, n2, r2, i3) || this;
    return s4._edge = "", s4;
  }
  return t$2(t4, e3), t4.prototype._validate = function() {
    return e3.prototype._validate.call(this);
  }, t4.prototype.load = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, r2, i3, s4, a4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, t5 = new va({ channelType: this.channelType, channelUrl: this.channelUrl, token: this._edge, limit: this.limit }), [4, e4.send(t5)]) : [3, 2] : [3, 5];
          case 1:
            return r2 = o2.sent(), i3 = r2.as(ya), s4 = i3.messages, a4 = i3.token, this._edge = a4, this._hasNext = !!a4, this._isLoading = false, [2, s4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(ko), ga = { channelUrl: "", scheduledMessageId: 0 }, ba = { reverse: false, limit: 20 }, Ia = function(e3) {
  function t4() {
    var t5 = null !== e3 && e3.apply(this, arguments) || this;
    return t5.name = "message", t5;
  }
  return t$2(t4, e3), t4.prototype.init = function(t5, n2) {
    var r2 = n2.sdkState, i3 = n2.dispatcher, s4 = n2.sessionManager, a4 = n2.requestQueue, o2 = n2.logger, u3 = n2.onlineDetector, c3 = n2.cacheContext;
    e3.prototype.init.call(this, t5, { sdkState: r2, dispatcher: i3, sessionManager: s4, requestQueue: a4, logger: o2, onlineDetector: u3, cacheContext: c3 }), this._manager = new la(t5, { sdkState: r2, dispatcher: i3, requestQueue: a4, onlineDetector: u3, cacheContext: c3 });
  }, t4.prototype.buildMessageFromSerializedData = function(e4) {
    return this._manager.buildMessageFromSerializedData(e4);
  }, t4.prototype.buildSenderFromSerializedData = function(e4) {
    return this._manager.buildSenderFromSerializedData(e4);
  }, t4.prototype.getMessage = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return t5 = n$2(n$2({}, ha), e4), cs$2(function(e5) {
              return S$1("string", e5.channelUrl) && T$2(H$1, e5.channelType) && S$1("number", e5.messageId) && S$1("boolean", e5.includeReactions, true) && S$1("boolean", e5.includeMetaArray, true) && S$1("boolean", e5.includeParentMessageInfo, true) && S$1("boolean", e5.includeThreadInfo, true);
            }(t5)).throw(b$2.invalidParameters), [4, this._manager.getMessage(t5)];
          case 1:
            if ((n2 = r2.sent()) instanceof yt || n2 instanceof St$1 || null === n2) return [2, n2];
            throw "Unknown message type is given.";
        }
      });
    });
  }, t4.prototype.getScheduledMessage = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        return t5 = n$2(n$2({}, ga), e4), cs$2(function(e5) {
          return S$1("string", e5.channelUrl) && "" !== e5.channelUrl && S$1("number", e5.scheduledMessageId) && e5.scheduledMessageId > 0;
        }(t5)).throw(b$2.invalidParameters), [2, this._manager.getScheduledMessage(t5)];
      });
    });
  }, t4.prototype.getMessageTemplatesByToken = function(e4, t5) {
    return void 0 === t5 && (t5 = {}), r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(r2) {
        return n2 = n$2(n$2({}, ba), t5), cs$2(S$1("string", e4, true) && function(e5) {
          return S$1("boolean", e5.reverse, true) && S$1("number", e5.limit, true) && C$1("string", e5.keys, true);
        }(n2)).throw(b$2.invalidParameters), [2, this._manager.getMessageTemplatesByToken(e4, n2)];
      });
    });
  }, t4.prototype.getMessageTemplate = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return cs$2(S$1("string", e4)).throw(b$2.invalidParameters), [2, this._manager.getMessageTemplate(e4)];
      });
    });
  }, t4;
}(lo);
var E, C, R;
!function(e3) {
  e3.LATEST_LAST_MESSAGE = "latest_last_message", e3.CHRONOLOGICAL = "chronological", e3.CHANNEL_NAME_ALPHABETICAL = "channel_name_alphabetical", e3.METADATA_VALUE_ALPHABETICAL = "metadata_value_alphabetical";
}(E || (E = {})), function(e3) {
  e3.CHRONOLOGICAL = "chronological", e3.CHANNEL_NAME_ALPHABETICAL = "channel_name_alphabetical", e3.METADATA_VALUE_ALPHABETICAL = "metadata_value_alphabetical";
}(C || (C = {})), function(e3) {
  e3.CREATED_AT = "created_at", e3.SCHEDULED_AT = "scheduled_at";
}(R || (R = {}));
var L$1, b$1 = function(e3) {
  switch (e3) {
    case E.LATEST_LAST_MESSAGE:
      return ["-lastMessageUpdatedAt", "-createdAt", "syncIndex"];
    case E.CHRONOLOGICAL:
      return ["-createdAt", "syncIndex"];
    case E.CHANNEL_NAME_ALPHABETICAL:
      return ["name"];
    default:
      return ["-lastMessageUpdatedAt", "-createdAt", "syncIndex"];
  }
}, y$1 = function(t4) {
  function n2(e3) {
    var n3 = e3.message, s4 = t4.call(this) || this;
    return s4.message = n3, s4;
  }
  return t$2(n2, t4), n2;
}(re), I$1 = {}, N = function() {
  function e3(e4, t4) {
    var n2 = t4.localCacheEnabled, s4 = t4.enableAutoResend, r2 = t4.dispatcher, i3 = t4.sdkState, u3 = t4.logger, c3 = this;
    this._iid = e4, I$1[e4] = this, this._localCacheEnabled = n2, this._enableAutoResend = s4, this._isProcessingAutoResend = false, this._autoResendQueue = [], this._dispatcher = r2, this._logger = u3, this._sdkState = i3, this._localCacheEnabled && r2.on(function(e5) {
      if (e5 instanceof Fr$1) switch (e5.stateType) {
        case Rr$1.CONNECTED:
          c3._isProcessingAutoResend || c3.processAutoResendRegisteredPendingMessages().then(function() {
            return c3._processNextAutoResend();
          });
          break;
        case Rr$1.INTERNAL_DISCONNECTED:
        case Rr$1.EXTERNAL_DISCONNECTED:
          c3._isProcessingAutoResend = false;
      }
    });
  }
  return e3.of = function(e4) {
    return I$1[e4];
  }, e3.prototype.processNonAutoResendRegisteredPendingMessages = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, i3, a4, o$1;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this._enableAutoResend ? [4, this._fetchAllCachedPendingMessages()] : [2];
          case 1:
            e4 = s4.sent();
            try {
              for (t4 = o(e4), n2 = t4.next(); !n2.done; n2 = t4.next()) 0 === (i3 = n2.value).errorCode && (this._logger.debug("cached pending message is not auto-resend registered. changing its sending status to failed: ", i3.reqId), i3.sendingStatus = Z.FAILED, i3.errorCode = u$1.ACK_TIMEOUT, this._dispatcher.dispatch(new po({ messages: [i3], source: no.LOCAL_MESSAGE_FAILED })));
            } catch (e5) {
              a4 = { error: e5 };
            } finally {
              try {
                n2 && !n2.done && (o$1 = t4.return) && o$1.call(t4);
              } finally {
                if (a4) throw a4.error;
              }
            }
            return [2];
        }
      });
    });
  }, e3.prototype.processAutoResendRegisteredPendingMessages = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, a4, o$1, c3, l2, _2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return [4, this._fetchAllCachedPendingMessages()];
          case 1:
            e4 = s4.sent();
            try {
              for (t4 = o(e4), n2 = t4.next(); !n2.done; n2 = t4.next()) a4 = n2.value, this._enableAutoResend && a4.errorCode && O$2(a4.errorCode) && (o$1 = (/* @__PURE__ */ new Date()).getTime(), c3 = a4.createdAt + 2592e5, this._enableAutoResend && o$1 <= c3 ? this._autoResendQueue.map(function(e5) {
                return e5.reqId;
              }).indexOf(a4.reqId) < 0 && this._autoResendQueue.push(a4) : (this._logger.debug("auto-resend registered pending messaged expired. expiration date: ", new Date(c3).toLocaleString()), a4.sendingStatus = Z.FAILED, this._dispatcher.dispatch(new po({ messages: [a4], source: no.LOCAL_MESSAGE_FAILED }))));
            } catch (e5) {
              l2 = { error: e5 };
            } finally {
              try {
                n2 && !n2.done && (_2 = t4.return) && _2.call(t4);
              } finally {
                if (l2) throw l2.error;
              }
            }
            return [2];
        }
      });
    });
  }, e3.prototype.completeCurrentAndProcessNextAutoResend = function(e4) {
    if (this._localCacheEnabled && this._enableAutoResend && (e4.sendingStatus === Z.SUCCEEDED || e4.sendingStatus === Z.FAILED && !O$2(e4.errorCode))) {
      var t4 = this.indexOf(e4);
      t4 >= 0 && this._autoResendQueue.splice(t4, 1), 0 === t4 && this._processNextAutoResend();
    }
  }, e3.prototype._fetchAllCachedPendingMessages = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return e4 = Js$1.of(this._iid), (t4 = new qs$1()).replyType = Q.ALL, [4, e4.fetch({ sendingStatus: Z.PENDING, backward: true, filter: t4 })];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, e3.prototype.indexOf = function(e4) {
    return this._autoResendQueue.length > 0 ? this._autoResendQueue.map(function(e5) {
      return e5.reqId;
    }).indexOf(e4.reqId) : -1;
  }, e3.prototype._isNotInQueue = function(e4) {
    return -1 === this._autoResendQueue.map(function(e5) {
      return e5.reqId;
    }).indexOf(e4.reqId);
  }, e3.prototype._processNextAutoResend = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        if (this._localCacheEnabled && this._enableAutoResend && "foreground" === this._sdkState.appState) try {
          this._autoResendQueue.length > 0 ? (this._isProcessingAutoResend || (this._logger.debug("auto-resend queue started."), this._isProcessingAutoResend = true), e4 = this._autoResendQueue[0], this._dispatcher.dispatch(new y$1({ message: e4 })), this._logger.debug("processing auto-resend for message request id: ", e4.reqId)) : (this._logger.debug("auto-resend queue finished."), this._isProcessingAutoResend = false);
        } catch (e5) {
          this._logger.warn("process auto-resend error: ", e5), this._isProcessingAutoResend = false;
        }
        return [2];
      });
    });
  }, e3;
}();
!function(e3) {
  e3[e3.USER_BLOCK = 20001] = "USER_BLOCK", e3[e3.USER_UNBLOCK = 2e4] = "USER_UNBLOCK", e3[e3.FRIEND_DISCOVERED = 20900] = "FRIEND_DISCOVERED";
}(L$1 || (L$1 = {}));
var D$1, v$1 = function() {
  function e3(e4) {
    this.category = e4.cat, this.data = e4.data;
  }
  return e3.getDataAsUserBlockEvent = function(e4, t4) {
    var n2 = t4.data, s4 = n2.blocker, r2 = n2.blockee;
    return { blocker: new ls$2(e4, s4), blockee: new ls$2(e4, r2) };
  }, e3.getDataAsFriendDiscoveredEvent = function(e4, t4) {
    var n2 = t4.data.friend_discoveries;
    return { friendDiscoveries: Array.isArray(n2) ? n2.map(function(t5) {
      return new ls$2(e4, t5);
    }) : [] };
  }, e3;
}(), T$1 = function(t4) {
  function n2(e3, n3) {
    var s4 = n3.userId, r2 = t4.call(this) || this;
    return r2._iid = e3, r2.userId = s4, r2;
  }
  return t$2(n2, t4), n2;
}(re), S = function(t4) {
  function n2() {
    return t4.call(this) || this;
  }
  return t$2(n2, t4), n2;
}(re), m$1 = function(t4) {
  function n2(e3) {
    var n3 = e3.configTs, s4 = t4.call(this) || this;
    return s4.configTs = n3, s4;
  }
  return t$2(n2, t4), n2;
}(re), O$1 = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, "USEV", s4) || this;
    return r2.event = new v$1(s4), r2;
  }
  return t$2(n2, t4), n2;
}(ze$2), P = function(t4) {
  function n2(e3) {
    var n3 = e3.appConfigsInfo, s4 = e3.configTs, r2 = t4.call(this) || this;
    return r2.appConfigsInfo = {}, r2.configTs = 0, r2.appConfigsInfo = n3, r2.configTs = s4, r2;
  }
  return t$2(n2, t4), n2;
}(re);
!function(e3) {
  e3[e3.IDLE = 0] = "IDLE", e3[e3.RUNNING = 1] = "RUNNING", e3[e3.END = 2] = "END";
}(D$1 || (D$1 = {}));
var w = function(t4) {
  function r2(e3, n2, s4, r3) {
    var i3 = t4.call(this) || this;
    return i3._state = D$1.IDLE, i3._retryCount = 0, i3._retryLimit = 3, i3.priority = 0, i3._worker = n2, i3;
  }
  return t$2(r2, t4), Object.defineProperty(r2.prototype, "isIdle", { get: function() {
    return this._state === D$1.IDLE;
  }, enumerable: false, configurable: true }), Object.defineProperty(r2.prototype, "isRunning", { get: function() {
    return this._state === D$1.RUNNING;
  }, enumerable: false, configurable: true }), Object.defineProperty(r2.prototype, "isDone", { get: function() {
    return this._state === D$1.END;
  }, enumerable: false, configurable: true }), Object.defineProperty(r2.prototype, "retryCount", { get: function() {
    return this._retryCount;
  }, enumerable: false, configurable: true }), Object.defineProperty(r2.prototype, "retryLimit", { get: function() {
    return this._retryLimit;
  }, enumerable: false, configurable: true }), r2.prototype._run = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            if (!this.isRunning) return [3, 4];
            s4.label = 1;
          case 1:
            return s4.trys.push([1, 3, , 4]), [4, this._worker(e3)];
          case 2:
            return t5 = s4.sent(), this._retryCount = 0, this.dispatch("progress", t5), t5.hasNext ? this._run(t5.nextToken) : this.end(), [3, 4];
          case 3:
            return n2 = s4.sent(), this.dispatch("error", n2), this._retryCount < this._retryLimit ? (this._retryCount++, this._run(e3)) : this.stop(), [3, 4];
          case 4:
            return [2];
        }
      });
    });
  }, r2.prototype.start = function(e3) {
    this.isIdle && (this._state = D$1.RUNNING, this._run(e3));
  }, r2.prototype.stop = function() {
    this._state = D$1.IDLE, this.dispatch("stop");
  }, r2.prototype.end = function() {
    this._state = D$1.END, this.dispatch("end");
  }, r2;
}(ne);
var s = function(s4, i3) {
  this.pollId = 0, this.messageId = 0, this.pollId = i3.poll.id, this.messageId = i3.poll.message_id, this._iid = s4, this._payload = i3;
};
var f;
!function(e3) {
  e3[e3.NONE = 0] = "NONE", e3[e3.CHANNEL_ENTER = 10102] = "CHANNEL_ENTER", e3[e3.CHANNEL_EXIT = 10103] = "CHANNEL_EXIT", e3[e3.USER_CHANNEL_MUTE = 10201] = "USER_CHANNEL_MUTE", e3[e3.USER_CHANNEL_UNMUTE = 10200] = "USER_CHANNEL_UNMUTE", e3[e3.USER_CHANNEL_BAN = 10601] = "USER_CHANNEL_BAN", e3[e3.USER_CHANNEL_UNBAN = 10600] = "USER_CHANNEL_UNBAN", e3[e3.CHANNEL_FREEZE = 10701] = "CHANNEL_FREEZE", e3[e3.CHANNEL_UNFREEZE = 10700] = "CHANNEL_UNFREEZE", e3[e3.TYPING_START = 10900] = "TYPING_START", e3[e3.TYPING_END = 10901] = "TYPING_END", e3[e3.CHANNEL_JOIN = 1e4] = "CHANNEL_JOIN", e3[e3.CHANNEL_LEAVE = 10001] = "CHANNEL_LEAVE", e3[e3.CHANNEL_OPERATOR_UPDATE = 10002] = "CHANNEL_OPERATOR_UPDATE", e3[e3.CHANNEL_INVITE = 10020] = "CHANNEL_INVITE", e3[e3.CHANNEL_ACCEPT_INVITE = 10021] = "CHANNEL_ACCEPT_INVITE", e3[e3.CHANNEL_DECLINE_INVITE = 10022] = "CHANNEL_DECLINE_INVITE", e3[e3.CHANNEL_PROP_CHANGED = 11e3] = "CHANNEL_PROP_CHANGED", e3[e3.CHANNEL_DELETED = 12e3] = "CHANNEL_DELETED", e3[e3.CHANNEL_META_DATA_CHANGED = 11100] = "CHANNEL_META_DATA_CHANGED", e3[e3.CHANNEL_META_COUNTERS_CHANGED = 11200] = "CHANNEL_META_COUNTERS_CHANGED", e3[e3.CHANNEL_HIDE = 13e3] = "CHANNEL_HIDE", e3[e3.CHANNEL_UNHIDE = 13001] = "CHANNEL_UNHIDE", e3[e3.PINNED_MESSAGE_CHANGED = 11300] = "PINNED_MESSAGE_CHANGED";
}(f || (f = {}));
var m = function() {
  function n2(e3) {
    var n3;
    this.channelUrl = e3.channel_url, this.channelType = e3.channel_type, this.category = e3.cat, this.data = null !== (n3 = e3.data) && void 0 !== n3 ? n3 : {}, this.ts = e3.ts;
  }
  return Object.defineProperty(n2.prototype, "isGroupChannelEvent", { get: function() {
    return this.channelType === H$1.GROUP;
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "isOpenChannelEvent", { get: function() {
    return this.channelType === H$1.OPEN;
  }, enumerable: false, configurable: true }), n2;
}(), v = function(e3) {
  function t4(n2, t5, s4) {
    var r2 = e3.call(this, n2, "SYEV", s4) || this;
    return r2.event = new m(s4), r2;
  }
  return t$2(t4, e3), t4;
}(ze$2), T = function(e3) {
  function t4(n2, t5, r2) {
    var a4 = e3.call(this, n2, t5, r2) || this, i3 = r2.data.operators, o2 = void 0 === i3 ? [] : i3;
    return a4.operators = o2.map(function(e4) {
      return new ls$2(a4._iid, e4);
    }), a4;
  }
  return t$2(t4, e3), t4;
}(v), H = function(e3) {
  function t4(n2, t5, s4) {
    var a4, i3 = this;
    return (i3 = e3.call(this, n2, "SYEV", s4) || this).pinnedMessageIds = [], i3.latestPinnedMessage = null, i3.ts = 0, s4.data && (i3.pinnedMessageIds = null !== (a4 = s4.data.pinned_message_ids) && void 0 !== a4 ? a4 : [], i3.latestPinnedMessage = s4.data.latest_pinned_message ? At$1(n2, n$2({}, s4.data.latest_pinned_message)) : null), i3.ts = s4.ts, i3;
  }
  return t$2(t4, e3), t4;
}(ze$2), g = function(e3) {
  function t4(n2, t5) {
    var s4 = e3.call(this, n2) || this;
    return s4._logger = t5.logger, s4._sdkState = t5.sdkState, s4._sessionManager = t5.sessionManager, s4._requestQueue = t5.requestQueue, s4._dispatcher = t5.dispatcher, s4._cacheContext = t5.cacheContext, s4._channelType = t5.channelType, s4;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "_messageBroadcast", { get: function() {
    return na.of(this._iid);
  }, enumerable: false, configurable: true }), t4.prototype.subscribeMessageEvent = function(e4, n2) {
    this._messageBroadcast.subscribe(e4, n2);
  }, t4.prototype.unsubscribeMessageEvent = function(e4) {
    this._messageBroadcast.unsubscribe(e4);
  }, t4.prototype.getMessageFromCache = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2, null];
      });
    });
  }, t4.prototype.getExactlyMatchingMessagesForTokenFromCache = function(e4, n2, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2, []];
      });
    });
  }, t4.prototype.getMessagesFromCache = function(e4, n2, t5, s4, r2, o2) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2, []];
      });
    });
  }, t4.prototype.getPollMessagesFromCache = function(e4, n2, t5, s4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2, []];
      });
    });
  }, t4.prototype.getCachedMessageCountBetween = function(e4, n2, t5, s4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2, 0];
      });
    });
  }, t4.prototype.getUnsentMessagesFromCache = function(e4, n2) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2, []];
      });
    });
  }, t4.prototype.removeFailedMessageFromCache = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e5) {
        return [2];
      });
    });
  }, t4;
}(Jr$1), L = function(e3) {
  function t4(n2, t5, s4) {
    var r2, a4, i3, o2, N2 = this;
    (N2 = e3.call(this, n2, "ADMM", s4) || this).message = new It$1(n2, s4);
    var c3 = uo.of(n2).sdkState;
    return N2.isMentioned = xe$2(N2.message.mentionType, null !== (i3 = null !== (r2 = N2.message.mentionedUserIds) && void 0 !== r2 ? r2 : null === (a4 = N2.message.mentionedUsers) || void 0 === a4 ? void 0 : a4.map(function(e4) {
      return e4.userId;
    })) && void 0 !== i3 ? i3 : [], c3.userId), N2.forceUpdateLastMessage = null !== (o2 = s4.force_update_last_message) && void 0 !== o2 && o2, N2;
  }
  return t$2(t4, e3), t4;
}(ze$2), I = function(e3) {
  function t4(n2, t5, s4) {
    var r2, a4, i3, o2, E3, _2 = this;
    (_2 = e3.call(this, n2, "AEDI", s4) || this).message = new It$1(n2, s4);
    var l2 = uo.of(n2).sdkState;
    return _2.mentionCountChange = Ue$1({ mentionType: null === (r2 = s4.old_values) || void 0 === r2 ? void 0 : r2.mention_type, mentionedUserIds: null !== (i3 = null === (a4 = s4.old_values) || void 0 === a4 ? void 0 : a4.mentioned_user_ids) && void 0 !== i3 ? i3 : [] }, oe({ mentionType: _2.message.mentionType, mentionedUserIds: null !== (o2 = _2.message.mentionedUserIds) && void 0 !== o2 ? o2 : null === (E3 = _2.message.mentionedUsers) || void 0 === E3 ? void 0 : E3.map(function(e4) {
      return e4.userId;
    }) }), l2.userId), _2;
  }
  return t$2(t4, e3), t4;
}(ze$2), U = function(e3) {
  function t4(n2, t5, s4) {
    var r2 = e3.call(this, n2, "MRCT", s4) || this;
    return r2.channelUrl = s4.channel_url, r2.channelType = s4.channel_type, r2.event = new Fe$1(s4), r2;
  }
  return t$2(t4, e3), t4;
}(ze$2), M = function(e3) {
  function t4(n2, t5, s4) {
    var r2 = e3.call(this, n2, "MTHD", s4) || this;
    return r2.event = new da(n2, s4), r2;
  }
  return t$2(t4, e3), t4;
}(ze$2), y = function(e3) {
  function t4(n2, t5, s4) {
    var r2 = e3.call(this, n2, "MCNT", s4) || this;
    return r2.groupChannelMemberCounts = s4.group_channels.map(function(e4) {
      return { channelUrl: e4.channel_url, memberCount: e4.member_count, joinedMemberCount: e4.joined_member_count, updatedAt: e4.ts };
    }), r2.openChannelMemberCounts = s4.open_channels.map(function(e4) {
      return { channelUrl: e4.channel_url, participantCount: e4.participant_count, updatedAt: e4.ts };
    }), r2;
  }
  return t$2(t4, e3), t4;
}(ze$2), D = function(e3) {
  function t4(n2, t5, s$12) {
    var r2 = e3.call(this, n2, "PEDI", s$12) || this;
    return r2.event = new s(n2, s$12), r2.status = No(s$12.poll.status) || s$12.poll.status, r2.channelUrl = s$12.channel_url, r2.channelType = s$12.channel_type, r2;
  }
  return t$2(t4, e3), t4;
}(ze$2);
var Zt$1;
!function(e3) {
  e3.NONE = "none", e3.JOINED = "joined", e3.INVITED = "invited", e3.LEFT = "left";
}(Zt$1 || (Zt$1 = {}));
var $t$1, en$1, tn$1, nn$1, sn$1, rn$1, an$1, on$1, un$1 = function(i3) {
  function o2(e3, t4) {
    var n2 = i3.call(this, e3, t4) || this;
    return n2.state = null, n2.role = null, n2.isMuted = false, n2.isBlockedByMe = false, n2.isBlockingMe = false, n2.state = T$2(Zt$1, t4.state) ? t4.state : null, n2.role = T$2(V, t4.role) ? t4.role : null, "boolean" == typeof t4.is_muted && (n2.isMuted = t4.is_muted), "boolean" == typeof t4.is_blocked_by_me && (n2.isBlockedByMe = t4.is_blocked_by_me), "boolean" == typeof t4.is_blocking_me && (n2.isBlockingMe = t4.is_blocking_me), n2;
  }
  return t$2(o2, i3), o2.payloadify = function(e3) {
    return se(oe(n$2(n$2({}, i3.payloadify.call(this, e3)), { state: e3.state, role: e3.role, is_muted: e3.isMuted, is_blocked_by_me: e3.isBlockedByMe, is_blocking_me: e3.isBlockingMe })));
  }, o2;
}(en$2), cn$1 = function(t4) {
  function n2(e3, n3) {
    var s4, r2, a4 = this;
    return (a4 = t4.call(this, e3) || this).channelUrl = null !== (s4 = n3.channel_url) && void 0 !== s4 ? s4 : "", a4.channelType = null !== (r2 = n3.channel_type) && void 0 !== r2 ? r2 : H$1.GROUP, a4.member = new ls$2(a4._iid, n3.user), a4.deliveryAt = n3.ts, a4;
  }
  return t$2(n2, t4), n2;
}(Jr$1);
!function(e3) {
  e3.ALL = "all", e3.PUBLIC = "public", e3.PRIVATE = "private";
}($t$1 || ($t$1 = {})), function(e3) {
  e3.ALL = "all", e3.JOINED = "joined_only", e3.INVITED = "invited_only", e3.INVITED_BY_FRIEND = "invited_by_friend", e3.INVITED_BY_NON_FRIEND = "invited_by_non_friend";
}(en$1 || (en$1 = {})), function(e3) {
  e3.ALL = "all", e3.SUPER = "super", e3.NON_SUPER = "nonsuper", e3.BROADCAST_ONLY = "broadcast_only", e3.EXCLUSIVE_ONLY = "exclusive_only";
}(tn$1 || (tn$1 = {})), function(e3) {
  e3.ALL = "all", e3.UNREAD_MESSAGE = "unread_message";
}(nn$1 || (nn$1 = {})), function(e3) {
  e3.ALL = "all", e3.UNHIDDEN = "unhidden_only", e3.HIDDEN = "hidden_only", e3.HIDDEN_ALLOW_AUTO_UNHIDE = "hidden_allow_auto_unhide", e3.HIDDEN_PREVENT_AUTO_UNHIDE = "hidden_prevent_auto_unhide";
}(sn$1 || (sn$1 = {})), function(e3) {
  e3.ALL = "all", e3.OPERATOR = "operator", e3.NONOPERATOR = "nonoperator";
}(rn$1 || (rn$1 = {})), function(e3) {
  e3.AND = "AND", e3.OR = "OR";
}(an$1 || (an$1 = {})), function(e3) {
  e3.MEMBER_NICKNAME = "member_nickname", e3.CHANNEL_NAME = "channel_name";
}(on$1 || (on$1 = {}));
var ln$1, hn$1 = function() {
  function e3(e4) {
    var t4, n2, s4, r2, a4, i3, o2, u3, c3, l2, h4, d4, _2, p2, f2;
    this._searchFilter = null, this._userIdsFilter = null, this.includeEmpty = null !== (t4 = null == e4 ? void 0 : e4.includeEmpty) && void 0 !== t4 && t4, this.nicknameContainsFilter = null !== (n2 = null == e4 ? void 0 : e4.nicknameContainsFilter) && void 0 !== n2 ? n2 : null, this.nicknameStartsWithFilter = null !== (s4 = null == e4 ? void 0 : e4.nicknameStartsWithFilter) && void 0 !== s4 ? s4 : null, this.nicknameExactMatchFilter = null !== (r2 = null == e4 ? void 0 : e4.nicknameExactMatchFilter) && void 0 !== r2 ? r2 : null, this.channelNameContainsFilter = null !== (a4 = null == e4 ? void 0 : e4.channelNameContainsFilter) && void 0 !== a4 ? a4 : "", this.myMemberStateFilter = null !== (i3 = null == e4 ? void 0 : e4.myMemberStateFilter) && void 0 !== i3 ? i3 : en$1.ALL, this.customTypesFilter = null !== (o2 = null == e4 ? void 0 : e4.customTypesFilter) && void 0 !== o2 ? o2 : null, this.channelUrlsFilter = null !== (u3 = null == e4 ? void 0 : e4.channelUrlsFilter) && void 0 !== u3 ? u3 : null, this.superChannelFilter = null !== (c3 = null == e4 ? void 0 : e4.superChannelFilter) && void 0 !== c3 ? c3 : tn$1.ALL, this.publicChannelFilter = null !== (l2 = null == e4 ? void 0 : e4.publicChannelFilter) && void 0 !== l2 ? l2 : $t$1.ALL, this.customTypeStartsWithFilter = null !== (h4 = null == e4 ? void 0 : e4.customTypeStartsWithFilter) && void 0 !== h4 ? h4 : null, this.unreadChannelFilter = null !== (d4 = null == e4 ? void 0 : e4.unreadChannelFilter) && void 0 !== d4 ? d4 : nn$1.ALL, this.hiddenChannelFilter = null !== (_2 = null == e4 ? void 0 : e4.hiddenChannelFilter) && void 0 !== _2 ? _2 : sn$1.UNHIDDEN, this.includeFrozen = null === (p2 = null == e4 ? void 0 : e4.includeFrozen) || void 0 === p2 || p2, (null == e4 ? void 0 : e4.createdAfter) && (this.createdAfter = e4.createdAfter), (null == e4 ? void 0 : e4.createdBefore) && (this.createdBefore = e4.createdBefore), this.includeMetaData = null === (f2 = null == e4 ? void 0 : e4.includeMetaData) || void 0 === f2 || f2;
  }
  return e3.prototype._isFriend = function(e4) {
    return !(!e4 || !e4.friendDiscoveryKey && !e4.friendName);
  }, Object.defineProperty(e3.prototype, "searchFilter", { get: function() {
    return this._searchFilter;
  }, enumerable: false, configurable: true }), e3.prototype.setSearchFilter = function(e4, t4) {
    Array.isArray(e4) && 0 !== e4.length && "string" == typeof t4 && t4 && (this._searchFilter = { query: t4, fields: e4 });
  }, Object.defineProperty(e3.prototype, "userIdsFilter", { get: function() {
    return this._userIdsFilter;
  }, enumerable: false, configurable: true }), e3.prototype.setUserIdsFilter = function(e4, t4, n2) {
    void 0 === n2 && (n2 = an$1.AND), this._userIdsFilter = { userIds: e4, includeMode: t4, queryType: n2 };
  }, e3.prototype.clone = function() {
    var t4, n2 = new e3();
    this.searchFilter && n2.setSearchFilter(this.searchFilter.fields, null !== (t4 = this.searchFilter.query) && void 0 !== t4 ? t4 : void 0), this.userIdsFilter && n2.setUserIdsFilter(this.userIdsFilter.userIds, this.userIdsFilter.includeMode, this.userIdsFilter.queryType);
    var s4 = JSON.parse(JSON.stringify(this));
    return Object.keys(s4).forEach(function(e4) {
      n2[e4] = s4[e4];
    }), n2;
  }, e3.prototype.match = function(e4, t4) {
    if (this._searchFilter) {
      var n2 = this._searchFilter, s4 = n2.query, r2 = n2.fields;
      if (s4 && r2 && r2.length > 0 && !r2.some(function(t5) {
        switch (t5) {
          case on$1.CHANNEL_NAME:
            return e4.name.toLowerCase().includes(s4.toLowerCase());
          case on$1.MEMBER_NICKNAME:
            return e4.members.some(function(e5) {
              return e5.nickname.toLowerCase().includes(s4.toLowerCase());
            });
          default:
            return true;
        }
      })) return false;
    }
    if (this._userIdsFilter) {
      var a4 = this._userIdsFilter, i3 = a4.userIds, o2 = a4.includeMode, u3 = a4.queryType, l2 = e4.members.map(function(e5) {
        return e5.userId;
      });
      if (o2) {
        if (i3.length > 0) switch (u3) {
          case an$1.AND:
            if (i3.some(function(e5) {
              return !l2.includes(e5);
            })) return false;
            break;
          case an$1.OR:
            if (i3.every(function(e5) {
              return !l2.includes(e5);
            })) return false;
        }
      } else {
        if (i3.includes(t4) || i3.push(t4), e4.members.length > i3.length) return false;
        if (!D$2(i3, l2)) return false;
      }
    }
    if (!this.includeEmpty && !e4.lastMessage) return false;
    if (!this.includeFrozen && e4.isFrozen) return false;
    if (this.customTypesFilter && this.customTypesFilter.length > 0 && !this.customTypesFilter.includes("*") && !this.customTypesFilter.includes(e4.customType)) return false;
    if (this.customTypeStartsWithFilter && !new RegExp("^".concat(this.customTypeStartsWithFilter)).test(e4.customType)) return false;
    if (this.channelNameContainsFilter && !e4.name.toLowerCase().includes(this.channelNameContainsFilter.toLowerCase())) return false;
    if (this.nicknameContainsFilter) {
      var h4 = this.nicknameContainsFilter.toLowerCase();
      if (!e4.members.some(function(e5) {
        return e5.userId !== t4 && e5.nickname.toLowerCase().includes(h4);
      })) return false;
    }
    if (this.nicknameStartsWithFilter) {
      var d4 = this.nicknameStartsWithFilter.toLowerCase();
      if (!e4.members.some(function(e5) {
        return e5.userId !== t4 && e5.nickname.toLowerCase().startsWith(d4);
      })) return false;
    }
    if (this.nicknameExactMatchFilter) {
      var _2 = this.nicknameExactMatchFilter.toLowerCase();
      if (!e4.members.some(function(e5) {
        return e5.userId !== t4 && e5.nickname.toLowerCase() != _2;
      })) return false;
    }
    if (this.channelUrlsFilter && this.channelUrlsFilter.length > 0 && !this.channelUrlsFilter.includes(e4.url)) return false;
    if (this.myMemberStateFilter) switch (this.myMemberStateFilter) {
      case en$1.ALL:
        if ("none" === e4.myMemberState) return false;
        break;
      case en$1.JOINED:
        if ("joined" !== e4.myMemberState) return false;
        break;
      case en$1.INVITED:
        if ("invited" !== e4.myMemberState) return false;
        break;
      case en$1.INVITED_BY_FRIEND:
        if ("invited" !== e4.myMemberState || !this._isFriend(e4.inviter)) return false;
        break;
      case en$1.INVITED_BY_NON_FRIEND:
        if ("invited" !== e4.myMemberState || this._isFriend(e4.inviter)) return false;
    }
    if (this.hiddenChannelFilter) switch (this.hiddenChannelFilter) {
      case sn$1.UNHIDDEN:
        if (e4.isHidden || "unhidden" !== e4.hiddenState) return false;
        break;
      case sn$1.HIDDEN:
        if (!e4.isHidden) return false;
        break;
      case sn$1.HIDDEN_ALLOW_AUTO_UNHIDE:
        if (!e4.isHidden || "hidden_allow_auto_unhide" !== e4.hiddenState) return false;
        break;
      case sn$1.HIDDEN_PREVENT_AUTO_UNHIDE:
        if (!e4.isHidden || "hidden_prevent_auto_unhide" !== e4.hiddenState) return false;
    }
    if (this.unreadChannelFilter && this.unreadChannelFilter === nn$1.UNREAD_MESSAGE) {
      if (0 === e4.unreadMessageCount) return false;
    }
    if (this.publicChannelFilter) switch (this.publicChannelFilter) {
      case $t$1.PUBLIC:
        if (!e4.isPublic) return false;
        break;
      case $t$1.PRIVATE:
        if (e4.isPublic) return false;
    }
    if (this.superChannelFilter) switch (this.superChannelFilter) {
      case tn$1.SUPER:
        if (!e4.isSuper) return false;
        break;
      case tn$1.NON_SUPER:
        if (e4.isSuper) return false;
    }
    return !(this.createdAfter && e4.createdAt < this.createdAfter) && !(this.createdBefore && e4.createdAt > this.createdBefore);
  }, e3;
}(), dn$1 = function(t4) {
  function n2(e3, n3) {
    var s4 = n3.sdkState, r2 = n3.cacheContext, a4 = t4.call(this, e3) || this;
    return a4._channels = /* @__PURE__ */ new Map(), a4._sdkState = s4, a4._cacheContext = r2, a4;
  }
  return t$2(n2, t4), Object.defineProperty(n2.prototype, "collection", { get: function() {
    var e3 = this._cacheContext.nestdb;
    return cs$2(!!e3).throw(b$2.databaseError), e3.collection(Yr);
  }, enumerable: false, configurable: true }), Object.defineProperty(n2.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), n2.prototype._serialize = function(e3, t5) {
    return void 0 === t5 && (t5 = 0), n$2(n$2({}, e3.serialize()), { lastMessageUpdatedAt: e3.lastMessage ? e3.lastMessage.createdAt : 0, syncIndex: t5 });
  }, n2.prototype._deserialize = function(e3) {
    return ys.of(this._iid).buildGroupChannelFromSerializedData(e3);
  }, Object.defineProperty(n2.prototype, "channels", { get: function() {
    return c([], a$1(this._channels.values()), false);
  }, enumerable: false, configurable: true }), n2.prototype.isCachedInMemory = function(e3) {
    return this._channels.has(e3);
  }, n2.prototype.filterOffsetChanged = function(e3) {
    var t5 = this;
    return e3.filter(function(e4) {
      if (t5._channels.has(e4.url)) return t5._channels.get(e4.url).messageOffsetTimestamp < e4.messageOffsetTimestamp;
    });
  }, n2.prototype.get = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this._channels.has(e3) ? [3, 3] : this.localCacheEnabled ? [4, this.collection.getByKey(e3)] : [3, 2];
          case 1:
            if (t5 = s4.sent()) return n3 = this._deserialize(t5), this._channels.set(e3, n3), [2, n3];
            s4.label = 2;
          case 2:
            return [2, void 0];
          case 3:
            return [2, this._channels.get(e3)];
        }
      });
    });
  }, n2.prototype.fetch = function(e3) {
    var t5 = e3.token, n3 = e3.limit, s4 = void 0 === n3 ? Wr : n3, r2 = e3.backward, a4 = void 0 !== r2 && r2, i3 = e3.filter, o2 = void 0 === i3 ? new hn$1() : i3, u3 = e3.order, c3 = void 0 === u3 ? E.LATEST_LAST_MESSAGE : u3, l2 = e3.borderlineChannelUrl;
    return r$1(this, void 0, void 0, function() {
      var e4, n4, r3, i4, u4, h4 = this;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return this.localCacheEnabled ? (e4 = !!l2, n4 = b$1(c3), r3 = { where: function(n5) {
              if (t5) switch (c3) {
                case E.CHANNEL_NAME_ALPHABETICAL:
                  if (!a4 && n5.name.localeCompare(t5) < 0 || a4 && n5.name.localeCompare(t5) > 0) return false;
                  break;
                case E.CHRONOLOGICAL:
                  if (!a4 && n5.createdAt > t5 || a4 && n5.createdAt < t5) return false;
                  break;
                case E.LATEST_LAST_MESSAGE:
                  if (!a4 && n5.lastMessageUpdatedAt > t5 || a4 && n5.lastMessageUpdatedAt < t5) return false;
              }
              return e4 && l2 && l2 === n5.url ? (e4 = false, false) : !e4 && o2.match(h4._deserialize(n5), h4._sdkState.userId);
            }, index: n4, backward: a4 }, [4, this.collection.query(r3)]) : [3, 3];
          case 1:
            return [4, d4.sent().fetch({ limit: s4 })];
          case 2:
            return i4 = d4.sent(), (u4 = i4.map(function(e5) {
              return h4._deserialize(e5);
            })).forEach(function(e5) {
              !o2.includeMetaData && e5.cachedMetaData && e5._clearCachedMetaData(), h4._channels.has(e5.url) || h4._channels.set(e5.url, e5);
            }), [2, u4];
          case 3:
            return [2, []];
        }
      });
    });
  }, n2.prototype.upsert = function(e3, t5) {
    return r$1(this, void 0, void 0, function() {
      var n3, s4, r2, a4 = this;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            if (n3 = [], e3.forEach(function(e4) {
              if (a4._channels.has(e4.url)) {
                var s5 = a4._channels.get(e4.url);
                if (s5._pinnedMessagesUpdatedAt < e4._pinnedMessagesUpdatedAt && (s5._pinnedMessagesUpdatedAt = e4._pinnedMessagesUpdatedAt), s5._messageCollectionLastAccessedAt > e4._messageCollectionLastAccessedAt && (e4._messageCollectionLastAccessedAt = s5._messageCollectionLastAccessedAt), e4.cachedMetaData instanceof Map && e4.cachedMetaData.size > 0 && t5) s5._updateCachedMetaData(e4.cachedMetaData, t5).isUpdated || Object.assign(e4, { _cachedMetaData: s5.cachedMetaData });
                s5._update(e4), n3.push(s5);
              } else a4._channels.set(e4.url, e4), n3.push(e4);
            }), !this.localCacheEnabled) return [3, 2];
            for (s4 = [], r2 = 0; r2 < n3.length; r2++) s4.push(this._serialize(n3[r2], r2));
            return [4, this.collection.upsertMany(s4)];
          case 1:
            i3.sent(), i3.label = 2;
          case 2:
            return [2, n3];
        }
      });
    });
  }, n2.prototype.remove = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n3, s4, r2, a4, i3;
      return s$1(this, function(o$1) {
        switch (o$1.label) {
          case 0:
            o$1.trys.push([0, 5, 6, 7]), t5 = o(e3), n3 = t5.next(), o$1.label = 1;
          case 1:
            return n3.done ? [3, 4] : (s4 = n3.value, this._channels.delete(s4), this.localCacheEnabled ? [4, this.collection.remove(s4)] : [3, 3]);
          case 2:
            o$1.sent(), o$1.label = 3;
          case 3:
            return n3 = t5.next(), [3, 1];
          case 4:
            return [3, 7];
          case 5:
            return r2 = o$1.sent(), a4 = { error: r2 }, [3, 7];
          case 6:
            try {
              n3 && !n3.done && (i3 = t5.return) && i3.call(t5);
            } finally {
              if (a4) throw a4.error;
            }
            return [7];
          case 7:
            return [2];
        }
      });
    });
  }, n2.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return this.clearMemoryCache(), this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e3.sent(), e3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, n2.prototype.clearMemoryCache = function() {
    this._channels.clear();
  }, n2.prototype._setBlockStateOfAllChannels = function(e3, t5, n3) {
    return r$1(this, void 0, void 0, function() {
      var s4, r2, a4, i3, o$1, u3, c3, l2, h4, d4, _2, p2, m4, g2, E3, C2, y4, M4, b3;
      return s$1(this, function(f2) {
        switch (f2.label) {
          case 0:
            if (s4 = [], e3 === this._sdkState.userId) try {
              for (r2 = o(this._channels.values()), a4 = r2.next(); !a4.done; a4 = r2.next()) {
                l2 = a4.value;
                try {
                  for (g2 = void 0, i3 = o(l2.members), o$1 = i3.next(); !o$1.done; o$1 = i3.next()) if ((_2 = o$1.value).userId === t5) {
                    _2.isBlockedByMe = n3, s4.push(l2);
                    break;
                  }
                } catch (e4) {
                  g2 = { error: e4 };
                } finally {
                  try {
                    o$1 && !o$1.done && (E3 = i3.return) && E3.call(i3);
                  } finally {
                    if (g2) throw g2.error;
                  }
                }
              }
            } catch (e4) {
              p2 = { error: e4 };
            } finally {
              try {
                a4 && !a4.done && (m4 = r2.return) && m4.call(r2);
              } finally {
                if (p2) throw p2.error;
              }
            }
            else if (t5 === this._sdkState.userId) try {
              for (u3 = o(this._channels.values()), c3 = u3.next(); !c3.done; c3 = u3.next()) {
                l2 = c3.value;
                try {
                  for (M4 = void 0, h4 = o(l2.members), d4 = h4.next(); !d4.done; d4 = h4.next()) if ((_2 = d4.value).userId === e3) {
                    _2.isBlockingMe = n3, s4.push(l2);
                    break;
                  }
                } catch (e4) {
                  M4 = { error: e4 };
                } finally {
                  try {
                    d4 && !d4.done && (b3 = h4.return) && b3.call(h4);
                  } finally {
                    if (M4) throw M4.error;
                  }
                }
              }
            } catch (e4) {
              C2 = { error: e4 };
            } finally {
              try {
                c3 && !c3.done && (y4 = u3.return) && y4.call(u3);
              } finally {
                if (C2) throw C2.error;
              }
            }
            return s4.length > 0 ? [4, this.upsert(s4)] : [3, 2];
          case 1:
            f2.sent(), f2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, n2.prototype.block = function(e3, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._setBlockStateOfAllChannels(e3, t5, true)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.unblock = function(e3, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._setBlockStateOfAllChannels(e3, t5, false)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, n2.prototype.markAsRead = function(e3, t5) {
    return void 0 === t5 && (t5 = c([], a$1(this._channels.keys()), false)), r$1(this, void 0, void 0, function() {
      var n3, s4, r2, a4, i3, o$1, u3, c3;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            n3 = [], l2.label = 1;
          case 1:
            l2.trys.push([1, 6, 7, 8]), s4 = o(t5), r2 = s4.next(), l2.label = 2;
          case 2:
            return r2.done ? [3, 5] : (a4 = r2.value, [4, this.get(a4)]);
          case 3:
            (null == (i3 = l2.sent()) ? void 0 : i3._updateUnreadMemberState(this._sdkState.userId, e3)) && (i3._updateUnreadCount(0, 0), n3.push(i3)), l2.label = 4;
          case 4:
            return r2 = s4.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return o$1 = l2.sent(), u3 = { error: o$1 }, [3, 8];
          case 7:
            try {
              r2 && !r2.done && (c3 = s4.return) && c3.call(s4);
            } finally {
              if (u3) throw u3.error;
            }
            return [7];
          case 8:
            return n3.length > 0 ? [4, this.upsert(n3)] : [3, 10];
          case 9:
            l2.sent(), l2.label = 10;
          case 10:
            return [2];
        }
      });
    });
  }, n2;
}(Jr$1), _n$1 = { invitedUserIds: void 0, channelUrl: void 0, coverUrl: void 0, coverImage: void 0, isDistinct: void 0, isSuper: void 0, isBroadcast: void 0, isExclusive: void 0, isPublic: void 0, isDiscoverable: void 0, isStrict: void 0, isEphemeral: void 0, accessCode: void 0, name: void 0, data: void 0, customType: void 0, operatorUserIds: void 0, messageSurvivalSeconds: void 0 }, pn$1 = function(e3) {
  return C$1("string", e3.invitedUserIds, true) && S$1("string", e3.channelUrl, true) && S$1("string", e3.coverUrl, true) && (k(e3.coverImage) || S$1("string", e3.coverImage, true)) && S$1("boolean", e3.isDistinct, true) && S$1("boolean", e3.isSuper, true) && S$1("boolean", e3.isBroadcast, true) && S$1("boolean", e3.isExclusive, true) && S$1("boolean", e3.isPublic, true) && S$1("boolean", e3.isStrict, true) && S$1("boolean", e3.isDiscoverable, true) && S$1("boolean", e3.isEphemeral, true) && S$1("string", e3.accessCode, true) && S$1("string", e3.name, true) && S$1("string", e3.data, true) && S$1("string", e3.customType, true) && C$1("string", e3.operatorUserIds, true) && S$1("number", e3.messageSurvivalSeconds, true);
}, fn$1 = { customTypes: void 0, includeEmpty: false, includeFrozen: true, includeMetaData: true, includeChatNotification: false }, vn$1 = function(e3) {
  return C$1("string", e3.customTypes, true) && S$1("boolean", e3.includeEmpty, true) && S$1("boolean", e3.includeFrozen, true) && S$1("boolean", e3.includeMetaData, true) && S$1("boolean", e3.includeChatNotification, true);
}, mn$1 = { myMemberStateFilter: en$1.ALL }, gn$1 = function(e3) {
  return T$2(en$1, e3.myMemberStateFilter);
};
!function(e3) {
  e3.GROUP_CHANNEL_UNREAD_MENTION_COUNT = "group_channel_unread_mention_count", e3.NONSUPER_UNREAD_MENTION_COUNT = "non_super_group_channel_unread_mention_count", e3.SUPER_UNREAD_MENTION_COUNT = "super_group_channel_unread_mention_count", e3.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT = "group_channel_unread_message_count", e3.NONSUPER_UNREAD_MESSAGE_COUNT = "non_super_group_channel_unread_message_count", e3.SUPER_UNREAD_MESSAGE_COUNT = "super_group_channel_unread_message_count", e3.GROUP_CHANNEL_INVITATION_COUNT = "group_channel_invitation_count", e3.NONSUPER_INVITATION_COUNT = "non_super_group_channel_invitation_count", e3.SUPER_INVITATION_COUNT = "super_group_channel_invitation_count";
}(ln$1 || (ln$1 = {}));
var En$1 = { keys: [ln$1.GROUP_CHANNEL_UNREAD_MENTION_COUNT, ln$1.NONSUPER_UNREAD_MENTION_COUNT, ln$1.SUPER_UNREAD_MENTION_COUNT, ln$1.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT, ln$1.NONSUPER_UNREAD_MESSAGE_COUNT, ln$1.SUPER_UNREAD_MESSAGE_COUNT, ln$1.GROUP_CHANNEL_INVITATION_COUNT, ln$1.NONSUPER_INVITATION_COUNT, ln$1.SUPER_INVITATION_COUNT], customTypeFilters: void 0, customTypesFilter: void 0 }, Cn$1 = { channelCustomTypesFilter: void 0, superChannelFilter: tn$1.ALL }, yn$1 = function(e3) {
  return C$1("string", e3.channelCustomTypesFilter, true) && T$2(tn$1, e3.superChannelFilter);
}, Mn$1 = { channelUrl: void 0, scheduledStatus: void 0, messageTypeFilter: j.ALL }, bn$1 = n$2({}, no), Nn$1 = function(e3) {
  return e3.startsWith("EVENT_") || e3 === no.SYNC_CHANNEL_CHANGELOGS || e3 === no.REFRESH_CHANNEL;
}, Un$1 = function(t4) {
  function n2(e3) {
    var n3 = e3.channels, s4 = e3.context, r2 = e3.isWebSocketEventComing, a4 = void 0 !== r2 && r2, i3 = e3.ts, o2 = t4.call(this) || this;
    return o2.channels = n3, o2.context = s4, o2.isWebSocketEventComing = a4, o2.ts = i3, o2;
  }
  return t$2(n2, t4), n2;
}(re), Sn$1 = function(t4) {
  function n2(e3) {
    var n3 = e3.channelUrls, s4 = e3.context, r2 = e3.isWebSocketEventComing, a4 = void 0 !== r2 && r2, i3 = t4.call(this) || this;
    return i3.channelUrls = n3, i3.context = s4, i3.isWebSocketEventComing = a4, i3;
  }
  return t$2(n2, t4), n2;
}(re), Tn$1 = function(t4) {
  function n2(e3) {
    var n3 = e3.channel, s4 = t4.call(this) || this;
    return s4.channel = n3, s4;
  }
  return t$2(n2, t4), n2;
}(re), An$1 = function() {
  function e3(e4) {
    var t4 = e4.groupChannelCache, n2 = e4.userInfoCache, s4 = e4.messageCache, r2 = e4.unsentMessageCache, a4 = e4.dispatcher, i3 = this;
    this._observers = /* @__PURE__ */ new Map(), a4.on(function(e5) {
      return r$1(i3, void 0, void 0, function() {
        var a5, i4, o$1, u3, c3, l2, h4, d4, _2, m4, g2, E3, C2, M4, N2, U2, S4, T3, A2 = this;
        return s$1(this, function(I3) {
          switch (I3.label) {
            case 0:
              if (!(e5 instanceof Un$1)) return [3, 19];
              if (a5 = e5.channels, C2 = e5.context, M4 = e5.isWebSocketEventComing, i4 = a5.filter(function(e6) {
                return e6 instanceof fr;
              }), C2.source !== no.EVENT_CHANNEL_RESET_HISTORY && C2.source !== no.EVENT_CHANNEL_HIDDEN) return [3, 9];
              I3.label = 1;
            case 1:
              I3.trys.push([1, 6, 7, 8]), o$1 = o(i4), u3 = o$1.next(), I3.label = 2;
            case 2:
              return u3.done ? [3, 5] : (_2 = u3.value, [4, s4.removeUnderOffset(_2.url, _2.messageOffsetTimestamp)]);
            case 3:
              I3.sent(), I3.label = 4;
            case 4:
              return u3 = o$1.next(), [3, 2];
            case 5:
              return [3, 8];
            case 6:
              return c3 = I3.sent(), N2 = { error: c3 }, [3, 8];
            case 7:
              try {
                u3 && !u3.done && (U2 = o$1.return) && U2.call(o$1);
              } finally {
                if (N2) throw N2.error;
              }
              return [7];
            case 8:
              return [3, 17];
            case 9:
              l2 = t4.filterOffsetChanged(i4), I3.label = 10;
            case 10:
              I3.trys.push([10, 15, 16, 17]), h4 = o(l2), d4 = h4.next(), I3.label = 11;
            case 11:
              return d4.done ? [3, 14] : (_2 = d4.value, [4, s4.removeUnderOffset(_2.url, _2.messageOffsetTimestamp)]);
            case 12:
              I3.sent(), I3.label = 13;
            case 13:
              return d4 = h4.next(), [3, 11];
            case 14:
              return [3, 17];
            case 15:
              return m4 = I3.sent(), S4 = { error: m4 }, [3, 17];
            case 16:
              try {
                d4 && !d4.done && (T3 = h4.return) && T3.call(h4);
              } finally {
                if (S4) throw S4.error;
              }
              return [7];
            case 17:
              return [4, t4.upsert(i4, e5.ts)];
            case 18:
              return g2 = I3.sent(), M4 || this._broadcastUpdateEvent(g2, C2), [3, 25];
            case 19:
              return e5 instanceof Sn$1 ? (E3 = e5.channelUrls, C2 = e5.context, M4 = e5.isWebSocketEventComing, [4, t4.remove(E3)]) : [3, 22];
            case 20:
              return I3.sent(), [4, Dr$1(function() {
                return r$1(A2, void 0, void 0, function() {
                  var e6, t5, n3, a6, i5, o$12;
                  return s$1(this, function(u4) {
                    switch (u4.label) {
                      case 0:
                        u4.trys.push([0, 6, 7, 8]), e6 = o(E3), t5 = e6.next(), u4.label = 1;
                      case 1:
                        return t5.done ? [3, 5] : (n3 = t5.value, [4, s4.removeMessagesOfChannel(n3)]);
                      case 2:
                        return u4.sent(), [4, r2.removeMessagesOfChannel(n3)];
                      case 3:
                        u4.sent(), u4.label = 4;
                      case 4:
                        return t5 = e6.next(), [3, 1];
                      case 5:
                        return [3, 8];
                      case 6:
                        return a6 = u4.sent(), i5 = { error: a6 }, [3, 8];
                      case 7:
                        try {
                          t5 && !t5.done && (o$12 = e6.return) && o$12.call(e6);
                        } finally {
                          if (i5) throw i5.error;
                        }
                        return [7];
                      case 8:
                        return [2];
                    }
                  });
                });
              })];
            case 21:
              return I3.sent(), M4 || this._broadcastRemoveEvent(E3, C2), [3, 25];
            case 22:
              return e5 instanceof T$1 ? [4, t4.fetch({ token: Number.MAX_SAFE_INTEGER, limit: Number.MAX_SAFE_INTEGER })] : [3, 25];
            case 23:
              return I3.sent(), [4, n2.fetch({ limit: Number.MAX_SAFE_INTEGER })];
            case 24:
              I3.sent(), I3.label = 25;
            case 25:
              return [2];
          }
        });
      });
    });
  }
  return e3.prototype._broadcastUpdateEvent = function(e4, t4) {
    var n2, s4;
    try {
      for (var r2 = o(this._observers.values()), a4 = r2.next(); !a4.done; a4 = r2.next()) {
        var i3 = a4.value;
        i3.onUpdate && i3.onUpdate(e4, t4);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        a4 && !a4.done && (s4 = r2.return) && s4.call(r2);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, e3.prototype._broadcastRemoveEvent = function(e4, t4) {
    var n2, s4;
    try {
      for (var r2 = o(this._observers.values()), a4 = r2.next(); !a4.done; a4 = r2.next()) {
        var i3 = a4.value;
        i3.onRemove && i3.onRemove(e4, t4);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        a4 && !a4.done && (s4 = r2.return) && s4.call(r2);
      } finally {
        if (n2) throw n2.error;
      }
    }
  }, e3.prototype.subscribe = function(e4, t4) {
    this._observers.set(e4, t4);
  }, e3.prototype.unsubscribe = function(e4) {
    this._observers.delete(e4);
  }, e3.prototype.unsubscribeAll = function() {
    this._observers.clear();
  }, e3;
}(), In$1 = function(r2) {
  function a4(e3) {
    var a5 = e3.userId, i3 = e3.ts, o2 = e3.token, u3 = e3.filter, c3 = e3.includeChatNotification, l2 = void 0 !== c3 && c3, h4 = r2.call(this) || this, d4 = n$2(n$2({}, fn$1), u3), _2 = d4.customTypes, p2 = d4.includeEmpty, f2 = d4.includeFrozen;
    return h4.method = ae.GET, h4.path = "".concat(ue, "/").concat(encodeURIComponent(a5), "/my_group_channels/changelogs"), h4.params = se(oe({ show_delivery_receipt: true, show_member: true, show_read_receipt: true, change_ts: i3 || null, token: o2, custom_types: _2, show_empty: p2, show_frozen: f2, include_chat_notification: l2 })), h4;
  }
  return t$2(a4, r2), a4;
}(Fe$2), wn$1 = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.updatedChannels = n3.updated.map(function(t5) {
      return new fr(e3, Object.assign(t5, { ts: n3.ts }));
    }), s4.deletedChannelUrls = n3.deleted, s4.hasMore = n3.has_more, s4.token = n3.next, s4.ts = n3.ts, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), Ln$1 = function(t4) {
  function n2(e3) {
    var n3 = e3.channelUrl, s4 = e3.isInternalCall, r2 = e3.showLatestMessage, a4 = t4.call(this) || this;
    return a4.method = ae.GET, a4.path = "".concat(s4 ? _e$1 : de, "/").concat(encodeURIComponent(n3)), a4.params = { show_member: true, show_read_receipt: true, show_delivery_receipt: true, show_latest_message: null != r2 && r2 }, a4;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Dn$1 = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.channel = new fr(e3, n3), s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), xn = { includeEmpty: false, myMemberStateFilter: en$1.ALL, unreadChannelFilter: nn$1.ALL, superChannelFilter: tn$1.ALL, publicChannelFilter: $t$1.ALL, hiddenChannelFilter: sn$1.ALL, userIdsFilter: { queryType: an$1.AND }, order: E.LATEST_LAST_MESSAGE }, Rn = function(n2) {
  function s4(e3) {
    var s5 = this, r2 = e3.userId, a4 = e3.token, i3 = e3.limit, o2 = e3.order, u3 = e3.includeEmpty, c3 = e3.myMemberStateFilter, l2 = e3.superChannelFilter, h4 = e3.publicChannelFilter, d4 = e3.unreadChannelFilter, _2 = e3.nicknameContainsFilter, p2 = e3.nicknameStartsWithFilter, f2 = e3.nicknameExactMatchFilter, v2 = e3.channelNameContainsFilter, m4 = e3.channelUrlsFilter, g2 = e3.customTypesFilter, E3 = e3.customTypeStartsWithFilter, C2 = e3.hiddenChannelFilter, y4 = e3.metadataOrderKeyFilter, M4 = e3.metadataKey, b3 = e3.metadataValues, S4 = e3.metadataValueStartsWith, T3 = e3.includeFrozen, A2 = e3.includeMetaData, I3 = e3.searchFilter, w3 = e3.userIdsFilter, L3 = e3.includeChatNotification, D3 = void 0 !== L3 && L3, x3 = e3.includeLeftChannel, R3 = void 0 !== x3 && x3, F2 = e3.createdAfter, k3 = e3.createdBefore;
    return (s5 = n2.call(this) || this).method = ae.GET, s5.path = "".concat(ue, "/").concat(encodeURIComponent(r2), "/my_group_channels"), s5.params = se({ token: a4, limit: i3, order: null != o2 ? o2 : xn.order, show_member: true, show_read_receipt: true, show_delivery_receipt: true, show_empty: null != u3 ? u3 : xn.includeEmpty, member_state_filter: null != c3 ? c3 : xn.myMemberStateFilter, super_mode: null != l2 ? l2 : xn.superChannelFilter, public_mode: null != h4 ? h4 : xn.publicChannelFilter, unread_filter: null != d4 ? d4 : xn.unreadChannelFilter, members_nickname_contains: _2, members_nickname_startswith: p2, members_nickname: f2, name_contains: v2, channel_urls: m4, custom_types: g2, custom_type_startswith: E3, hidden_mode: C2, metadata_order_key: y4, metadata_key: M4, metadata_values: b3, metadata_value_startswith: S4, show_frozen: T3, show_metadata: A2, include_chat_notification: D3, include_left_channel: R3, created_after: F2, created_before: k3 }), I3 && I3.query && I3.fields && (s5.params.search_query = I3.query, s5.params.search_fields = I3.fields), w3 && w3.userIds && w3.userIds.length > 0 && (w3.includeMode ? (s5.params.members_include_in = w3.userIds, s5.params.query_type = w3.queryType.toUpperCase()) : s5.params.members_exactly_in = w3.userIds), s5;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Fn = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    s4.channels = [];
    var r2 = n3.next, a4 = n3.channels, i3 = n3.ts;
    return s4.token = r2, a4 && a4.length > 0 && (s4.channels = a4.map(function(t5) {
      return t5.ts = i3, new fr(e3, t5);
    })), s4.ts = null != i3 ? i3 : 0, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), kn$1 = function(t4) {
  function n2(e3) {
    var n3 = e3.userId, s4 = e3.filter, r2 = t4.call(this) || this, a4 = s4.myMemberStateFilter;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n3), "/group_channel_count"), r2.params = { state: null != a4 ? a4 : en$1.ALL }, r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Pn$1 = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.groupChannelCount = n3.group_channel_count, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), On$1 = function(n2) {
  function s4(e3) {
    var s5 = e3.userId, r2 = e3.filter, a4 = n2.call(this) || this, i3 = r2.keys, o2 = r2.customTypeFilters, u3 = r2.customTypesFilter;
    return a4.method = ae.GET, a4.path = "".concat(ue, "/").concat(encodeURIComponent(s5), "/unread_item_count"), a4.params = se({ item_keys: i3, custom_types: null != u3 ? u3 : o2 }), a4;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Hn = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return "number" == typeof n3[ln$1.GROUP_CHANNEL_UNREAD_MENTION_COUNT] && (s4.groupChannelUnreadMentionCount = n3[ln$1.GROUP_CHANNEL_UNREAD_MENTION_COUNT]), "number" == typeof n3[ln$1.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT] && (s4.groupChannelUnreadMessageCount = n3[ln$1.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT]), "number" == typeof n3[ln$1.GROUP_CHANNEL_INVITATION_COUNT] && (s4.groupChannelInvitationCount = n3[ln$1.GROUP_CHANNEL_INVITATION_COUNT]), "number" == typeof n3[ln$1.SUPER_UNREAD_MENTION_COUNT] && (s4.superGroupChannelUnreadMentionCount = n3[ln$1.SUPER_UNREAD_MENTION_COUNT]), "number" == typeof n3[ln$1.SUPER_UNREAD_MESSAGE_COUNT] && (s4.superGroupChannelUnreadMessageCount = n3[ln$1.SUPER_UNREAD_MESSAGE_COUNT]), "number" == typeof n3[ln$1.SUPER_INVITATION_COUNT] && (s4.superGroupChannelInvitationCount = n3[ln$1.SUPER_INVITATION_COUNT]), "number" == typeof n3[ln$1.NONSUPER_UNREAD_MENTION_COUNT] && (s4.nonSuperGroupChannelUnreadMentionCount = n3[ln$1.NONSUPER_UNREAD_MENTION_COUNT]), "number" == typeof n3[ln$1.NONSUPER_UNREAD_MESSAGE_COUNT] && (s4.nonSuperGroupChannelUnreadMessageCount = n3[ln$1.NONSUPER_UNREAD_MESSAGE_COUNT]), "number" == typeof n3[ln$1.NONSUPER_INVITATION_COUNT] && (s4.nonSuperGroupChannelInvitationCount = n3[ln$1.NONSUPER_INVITATION_COUNT]), s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), Gn = function(t4) {
  function n2(e3) {
    var n3 = e3.userId, s4 = t4.call(this) || this;
    return s4.method = ae.GET, s4.path = "".concat(ue, "/").concat(encodeURIComponent(n3), "/unread_channel_count"), s4;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Vn = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.unreadCount = n3.unread_count, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), Bn = function(t4) {
  function n2(e3) {
    var n3 = e3.userId, s4 = e3.filter, r2 = e3.includeFeedChannel, a4 = void 0 !== r2 && r2, i3 = t4.call(this) || this, o2 = s4.channelCustomTypesFilter, u3 = s4.superChannelFilter;
    return i3.method = ae.GET, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n3), "/unread_message_count"), i3.params = { super_mode: null != u3 ? u3 : tn$1.ALL, custom_types: o2, include_feed_channel: a4 }, i3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), qn = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.unreadCount = n3.unread_count, s4.unreadFeedCount = n3.unread_feed_count, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), zn = function(t4) {
  function n2(e3) {
    var n3 = e3.channelUrl, s4 = e3.scheduledStatus, r2 = e3.messageTypeFilter, a4 = t4.call(this) || this;
    return a4.method = ae.GET, a4.path = "".concat(ye$1, "/count"), a4.params = { channel_url: n3, status: jn(s4) }, r2 && (a4.params.message_type = r2), a4;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Wn = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.count = n3.count, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), jn = function(e3) {
  if (!e3) return [];
  var t4 = [];
  return e3.forEach(function(e4) {
    switch (e4) {
      case dt.PENDING:
        t4.push(ht.PENDING);
        break;
      case dt.SENT:
        t4.push(ht.IN_QUEUE), t4.push(ht.SENT);
        break;
      case dt.CANCELED:
        t4.push(ht.CANCELED);
        break;
      case dt.FAILED:
        t4.push(ht.FAILED);
    }
  }), t4;
}, Qn = function(n2) {
  function s4(e3) {
    var s5 = this, r2 = e3.userId, a4 = e3.channelUrl, i3 = e3.coverUrl, o2 = e3.coverImage, u3 = e3.isDistinct, c$1 = e3.isSuper, l2 = e3.isBroadcast, h4 = e3.isPublic, p2 = e3.isExclusive, f2 = e3.isDiscoverable, v2 = e3.isStrict, m4 = e3.isEphemeral, g2 = e3.accessCode, E3 = e3.name, C2 = e3.data, y4 = e3.customType, M4 = e3.messageSurvivalSeconds, b3 = e3.invitedUserIds, U2 = e3.operatorUserIds;
    return (s5 = n2.call(this) || this).method = ae.POST, s5.path = de, s5.params = se({ user_ids: c([r2], a$1(null != b3 ? b3 : []), false).filter(function(e4, t4, n3) {
      return t4 === n3.indexOf(e4);
    }), channel_url: a4, cover_url: i3, cover_file: o2, is_distinct: u3, is_super: c$1, is_broadcast: l2, is_exclusive: p2, is_public: h4, is_discoverable: f2, strict: v2, is_ephemeral: m4, access_code: g2, name: E3, data: C2, custom_type: y4, operator_ids: U2, message_survival_seconds: M4 }), s5;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Yn = function(t4) {
  function n2(e3, n3) {
    var s4, r2 = this;
    return (r2 = t4.call(this, e3, n3) || this).channel = new fr(e3, n3), r2.isCreated = null === (s4 = n3.is_created) || void 0 === s4 || s4, r2;
  }
  return t$2(n2, t4), n2;
}(qe$2), Kn = function(t4) {
  function n2(e3) {
    var n3 = e3.userId, s4 = e3.channelUrls, r2 = t4.call(this) || this;
    return r2.method = ae.PUT, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n3), "/mark_as_read_all"), r2.params = { channel_urls: s4 }, r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2);
!function(t4) {
  function n2() {
    return null !== t4 && t4.apply(this, arguments) || this;
  }
  t$2(n2, t4);
}(qe$2);
var Jn = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.userId, a4 = e3.accessCode;
    return (n3 = t4.call(this) || this).method = ae.PUT, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/join"), n3.params = { user_id: r2, access_code: a4 }, n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Xn = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.channel = new fr(e3, n3), s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), Zn = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, n3, s4) || this, a4 = s4.data, i3 = a4.member_count, o2 = void 0 === i3 ? 0 : i3, u3 = a4.joined_member_count, c3 = void 0 === u3 ? 0 : u3, l2 = a4.users, h4 = void 0 === l2 ? null : l2;
    return r2.memberCount = o2, r2.joinedMemberCount = c3, r2.members = Array.isArray(h4) ? h4.map(function(t5) {
      return new un$1(e3, t5);
    }) : [new un$1(e3, s4.data)], r2;
  }
  return t$2(n2, t4), n2;
}(v), $n = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.userId, a4 = e3.shouldRemoveOperatorStatus;
    return (n3 = t4.call(this) || this).method = ae.PUT, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/leave"), n3.params = { user_id: r2, should_remove_operator_status: a4 }, n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2);
!function(t4) {
  function n2(e3, n3) {
    return t4.call(this, e3, n3) || this;
  }
  t$2(n2, t4);
}(qe$2);
var es = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, n3, s4) || this, a4 = s4.data, i3 = a4.member_count, o2 = void 0 === i3 ? 0 : i3, u3 = a4.joined_member_count, c3 = void 0 === u3 ? 0 : u3;
    return r2.memberCount = o2, r2.joinedMemberCount = c3, r2.member = new un$1(r2._iid, s4.data), r2;
  }
  return t$2(n2, t4), n2;
}(v), ts = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.userIds;
    return (n3 = t4.call(this) || this).method = ae.POST, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/invite"), n3.params = { user_ids: r2 }, n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), ns = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.channel = new fr(e3, n3), s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), ss = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, n3, s4) || this;
    r2.inviter = null;
    var a4 = s4.data, i3 = a4.member_count, u3 = void 0 === i3 ? 0 : i3, c3 = a4.joined_member_count, l2 = void 0 === c3 ? 0 : c3, h4 = a4.inviter, d4 = a4.invitees, _2 = void 0 === d4 ? [] : d4;
    return r2.memberCount = u3, r2.joinedMemberCount = l2, h4 && Object.keys(h4).length > 0 && (r2.inviter = new ls$2(e3, h4)), r2.invitees = _2.map(function(t5) {
      return new un$1(e3, t5);
    }), r2;
  }
  return t$2(n2, t4), n2;
}(v), rs = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.userId;
    return (n3 = t4.call(this) || this).method = ae.PUT, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/decline"), n3.params = { user_id: r2 }, n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2);
!function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.channel = new fr(e3, n3), s4.channel.myMemberState = Zt$1.NONE, s4;
  }
  t$2(n2, t4);
}(qe$2);
var as = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, n3, s4) || this, a4 = s4.data, i3 = a4.member_count, u3 = a4.joined_member_count, c3 = a4.inviter, l2 = a4.invitee;
    return r2.memberCount = null != i3 ? i3 : 0, r2.joinedMemberCount = null != u3 ? u3 : 0, r2.inviter = new ls$2(e3, c3), r2.invitee = new un$1(e3, l2), r2;
  }
  return t$2(n2, t4), n2;
}(v), is = { hidePreviousMessages: false, allowAutoUnhide: true }, os = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.userId, a4 = e3.hidePreviousMessages, i3 = e3.allowAutoUnhide;
    return (n3 = t4.call(this) || this).method = ae.PUT, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/hide"), n3.params = { user_id: r2, hide_previous_messages: null != a4 ? a4 : is.hidePreviousMessages, allow_auto_unhide: null != i3 ? i3 : is.allowAutoUnhide }, n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), us = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this, r2 = n3.ts_message_offset;
    return s4.messageOffsetTimestamp = r2, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), cs = function(t4) {
  function n2(e3, n3, s4) {
    var r2, a4, i3, o2 = this;
    return (o2 = t4.call(this, e3, "SYEV", s4) || this).allowAutoUnhide = null, o2.hidePreviousMessages = null, o2.messageOffsetTimestamp = null, s4.data && (o2.allowAutoUnhide = null !== (r2 = s4.data.allow_auto_unhide) && void 0 !== r2 ? r2 : null, o2.hidePreviousMessages = null !== (a4 = s4.data.hide_previous_messages) && void 0 !== a4 ? a4 : null), o2.messageOffsetTimestamp = null !== (i3 = s4.ts_message_offset) && void 0 !== i3 ? i3 : null, o2;
  }
  return t$2(n2, t4), n2;
}(ze$2), ls = function(t4) {
  function n2(e3) {
    var n3 = e3.channelUrl, s4 = e3.time;
    return t4.call(this, { code: "TPST", ackRequired: false, payload: { channel_url: n3, time: s4 } }) || this;
  }
  return t$2(n2, t4), n2;
}(Ge$1), hs = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, "SYEV", s4) || this;
    return r2.user = new ls$2(e3, s4.data), r2;
  }
  return t$2(n2, t4), n2;
}(ze$2), ds = function(t4) {
  function n2(e3) {
    var n3 = e3.channelUrl, s4 = e3.time;
    return t4.call(this, { code: "TPEN", ackRequired: false, payload: { channel_url: n3, time: s4 } }) || this;
  }
  return t$2(n2, t4), n2;
}(Ge$1), _s = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, "SYEV", s4) || this;
    return r2.user = new ls$2(e3, s4.data), r2;
  }
  return t$2(n2, t4), n2;
}(ze$2), ps = function(t4) {
  function n2(e3) {
    var n3 = e3.channelUrl, s4 = e3.messageId;
    return t4.call(this, { code: "MACK", ackRequired: false, payload: { channel_url: n3, msg_id: s4 } }) || this;
  }
  return t$2(n2, t4), n2;
}(Ge$1), fs = function(t4) {
  function a4(e3, n2) {
    var s4, r2, a5, i3, o2, u3, c3, l2, h4, d4, _2, p2, f2, v2, m4, g2, E$12, C2, y4, M4, b3, N2, U2, S4 = this;
    return (S4 = t4.call(this, e3, n2) || this).includeEmpty = false, S4.includeFrozen = true, S4.includeMetaData = true, S4.includeChatNotification = false, S4.channelUrlsFilter = null, S4.customTypesFilter = null, S4.customTypeStartsWithFilter = null, S4.nicknameContainsFilter = null, S4.nicknameStartsWithFilter = null, S4.nicknameExactMatchFilter = null, S4.channelNameContainsFilter = "", S4.myMemberStateFilter = en$1.ALL, S4.unreadChannelFilter = nn$1.ALL, S4.superChannelFilter = tn$1.ALL, S4.publicChannelFilter = $t$1.ALL, S4.hiddenChannelFilter = sn$1.UNHIDDEN, S4.searchFilter = { fields: [], query: null }, S4.userIdsFilter = { userIds: [], includeMode: true, queryType: an$1.AND }, S4.metadataKey = null, S4.metadataValues = null, S4.metadataOrderKeyFilter = null, S4.metadataValueStartsWith = null, S4.order = E.LATEST_LAST_MESSAGE, S4.includeEmpty = null !== (s4 = n2.includeEmpty) && void 0 !== s4 && s4, S4.includeFrozen = null === (r2 = n2.includeFrozen) || void 0 === r2 || r2, S4.includeMetaData = null === (a5 = n2.includeMetaData) || void 0 === a5 || a5, S4.includeChatNotification = null !== (i3 = n2.includeChatNotification) && void 0 !== i3 && i3, S4.channelUrlsFilter = null !== (o2 = n2.channelUrlsFilter) && void 0 !== o2 ? o2 : null, S4.customTypesFilter = null !== (u3 = n2.customTypesFilter) && void 0 !== u3 ? u3 : null, S4.customTypeStartsWithFilter = null !== (c3 = n2.customTypeStartsWithFilter) && void 0 !== c3 ? c3 : "", S4.nicknameContainsFilter = null !== (l2 = n2.nicknameContainsFilter) && void 0 !== l2 ? l2 : null, S4.nicknameStartsWithFilter = null !== (h4 = n2.nicknameStartsWithFilter) && void 0 !== h4 ? h4 : null, S4.nicknameExactMatchFilter = null !== (d4 = n2.nicknameExactMatchFilter) && void 0 !== d4 ? d4 : null, S4.channelNameContainsFilter = null !== (_2 = n2.channelNameContainsFilter) && void 0 !== _2 ? _2 : "", S4.myMemberStateFilter = null !== (p2 = n2.myMemberStateFilter) && void 0 !== p2 ? p2 : en$1.ALL, S4.unreadChannelFilter = null !== (f2 = n2.unreadChannelFilter) && void 0 !== f2 ? f2 : nn$1.ALL, S4.superChannelFilter = null !== (v2 = n2.superChannelFilter) && void 0 !== v2 ? v2 : tn$1.ALL, S4.publicChannelFilter = null !== (m4 = n2.publicChannelFilter) && void 0 !== m4 ? m4 : $t$1.ALL, S4.hiddenChannelFilter = null !== (g2 = n2.hiddenChannelFilter) && void 0 !== g2 ? g2 : sn$1.UNHIDDEN, S4.searchFilter = null !== (E$12 = n2.searchFilter) && void 0 !== E$12 ? E$12 : { fields: [], query: null }, S4.userIdsFilter = null !== (C2 = n2.userIdsFilter) && void 0 !== C2 ? C2 : { userIds: [], includeMode: true, queryType: an$1.AND }, S4.metadataKey = null !== (y4 = n2.metadataKey) && void 0 !== y4 ? y4 : null, S4.metadataValues = null !== (M4 = n2.metadataValues) && void 0 !== M4 ? M4 : null, S4.metadataOrderKeyFilter = null !== (b3 = n2.metadataOrderKeyFilter) && void 0 !== b3 ? b3 : null, S4.metadataValueStartsWith = null !== (N2 = n2.metadataValueStartsWith) && void 0 !== N2 ? N2 : null, S4.order = null !== (U2 = n2.order) && void 0 !== U2 ? U2 : E.LATEST_LAST_MESSAGE, n2.createdAfter && (S4.createdAfter = n2.createdAfter), n2.createdBefore && (S4.createdBefore = n2.createdBefore), S4;
  }
  return t$2(a4, t4), a4.prototype._validate = function() {
    return t4.prototype._validate.call(this) && S$1("boolean", this.includeEmpty) && S$1("boolean", this.includeFrozen) && S$1("boolean", this.includeMetaData) && S$1("string", this.channelNameContainsFilter) && C$1("string", this.channelUrlsFilter, true) && C$1("string", this.customTypesFilter, true) && S$1("string", this.customTypeStartsWithFilter) && S$1("string", this.nicknameContainsFilter, true) && S$1("string", this.nicknameStartsWithFilter, true) && S$1("string", this.nicknameExactMatchFilter, true) && T$2(en$1, this.myMemberStateFilter) && T$2(tn$1, this.superChannelFilter) && T$2($t$1, this.publicChannelFilter) && T$2(nn$1, this.unreadChannelFilter) && T$2(sn$1, this.hiddenChannelFilter) && C$1(on$1, this.searchFilter.fields) && S$1("string", this.searchFilter.query, true) && C$1("string", this.userIdsFilter.userIds) && S$1("boolean", this.userIdsFilter.includeMode) && T$2(an$1, this.userIdsFilter.queryType) && T$2(E, this.order) && S$1("string", this.metadataOrderKeyFilter, true) && S$1("string", this.metadataKey, true) && C$1("string", this.metadataValues, true) && S$1("string", this.metadataValueStartsWith, true) && A(this.createdAfter) && A(this.createdBefore);
  }, a4.prototype.serialize = function() {
    return os$2(this);
  }, a4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, r2;
      return s$1(this, function(a5) {
        switch (a5.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, [4, ys.of(this._iid).getMyGroupChannels(this._token, oe(n$2({}, this)), this.limit, no.REQUEST_CHANNEL, true)]) : [3, 2] : [3, 5];
          case 1:
            return e3 = a5.sent(), t5 = e3.channels, r2 = e3.token, this._token = r2, this._hasNext = !!r2, this._isLoading = false, [2, t5];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, a4;
}(Oo), vs = function(n2) {
  function s4(e3) {
    var s5 = e3.channelUrl, r2 = e3.userId, a4 = n2.call(this) || this;
    return a4.method = ae.PUT, a4.path = "".concat(de, "/").concat(encodeURIComponent(s5), "/messages/mark_as_delivered"), a4.params = se({ user_id: r2 }), a4;
  }
  return t$2(s4, n2), s4;
}(Fe$2);
!function(t4) {
  function n2() {
    return null !== t4 && t4.apply(this, arguments) || this;
  }
  t$2(n2, t4);
}(qe$2);
var ms, gs = function(t4) {
  function n2(e3, n3, s4) {
    var r2 = t4.call(this, e3, "DLVR", s4) || this;
    return r2.channelUrl = s4.channel_url, r2.deliveredStateUpdate = s4.updated, r2;
  }
  return t$2(n2, t4), n2;
}(ze$2), Es = function() {
  function e3(e4) {
    var t4 = e4.top, n2 = void 0 === t4 ? Number.MAX_SAFE_INTEGER : t4, s4 = e4.bottom, r2 = void 0 === s4 ? 0 : s4;
    this.top = n2, this.bottom = r2;
  }
  return e3.prototype.includes = function() {
    for (var e4 = this, t4 = [], n2 = 0; n2 < arguments.length; n2++) t4[n2] = arguments[n2];
    return t4.every(function(t5) {
      return e4.top <= t5 && t5 <= e4.bottom;
    });
  }, e3.prototype.overlap = function(e4) {
    return this.includes(e4.top) || this.includes(e4.bottom);
  }, e3.prototype.intersect = function() {
    for (var e4 = this, t4 = [], n2 = 0; n2 < arguments.length; n2++) t4[n2] = arguments[n2];
    return t4.some(function(t5) {
      return e4.top <= t5 && t5 <= e4.bottom;
    });
  }, e3.prototype.extends = function() {
    for (var e4 = [], t4 = 0; t4 < arguments.length; t4++) e4[t4] = arguments[t4];
    this.top = Math.min.apply(Math, c([this.top], a$1(e4), false)), this.bottom = Math.max.apply(Math, c([this.bottom], a$1(e4), false));
  }, e3;
}(), Cs = {}, ys = function(u3) {
  function c$1(e3, t4) {
    var n2, r2 = this;
    return (r2 = u3.call(this, e3, n$2(n$2({}, t4), { channelType: H$1.GROUP })) || this)._leftChannels = /* @__PURE__ */ new Map(), r2._markAsReadAllLastSentAt = 0, r2._forceDisableMack = null !== (n2 = t4.forceDisableMack) && void 0 !== n2 && n2, r2._groupChannelHandlers = /* @__PURE__ */ new Map(), r2._groupChannelCache = new dn$1(r2._iid, { sdkState: t4.sdkState, cacheContext: t4.cacheContext }), r2._userInfoCache = new ia(r2._iid, { sdkState: t4.sdkState, cacheContext: t4.cacheContext }), r2._groupChannelBroadcast = new An$1({ dispatcher: t4.dispatcher, groupChannelCache: r2._groupChannelCache, userInfoCache: r2._userInfoCache, messageCache: Zs$1.of(r2._iid), unsentMessageCache: Js$1.of(r2._iid) }), setInterval(function() {
      var e4, t5, n3 = function(e5) {
        e5.invalidateTypingStatus() && (r2._dispatcher.dispatch(new Un$1({ channels: [e5], context: { source: no.EVENT_CHANNEL_TYPING_STATUS_UPDATE } })), r2._groupChannelHandlers.forEach(function(t6) {
          t6.onTypingStatusUpdated && t6.onTypingStatusUpdated(e5);
        }));
      };
      try {
        for (var s4 = o(r2._groupChannelCache.channels), a4 = s4.next(); !a4.done; a4 = s4.next()) {
          n3(a4.value);
        }
      } catch (t6) {
        e4 = { error: t6 };
      } finally {
        try {
          a4 && !a4.done && (t5 = s4.return) && t5.call(s4);
        } finally {
          if (e4) throw e4.error;
        }
      }
    }, 1e3), r2._dispatcher.on(function(e4) {
      if (e4 instanceof ze$2) r2._handleEvent(e4).catch(function(e5) {
        if (v$2(e5) && "foreground" === r2._sdkState.appState) throw e5;
      });
      else if (e4 instanceof y$1) r$1(r2, void 0, void 0, function() {
        var t6, n4;
        return s$1(this, function(s5) {
          switch (s5.label) {
            case 0:
              return t6 = e4.message, [4, this.getChannelFromCache(t6.channelUrl)];
            case 1:
              return (n4 = s5.sent()) && !n4.isFrozen ? [3, 3] : [4, this.getChannelWithoutCache(t6.channelUrl, true)];
            case 2:
              n4 = s5.sent(), s5.label = 3;
            case 3:
              return n4.isFrozen || (t6 instanceof wt ? n4._autoResendUserMessage(t6) : t6 instanceof Nt$1 && n4._autoResendFileMessage(t6)), [2];
          }
        });
      });
      else if (e4 instanceof S) r2.reduceDBSize();
      else if (e4 instanceof P) {
        var t5 = e4.appConfigsInfo, n3 = e4.configTs, s4 = t5.message_purge_offset;
        s4 && r2._messageDataRetention(s4), r2._dispatcher.dispatch(new m$1({ configTs: n3 }));
      } else e4 instanceof lt && r$1(r2, void 0, void 0, function() {
        var t6, n4, s5, r3, a4, o$1 = this;
        return s$1(this, function(u4) {
          switch (u4.label) {
            case 0:
              return t6 = e4.channelUrl, n4 = e4.channelType, s5 = e4.parentMessage, r3 = new da(this._iid, { channel_type: H$1.GROUP, channel_url: t6, parent_message_id: s5.messageId, thread_info: De$2.payloadify(s5.threadInfo) }), n4 !== H$1.GROUP ? [3, 2] : [4, this.getChannel(t6, true)];
            case 1:
              a4 = u4.sent(), kr$1(function() {
                return r$1(o$1, void 0, void 0, function() {
                  var e5, t7, n5, s6, i3;
                  return s$1(this, function(o$12) {
                    try {
                      for (e5 = o(this._groupChannelHandlers.values()), t7 = e5.next(); !t7.done; t7 = e5.next()) (n5 = t7.value).onThreadInfoUpdated && n5.onThreadInfoUpdated(a4, r3);
                    } catch (e6) {
                      s6 = { error: e6 };
                    } finally {
                      try {
                        t7 && !t7.done && (i3 = e5.return) && i3.call(e5);
                      } finally {
                        if (s6) throw s6.error;
                      }
                    }
                    return [2];
                  });
                });
              }), u4.label = 2;
            case 2:
              return [2];
          }
        });
      });
    }), Cs[e3] || (Cs[e3] = r2), r2;
  }
  return t$2(c$1, u3), Object.defineProperty(c$1.prototype, "_messageCache", { get: function() {
    return Zs$1.of(this._iid);
  }, enumerable: false, configurable: true }), Object.defineProperty(c$1.prototype, "_unsentMessageCache", { get: function() {
    return Js$1.of(this._iid);
  }, enumerable: false, configurable: true }), c$1.of = function(e3) {
    return Cs[e3] || (Cs[e3] = new c$1(e3, uo.of(e3))), Cs[e3];
  }, c$1.clear = function(e3) {
    Cs[e3] && delete Cs[e3];
  }, Object.defineProperty(c$1.prototype, "handlers", { get: function() {
    return c([], a$1(this._groupChannelHandlers.values()), false);
  }, enumerable: false, configurable: true }), c$1.prototype.buildGroupChannelFromSerializedData = function(e3) {
    var t4 = as$2(e3);
    return new fr(this._iid, fr.payloadify(t4));
  }, c$1.prototype.buildGroupChannelListQueryFromSerializedData = function(e3) {
    var t4 = as$2(e3);
    return new fs(this._iid, t4);
  }, c$1.prototype.buildMemberFromSerializedData = function(e3) {
    var t4 = as$2(e3);
    return new un$1(this._iid, un$1.payloadify(t4));
  }, c$1.prototype.getChannelFromCache = function(e3) {
    var t4;
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._groupChannelCache.get(e3)];
          case 1:
            return [2, null !== (t4 = n2.sent()) && void 0 !== t4 ? t4 : null];
        }
      });
    });
  }, c$1.prototype.getChannelsFromCache = function(e3, t4, n2, s4, r2) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return [4, this._groupChannelCache.fetch({ token: e3, filter: t4, order: n2, limit: s4, borderlineChannelUrl: r2 })];
          case 1:
            return [2, a4.sent()];
        }
      });
    });
  }, c$1.prototype.upsertChannelsToCache = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._groupChannelCache.upsert(e3)];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, c$1.prototype.removeChannelsFromCache = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._groupChannelCache.remove(e3)];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, c$1.prototype.clearChannelsFromCache = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return [4, this._groupChannelCache.clear()];
          case 1:
            return e3.sent(), [2];
        }
      });
    });
  }, c$1.prototype.reduceDBSize = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2, a4, i3, o2, u4, c3, l2, h4, d4, _2, p2;
      return s$1(this, function(f2) {
        switch (f2.label) {
          case 0:
            return e3 = Zs$1.of(this._iid), t4 = uo.of(this._iid).cacheContext, n2 = t4.localCacheConfig, s4 = t4.nestdb, t4.localCacheEnabled && s4 && s4.state == Os$1.OPENED ? (r2 = 1024 * n2.maxSize * 1024, [4, s4.estimateUsage()]) : [2];
          case 1:
            if ((a4 = f2.sent()) < r2) return [2];
            i3 = [], o2 = this._groupChannelCache.channels, u4 = {}, d4 = 0, f2.label = 2;
          case 2:
            return d4 < o2.length ? [4, this.getMessagesFromCache(o2[d4].url, 0, "prev", new qs$1())] : [3, 5];
          case 3:
            c3 = f2.sent(), u4[o2[d4].url] = JSON.stringify(c3).length, l2 = new F({ channel: o2[d4], cachedMessageCount: c3.length }), i3.push(l2), f2.label = 4;
          case 4:
            return d4++, [3, 2];
          case 5:
            h4 = i3.sort(n2.clearOrderComparator), d4 = 0, f2.label = 6;
          case 6:
            return d4 < h4.length ? [4, e3.removeMessagesOfChannel(h4[d4].channel.url)] : [3, 10];
          case 7:
            return f2.sent(), [4, e3._getGroupChannelPreferenceSize(h4[d4].channel.url)];
          case 8:
            if (_2 = f2.sent(), p2 = u4[h4[d4].channel.url] + _2, (a4 -= p2) < r2) return [3, 10];
            f2.label = 9;
          case 9:
            return d4++, [3, 6];
          case 10:
            return [4, ia.of(this._iid).clear()];
          case 11:
            return f2.sent(), [2];
        }
      });
    });
  }, c$1.prototype._messageDataRetention = function(e3) {
    var t4;
    return r$1(this, void 0, void 0, function() {
      var n2, s4, r2, a4, i3, o$1, u4, c3, l2, h4, d4 = this;
      return s$1(this, function(_2) {
        switch (_2.label) {
          case 0:
            n2 = [], s4 = Zs$1.of(this._iid), r2 = function(r3) {
              var i4, o$12;
              return s$1(this, function(u5) {
                switch (u5.label) {
                  case 0:
                    return i4 = r3.customType, o$12 = null !== (t4 = e3[i4]) && void 0 !== t4 ? t4 : e3.global, [4, s4.removeUnderOffset(r3.url, o$12, true)];
                  case 1:
                    return u5.sent(), r3.lastMessage && r3.lastMessage.createdAt <= o$12 && (r3.lastMessage = null, n2.push(r3), kr$1(function() {
                      return r$1(d4, void 0, void 0, function() {
                        var e4, t5, n3, s5, a5;
                        return s$1(this, function(i5) {
                          try {
                            for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onChannelChanged && n3.onChannelChanged(r3);
                          } catch (e5) {
                            s5 = { error: e5 };
                          } finally {
                            try {
                              t5 && !t5.done && (a5 = e4.return) && a5.call(e4);
                            } finally {
                              if (s5) throw s5.error;
                            }
                          }
                          return [2];
                        });
                      });
                    })), a4._dispatcher.dispatch(new go({ channelUrl: r3.url, messageDeletionTimestamp: o$12, source: no.EVENT_MESSAGE_OFFSET_UPDATED })), [2];
                }
              });
            }, a4 = this, _2.label = 1;
          case 1:
            _2.trys.push([1, 6, 7, 8]), i3 = o(this._groupChannelCache.channels), o$1 = i3.next(), _2.label = 2;
          case 2:
            return o$1.done ? [3, 5] : (u4 = o$1.value, [5, r2(u4)]);
          case 3:
            _2.sent(), _2.label = 4;
          case 4:
            return o$1 = i3.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return c3 = _2.sent(), l2 = { error: c3 }, [3, 8];
          case 7:
            try {
              o$1 && !o$1.done && (h4 = i3.return) && h4.call(i3);
            } finally {
              if (l2) throw l2.error;
            }
            return [7];
          case 8:
            return n2.length > 0 && this._dispatcher.dispatch(new Un$1({ channels: n2, context: { source: no.EVENT_CHANNEL_UPDATED } })), [2];
        }
      });
    });
  }, c$1.prototype._isSuperGroupMackDisabled = function(e3) {
    var t4 = uo.of(this._iid).appInfo;
    return !(!e3.isSuper || e3.isBroadcast || !(null == t4 ? void 0 : t4.disableSuperGroupMack));
  }, c$1.prototype._getCachedUserInfo = function(e3) {
    return this._userInfoCache.getUserInfoFromCache(e3);
  }, c$1.prototype._upsertCachedUserInfo = function(e3, t4) {
    uo.of(this._iid).useMemberInfoInMessage && this._userInfoCache.upsert(e3, t4);
  }, c$1.prototype._handleEvent = function(e3) {
    var t4, n2;
    return r$1(this, void 0, void 0, function() {
      var s4, r2, u4, c3, l2, h4, d4, _2, m4, g2, E3, C2, M$12, N2, U$12, S4, T$12, A2, I$12, w3, L$22, D$12, x3, R3, F2, P2, G3, V$1, J2, Z2, $2, ee2, te2, ne2, se2, re2, ae2, ie2, oe2, ue2, ce2, le2, he2, de2, _e2, pe2, fe2, ve2, me2, ge2, Ee2, Ce2, ye2, Me2, be2, Ne2, Ue2, Se2, Te2, Ae2, Ie2, we2, Le2, De2, xe2, Je2, Xe2, Ze2, $e2, et2, tt2, nt2, st2, rt2, at2, it2, ot2, ut2, ct2, lt2, ht2, dt2, _t$12, pt2, ft2, vt2, mt2, gt2, Et2, Ct2, yt$12, Mt2, bt2, Nt2, Ut2, St2, Tt2, At2, It2, wt2, Lt2, Dt2, xt2, Rt2, Ft2, Ht2, Gt2, Bt2, $t2, en2, tn2, nn2, sn2, rn2, an2, on2, un2, cn2, ln2, hn2, dn2, _n2, pn2, fn2, vn2, mn2, gn2, En2, Cn2, yn2, Mn2, bn2, Nn2, Tn2, An2, In2, wn2, Ln2, Dn2, xn2, Rn2, Fn2, kn2, Pn2, On2, Hn2, Gn2, Vn2, Bn2, qn2, zn2, Wn2, jn2, Qn2, Yn2, Kn2, Jn2, Xn2, $n2, ts2, ns2, rs2, is2 = this;
      return s$1(this, function(os2) {
        switch (os2.label) {
          case 0:
            switch (os2.trys.push([0, 88, , 89]), e3.code) {
              case "MESG":
              case "FILE":
              case "ADMM":
              case "BRDM":
                return [3, 1];
              case "MEDI":
              case "FEDI":
              case "AEDI":
                return [3, 4];
              case "DELM":
                return [3, 7];
              case "READ":
                return [3, 10];
              case "DLVR":
                return [3, 13];
              case "MRCT":
                return [3, 15];
              case "MTHD":
                return [3, 27];
              case "MCNT":
                return [3, 31];
              case "PEDI":
                return [3, 40];
              case "VOTE":
                return [3, 43];
              case "SYEV":
                return [3, 46];
              case "USEV":
                return [3, 86];
            }
            return [3, 87];
          case 1:
            return _2 = null, "MESG" === e3.code ? _2 = e3.as(Ir) : "FILE" === e3.code ? _2 = e3.as(Pt$1) : "ADMM" !== e3.code && "BRDM" != e3.code || (_2 = e3.as(L)), _2 ? (s4 = _2.message, r2 = _2.isMentioned, u4 = _2.forceUpdateLastMessage, s4.channelType !== H$1.GROUP ? [3, 3] : ($2 = this._groupChannelCache.isCachedInMemory(s4.channelUrl), F2 = s4 instanceof _t && s4.sender.userId === this._sdkState.userId, [4, this.getChannel(s4.channelUrl, true)])) : [3, 3];
          case 2:
            if (c3 = os2.sent(), E3 = uo.of(this._iid).useMemberInfoInMessage, this._forceDisableMack || this._isSuperGroupMackDisabled(c3) || s4 instanceof It$1 || F2 || Dr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4;
                return s$1(this, function(t5) {
                  switch (t5.label) {
                    case 0:
                      return e4 = new ps(s4), [4, this._requestQueue.send(e4)];
                    case 1:
                      return t5.sent(), [2];
                  }
                });
              });
            }), s4 instanceof _t) {
              l2 = s4.sender, c3.isSuper && this._upsertCachedUserInfo(l2, s4.createdAt);
              try {
                for (h4 = o(c3.members), d4 = h4.next(); !d4.done; d4 = h4.next()) if ((Ht2 = d4.value).userId === s4.sender.userId) {
                  E3 && (Ht2.nickname = s4.sender.nickname, Ht2.plainProfileUrl = s4.sender.plainProfileUrl, Ht2.metaData = s4.sender.metaData, Ht2.isBlockedByMe = s4.sender.isBlockedByMe);
                  break;
                }
              } catch (e4) {
                On2 = { error: e4 };
              } finally {
                try {
                  d4 && !d4.done && (Hn2 = h4.return) && Hn2.call(h4);
                } finally {
                  if (On2) throw On2.error;
                }
              }
              E3 && r2 && (null === (t4 = s4.mentionedUsers) || void 0 === t4 || t4.forEach(function(e4) {
                var t5, n3;
                try {
                  for (var s5 = o(c3.members), r3 = s5.next(); !r3.done; r3 = s5.next()) {
                    var a4 = r3.value;
                    if (e4.userId === a4.userId) {
                      a4.nickname = e4.nickname, a4.plainProfileUrl = e4.plainProfileUrl, a4.metaData = e4.metaData;
                      break;
                    }
                  }
                } catch (e5) {
                  t5 = { error: e5 };
                } finally {
                  try {
                    r3 && !r3.done && (n3 = s5.return) && n3.call(s5);
                  } finally {
                    if (t5) throw t5.error;
                  }
                }
              })), F2 && (T$12 = this._sessionManager.currentUser) && (T$12.nickname = s4.sender.nickname, T$12.plainProfileUrl = s4.sender.plainProfileUrl, T$12.metaData = s4.sender.metaData);
            }
            s4.silent && !F2 || (c3.isEphemeral || $2) && (c3._updateLastMessage(s4), F2 || c3._shouldUpdateUnreadCountWith(s4) && c3._updateUnreadCount(c3.unreadMessageCount + 1, c3.unreadMentionCount + (r2 ? 1 : 0))), u4 && c3._updateLastMessage(s4), this._dispatcher.dispatch(new Un$1({ channels: [c3], context: { source: no.EVENT_MESSAGE_RECEIVED } })), s4.silent && !F2 || kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onChannelChanged && n3.onChannelChanged(c3);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), this._dispatcher.dispatch(new po({ messages: [s4], source: no.EVENT_MESSAGE_RECEIVED })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, a4, i3;
                return s$1(this, function(o$1) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onMessageReceived && n3.onMessageReceived(c3, s4), r2 && n3.onMentionReceived && n3.onMentionReceived(c3, s4);
                  } catch (e5) {
                    a4 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (i3 = e4.return) && i3.call(e4);
                    } finally {
                      if (a4) throw a4.error;
                    }
                  }
                  return [2];
                });
              });
            }), os2.label = 3;
          case 3:
            return [3, 87];
          case 4:
            return _2 = null, "MEDI" === e3.code ? _2 = e3.as(Tr) : "FEDI" === e3.code ? _2 = e3.as(Mr) : "AEDI" === e3.code && (_2 = e3.as(I)), _2 ? (m4 = _2.message, g2 = _2.mentionCountChange, E3 = uo.of(this._iid).useMemberInfoInMessage, m4.threadInfo && (m4.threadInfo.unreadReplyCount = void 0), m4.channelType !== H$1.GROUP ? [3, 6] : ($2 = this._groupChannelCache.isCachedInMemory(m4.channelUrl), [4, this.getChannel(m4.channelUrl, true)])) : [3, 6];
          case 5:
            if (C2 = os2.sent(), F2 = false, m4 instanceof _t) {
              F2 = m4.sender.userId === this._sdkState.userId, C2.isSuper && this._upsertCachedUserInfo(m4.sender, m4.updatedAt);
              try {
                for (M$12 = o(C2.members), N2 = M$12.next(); !N2.done; N2 = M$12.next()) if ((Ht2 = N2.value).userId === m4.sender.userId) {
                  E3 && (Ht2.nickname = m4.sender.nickname, Ht2.plainProfileUrl = m4.sender.plainProfileUrl, Ht2.metaData = m4.sender.metaData, Ht2.isBlockedByMe = m4.sender.isBlockedByMe);
                  break;
                }
              } catch (e4) {
                Gn2 = { error: e4 };
              } finally {
                try {
                  N2 && !N2.done && (Vn2 = M$12.return) && Vn2.call(M$12);
                } finally {
                  if (Gn2) throw Gn2.error;
                }
              }
            }
            U$12 = false, F2 ? (S4 = m4.sender, (T$12 = this._sessionManager.currentUser) && (T$12.nickname = S4.nickname, T$12.plainProfileUrl = S4.plainProfileUrl, T$12.metaData = S4.metaData)) : C2.isReadMessage(m4) || 0 !== g2 && !m4.silent && $2 && (C2._updateUnreadCount(C2.unreadMessageCount, C2.unreadMentionCount + g2), U$12 = true), C2._updateLastMessage(m4) ? U$12 = true : (null === (n2 = C2.lastMessage) || void 0 === n2 ? void 0 : n2.isIdentical(m4)) && ($2 ? C2._updateLastMessage(m4) && (U$12 = true) : U$12 = true), A2 = false, C2.lastPinnedMessage && C2.lastPinnedMessage.messageId === m4.messageId && (C2.lastPinnedMessage = m4, U$12 = true, A2 = true), U$12 && (this._dispatcher.dispatch(new Un$1({ channels: [C2], context: { source: A2 ? no.EVENT_PINNED_MESSAGE_UPDATED : no.EVENT_MESSAGE_UPDATED } })), m4.silent && !F2 || kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onChannelChanged && n3.onChannelChanged(C2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), A2 && kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onPinnedMessageUpdated && n3.onPinnedMessageUpdated(C2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            })), this._dispatcher.dispatch(new po({ messages: [m4], source: no.EVENT_MESSAGE_UPDATED })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onMessageUpdated && n3.onMessageUpdated(C2, m4), g2 > 0 && n3.onMentionReceived && n3.onMentionReceived(C2, m4);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), os2.label = 6;
          case 6:
            return [3, 87];
          case 7:
            return I$12 = e3.as(at$1), Ie2 = I$12.channelUrl, we2 = I$12.channelType, w3 = I$12.messageId, L$22 = I$12.silent, D$12 = I$12.messageCreatedAt, x3 = I$12.senderId, we2 !== H$1.GROUP ? [3, 9] : [4, this.getChannel(Ie2, true)];
          case 8:
            R3 = os2.sent(), F2 = x3 === this._sdkState.userId, L$22 || F2 || D$12 > 0 && R3.myLastRead < D$12 && R3.unreadMessageCount > 0 && R3._updateUnreadCount(R3.unreadMessageCount - 1, 0), this._dispatcher.dispatch(new Eo({ messageIds: [w3], source: no.EVENT_MESSAGE_DELETED })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onMessageDeleted && n3.onMessageDeleted(R3, w3);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), os2.label = 9;
          case 9:
            return [3, 87];
          case 10:
            return (P2 = e3.as(Ze$1).readStatus).channelType !== H$1.GROUP ? [3, 12] : ($2 = this._groupChannelCache.isCachedInMemory(P2.channelUrl), [4, this.getChannel(P2.channelUrl, true)]);
          case 11:
            G3 = os2.sent(), $2 && G3._updateUnreadMemberState(P2.reader.userId, P2.readAt), P2.reader.userId === this._sdkState.userId ? $2 ? (G3.unreadMessageCount > 0 || G3.unreadMentionCount > 0) && (G3._updateUnreadCount(0, 0), this._dispatcher.dispatch(new Un$1({ channels: [G3], context: { source: no.EVENT_CHANNEL_READ } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onChannelChanged && n3.onChannelChanged(G3);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            })) : 0 !== G3.unreadMessageCount && 0 !== G3.unreadMentionCount || (this._dispatcher.dispatch(new Un$1({ channels: [G3], context: { source: no.EVENT_CHANNEL_READ } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onChannelChanged && n3.onChannelChanged(G3);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            })) : (this._dispatcher.dispatch(new Un$1({ channels: [G3], context: { source: no.EVENT_CHANNEL_READ } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onUnreadMemberStatusUpdated && n3.onUnreadMemberStatusUpdated(G3);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            })), os2.label = 12;
          case 12:
            return [3, 87];
          case 13:
            return V$1 = e3.as(gs), Ie2 = V$1.channelUrl, J2 = V$1.deliveredStateUpdate, Z2 = void 0 === J2 ? {} : J2, $2 = this._groupChannelCache.isCachedInMemory(Ie2), [4, this.getChannel(Ie2, true)];
          case 14:
            return ee2 = os2.sent(), $2 && Object.keys(Z2).forEach(function(e4) {
              ee2._updateUndeliveredMemberState(e4, Z2[e4]);
            }), Object.keys(Z2).some(function(e4) {
              return e4 !== is2._sdkState.userId;
            }) && (this._dispatcher.dispatch(new Un$1({ channels: [ee2], context: { source: no.EVENT_CHANNEL_DELIVERED } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onUndeliveredMemberStatusUpdated && n3.onUndeliveredMemberStatusUpdated(ee2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            })), [3, 87];
          case 15:
            return te2 = e3.as(U), Ie2 = te2.channelUrl, we2 = te2.channelType, ne2 = te2.event, we2 !== H$1.GROUP ? [3, 26] : [4, this.getChannel(Ie2, true)];
          case 16:
            return se2 = os2.sent(), [4, this.getMessageFromCache(ne2.messageId)];
          case 17:
            if (de2 = os2.sent(), !se2.isSuper) return [3, 25];
            os2.label = 18;
          case 18:
            os2.trys.push([18, 23, 24, 25]), re2 = o(Object.keys(ne2._sampledUserInfoList)), ae2 = re2.next(), os2.label = 19;
          case 19:
            return ae2.done ? [3, 22] : (ie2 = ae2.value, [4, this._userInfoCache.get(ie2)]);
          case 20:
            (oe2 = os2.sent()) ? (oe2.plainProfileUrl = ne2._sampledUserInfoList[ie2].profile_url, oe2.nickname = ne2._sampledUserInfoList[ie2].nickname, this._upsertCachedUserInfo(oe2, ne2.updatedAt)) : (ue2 = new ls$2(this._iid, { user_id: ie2, nickname: ne2._sampledUserInfoList[ie2].nickname, profile_url: ne2._sampledUserInfoList[ie2].profile_url, require_auth_for_profile_image: ne2._sampledUserInfoList[ie2].require_auth_for_profile_image }), this._upsertCachedUserInfo(ue2, ne2.updatedAt)), os2.label = 21;
          case 21:
            return ae2 = re2.next(), [3, 19];
          case 22:
            return [3, 25];
          case 23:
            return ce2 = os2.sent(), Bn2 = { error: ce2 }, [3, 25];
          case 24:
            try {
              ae2 && !ae2.done && (qn2 = re2.return) && qn2.call(re2);
            } finally {
              if (Bn2) throw Bn2.error;
            }
            return [7];
          case 25:
            de2 ? de2 instanceof yt && (de2.applyReactionEvent(ne2), this._dispatcher.dispatch(new po({ messages: [de2], source: no.EVENT_MESSAGE_REACTION_UPDATED }))) : this._dispatcher.dispatch(new vo({ event: ne2, source: no.EVENT_MESSAGE_REACTION_UPDATED })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onReactionUpdated && n3.onReactionUpdated(se2, ne2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), os2.label = 26;
          case 26:
            return [3, 87];
          case 27:
            return (le2 = e3.as(M).event).channelType !== H$1.GROUP ? [3, 30] : [4, this.getChannel(le2.channelUrl, true)];
          case 28:
            return he2 = os2.sent(), [4, this.getMessageFromCache(le2.targetMessageId)];
          case 29:
            if ((de2 = os2.sent()) ? de2 instanceof yt && (de2.applyThreadInfoUpdateEvent(le2), this._dispatcher.dispatch(new po({ messages: [de2], source: no.EVENT_MESSAGE_THREADINFO_UPDATED }))) : this._dispatcher.dispatch(new bo({ event: le2, source: no.EVENT_MESSAGE_THREADINFO_UPDATED })), he2.isSuper) try {
              for (_e2 = o(le2.threadInfo.mostRepliedUsers), pe2 = _e2.next(); !pe2.done; pe2 = _e2.next()) wt2 = pe2.value, this._upsertCachedUserInfo(wt2, le2.threadInfo.updatedAt);
            } catch (e4) {
              zn2 = { error: e4 };
            } finally {
              try {
                pe2 && !pe2.done && (Wn2 = _e2.return) && Wn2.call(_e2);
              } finally {
                if (zn2) throw zn2.error;
              }
            }
            kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onThreadInfoUpdated && n3.onThreadInfoUpdated(he2, le2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), os2.label = 30;
          case 30:
            return [3, 87];
          case 31:
            fe2 = e3.as(y).groupChannelMemberCounts, ve2 = [], os2.label = 32;
          case 32:
            os2.trys.push([32, 37, 38, 39]), me2 = o(fe2), ge2 = me2.next(), os2.label = 33;
          case 33:
            return ge2.done ? [3, 36] : (Ee2 = ge2.value, Ie2 = Ee2.channelUrl, Nt2 = Ee2.memberCount, Ut2 = Ee2.joinedMemberCount, Ce2 = Ee2.updatedAt, [4, this.getChannelFromCache(Ie2)]);
          case 34:
            (ye2 = os2.sent()) && ye2._setLatestMemberCount(Nt2, Ut2, Ce2) && ve2.push(ye2), os2.label = 35;
          case 35:
            return ge2 = me2.next(), [3, 33];
          case 36:
            return [3, 39];
          case 37:
            return Me2 = os2.sent(), jn2 = { error: Me2 }, [3, 39];
          case 38:
            try {
              ge2 && !ge2.done && (Qn2 = me2.return) && Qn2.call(me2);
            } finally {
              if (jn2) throw jn2.error;
            }
            return [7];
          case 39:
            return ve2.length > 0 && (this._dispatcher.dispatch(new Un$1({ channels: ve2, context: { source: no.EVENT_CHANNEL_MEMBER_COUNT_UPDATED } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onChannelMemberCountChanged && n3.onChannelMemberCountChanged(ve2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            })), [3, 87];
          case 40:
            return be2 = e3.as(D), Ne2 = be2.event, Ue2 = be2.status, Ie2 = be2.channelUrl, we2 = be2.channelType, Ie2 && we2 === H$1.GROUP ? [4, this.getChannel(Ie2, true)] : [3, 42];
          case 41:
            Se2 = os2.sent(), this._dispatcher.dispatch(new wo({ event: Ne2, source: no.EVENT_POLL_UPDATED })), kr$1(Ue2 === To ? function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onPollDeleted && n3.onPollDeleted(Se2, Ne2.pollId);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            } : function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onPollUpdated && n3.onPollUpdated(Se2, Ne2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), os2.label = 42;
          case 42:
            return [3, 87];
          case 43:
            return Te2 = e3.as(Hr), Ae2 = Te2.event, Ie2 = Te2.channelUrl, we2 = Te2.channelType, Ie2 && we2 === H$1.GROUP ? [4, this.getChannel(Ie2, true)] : [3, 45];
          case 44:
            Le2 = os2.sent(), this._dispatcher.dispatch(new So({ event: Ae2, source: no.EVENT_POLL_VOTED })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onPollVoted && n3.onPollVoted(Le2, Ae2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), os2.label = 45;
          case 45:
            return [3, 87];
          case 46:
            if (!(De2 = e3.as(v).event).isGroupChannelEvent) return [3, 85];
            switch (De2.category) {
              case f.CHANNEL_JOIN:
                return [3, 47];
              case f.CHANNEL_LEAVE:
                return [3, 49];
              case f.CHANNEL_OPERATOR_UPDATE:
                return [3, 53];
              case f.CHANNEL_INVITE:
                return [3, 55];
              case f.CHANNEL_DECLINE_INVITE:
                return [3, 57];
              case f.TYPING_START:
              case f.TYPING_END:
                return [3, 59];
              case f.USER_CHANNEL_MUTE:
              case f.USER_CHANNEL_UNMUTE:
                return [3, 61];
              case f.USER_CHANNEL_BAN:
                return [3, 63];
              case f.USER_CHANNEL_UNBAN:
                return [3, 67];
              case f.CHANNEL_FREEZE:
              case f.CHANNEL_UNFREEZE:
                return [3, 69];
              case f.CHANNEL_HIDE:
                return [3, 71];
              case f.CHANNEL_UNHIDE:
                return [3, 73];
              case f.CHANNEL_DELETED:
                return [3, 75];
              case f.CHANNEL_PROP_CHANGED:
                return [3, 77];
              case f.CHANNEL_META_DATA_CHANGED:
                return [3, 79];
              case f.CHANNEL_META_COUNTERS_CHANGED:
                return [3, 81];
              case f.PINNED_MESSAGE_CHANGED:
                return [3, 83];
            }
            return [3, 85];
          case 47:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 48:
            if (xe2 = os2.sent(), Je2 = e3.as(Zn), Xe2 = Je2.memberCount, Ze2 = Je2.joinedMemberCount, $e2 = Je2.members, et2 = false, $e2.forEach(function(e4) {
              xe2.isExclusive || xe2.isSuper || xe2.isBroadcast ? et2 = et2 || xe2._setLatestMemberCount(Xe2, Ze2, De2.ts) : (e4.state = Zt$1.JOINED, xe2.addMember(e4, De2.ts), is2._updateJoinedMemberCount(xe2)), e4.userId === is2._sdkState.userId && (xe2.myMemberState = Zt$1.JOINED);
            }), xe2.isSuper) try {
              for (tt2 = o($e2), nt2 = tt2.next(); !nt2.done; nt2 = tt2.next()) Ht2 = nt2.value, this._upsertCachedUserInfo(Ht2, De2.ts);
            } catch (e4) {
              Yn2 = { error: e4 };
            } finally {
              try {
                nt2 && !nt2.done && (Kn2 = tt2.return) && Kn2.call(tt2);
              } finally {
                if (Yn2) throw Yn2.error;
              }
            }
            return this._dispatcher.dispatch(new Un$1({ channels: [xe2], context: { source: no.EVENT_CHANNEL_JOINED, users: $e2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    var t5, n3;
                    try {
                      for (var s5 = o($e2), r3 = s5.next(); !r3.done; r3 = s5.next()) {
                        var a4 = r3.value;
                        e5.onUserJoined && e5.onUserJoined(xe2, a4);
                      }
                    } catch (e6) {
                      t5 = { error: e6 };
                    } finally {
                      try {
                        r3 && !r3.done && (n3 = s5.return) && n3.call(s5);
                      } finally {
                        if (t5) throw t5.error;
                      }
                    }
                    xe2.isBroadcast && et2 && e5.onChannelMemberCountChanged && e5.onChannelMemberCountChanged([xe2]);
                  }), [2];
                });
              });
            }), [3, 85];
          case 49:
            return (Gt2 = this._leftChannels.get(De2.channelUrl)) ? (rt2 = Gt2.channel, [3, 52]) : [3, 50];
          case 50:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 51:
            rt2 = os2.sent(), os2.label = 52;
          case 52:
            return st2 = rt2, at2 = e3.as(es), Nt2 = at2.memberCount, Ut2 = at2.joinedMemberCount, it2 = at2.member, ot2 = false, ut2 = uo.of(this._iid).appInfo, st2.isExclusive || st2.isSuper || st2.isBroadcast ? ot2 = st2._setLatestMemberCount(Nt2, Ut2, De2.ts) : ((null == ut2 ? void 0 : ut2.enabledChannelMemberShipHistory) ? ((ct2 = st2.members.find(function(e4) {
              return e4.userId === it2.userId;
            })) && (ct2.state = Zt$1.LEFT), st2.memberCount = Nt2) : st2.removeMember(it2), this._updateJoinedMemberCount(st2)), it2.userId === this._sdkState.userId ? (st2.myMemberState = Zt$1.NONE, st2.invitedAt = 0, st2.joinedAt = 0, st2._updateUnreadCount(0, 0), st2.isPublic ? this._dispatcher.dispatch(new Un$1({ channels: [st2], context: { source: no.EVENT_CHANNEL_LEFT, user: it2 } })) : (this._markAsLeave(st2), this._dispatcher.dispatch(new Sn$1({ channelUrls: [st2.url], context: { source: no.EVENT_CHANNEL_LEFT, user: it2 } })))) : this._dispatcher.dispatch(new Un$1({ channels: [st2], context: { source: no.EVENT_CHANNEL_LEFT, user: it2 } })), st2.isSuper && this._upsertCachedUserInfo(it2, De2.ts), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onUserLeft && e5.onUserLeft(st2, it2), st2.isBroadcast && ot2 && e5.onChannelMemberCountChanged && e5.onChannelMemberCountChanged([st2]);
                  }), [2];
                });
              });
            }), [3, 85];
          case 53:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 54:
            lt2 = os2.sent(), ht2 = e3.as(T).operators, dt2 = ht2.map(function(e4) {
              return e4.userId;
            });
            try {
              for (_t$12 = o(lt2.members), pt2 = _t$12.next(); !pt2.done; pt2 = _t$12.next()) (Ht2 = pt2.value).role = dt2.includes(Ht2.userId) ? V.OPERATOR : V.NONE;
            } catch (e4) {
              Jn2 = { error: e4 };
            } finally {
              try {
                pt2 && !pt2.done && (Xn2 = _t$12.return) && Xn2.call(_t$12);
              } finally {
                if (Jn2) throw Jn2.error;
              }
            }
            return lt2.myRole = dt2.includes(this._sdkState.userId) ? V.OPERATOR : V.NONE, this._dispatcher.dispatch(new Un$1({ channels: [lt2], context: { source: no.EVENT_CHANNEL_OPERATOR_UPDATED, operators: ht2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onOperatorUpdated && e5.onOperatorUpdated(lt2, ht2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 55:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 56:
            ft2 = os2.sent(), vt2 = e3.as(ss), Nt2 = vt2.memberCount, Ut2 = vt2.joinedMemberCount, mt2 = vt2.inviter, (gt2 = vt2.invitees).forEach(function(e4) {
              return e4.state = Zt$1.INVITED;
            });
            try {
              for (Et2 = o(gt2), Ct2 = Et2.next(); !Ct2.done; Ct2 = Et2.next()) yt$12 = Ct2.value, ft2.isExclusive || ft2.isSuper || ft2.isBroadcast ? (ft2.isSuper && this._userInfoCache.upsert(yt$12, De2.ts), ft2._setLatestMemberCount(Nt2, Ut2, De2.ts)) : ft2.addMember(yt$12, De2.ts), this._sdkState.userId === yt$12.userId && (ft2.hiddenState = ir.UNHIDDEN, ft2.myMemberState !== Zt$1.JOINED && (ft2.myMemberState = Zt$1.INVITED), ft2.invitedAt = De2.ts);
            } catch (e4) {
              $n2 = { error: e4 };
            } finally {
              try {
                Ct2 && !Ct2.done && (ts2 = Et2.return) && ts2.call(Et2);
              } finally {
                if ($n2) throw $n2.error;
              }
            }
            return this._dispatcher.dispatch(new Un$1({ channels: [ft2], context: { source: no.EVENT_CHANNEL_INVITED, inviter: mt2, invitees: gt2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onUserReceivedInvitation && e5.onUserReceivedInvitation(ft2, mt2, gt2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 57:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 58:
            return Mt2 = os2.sent(), bt2 = e3.as(as), Nt2 = bt2.memberCount, Ut2 = bt2.joinedMemberCount, St2 = bt2.inviter, Tt2 = bt2.invitee, Mt2.isExclusive || Mt2.isSuper || Mt2.isBroadcast ? (Mt2.isSuper && this._userInfoCache.upsert(Tt2, De2.ts), Mt2._setLatestMemberCount(Nt2, Ut2, De2.ts)) : Mt2.removeMember(Tt2), this._sdkState.userId === Tt2.userId ? (Mt2.invitedAt = 0, Mt2.myMemberState = Zt$1.NONE, Mt2.isPublic ? this._dispatcher.dispatch(new Un$1({ channels: [Mt2], context: { source: no.EVENT_CHANNEL_DECLINED_INVITE, inviter: St2, invitee: Tt2 } })) : this._dispatcher.dispatch(new Sn$1({ channelUrls: [Mt2.url], context: { source: no.EVENT_CHANNEL_DECLINED_INVITE, inviter: St2, invitee: Tt2 } }))) : this._dispatcher.dispatch(new Un$1({ channels: [Mt2], context: { source: no.EVENT_CHANNEL_DECLINED_INVITE, inviter: St2, invitee: Tt2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onUserDeclinedInvitation && e5.onUserDeclinedInvitation(Mt2, St2, Tt2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 59:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 60:
            return At2 = os2.sent(), It2 = De2.category === f.TYPING_START, wt2 = e3.as(It2 ? hs : _s).user, At2._updateTypingStatus(wt2, It2 ? De2.ts : 0), this._dispatcher.dispatch(new Un$1({ channels: [At2], context: { source: no.EVENT_CHANNEL_TYPING_STATUS_UPDATE } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onTypingStatusUpdated && e5.onTypingStatusUpdated(At2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 61:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 62:
            Lt2 = os2.sent(), Dt2 = De2.category === f.USER_CHANNEL_MUTE, (xt2 = e3.as(Dt2 ? ar$1 : ur$1).user).userId === this._sdkState.userId && (Lt2.myMutedState = Dt2 ? z.MUTED : z.UNMUTED, Lt2._myMutedRemainingTime = xt2.restrictionInfo.remainingDuration);
            try {
              for (Rt2 = o(Lt2.members), Ft2 = Rt2.next(); !Ft2.done; Ft2 = Rt2.next()) if ((Ht2 = Ft2.value).userId === xt2.userId) {
                Ht2.isMuted = Dt2;
                break;
              }
            } catch (e4) {
              ns2 = { error: e4 };
            } finally {
              try {
                Ft2 && !Ft2.done && (rs2 = Rt2.return) && rs2.call(Rt2);
              } finally {
                if (ns2) throw ns2.error;
              }
            }
            return Lt2.isSuper && this._userInfoCache.upsert(xt2, De2.ts), this._dispatcher.dispatch(new Un$1({ channels: [Lt2], context: { source: Dt2 ? no.EVENT_CHANNEL_MUTED : no.EVENT_CHANNEL_UNMUTED, user: xt2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    Dt2 ? e5.onUserMuted && e5.onUserMuted(Lt2, xt2) : e5.onUserUnmuted && e5.onUserUnmuted(Lt2, xt2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 63:
            return (Gt2 = this._leftChannels.get(De2.channelUrl)) ? ($t2 = Gt2.channel, [3, 66]) : [3, 64];
          case 64:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 65:
            $t2 = os2.sent(), os2.label = 66;
          case 66:
            return Bt2 = $t2, this._markAsLeave(Bt2), en2 = e3.as(lr$1).user, sn2 = en2.userId === this._sdkState.userId, Bt2.isSuper && this._userInfoCache.upsert(en2, De2.ts), sn2 && this._dispatcher.dispatch(new Sn$1({ channelUrls: [Bt2.url], context: { source: no.EVENT_CHANNEL_BANNED, user: en2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onUserBanned && e5.onUserBanned(Bt2, en2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 67:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 68:
            return tn2 = os2.sent(), nn2 = e3.as(hr$1).user, sn2 = nn2.userId === this._sdkState.userId, tn2.isSuper && this._userInfoCache.upsert(nn2, De2.ts), sn2 && this._dispatcher.dispatch(new Sn$1({ channelUrls: [tn2.url], context: { source: no.EVENT_CHANNEL_UNBANNED, user: nn2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onUserUnbanned && e5.onUserUnbanned(tn2, nn2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 69:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 70:
            return rn2 = os2.sent(), an2 = e3.as(pr$1).freeze, rn2.isFrozen = an2, this._dispatcher.dispatch(new Un$1({ channels: [rn2], context: { source: an2 ? no.EVENT_CHANNEL_FROZEN : no.EVENT_CHANNEL_UNFROZEN } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    an2 ? e5.onChannelFrozen && e5.onChannelFrozen(rn2) : e5.onChannelUnfrozen && e5.onChannelUnfrozen(rn2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 71:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 72:
            return on2 = os2.sent(), un2 = e3.as(cs), cn2 = un2.allowAutoUnhide, ln2 = un2.hidePreviousMessages, hn2 = un2.messageOffsetTimestamp, null !== cn2 && (on2.hiddenState = cn2 ? ir.HIDDEN_ALLOW_AUTO_UNHIDE : ir.HIDDEN_PREVENT_AUTO_UNHIDE), null !== ln2 && ln2 && on2._updateUnreadCount(0, 0), null !== hn2 && (on2.messageOffsetTimestamp = hn2), this._dispatcher.dispatch(new Un$1({ channels: [on2], context: { source: no.EVENT_CHANNEL_HIDDEN } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onChannelHidden && e5.onChannelHidden(on2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 73:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 74:
            return (dn2 = os2.sent()).hiddenState = ir.UNHIDDEN, this._dispatcher.dispatch(new Un$1({ channels: [dn2], context: { source: no.EVENT_CHANNEL_UNHIDDEN } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onChannelChanged && e5.onChannelChanged(dn2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 75:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 76:
            return _n2 = os2.sent(), this._dispatcher.dispatch(new Sn$1({ channelUrls: [De2.channelUrl], context: { source: no.EVENT_CHANNEL_DELETED } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onChannelDeleted && e5.onChannelDeleted(_n2.url, _n2.channelType);
                  }), [2];
                });
              });
            }), [3, 85];
          case 77:
            return [4, this.getChannelWithoutCache(De2.channelUrl, true)];
          case 78:
            return pn2 = os2.sent(), this._dispatcher.dispatch(new Un$1({ channels: [pn2], context: { source: no.EVENT_CHANNEL_UPDATED } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onChannelChanged && e5.onChannelChanged(pn2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 79:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 80:
            return fn2 = os2.sent(), vn2 = e3.as(Gn$1), mn2 = vn2.created, gn2 = vn2.updated, En2 = vn2.deleted, mn2 && (fn2._upsertCachedMetaData(mn2, De2.ts), this._dispatcher.dispatch(new Un$1({ channels: [fn2], context: { source: no.EVENT_CHANNEL_METADATA_CREATED, metaData: mn2 }, ts: De2.ts }))), gn2 && (fn2._upsertCachedMetaData(gn2, De2.ts), this._dispatcher.dispatch(new Un$1({ channels: [fn2], context: { source: no.EVENT_CHANNEL_METADATA_UPDATED, metaData: gn2 }, ts: De2.ts }))), En2 && (fn2._removeFromCachedMetaData(En2, De2.ts), this._dispatcher.dispatch(new Un$1({ channels: [fn2], context: { source: no.EVENT_CHANNEL_METADATA_DELETED, metaDataKeys: En2 }, ts: De2.ts }))), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    mn2 && e5.onMetaDataCreated && e5.onMetaDataCreated(fn2, mn2), gn2 && e5.onMetaDataUpdated && e5.onMetaDataUpdated(fn2, gn2), En2 && e5.onMetaDataDeleted && e5.onMetaDataDeleted(fn2, En2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 81:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 82:
            return Cn2 = os2.sent(), yn2 = e3.as(nr$1), Mn2 = yn2.created, bn2 = yn2.updated, Nn2 = yn2.deleted, Mn2 && this._dispatcher.dispatch(new Un$1({ channels: [Cn2], context: { source: no.EVENT_CHANNEL_METACOUNTER_CREATED, metaCounters: Mn2 } })), bn2 && this._dispatcher.dispatch(new Un$1({ channels: [Cn2], context: { source: no.EVENT_CHANNEL_METACOUNTER_UPDATED, metaCounters: bn2 } })), Nn2 && this._dispatcher.dispatch(new Un$1({ channels: [Cn2], context: { source: no.EVENT_CHANNEL_METACOUNTER_DELETED, metaCounterKeys: Nn2 } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    Mn2 && e5.onMetaCounterCreated && e5.onMetaCounterCreated(Cn2, Mn2), bn2 && e5.onMetaCounterUpdated && e5.onMetaCounterUpdated(Cn2, bn2), Nn2 && e5.onMetaCounterDeleted && e5.onMetaCounterDeleted(Cn2, Nn2);
                  }), [2];
                });
              });
            }), [3, 85];
          case 83:
            return [4, this.getChannel(De2.channelUrl, true)];
          case 84:
            return Tn2 = os2.sent(), An2 = e3.as(H), In2 = An2.pinnedMessageIds, wn2 = An2.latestPinnedMessage, (Ln2 = An2.ts) > Tn2._pinnedMessagesUpdatedAt && (Tn2.pinnedMessageIds = null != In2 ? In2 : [], Tn2.lastPinnedMessage = wn2, Tn2._pinnedMessagesUpdatedAt = Ln2, this._dispatcher.dispatch(new Un$1({ channels: [Tn2], context: { source: no.EVENT_PINNED_MESSAGE_UPDATED } })), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                var e4, t5, n3, s5, r3;
                return s$1(this, function(a4) {
                  try {
                    for (e4 = o(this._groupChannelHandlers.values()), t5 = e4.next(); !t5.done; t5 = e4.next()) (n3 = t5.value).onChannelChanged && n3.onChannelChanged(Tn2);
                  } catch (e5) {
                    s5 = { error: e5 };
                  } finally {
                    try {
                      t5 && !t5.done && (r3 = e4.return) && r3.call(e4);
                    } finally {
                      if (s5) throw s5.error;
                    }
                  }
                  return [2];
                });
              });
            }), kr$1(function() {
              return r$1(is2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._groupChannelHandlers.forEach(function(e5) {
                    e5.onPinnedMessageUpdated && e5.onPinnedMessageUpdated(Tn2);
                  }), [2];
                });
              });
            })), [3, 85];
          case 85:
            return [3, 87];
          case 86:
            switch ((Dn2 = e3.as(O$1).event).category) {
              case L$1.USER_BLOCK:
                xn2 = v$1.getDataAsUserBlockEvent(this._iid, Dn2), Fn2 = xn2.blocker, kn2 = xn2.blockee, this._groupChannelCache.block(Fn2.userId, kn2.userId);
                break;
              case L$1.USER_UNBLOCK:
                Rn2 = v$1.getDataAsUserBlockEvent(this._iid, Dn2), Fn2 = Rn2.blocker, kn2 = Rn2.blockee, this._groupChannelCache.unblock(Fn2.userId, kn2.userId);
            }
            return [3, 87];
          case 87:
            return [3, 89];
          case 88:
            if (Pn2 = os2.sent(), v$2(Pn2)) throw Pn2;
            return [3, 89];
          case 89:
            return [2];
        }
      });
    });
  }, c$1.prototype._markAsLeave = function(e3) {
    var t4, n2 = this, s4 = null !== (t4 = this._leftChannels.get(e3.url)) && void 0 !== t4 ? t4 : { channel: e3, ref: 0 };
    s4.ref++, this._leftChannels.set(e3.url, s4), setTimeout(function() {
      s4.ref--, 0 === s4.ref && n2._leftChannels.delete(e3.url);
    }, 1e4);
  }, c$1.prototype.addHandler = function(e3, t4) {
    this._groupChannelHandlers.set(e3, t4);
  }, c$1.prototype.removeHandler = function(e3) {
    this._groupChannelHandlers.delete(e3);
  }, c$1.prototype.clearHandler = function() {
    this._groupChannelHandlers.clear();
  }, c$1.prototype.subscribeChannelEvent = function(e3, t4) {
    this._groupChannelBroadcast.subscribe(e3, t4);
  }, c$1.prototype.unsubscribeChannelEvent = function(e3) {
    this._groupChannelBroadcast.unsubscribe(e3);
  }, c$1.prototype._updateJoinedMemberCount = function(e3) {
    e3.joinedMemberCount = e3.members.filter(function(e4) {
      return e4.state === Zt$1.JOINED;
    }).length;
  }, c$1.prototype.getChannel = function(e3, t4) {
    return void 0 === t4 && (t4 = false), r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            cs$2(S$1("string", e3)).throw(b$2.invalidParameters), s4.label = 1;
          case 1:
            return s4.trys.push([1, 3, , 4]), [4, this.getChannelFromCache(e3)];
          case 2:
            return (n2 = s4.sent()) ? [2, n2] : [3, 4];
          case 3:
            return s4.sent(), [3, 4];
          case 4:
            return [4, this.getChannelWithoutCache(e3, t4)];
          case 5:
            return [2, s4.sent()];
        }
      });
    });
  }, c$1.prototype.getChannelWithoutCache = function(e3, t4) {
    return void 0 === t4 && (t4 = false), r$1(this, void 0, void 0, function() {
      var n2, s4, r2, a4, i3;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), n2 = new Ln$1({ channelUrl: e3, isInternalCall: t4 }), [4, this._requestQueue.send(n2)];
          case 1:
            switch (s4 = o2.sent(), r2 = s4.as(Dn$1).channel, a4 = r2.unreadMessageCount, i3 = r2.unreadMentionCount, r2.myCountPreference) {
              case ar.UNREAD_MESSAGE_COUNT_ONLY:
                i3 = 0;
                break;
              case ar.UNREAD_MENTION_COUNT_ONLY:
                a4 = 0;
                break;
              case ar.OFF:
                a4 = 0, i3 = 0;
            }
            return r2._updateUnreadCount(a4, i3), [4, this.upsertChannelsToCache([r2])];
          case 2:
            return [2, o2.sent()[0]];
        }
      });
    });
  }, c$1.prototype.refreshChannel = function(e3, t4, n2, s4) {
    return void 0 === t4 && (t4 = true), void 0 === n2 && (n2 = no.REFRESH_CHANNEL), void 0 === s4 && (s4 = false), r$1(this, void 0, void 0, function() {
      var r2, a4, i3, o2, u4;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return c3.trys.push([0, 5, , 6]), r2 = new Ln$1({ channelUrl: e3, isInternalCall: t4, showLatestMessage: s4 }), [4, this._requestQueue.send(r2)];
          case 1:
            return a4 = c3.sent(), (i3 = a4.as(Dn$1).channel).myMemberState !== Zt$1.NONE ? [3, 2] : (this._dispatcher.dispatch(new Sn$1({ channelUrls: [i3.url], context: { source: n2 } })), [3, 4]);
          case 2:
            return [4, this.upsertChannelsToCache([i3])];
          case 3:
            o2 = c3.sent(), this._dispatcher.dispatch(new Un$1({ channels: o2, context: { source: n2 } })), c3.label = 4;
          case 4:
            return [3, 6];
          case 5:
            return (u4 = c3.sent()).code !== u$1.NON_AUTHORIZED && u4.code !== u$1.NOT_FOUND_IN_DATABASE || this._dispatcher.dispatch(new Sn$1({ channelUrls: [e3], context: { source: n2 } })), [3, 6];
          case 6:
            return [2];
        }
      });
    });
  }, c$1.prototype.getMyGroupChannels = function(e3, t4, n2, r2, a4) {
    return void 0 === r2 && (r2 = no.REQUEST_CHANNEL), void 0 === a4 && (a4 = false), r$1(this, void 0, void 0, function() {
      var i3, o2, u4, c3, l2, h4, d4, _2, p2;
      return s$1(this, function(f2) {
        switch (f2.label) {
          case 0:
            return t4.createdAfter && (t4.createdAfter = Math.floor(t4.createdAfter / 1e3)), t4.createdBefore && (t4.createdBefore = Math.floor(t4.createdBefore / 1e3)), i3 = false, a4 && (o2 = uo.of(this._iid), u4 = o2.appInfo, (c3 = o2.cacheContext) && !c3.localCacheEnabled && (null == u4 ? void 0 : u4.enabledChannelMemberShipHistory) && (null == u4 ? void 0 : u4.applicationAttributes.includes("left_user_view_support")) && (i3 = true)), l2 = new Rn(n$2(n$2({}, t4), { userId: this._sdkState.userId, token: e3, limit: n2, includeLeftChannel: a4 && i3 })), [4, this._requestQueue.send(l2)];
          case 1:
            return h4 = f2.sent(), d4 = h4.as(Fn), _2 = d4.channels, p2 = d4.token, this._dispatcher.dispatch(new Un$1({ channels: _2, context: { source: r2 } })), [2, { channels: _2, token: p2 }];
        }
      });
    });
  }, c$1.prototype.getMyGroupChannelChangeLogs = function(e3, t4, r2) {
    return void 0 === r2 && (r2 = no.REQUEST_CHANNEL_CHANGELOGS), r$1(this, void 0, void 0, function() {
      var a4, i3, o2, u4, c3, d4, _2, p2;
      return s$1(this, function(f2) {
        switch (f2.label) {
          case 0:
            return a4 = n$2(n$2({}, fn$1), t4), cs$2((S$1("string", e3) || S$1("number", e3)) && vn$1(a4)).throw(b$2.invalidParameters), i3 = new In$1(oe({ userId: this._sdkState.userId, ts: "number" == typeof e3 ? e3 : null, token: "string" == typeof e3 ? e3 : null, filter: a4 })), [4, this._requestQueue.send(i3)];
          case 1:
            return o2 = f2.sent(), u4 = o2.as(wn$1), c3 = u4.updatedChannels, d4 = u4.deletedChannelUrls, _2 = u4.hasMore, p2 = u4.ts, c3.length > 0 && this._dispatcher.dispatch(new Un$1({ channels: c3, context: { source: r2 }, ts: p2 })), d4.length > 0 && this._dispatcher.dispatch(new Sn$1({ channelUrls: d4, context: { source: r2 } })), [2, { updatedChannels: c3, deletedChannelUrls: d4, hasMore: _2, token: u4.token }];
        }
      });
    });
  }, c$1.prototype.getGroupChannelCount = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return t4 = n$2(n$2({}, mn$1), e3), cs$2(gn$1(t4)).throw(b$2.invalidParameters), n2 = new kn$1({ userId: this._sdkState.userId, filter: t4 }), [4, this._requestQueue.send(n2)];
          case 1:
            return r2 = a4.sent(), [2, r2.as(Pn$1).groupChannelCount];
        }
      });
    });
  }, c$1.prototype.getUnreadItemCount = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, a4, i3, o2, u4, c3, d4, _2, p2, v2, g2, E3, C2, y4, M4;
      return s$1(this, function(f2) {
        switch (f2.label) {
          case 0:
            return n2 = n$2(n$2({}, En$1), e3), cs$2(function(e4) {
              return C$1(ln$1, e4.keys) && C$1("string", e4.customTypeFilters, true) && C$1("string", e4.customTypesFilter, true);
            }(n2)).throw(b$2.invalidParameters), r2 = uo.of(this._iid), a4 = r2.sdkState, i3 = r2.requestQueue, o2 = new On$1({ userId: a4.userId, filter: n2 }), [4, i3.send(o2)];
          case 1:
            return u4 = f2.sent(), c3 = u4.as(Hn), d4 = c3.groupChannelUnreadMentionCount, _2 = c3.groupChannelUnreadMessageCount, p2 = c3.groupChannelInvitationCount, v2 = c3.superGroupChannelUnreadMentionCount, g2 = c3.superGroupChannelUnreadMessageCount, E3 = c3.superGroupChannelInvitationCount, C2 = c3.nonSuperGroupChannelUnreadMentionCount, y4 = c3.nonSuperGroupChannelUnreadMessageCount, M4 = c3.nonSuperGroupChannelInvitationCount, [2, se({ groupChannelUnreadMentionCount: d4, groupChannelUnreadMessageCount: _2, groupChannelInvitationCount: p2, superGroupChannelUnreadMentionCount: v2, superGroupChannelUnreadMessageCount: g2, superGroupChannelInvitationCount: E3, nonSuperGroupChannelUnreadMentionCount: C2, nonSuperGroupChannelUnreadMessageCount: y4, nonSuperGroupChannelInvitationCount: M4 })];
        }
      });
    });
  }, c$1.prototype.getTotalUnreadChannelCount = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.sdkState, n2 = e3.requestQueue, s4 = new Gn({ userId: t4.userId }), [4, n2.send(s4)];
          case 1:
            return r2 = a4.sent(), [2, r2.as(Vn).unreadCount];
        }
      });
    });
  }, c$1.prototype.getTotalUnreadMessageCount = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, a4, i3, o2;
      return s$1(this, function(u4) {
        switch (u4.label) {
          case 0:
            return t4 = n$2(n$2({}, Cn$1), e3), cs$2(yn$1(t4)).throw(b$2.invalidParameters), n2 = uo.of(this._iid), r2 = n2.sdkState, a4 = n2.requestQueue, i3 = new Bn({ userId: r2.userId, filter: t4 }), [4, a4.send(i3)];
          case 1:
            return o2 = u4.sent(), [2, o2.as(qn).unreadCount];
        }
      });
    });
  }, c$1.prototype.getTotalScheduledMessageCount = function(e3) {
    return void 0 === e3 && (e3 = {}), r$1(this, void 0, void 0, function() {
      var t4, n2, a4, i3;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return t4 = n$2(n$2({}, Mn$1), e3), cs$2(function(e4) {
              return S$1("string", e4.channelUrl, true) && C$1(dt, e4.scheduledStatus, true) && T$2(j, e4.messageTypeFilter);
            }(t4)).throw(b$2.invalidParameters), n2 = uo.of(this._iid).requestQueue, a4 = new zn(t4), [4, n2.send(a4)];
          case 1:
            return i3 = o2.sent(), [2, i3.as(Wn).count];
        }
      });
    });
  }, c$1.prototype.getSubscribedTotalUnreadMessageCount = function() {
    var e3 = uo.of(this._iid).subscribedUnreadMessageCount;
    return e3.all >= 0 ? e3.all : 0;
  }, c$1.prototype.getSubscribedCustomTypeTotalUnreadMessageCount = function() {
    var e3 = 0, t4 = uo.of(this._iid).subscribedUnreadMessageCount;
    return Object.keys(t4.customTypes).forEach(function(n2) {
      e3 += t4.customTypes[n2];
    }), e3;
  }, c$1.prototype.getSubscribedCustomTypeUnreadMessageCount = function(e3) {
    var t4;
    return null !== (t4 = uo.of(this._iid).subscribedUnreadMessageCount.customTypes[e3]) && void 0 !== t4 ? t4 : 0;
  }, c$1.prototype.createChannel = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t4 = n$2(n$2({}, _n$1), e3), cs$2(pn$1(t4)).throw(b$2.invalidParameters), t4.isPublic || (t4.accessCode = void 0), n2 = new Qn(n$2({ userId: this._sdkState.userId }, t4)), [4, this._requestQueue.send(n2)];
          case 1:
            return r2 = i3.sent(), a4 = r2.as(Yn).channel, [4, this.upsertChannelsToCache([a4])];
          case 2:
            return i3.sent(), [2, a4];
        }
      });
    });
  }, c$1.prototype.markAsReadAll = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2, a4, i3, o$1;
      return s$1(this, function(u4) {
        switch (u4.label) {
          case 0:
            return e3 = Date.now(), cs$2(e3 - this._markAsReadAllLastSentAt >= 1e3).throw(b$2.markAsReadAllRateLimitExceeded), this._markAsReadAllLastSentAt = e3, t4 = new Kn({ userId: this._sdkState.userId }), [4, this._requestQueue.send(t4)];
          case 1:
            u4.sent(), n2 = this._groupChannelCache.channels;
            try {
              for (s4 = o(n2), r2 = s4.next(); !r2.done; r2 = s4.next()) (a4 = r2.value)._updateUnreadMemberState(this._sdkState.userId, e3), a4._updateUnreadCount(0, 0);
            } catch (e4) {
              i3 = { error: e4 };
            } finally {
              try {
                r2 && !r2.done && (o$1 = s4.return) && o$1.call(s4);
              } finally {
                if (i3) throw i3.error;
              }
            }
            return n2.length > 0 ? [4, this.upsertChannelsToCache(n2)] : [3, 3];
          case 2:
            u4.sent(), u4.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, c$1.prototype.markAsReadWithChannelUrls = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, s4, r2, a4, i3, o$1, u4, c3;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return t4 = Date.now(), cs$2(C$1("string", e3) && t4 - this._markAsReadAllLastSentAt >= 1e3).throw(b$2.markAsReadAllRateLimitExceeded), this._markAsReadAllLastSentAt = t4, n2 = new Kn({ userId: this._sdkState.userId, channelUrls: e3 }), [4, this._requestQueue.send(n2)];
          case 1:
            d4.sent(), s4 = this._groupChannelCache.channels, r2 = [];
            try {
              for (a4 = o(s4), i3 = a4.next(); !i3.done; i3 = a4.next()) o$1 = i3.value, e3.includes(o$1.url) && (o$1._updateUnreadMemberState(this._sdkState.userId, t4), o$1._updateUnreadCount(0, 0), r2.push(o$1));
            } catch (e4) {
              u4 = { error: e4 };
            } finally {
              try {
                i3 && !i3.done && (c3 = a4.return) && c3.call(a4);
              } finally {
                if (u4) throw u4.error;
              }
            }
            return r2.length > 0 ? [4, this.upsertChannelsToCache(r2)] : [3, 3];
          case 2:
            d4.sent(), d4.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, c$1.prototype.markAsDelivered = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this.getChannel(e3)];
          case 1:
            return [4, t4.sent().markAsDelivered()];
          case 2:
            return t4.sent(), [2];
        }
      });
    });
  }, c$1.prototype.getMessageFromCache = function(e3) {
    var t4;
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._messageCache.get(e3)];
          case 1:
            return [2, null !== (t4 = n2.sent()) && void 0 !== t4 ? t4 : null];
        }
      });
    });
  }, c$1.prototype.getExactlyMatchingMessagesForTokenFromCache = function(e3, t4, n2) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return [4, this._messageCache.fetch({ channelUrl: e3, token: t4, filter: n2, exactMatch: true })];
          case 1:
            return [2, s4.sent()];
        }
      });
    });
  }, c$1.prototype.getMessagesFromCache = function(e3, t4, n2, s4, r2, a4) {
    return void 0 === r2 && (r2 = Xr), void 0 === a4 && (a4 = true), r$1(this, void 0, void 0, function() {
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return [4, this._messageCache.fetch({ channelUrl: e3, token: t4, limit: r2, filter: s4, backward: "next" === n2, inclusive: a4 })];
          case 1:
            return [2, i3.sent()];
        }
      });
    });
  }, c$1.prototype.getPollMessagesFromCache = function(e3, t4, n2, s4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return [4, this._messageCache.fetch({ channelUrl: e3, token: t4, limit: s4, filter: n2, backward: false, isPollOnly: true })];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, c$1.prototype.getCachedMessageCountBetween = function(e3, t4, n2, s4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return [4, this._messageCache.countBetween(e3, t4, new Es({ top: n2, bottom: s4 }))];
          case 1:
            return [2, r2.sent()];
        }
      });
    });
  }, c$1.prototype.getUnsentMessagesFromCache = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._unsentMessageCache.fetch({ channelUrl: e3, filter: t4 })];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, c$1.prototype.removeFailedMessageFromCache = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, this._unsentMessageCache.remove([e3])];
          case 1:
            return t4.sent(), [2];
        }
      });
    });
  }, c$1;
}(g), Ms = function(e3, t4) {
  return t4 instanceof _t ? e3.findIndex(function(e4) {
    return e4 instanceof _t && t4.isIdentical(e4);
  }) : e3.findIndex(function(e4) {
    return e4.isIdentical(t4);
  });
}, bs = function(e3, t4) {
  return e3.findIndex(function(e4) {
    return e4 instanceof yt ? e4.messageId === t4 : e4 instanceof St$1 ? e4.notificationId === t4 : void 0;
  });
}, Ns = function(e3, t4) {
  if (e3.length > 0) {
    for (var n2 = 0, s4 = e3.length - 1, r2 = Math.floor((n2 + s4) / 2); n2 < s4; ) {
      var a4 = e3[r2].createdAt - t4.createdAt;
      if (a4 > 0) s4 = r2, r2 = Math.floor((n2 + s4) / 2);
      else {
        if (!(a4 < 0)) return r2;
        n2 = r2 + 1, r2 = Math.floor((n2 + s4) / 2);
      }
    }
    return e3[r2].createdAt > t4.createdAt ? r2 : r2 + 1;
  }
  return e3.length;
}, Us = {}, Ss = function() {
  function e3(e4) {
    var t4 = e4._iid, n2 = e4.channel, s4 = e4.limit, r2 = void 0 === s4 ? 100 : s4, a4 = this;
    this.ref = 0, this._iid = t4, this._channel = n2, this._limit = r2, this._prevSyncLoopCount = 0;
    var i3, o2, u3 = uo.of(this._iid), c$1 = u3.sdkState, l2 = u3.cacheContext, v2 = u3.dispatcher, m4 = u3.logger, g2 = u3.statManager, E3 = u3.messageBackgroundSyncThrottleController;
    this._metadataKey = (i3 = c$1.userId, o2 = n2.url, "sendbird:".concat(i3, "@groupchannel/").concat(o2, "/message/sync.meta"));
    var C2 = function(e5, t5) {
      return "sendbird:".concat(e5, "@groupchannel/").concat(t5, "/message/sync");
    }(c$1.userId, n2.url);
    this._prevSync = new w(C2, function(e5) {
      return r$1(a4, void 0, void 0, function() {
        var t5 = this;
        return s$1(this, function(s5) {
          switch (s5.label) {
            case 0:
              return [4, E3.run("message-background-sync-".concat(n2.url, "-prev"), function() {
                return r$1(t5, void 0, void 0, function() {
                  var t6, s6, r3, a5, i4, o3, u4, c$12, p2, v3, E4, C3;
                  return s$1(this, function(f2) {
                    switch (f2.label) {
                      case 0:
                        return t6 = { hasNext: true, nextToken: 0 }, this._prevSyncLoopCount++, [4, this.loadMetadata()];
                      case 1:
                        if (f2.sent(), m4.debug("message background prev sync from", null === (o3 = this._metadata) || void 0 === o3 ? void 0 : o3.range.top), null === (u4 = this._metadata) || void 0 === u4 ? void 0 : u4.previousComplete) return [3, 10];
                        f2.label = 2;
                      case 2:
                        return f2.trys.push([2, 5, 8, 9]), [4, la.of(this._iid)._getMessagesByTimestampForCollection(this._channel.url, this._channel.channelType, (null === (p2 = null === (c$12 = this._metadata) || void 0 === c$12 ? void 0 : c$12.range) || void 0 === p2 ? void 0 : p2.top) ? this._metadata.range.top : e5, { prevResultSize: this._limit, nextResultSize: 0, replyType: Q.ALL, includeReactions: true, includeMetaArray: true, includeParentMessageInfo: true, includeThreadInfo: true, isInclusive: true }, no.SYNC_MESSAGE_BACKGROUND, false, false, qt$1.INTERNAL_BACKSYNC)];
                      case 3:
                        return (s6 = f2.sent().messages).length > 0 && (r3 = s6.map(function(e6) {
                          return e6.createdAt;
                        }), (null === (v3 = this._metadata) || void 0 === v3 ? void 0 : (i4 = v3.range).intersect.apply(i4, c([], a$1(r3), false))) ? this.extendRange(s6) : this._metadata = { range: new Es({ top: Math.min.apply(Math, c([], a$1(r3), false)), bottom: Math.max.apply(Math, c([], a$1(r3), false)) }), previousComplete: false }), t6.hasNext = s6.length >= this._limit && this._prevSyncLoopCount < 1, this._metadata && (t6.nextToken = this._metadata.range.top, this._metadata.previousComplete = s6.length < this._limit), m4.debug("message background prev sync progress", t6), [4, this.saveMetadata()];
                      case 4:
                        return f2.sent(), [3, 9];
                      case 5:
                        return a5 = f2.sent(), m4.debug("message background prev sync error", a5), a5 instanceof b$2 && a5.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 7];
                      case 6:
                        f2.sent(), f2.label = 7;
                      case 7:
                        throw a5;
                      case 8:
                        return g2.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: n2.url, measured_on: "back_sync", event: "cache_fetch", max_db_size: null !== (C3 = null === (E4 = l2.localCacheConfig) || void 0 === E4 ? void 0 : E4.maxSize) && void 0 !== C3 ? C3 : 0, use_local_cache: l2.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
                      case 9:
                        return [3, 11];
                      case 10:
                        t6.hasNext = false, f2.label = 11;
                      case 11:
                        return [2, t6];
                    }
                  });
                });
              })];
            case 1:
              return [2, s5.sent()];
          }
        });
      });
    }), this._nextSync = new w(C2, function(e5) {
      return r$1(a4, void 0, void 0, function() {
        var t5 = this;
        return s$1(this, function(s5) {
          switch (s5.label) {
            case 0:
              return [4, E3.run("message-background-sync-".concat(n2.url, "-next"), function() {
                return r$1(t5, void 0, void 0, function() {
                  var t6, s6, r3, a5, i4, o3, u4, c$12, h4, p2, v3;
                  return s$1(this, function(f2) {
                    switch (f2.label) {
                      case 0:
                        return t6 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
                      case 1:
                        f2.sent(), m4.debug("message background next sync from", null === (o3 = this._metadata) || void 0 === o3 ? void 0 : o3.range.bottom), f2.label = 2;
                      case 2:
                        return f2.trys.push([2, 5, 6, 7]), [4, la.of(this._iid)._getMessagesByTimestampForCollection(this._channel.url, this._channel.channelType, (null === (c$12 = null === (u4 = this._metadata) || void 0 === u4 ? void 0 : u4.range) || void 0 === c$12 ? void 0 : c$12.bottom) ? this._metadata.range.bottom : e5, { prevResultSize: 0, nextResultSize: this._limit, replyType: Q.ALL, includeReactions: true, includeMetaArray: true, includeParentMessageInfo: true, includeThreadInfo: true, isInclusive: true }, no.SYNC_MESSAGE_BACKGROUND, false, false, qt$1.INTERNAL_BACKSYNC)];
                      case 3:
                        return (s6 = f2.sent().messages).length > 0 && (r3 = s6.map(function(e6) {
                          return e6.createdAt;
                        }), (null === (h4 = this._metadata) || void 0 === h4 ? void 0 : (i4 = h4.range).intersect.apply(i4, c([], a$1(r3), false))) ? this.extendRange(s6) : this._metadata = { range: new Es({ top: Math.min.apply(Math, c([], a$1(r3), false)), bottom: Math.max.apply(Math, c([], a$1(r3), false)) }), previousComplete: false }), t6.hasNext = s6.length >= this._limit, this._metadata && (t6.nextToken = this._metadata.range.bottom), m4.debug("message background next sync progress", t6), [4, this.saveMetadata()];
                      case 4:
                        return f2.sent(), [3, 7];
                      case 5:
                        throw a5 = f2.sent(), m4.debug("message background next sync error", a5), a5;
                      case 6:
                        return g2.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: n2.url, measured_on: "back_sync", event: "cache_fetch", max_db_size: null !== (v3 = null === (p2 = l2.localCacheConfig) || void 0 === p2 ? void 0 : p2.maxSize) && void 0 !== v3 ? v3 : 0, use_local_cache: l2.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
                      case 7:
                        return [2, t6];
                    }
                  });
                });
              })];
            case 1:
              return [2, s5.sent()];
          }
        });
      });
    }), this._connectionEventContext = v2.on(function(e5) {
      if (e5 instanceof Fr$1) if (e5.stateType === Rr$1.CONNECTED) a4.resume();
      else a4.pause();
    });
  }
  return e3.of = function(t4, n2) {
    return Us[t4] || (Us[t4] = {}), Us[t4][n2.url] || (Us[t4][n2.url] = new e3({ _iid: t4, channel: n2 })), Us[t4][n2.url].ref++, Us[t4][n2.url];
  }, e3.clear = function(e4, t4) {
    Us[e4] && Us[e4][t4] && (Us[e4][t4].close(), delete Us[e4]);
  }, Object.defineProperty(e3.prototype, "range", { get: function() {
    var e4, t4;
    return null !== (t4 = null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.range) && void 0 !== t4 ? t4 : new Es({});
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "previousComplete", { get: function() {
    var e4;
    return !!(null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.previousComplete);
  }, enumerable: false, configurable: true }), e3.prototype.isWrappingMessages = function(e4) {
    var t4;
    return null === (t4 = this.range) || void 0 === t4 ? void 0 : t4.includes.apply(t4, c([], a$1(e4.map(function(e5) {
      return e5.createdAt;
    })), false));
  }, e3.prototype.extendRange = function(e4) {
    var t4;
    this._metadata && (t4 = this._metadata.range).extends.apply(t4, c([], a$1(e4.map(function(e5) {
      return e5.createdAt;
    })), false));
  }, e3.prototype.loadMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this._metadata ? [3, 2] : [4, uo.of(this._iid).cacheContext.preference.get(this._metadataKey)];
          case 1:
            e4 = t4.sent(), this._metadata = e4 ? { range: new Es(e4.range), previousComplete: e4.previousComplete } : { range: new Es({}), previousComplete: false }, t4.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, e3.prototype.saveMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._metadata ? [4, uo.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e4.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, e3.prototype.clearMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, uo.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e4.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e3.prototype.resume = function(e4) {
    var t4, n2, s4, r2;
    void 0 === e4 && (e4 = Date.now());
    var a4 = uo.of(this._iid), i3 = a4.logger, o2 = a4.sessionManager;
    a4.cacheContext.localCacheEnabled && o2.session.hasSession && (i3.debug("message background sync resume()"), this._prevSyncLoopCount = 0, this._metadata && this._metadata.previousComplete || this._prevSync.start(null !== (n2 = null === (t4 = this._metadata) || void 0 === t4 ? void 0 : t4.range.top) && void 0 !== n2 ? n2 : e4), this._nextSync.start(null !== (r2 = null === (s4 = this._metadata) || void 0 === s4 ? void 0 : s4.range.bottom) && void 0 !== r2 ? r2 : e4));
  }, e3.prototype.pause = function() {
    uo.of(this._iid).logger.debug("message background sync stop()"), this._prevSync.stop(), this._nextSync.stop();
  }, e3.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Us[this._iid][this._channel.url]);
  }, e3;
}(), Ts = {}, As = function() {
  function e3(e4) {
    var t4 = e4._iid, n2 = e4.channel, r2 = e4.includeParams, a4 = this;
    this.ref = 0, this._iid = t4, this._channel = n2, this._includeParams = r2;
    var i3, o2, u3 = uo.of(this._iid), c3 = u3.logger, l2 = u3.sdkState, d4 = u3.dispatcher;
    this._metadataKey = (i3 = l2.userId, o2 = n2.url, "sendbird:".concat(i3, "@groupchannel/").concat(o2, "/message/changelogs.meta"));
    var _2 = function(e5, t5) {
      return "sendbird:".concat(e5, "@groupchannel/").concat(t5, "/message/changelogs");
    }(l2.userId, this._channel.url);
    this._sync = new w(_2, function() {
      return r$1(a4, void 0, void 0, function() {
        var e5, t5, n3, r3, a5, i4, o3, u4, l3;
        return s$1(this, function(d5) {
          switch (d5.label) {
            case 0:
              return e5 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
            case 1:
              d5.sent(), c3.debug("message changelog sync from", null === (l3 = this._metadata) || void 0 === l3 ? void 0 : l3.token), d5.label = 2;
            case 2:
              return d5.trys.push([2, 5, , 8]), [4, la.of(this._iid).getMessageChangelogs(this._channel.url, this._channel.channelType, this._metadata.token, n$2({ replyType: Q.ALL }, this._includeParams), no.SYNC_MESSAGE_CHANGELOGS)];
            case 3:
              return t5 = d5.sent(), n3 = t5.updatedMessages, r3 = t5.deletedMessageIds, a5 = t5.hasMore, i4 = t5.token, o3 = t5.forceUseNextToken, e5.hasNext = a5, e5.nextToken = i4, n3.length > 0 || r3.length > 0 ? this._metadata && (this._metadata.token = i4) : o3 && this._metadata && (this._metadata.token = i4), c3.debug("message changelog sync progress", e5), [4, this.saveMetadata()];
            case 4:
              return d5.sent(), [3, 8];
            case 5:
              return u4 = d5.sent(), c3.debug("message changelog sync error", u4), u4 instanceof b$2 && u4.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 7];
            case 6:
              d5.sent(), d5.label = 7;
            case 7:
              throw u4;
            case 8:
              return [2, e5];
          }
        });
      });
    }), this._connectionEventContext = d4.on(function(e5) {
      if (e5 instanceof Fr$1) if (e5.stateType === Rr$1.CONNECTED) a4.resume();
      else a4.pause();
    });
  }
  return e3.of = function(t4, n2, s4) {
    return Ts[t4] || (Ts[t4] = {}), Ts[t4][n2.url] || (Ts[t4][n2.url] = new e3({ _iid: t4, channel: n2, includeParams: s4 })), Ts[t4][n2.url].ref++, Ts[t4][n2.url];
  }, e3.clear = function(e4, t4) {
    Ts[e4] && Ts[e4][t4] && (Ts[e4][t4].close(), delete Ts[e4]);
  }, e3.prototype.loadMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, s4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return this._metadata ? [3, 2] : (e4 = uo.of(this._iid), t4 = e4.cacheContext, n2 = e4.firstConnectedAt, [4, t4.preference.get(this._metadataKey)]);
          case 1:
            s4 = r2.sent(), this._metadata = { token: s4 ? s4.token : n2 }, r2.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, e3.prototype.saveMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._metadata ? [4, uo.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e4.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, e3.prototype.clearMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, uo.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e4.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e3.prototype.resume = function() {
    var e4 = uo.of(this._iid), t4 = e4.logger;
    e4.sessionManager.session.hasSession && (t4.debug("message changelog sync resume()"), this._sync.start(0));
  }, e3.prototype.pause = function() {
    uo.of(this._iid).logger.debug("message changelog sync pause()"), this._sync.stop();
  }, e3.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Ts[this._iid][this._channel.url]);
  }, e3;
}(), Is = {}, ws = function() {
  function e3(e4) {
    var t4 = e4._iid, n2 = e4.channel, s4 = e4.hasPollMessage, r2 = this;
    this.ref = 0, this._iid = t4, this._channel = n2;
    var a4, i3, o2 = uo.of(this._iid), u3 = o2.logger, c3 = o2.sdkState, l2 = o2.dispatcher;
    this._metadataKey = (a4 = c3.userId, i3 = n2.url, "sendbird:".concat(a4, "@groupchannel/").concat(i3, "/poll/changelogs.meta"));
    var d4 = function(e5, t5) {
      return "sendbird:".concat(e5, "@groupchannel/").concat(t5, "/poll/changelogs");
    }(c3.userId, this._channel.url);
    this._sync = new w(d4, function() {
      return r$1(r2, void 0, void 0, function() {
        var e5, t5, n3, r3, a5, i4, o3, c4;
        return s$1(this, function(l3) {
          switch (l3.label) {
            case 0:
              return e5 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
            case 1:
              return l3.sent(), u3.debug("poll changelog sync from", null === (c4 = this._metadata) || void 0 === c4 ? void 0 : c4.token), (t5 = !this._metadata || !this._metadata.token) ? [4, s4()] : [3, 3];
            case 2:
              t5 = !l3.sent(), l3.label = 3;
            case 3:
              if (t5) return [2, { hasNext: false, nextToken: 0 }];
              this._metadata || (n3 = uo.of(this._iid).firstConnectedAt, this._metadata = { token: n3 }), l3.label = 4;
            case 4:
              return l3.trys.push([4, 7, , 10]), [4, Qo.of(this._iid).getPollChangeLogs(this._channel.url, this._channel.channelType, this._metadata.token)];
            case 5:
              return r3 = l3.sent(), a5 = r3.hasMore, i4 = r3.token, e5.hasNext = a5, e5.nextToken = i4, this._metadata.token = i4, u3.debug("poll changelog sync progress", e5), [4, this.saveMetadata()];
            case 6:
              return l3.sent(), [3, 10];
            case 7:
              return o3 = l3.sent(), u3.debug("poll changelog sync error", o3), o3 instanceof b$2 && o3.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 9];
            case 8:
              l3.sent(), l3.label = 9;
            case 9:
              throw o3;
            case 10:
              return [2, e5];
          }
        });
      });
    }), this._connectionEventContext = l2.on(function(e5) {
      if (e5 instanceof Fr$1) if (e5.stateType === Rr$1.CONNECTED) r2.resume();
      else r2.pause();
    });
  }
  return e3.of = function(t4, n2, s4) {
    return Is[t4] || (Is[t4] = {}), Is[t4][n2.url] || (Is[t4][n2.url] = new e3({ _iid: t4, channel: n2, hasPollMessage: s4 })), Is[t4][n2.url].ref++, Is[t4][n2.url];
  }, e3.prototype.loadMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this._metadata ? [3, 2] : [4, uo.of(this._iid).cacheContext.preference.get(this._metadataKey)];
          case 1:
            e4 = t4.sent(), this._metadata = e4 ? { token: e4.token } : void 0, t4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, e3.prototype.saveMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._metadata ? [4, uo.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, e3.prototype.clearMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, uo.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e4.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e3.prototype.resume = function() {
    uo.of(this._iid).logger.debug("poll changelog sync resume()"), this._sync.start(0);
  }, e3.prototype.pause = function() {
    uo.of(this._iid).logger.debug("poll changelog sync pause()"), this._sync.stop();
  }, e3.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Is[this._iid][this._channel.url]);
  }, e3;
}(), Ls = function(n2) {
  function s4(e3) {
    var s5, r2, a4, i3, o2, u3, c3, l2, h4, d4, _2 = this;
    return (_2 = n2.call(this) || this).method = ae.GET, _2.path = "".concat(Re$3(e3.channelType), "/").concat(e3.channelUrl, "/messages_gap"), _2.params = se({ prev_start_ts: e3.prevStart, prev_end_ts: e3.prevEnd, prev_cache_count: e3.prevCount, next_start_ts: e3.nextStart, next_end_ts: e3.nextEnd, next_cache_count: e3.nextCount, huge_gap_threshold: null !== (s5 = e3.threshold) && void 0 !== s5 ? s5 : null, reverse: true, custom_types: null !== (r2 = e3.customTypes) && void 0 !== r2 ? r2 : ["*"], message_type: null !== (a4 = e3.messageType) && void 0 !== a4 ? a4 : null, include_reply_type: null !== (i3 = e3.replyType) && void 0 !== i3 ? i3 : Q.NONE, include_reactions_summary: null === (o2 = e3.includeReactions) || void 0 === o2 || o2, include_meta_array: null === (u3 = e3.includeMetaArray) || void 0 === u3 || u3, include_thread_info: null === (c3 = e3.includeThreadInfo) || void 0 === c3 || c3, include_parent_message_info: null === (l2 = e3.includeParentMessageInfo) || void 0 === l2 || l2, with_sorted_meta_array: null === (h4 = e3.includeMetaArray) || void 0 === h4 || h4, show_subchannel_messages_only: null !== (d4 = e3.showSubchannelMessagesOnly) && void 0 !== d4 && d4, include_poll_details: true, checking_continuous_messages: e3.checkingContinuousMessages }), _2;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Ds = function(t4) {
  function n2(e3, n3) {
    var s4, r2, a4, i3, o2, u3, c3 = this;
    return (c3 = t4.call(this, e3, n3) || this).isHugeGap = n3.is_huge_gap, c3.prevMessages = (null !== (s4 = n3.prev_messages) && void 0 !== s4 ? s4 : []).map(function(t5) {
      return At$1(e3, t5);
    }), c3.prevHasMore = null !== (r2 = n3.prev_hasmore) && void 0 !== r2 && r2, c3.isContinuousPrevMessages = null !== (a4 = n3.is_continuous_prev_messages) && void 0 !== a4 && a4, c3.nextMessages = (null !== (i3 = n3.next_messages) && void 0 !== i3 ? i3 : []).map(function(t5) {
      return At$1(e3, t5);
    }), c3.nextHasmore = null !== (o2 = n3.next_hasmore) && void 0 !== o2 && o2, c3.isContinuousNextMessages = null !== (u3 = n3.is_continuous_next_messages) && void 0 !== u3 && u3, c3;
  }
  return t$2(n2, t4), n2;
}(qe$2), xs = { includeMetaArray: true, includeReactions: true, includeThreadInfo: true, includeParentMessageInfo: true };
!function(e3) {
  e3.CACHE_AND_REPLACE_BY_API = "cache_and_replace_by_api";
}(ms || (ms = {}));
var Rs, Fs, ks, Ps = function() {
  function e3() {
    this._onCacheResult = ut$1, this._onApiResult = ut$1;
  }
  return e3.prototype._invokeResponse = function(e4, t4, n2) {
    var s4 = this;
    kr$1(function() {
      return r$1(s4, void 0, void 0, function() {
        return s$1(this, function(s5) {
          switch (e4) {
            case "local":
              this._onCacheResult(t4, n2);
              break;
            case "remote":
              this._onApiResult(t4, n2);
          }
          return [2];
        });
      });
    });
  }, e3.prototype.onCacheResult = function(e4) {
    return this._onCacheResult = e4, this;
  }, e3.prototype.onApiResult = function(e4) {
    return this._onApiResult = e4, this;
  }, e3;
}(), Os = function() {
  function e3(e4, t4) {
    var n2 = t4.filter, s4 = t4.startingPoint, r2 = t4.limit, a4 = t4.prevResultLimit, i3 = t4.nextResultLimit, o$1 = t4.channel, u3 = t4.channelManager, c$1 = t4.disableBackgroundSync, l2 = void 0 !== c$1 && c$1, h4 = this;
    this._messages = [], this._unsentMessages = [], this._isLoadingPrevious = false, this._isLoadingNext = false, this._iid = e4, this._key = "mc-".concat(ee()), this._isDisposed = false, this.filter = null != n2 ? n2 : new qs$1(), this._channel = o$1, this._syncRange = new Es({}), this._hasPrevious = true, this._hasNext = true, this._startingPoint = "number" == typeof s4 && Number.isFinite(s4) ? s4 : Number.MAX_SAFE_INTEGER, this._limit = r2 || Xr, this._prevResultLimit = null != a4 ? a4 : Math.floor(this._limit / 2), this._nextResultLimit = null != i3 ? i3 : Math.floor(this._limit / 2), this._channelManager = u3;
    var m4 = uo.of(this._iid).statManager;
    this._channelManager.subscribeChannelEvent(this._key, { onUpdate: function(e5, t5) {
      var n3 = t5.source, s5 = e5.findIndex(function(e6) {
        return e6.isIdentical(h4.channel);
      });
      s5 >= 0 && (h4._replaceChannelOfCollection(e5[s5]), h4.channel._runIfHandleableWithGroupChannel(function(e6) {
        switch (n3) {
          case no.EVENT_CHANNEL_UPDATED:
            for (var s6 = false, r3 = 0; r3 < h4._messages.length; r3++) {
              if (h4._messages[r3].createdAt >= e6.messageOffsetTimestamp) {
                s6 = true;
                var a5 = r3;
                if (a5 > 0) {
                  var i4 = h4._messages.splice(0, a5);
                  h4._removeMessagesFromView(i4.map(function(e7) {
                    return h4.keyOf(e7);
                  }), no.EVENT_MESSAGE_OFFSET_UPDATED);
                }
                break;
              }
            }
            !s6 && h4._messages.length > 0 && h4._removeMessagesFromView(h4._messages.map(function(e7) {
              return h4.keyOf(e7);
            }), no.EVENT_MESSAGE_OFFSET_UPDATED);
            break;
          case no.EVENT_CHANNEL_UNMUTED:
            var o2 = uo.of(h4._iid).sdkState, u4 = t5.user;
            o2.userId === u4.userId && h4._clearCheckMyMutedTimer();
            break;
          case no.EVENT_CHANNEL_MUTED:
            o2 = uo.of(h4._iid).sdkState, u4 = t5.user;
            o2.userId === u4.userId && -1 !== e6._myMutedRemainingTime && h4._startCheckMyMutedTimer(e6._myMutedRemainingTime);
            break;
          case no.EVENT_CHANNEL_LEFT:
            e6.isPublic && h4._clearCheckMyMutedTimer();
        }
        kr$1(function() {
          return r$1(h4, void 0, void 0, function() {
            var e7;
            return s$1(this, function(s7) {
              return Nn$1(n3) && (null === (e7 = this._handler) || void 0 === e7 ? void 0 : e7.onChannelUpdated) && this._handler.onChannelUpdated(t5, this.channel), [2];
            });
          });
        });
      }), h4._postprocessChannelUpdateEvent(e5[s5], n3));
    }, onRemove: function(e5, t5) {
      var n3 = e5.indexOf(h4.channel.url);
      n3 >= 0 && h4._channel._runIfHandleableWithGroupChannel(function(s5) {
        s5.myMemberState = Zt$1.NONE, h4._clearCheckMyMutedTimer(), kr$1(function() {
          return r$1(h4, void 0, void 0, function() {
            var e6;
            return s$1(this, function(n4) {
              return (null === (e6 = this._handler) || void 0 === e6 ? void 0 : e6.onChannelDeleted) && this._handler.onChannelDeleted(t5, this.channel.url), [2];
            });
          });
        }), h4._postprocessChannelRemoveEvent(e5[n3]);
      });
    } }), this._channelManager.subscribeMessageEvent(this._key, { onUpdate: function(e5, t5) {
      var n3, s5, r3 = [], a5 = [];
      try {
        for (var i4 = o(e5), o$12 = i4.next(); !o$12.done; o$12 = i4.next()) {
          var u4 = o$12.value;
          u4.channelUrl === h4._channel.url && (h4.filter.match(u4) ? r3.push(u4) : a5.push(h4.keyOf(u4)));
        }
      } catch (e6) {
        n3 = { error: e6 };
      } finally {
        try {
          o$12 && !o$12.done && (s5 = i4.return) && s5.call(i4);
        } finally {
          if (n3) throw n3.error;
        }
      }
      if (fo(t5)) {
        if (r3.length > 0) switch (t5) {
          case no.LOCAL_MESSAGE_CANCELED:
          case no.LOCAL_MESSAGE_RESEND_STARTED:
          case no.EVENT_MESSAGE_SENT_FAILED:
          case no.EVENT_MESSAGE_SENT_SUCCESS:
          case no.EVENT_MESSAGE_UPDATED:
          case no.EVENT_MESSAGE_THREADINFO_UPDATED:
          case no.EVENT_MESSAGE_REACTION_UPDATED:
          case no.EVENT_MESSAGE_FEEDBACK_ADDED:
          case no.EVENT_MESSAGE_FEEDBACK_UPDATED:
          case no.EVENT_MESSAGE_FEEDBACK_DELETED:
          case no.SYNC_MESSAGE_CHANGELOGS:
            h4._updateMessagesToView(r3, t5);
            break;
          case no.EVENT_MESSAGE_SENT_PENDING:
            h4._addMessagesToView(r3, t5);
            break;
          case no.EVENT_MESSAGE_RECEIVED:
            h4.hasNext || h4._addMessagesToView(r3, t5);
            break;
          case no.SYNC_MESSAGE_FILL:
            h4._addMessagesToView(r3, t5);
        }
        a5.length > 0 && h4._removeMessagesFromView(a5, t5);
      }
      h4._postprocessMessageUpdateEvent(e5, t5);
    }, onRemove: function(e5, t5) {
      h4._removeMessagesFromView(e5, t5), h4._postprocessMessageRemoveEvent(e5);
    }, onRemoveUnsent: function(e5, t5) {
      h4._removeUnsentMessageFromView(e5, t5);
    }, onPollChangeLogUpdate: function(e5, t5) {
      h4._updatePollsToView(e5, t5);
    }, onPollUpdate: function(e5, t5) {
      h4._applyPollUpdateEventToView(e5, t5);
    }, onPollVote: function(e5, t5) {
      h4._applyPollVoteEventToView(e5, t5);
    }, onReactionUpdate: function(e5, t5) {
      h4._applyReactionEventToView(e5, t5);
    }, onThreadInfoUpdate: function(e5, t5) {
      h4._applyThreadInfoEventToView(e5, t5);
    }, onDeletedByRetentionPolicy: function(e5, t5, n3) {
      t5 === h4.channel.url && h4._messageRetention(e5, n3);
    } });
    var g2 = uo.of(this._iid), E3 = g2.cacheContext, C2 = g2.dispatcher, M4 = g2.messageBackgroundSyncThrottleController;
    this._channel._updateMessageCollectionLastAccessedAt(), C2.dispatch(new Un$1({ channels: [this._channel], context: { source: no.CHANNEL_LASTACCESSEDAT_UPDATED } })), this._backgroundSync = Ss.of(this._iid, this._channel), !l2 && this._shouldStartBackgroundSync() && this._backgroundSync.resume(this._startingPoint), this._changelogSync = As.of(this._iid, this._channel, this.changelogIncludeParams), this._changelogSync.resume(), this._pollChangelogSync = ws.of(this._iid, this._channel, this._hasPollMessage.bind(this)), this._pollChangelogSync.resume(), this._prevFill = new w(this._key, function(e5) {
      return r$1(h4, void 0, void 0, function() {
        var t5 = this;
        return s$1(this, function(n3) {
          switch (n3.label) {
            case 0:
              return [4, M4.run("message-fill-sync-".concat(o$1.url, "-prev"), function() {
                return r$1(t5, void 0, void 0, function() {
                  var t6, n4, s5, r3, a5, i4, o2;
                  return s$1(this, function(u4) {
                    switch (u4.label) {
                      case 0:
                        return [4, this._getRemoteMessages(e5, { prevLimit: this._prevResultLimit, source: no.SYNC_MESSAGE_FILL, checkingContinuousMessages: E3.localCacheEnabled, sdkSource: qt$1.INTERNAL_FILL_GAP })];
                      case 1:
                        return t6 = u4.sent(), n4 = t6.messages, s5 = t6.isContinuousMessages, n4.length > 0 ? (r3 = Math.min.apply(Math, c([], a$1(n4.map(function(e6) {
                          return e6.createdAt;
                        })), false)), this._syncRange.extends(r3), s5 && (null === (a5 = this._backgroundSync) || void 0 === a5 || a5.range.extends(r3)), [2, { hasNext: n4.length >= this._prevResultLimit && this.viewTop < r3, nextToken: this._syncRange.top }]) : (E3.localCacheEnabled && m4.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (o2 = null === (i4 = E3.localCacheConfig) || void 0 === i4 ? void 0 : i4.maxSize) && void 0 !== o2 ? o2 : 0, use_local_cache: E3.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [2, { hasNext: false, nextToken: 0 }]);
                    }
                  });
                });
              })];
            case 1:
              return [2, n3.sent()];
          }
        });
      });
    }), this._nextFill = new w(this._key, function(e5) {
      return r$1(h4, void 0, void 0, function() {
        var t5 = this;
        return s$1(this, function(n3) {
          switch (n3.label) {
            case 0:
              return [4, M4.run("message-fill-sync-".concat(o$1.url, "-next"), function() {
                return r$1(t5, void 0, void 0, function() {
                  var t6, n4, s5, r3, a5, i4, o2, u4;
                  return s$1(this, function(c$12) {
                    switch (c$12.label) {
                      case 0:
                        return [4, this._getRemoteMessages(e5, { nextLimit: this._nextResultLimit, source: no.SYNC_MESSAGE_FILL, checkingHasNext: true, checkingContinuousMessages: E3.localCacheEnabled, sdkSource: qt$1.INTERNAL_FILL_GAP })];
                      case 1:
                        return t6 = c$12.sent(), n4 = t6.messages, s5 = t6.isContinuousMessages, r3 = t6.hasNext, n4.length > 0 ? (a5 = Math.max.apply(Math, c([], a$1(n4.map(function(e6) {
                          return e6.createdAt;
                        })), false)), this._syncRange.extends(a5), s5 && (null === (i4 = this._backgroundSync) || void 0 === i4 || i4.range.extends(a5)), [2, { hasNext: r3, nextToken: this._syncRange.bottom }]) : (E3.localCacheEnabled && m4.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (u4 = null === (o2 = E3.localCacheConfig) || void 0 === o2 ? void 0 : o2.maxSize) && void 0 !== u4 ? u4 : 0, use_local_cache: E3.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [2, { hasNext: false, nextToken: 0 }]);
                    }
                  });
                });
              })];
            case 1:
              return [2, n3.sent()];
          }
        });
      });
    }), this._connectionEventContext = C2.on(function(e5) {
      if (e5 instanceof Fr$1) switch (e5.stateType) {
        case Rr$1.CONNECTED:
          Dr$1(function() {
            return r$1(h4, void 0, void 0, function() {
              return s$1(this, function(e6) {
                return this._activate(), [2];
              });
            });
          });
          break;
        case Rr$1.LOGOUT:
          h4.dispose();
          break;
        default:
          h4._clearCheckMyMutedTimer(), h4._prevFill.stop(), h4._nextFill.stop();
      }
    });
  }
  return e3.prototype.keyOf = function(e4) {
    return 0;
  }, Object.defineProperty(e3.prototype, "changelogIncludeParams", { get: function() {
    return { includeReactions: true, includeThreadInfo: true, includeMetaArray: true, includeParentMessageInfo: true };
  }, enumerable: false, configurable: true }), e3.prototype._postprocessChannelUpdateEvent = function(e4, t4) {
  }, e3.prototype._postprocessChannelRemoveEvent = function(e4) {
  }, e3.prototype._postprocessMessageUpdateEvent = function(e4, t4) {
  }, e3.prototype._postprocessMessageRemoveEvent = function(e4) {
  }, Object.defineProperty(e3.prototype, "channel", { get: function() {
    return this._channel;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "succeededMessages", { get: function() {
    return c([], a$1(this._messages), false);
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "failedMessages", { get: function() {
    return this._unsentMessages.filter(function(e4) {
      return e4.sendingStatus === Z.FAILED;
    });
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "pendingMessages", { get: function() {
    return this._unsentMessages.filter(function(e4) {
      return e4.sendingStatus === Z.PENDING;
    });
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "hasPrevious", { get: function() {
    return this._hasPrevious;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "hasNext", { get: function() {
    return this._hasNext;
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "viewTop", { get: function() {
    return Math.min.apply(Math, c(c([], a$1(this._messages.map(function(e4) {
      return e4.createdAt;
    })), false), [Number.MAX_SAFE_INTEGER], false));
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "viewBottom", { get: function() {
    return Math.max.apply(Math, c(c([], a$1(this._messages.map(function(e4) {
      return e4.createdAt;
    })), false), [0], false));
  }, enumerable: false, configurable: true }), e3.prototype._activate = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return uo.of(this._iid).logger.debug("check huge gap"), this._checkHugeGap(), [4, this._refreshChannel(no.SYNC_CHANNEL_CHANGELOGS)];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, e3.prototype._replaceChannelOfCollection = function(e4) {
    this._channel.isGroupChannel() ? this._channel = e4 : this._channel.isFeedChannel() && (this._channel._groupChannel = e4._groupChannel);
  }, e3.prototype._shouldStartBackgroundSync = function() {
    var e4 = uo.of(this._iid).cacheContext;
    return this.channel.isGroupChannel() ? e4.localCacheEnabled && !this.channel.isSuper : e4.localCacheEnabled;
  }, e3.prototype._setBaseMessageCollectionHandler = function(e4) {
    this._handler = e4;
  }, e3.prototype._filterUnderOffsetMessage = function(e4) {
    return e4;
  }, e3.prototype._updateChildMessagesInView = function(e4) {
    var t4 = [];
    return this._messages.forEach(function(n2) {
      n2 instanceof yt && n2.parentMessageId === e4.messageId && n2.applyParentMessage(e4) && t4.push(n2);
    }), t4;
  }, e3.prototype._updatePollsToView = function(e4, t4) {
    var n2, s4, r2 = this, a4 = [];
    try {
      for (var i3 = o(e4), o$1 = i3.next(); !o$1.done; o$1 = i3.next()) {
        var u3 = o$1.value, c3 = bs(this._messages, u3.messageId);
        if (c3 >= 0) {
          var l2 = this._messages[c3];
          l2.isUserMessage() && l2.applyPoll(u3), a4.push(l2);
        }
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        o$1 && !o$1.done && (s4 = i3.return) && s4.call(i3);
      } finally {
        if (n2) throw n2.error;
      }
    }
    return a4.length > 0 && fo(t4) && kr$1(function() {
      return r$1(r2, void 0, void 0, function() {
        var e5, n3, s5;
        return s$1(this, function(r3) {
          return e5 = { source: t4 }, a4.length > 0 && (null === (s5 = (n3 = this._handler).onMessagesUpdated) || void 0 === s5 || s5.call(n3, e5, this.channel, a4)), [2];
        });
      });
    }), a4;
  }, e3.prototype._applyPollUpdateEventToView = function(e4, t4) {
    var n2 = this, s4 = bs(this._messages, e4.messageId);
    if (s4 >= 0) {
      var r2 = this._messages[s4];
      r2 && r2.isUserMessage() && r2.poll && r2.poll.applyPollUpdateEvent(e4) && fo(t4) && kr$1(function() {
        return r$1(n2, void 0, void 0, function() {
          var e5, n3, s5;
          return s$1(this, function(a4) {
            return e5 = { source: t4 }, null === (s5 = null === (n3 = this._handler) || void 0 === n3 ? void 0 : n3.onMessagesUpdated) || void 0 === s5 || s5.call(n3, e5, this.channel, [r2]), [2];
          });
        });
      });
    }
  }, e3.prototype._applyPollVoteEventToView = function(e4, t4) {
    var n2 = this, s4 = bs(this._messages, e4.messageId);
    if (s4 >= 0) {
      var r2 = this._messages[s4];
      r2 && r2.isUserMessage() && r2.poll && r2.poll.applyPollVoteEvent(e4) && fo(t4) && kr$1(function() {
        return r$1(n2, void 0, void 0, function() {
          var e5, n3, s5;
          return s$1(this, function(a4) {
            return e5 = { source: t4 }, null === (s5 = null === (n3 = this._handler) || void 0 === n3 ? void 0 : n3.onMessagesUpdated) || void 0 === s5 || s5.call(n3, e5, this.channel, [r2]), [2];
          });
        });
      });
    }
  }, e3.prototype._applyReactionEventToView = function(e4, t4) {
    var n2 = this, s4 = bs(this._messages, e4.messageId);
    if (s4 >= 0) {
      var r2 = this._messages[s4];
      r2 && (r2.isUserMessage() || r2.isFileMessage() || r2.isMultipleFilesMessage()) && fo(t4) && (r2.applyReactionEvent(e4), kr$1(function() {
        return r$1(n2, void 0, void 0, function() {
          var e5, n3, s5;
          return s$1(this, function(a4) {
            return e5 = { source: t4 }, null === (s5 = null === (n3 = this._handler) || void 0 === n3 ? void 0 : n3.onMessagesUpdated) || void 0 === s5 || s5.call(n3, e5, this.channel, [r2]), [2];
          });
        });
      }));
    }
  }, e3.prototype._applyThreadInfoEventToView = function(e4, t4) {
    var n2 = this, s4 = bs(this._messages, e4.targetMessageId);
    if (s4 >= 0) {
      var r2 = this._messages[s4];
      r2 && (r2.isUserMessage() || r2.isFileMessage() || r2.isMultipleFilesMessage()) && fo(t4) && (r2.applyThreadInfoUpdateEvent(e4), kr$1(function() {
        return r$1(n2, void 0, void 0, function() {
          var e5, n3, s5;
          return s$1(this, function(a4) {
            return e5 = { source: t4 }, null === (s5 = null === (n3 = this._handler) || void 0 === n3 ? void 0 : n3.onMessagesUpdated) || void 0 === s5 || s5.call(n3, e5, this.channel, [r2]), [2];
          });
        });
      }));
    }
  }, e3.prototype._removeMessagesFromView = function(e4, t4) {
    var n2, s4, r2 = this, a4 = [], i3 = [], o$1 = function(e5) {
      var t5 = u3._messages.findIndex(function(t6) {
        return r2.keyOf(t6) === e5;
      });
      if (t5 >= 0) {
        var n3 = u3._messages[t5];
        a4.push(u3.keyOf(n3)), i3.push(n3), u3._messages.splice(t5, 1);
      }
    }, u3 = this;
    try {
      for (var c3 = o(e4), l2 = c3.next(); !l2.done; l2 = c3.next()) {
        o$1(l2.value);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        l2 && !l2.done && (s4 = c3.return) && s4.call(c3);
      } finally {
        if (n2) throw n2.error;
      }
    }
    return fo(t4) && i3.length > 0 && kr$1(function() {
      return r$1(r2, void 0, void 0, function() {
        var e5, n3, s5;
        return s$1(this, function(r3) {
          return e5 = { source: t4 }, null === (s5 = null === (n3 = this._handler) || void 0 === n3 ? void 0 : n3.onMessagesDeleted) || void 0 === s5 || s5.call(n3, e5, this.channel, a4, i3), [2];
        });
      });
    }), a4;
  }, e3.prototype._messageRetention = function(e4, t4) {
    var n2, s4, r2 = [];
    try {
      for (var a4 = o(this._messages), i3 = a4.next(); !i3.done; i3 = a4.next()) {
        var o$1 = i3.value;
        o$1.createdAt <= e4 && r2.push(this.keyOf(o$1));
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        i3 && !i3.done && (s4 = a4.return) && s4.call(a4);
      } finally {
        if (n2) throw n2.error;
      }
    }
    r2.length > 0 && this._removeMessagesFromView(r2, t4);
  }, e3.prototype._removeUnsentMessageFromView = function(e4, t4) {
    var n2 = this._unsentMessages.findIndex(function(t5) {
      return t5.reqId === e4;
    });
    n2 >= 0 && this._unsentMessages.splice(n2, 1);
  }, e3.prototype._getLocalMessages = function(e4, t4) {
    var n2 = t4.prevLimit, s4 = void 0 === n2 ? 0 : n2, r2 = t4.nextLimit, a4 = void 0 === r2 ? 0 : r2, i3 = t4.inclusive, o2 = void 0 === i3 || i3;
    return r$1(this, void 0, void 0, function() {
      var t5, n3, r3, i4, u3;
      return s$1(this, function(c$1) {
        switch (c$1.label) {
          case 0:
            return t5 = [], o2 ? [4, this._channelManager.getExactlyMatchingMessagesForTokenFromCache(this._channel.url, e4, this.filter)] : [3, 2];
          case 1:
            t5 = c$1.sent(), c$1.label = 2;
          case 2:
            return s4 > 0 ? [4, this._channelManager.getMessagesFromCache(this._channel.url, e4, "prev", this.filter, s4, false)] : [3, 4];
          case 3:
            return r3 = c$1.sent(), [3, 5];
          case 4:
            r3 = [], c$1.label = 5;
          case 5:
            return n3 = r3, a4 > 0 ? [4, this._channelManager.getMessagesFromCache(this._channel.url, e4, "next", this.filter, a4, false)] : [3, 7];
          case 6:
            return u3 = c$1.sent(), [3, 8];
          case 7:
            u3 = [], c$1.label = 8;
          case 8:
            return i4 = u3, [2, { messages: c(c(c([], a$1(t5), false), a$1(n3), false), a$1(i4), false).sort(function(e5, t6) {
              return t6.createdAt - e5.createdAt;
            }), prevMessagesCount: n3.length, nextMessagesCount: i4.length }];
        }
      });
    });
  }, e3.prototype._getRemoteMessages = function(e4, t4) {
    var r2 = t4.prevLimit, a4 = void 0 === r2 ? 0 : r2, i3 = t4.nextLimit, o2 = void 0 === i3 ? 0 : i3, u3 = t4.source, c3 = void 0 === u3 ? no.REQUEST_MESSAGE : u3, l2 = t4.reverse, h4 = void 0 !== l2 && l2, d4 = t4.checkingHasNext, _2 = void 0 !== d4 && d4, v2 = t4.checkingContinuousMessages, m4 = void 0 !== v2 && v2, g2 = t4.sdkSource;
    return r$1(this, void 0, void 0, function() {
      var t5, r3;
      return s$1(this, function(i4) {
        switch (i4.label) {
          case 0:
            return t5 = la.of(this._iid), a4 > 0 || o2 > 0 ? [4, t5._getMessagesByTimestampForCollection(this._channel.url, this._channel.channelType, e4, oe(n$2(n$2(n$2({}, this.filter), xs), { isInclusive: true, reverse: h4, prevResultSize: a4, nextResultSize: o2 })), c3, _2, m4, g2)] : [3, 2];
          case 1:
            return r3 = i4.sent(), [3, 3];
          case 2:
            r3 = { messages: [], isContinuousMessages: false }, i4.label = 3;
          case 3:
            return [2, r3];
        }
      });
    });
  }, e3.prototype._checkHugeGap = function() {
    var e4, t4, n2, r2, a4;
    return r$1(this, void 0, void 0, function() {
      var i3, o2, u3, c$1, l2, v2, m4, g2, E3, C2, M4, b3, N2, U2, S4, T3, A2, I3, w3, L3, D3, x3, R3, F2, P2, O3 = this;
      return s$1(this, function(G3) {
        switch (G3.label) {
          case 0:
            return i3 = uo.of(this._iid), o2 = i3.dispatcher, u3 = i3.requestQueue, c$1 = i3.cacheContext, l2 = i3.statManager, v2 = i3.logger, this._messages.length > 0 ? (m4 = this._syncRange.top, g2 = this.viewTop, E3 = this._syncRange.bottom, C2 = this.hasNext ? this.viewBottom : Number.MAX_SAFE_INTEGER, [4, this._channelManager.getCachedMessageCountBetween(this._channel.url, this.filter, g2, m4)]) : [3, 8];
          case 1:
            return M4 = G3.sent(), [4, this._channelManager.getCachedMessageCountBetween(this._channel.url, this.filter, E3, C2)];
          case 2:
            b3 = G3.sent(), G3.label = 3;
          case 3:
            return G3.trys.push([3, 5, 6, 7]), [4, ws$2(function() {
              return r$1(O3, void 0, void 0, function() {
                var e5, t5, n3, r3, a5, i4, l3, h4, v3, N3, U3, S5, T4, A3, I4, w4, L4, D4 = this;
                return s$1(this, function(x4) {
                  switch (x4.label) {
                    case 0:
                      return e5 = new Ls(n$2(n$2({ channelUrl: this._channel.url, channelType: this._channel.channelType, prevStart: g2, prevEnd: m4, prevCount: M4, nextStart: E3, nextEnd: C2, nextCount: b3, checkingContinuousMessages: c$1.localCacheEnabled }, this.filter), xs)), [4, u3.send(e5)];
                    case 1:
                      return t5 = x4.sent(), n3 = t5.as(Ds), r3 = n3.isHugeGap, a5 = n3.prevMessages, i4 = void 0 === a5 ? [] : a5, l3 = n3.prevHasMore, h4 = n3.isContinuousPrevMessages, v3 = n3.nextMessages, N3 = void 0 === v3 ? [] : v3, U3 = n3.nextHasmore, S5 = n3.isContinuousNextMessages, r3 ? kr$1(function() {
                        return r$1(D4, void 0, void 0, function() {
                          var e6;
                          return s$1(this, function(t6) {
                            return (null === (e6 = this._handler) || void 0 === e6 ? void 0 : e6.onHugeGapDetected) && this._handler.onHugeGapDetected(), [2];
                          });
                        });
                      }) : (T4 = this.viewTop, A3 = this.viewBottom, I4 = Math.min.apply(Math, c([Number.MAX_SAFE_INTEGER, T4], a$1(i4.map(function(e6) {
                        return e6.createdAt;
                      })), false)), w4 = Math.max.apply(Math, c([0, A3], a$1(N3.map(function(e6) {
                        return e6.createdAt;
                      })), false)), o2.dispatch(new po({ messages: i4, source: no.SYNC_MESSAGE_FILL })), o2.dispatch(new po({ messages: N3, source: no.SYNC_MESSAGE_FILL })), this._syncRange.extends(I4, w4), (h4 || S5) && (null === (L4 = this._backgroundSync) || void 0 === L4 || L4.range.extends(I4, w4)), l3 && this._prevFill.start(I4), U3 && this._nextFill.start(w4)), [2];
                  }
                });
              });
            }, 1)];
          case 4:
            return G3.sent(), [3, 7];
          case 5:
            return N2 = G3.sent(), v2.debug("Failed HugeGap Check ", N2), [3, 7];
          case 6:
            return c$1.localCacheEnabled && l2.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (t4 = null === (e4 = c$1.localCacheConfig) || void 0 === e4 ? void 0 : e4.maxSize) && void 0 !== t4 ? t4 : 0, use_local_cache: c$1.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
          case 7:
            return [3, 13];
          case 8:
            U2 = Date.now(), G3.label = 9;
          case 9:
            return G3.trys.push([9, 11, 12, 13]), [4, this._getRemoteMessages(U2, { prevLimit: this._prevResultLimit, nextLimit: this._nextResultLimit, source: no.SYNC_MESSAGE_FILL, checkingHasNext: true, checkingContinuousMessages: c$1.localCacheEnabled, sdkSource: qt$1.INTERNAL_FILL_GAP })];
          case 10:
            if (S4 = G3.sent(), T3 = S4.messages, A2 = S4.isContinuousMessages, I3 = S4.hasNext, T3.length > 0) {
              for (w3 = T3.map(function(e5) {
                return e5.createdAt;
              }), L3 = 0, D3 = 0, x3 = 0; x3 < w3.length; x3++) (R3 = w3[x3]) <= U2 ? L3++ : R3 >= U2 && D3++;
              this._hasPrevious = L3 >= this._prevResultLimit, this._hasNext = null != I3 ? I3 : D3 >= this._nextResultLimit, (P2 = this._syncRange).extends.apply(P2, c([], a$1(w3), false)), A2 && (null === (n2 = this._backgroundSync) || void 0 === n2 || n2.range.extends(this._syncRange.top, this._syncRange.bottom)), this._addMessagesToView(T3, no.SYNC_MESSAGE_FILL);
            } else this._hasPrevious = false, this._hasNext = false;
            return [3, 13];
          case 11:
            return (F2 = G3.sent()) instanceof b$2 && F2.code === u$1.NOT_FOUND_IN_DATABASE && (this._hasPrevious = false, this._hasNext = false), [3, 13];
          case 12:
            return c$1.localCacheEnabled && l2.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (a4 = null === (r2 = c$1.localCacheConfig) || void 0 === r2 ? void 0 : r2.maxSize) && void 0 !== a4 ? a4 : 0, use_local_cache: c$1.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
          case 13:
            return [2];
        }
      });
    });
  }, e3.prototype._loadUnsentMessages = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e4 = this, [4, this._channelManager.getUnsentMessagesFromCache(this._channel.url, this.filter)];
          case 1:
            return e4._unsentMessages = t4.sent(), [2];
        }
      });
    });
  }, e3.prototype._hasPollMessage = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._channelManager.getPollMessagesFromCache(this._channel.url, Date.now() + 6e5, this.filter, 1)];
          case 1:
            return e4.sent().length > 0 ? [2, true] : [2, false];
        }
      });
    });
  }, e3.prototype._refreshChannel = function(e4, t4) {
    return void 0 === t4 && (t4 = false), r$1(this, void 0, void 0, function() {
      var n2, s4, r2 = this;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            n2 = uo.of(this._iid).logger, a4.label = 1;
          case 1:
            return a4.trys.push([1, 3, , 4]), [4, this._channelManager.refreshChannel(this.channel.url, true, e4, t4)];
          case 2:
            return a4.sent(), this.channel._runIfHandleableWithGroupChannel(function(e5) {
              e5.myMutedState === z.MUTED && Dr$1(function() {
                return r$1(r2, void 0, void 0, function() {
                  var e6;
                  return s$1(this, function(t5) {
                    switch (t5.label) {
                      case 0:
                        return [4, this.channel.getMyMutedInfo()];
                      case 1:
                        return (e6 = t5.sent()).isMuted && -1 !== e6.remainingDuration && this._startCheckMyMutedTimer(e6.remainingDuration), [2];
                    }
                  });
                });
              });
            }), [3, 4];
          case 3:
            return s4 = a4.sent(), n2.warn("Failed to refresh channel", s4), [3, 4];
          case 4:
            return [2];
        }
      });
    });
  }, e3.prototype._startCheckMyMutedTimer = function(e4) {
    var t4 = this;
    this._clearCheckMyMutedTimer(), this._checkMyMutedStateTimer = setTimeout(function() {
      return r$1(t4, void 0, void 0, function() {
        var e5, t5, n2, s4 = this;
        return s$1(this, function(r2) {
          switch (r2.label) {
            case 0:
              this._checkMyMutedStateTimer = void 0, e5 = true, r2.label = 1;
            case 1:
              return r2.trys.push([1, 3, 4, 5]), [4, this._channel.getMyMutedInfo()];
            case 2:
              return t5 = r2.sent(), e5 = !t5.isMuted, [3, 5];
            case 3:
              return r2.sent(), e5 = true, [3, 5];
            case 4:
              return e5 && (n2 = uo.of(this._iid).sessionManager, this.channel._runIfHandleableWithGroupChannel(function(e6) {
                var t6, r3;
                e6.myMutedState = z.UNMUTED;
                var a4 = { source: no.EVENT_CHANNEL_UNMUTED, user: n2.currentUser };
                null === (r3 = null === (t6 = s4._handler) || void 0 === t6 ? void 0 : t6.onChannelUpdated) || void 0 === r3 || r3.call(t6, a4, s4.channel);
              })), [7];
            case 5:
              return [2];
          }
        });
      });
    }, e4 + 1e3);
  }, e3.prototype._clearCheckMyMutedTimer = function() {
    this._checkMyMutedStateTimer && (clearTimeout(this._checkMyMutedStateTimer), this._checkMyMutedStateTimer = void 0);
  }, e3.prototype._setHasNextAndHasPrevious = function(e4, t4) {
    for (var n2 = e4.map(function(e5) {
      return e5.createdAt;
    }), s4 = 0, r2 = 0, a4 = 0; a4 < n2.length; a4++) {
      var i3 = n2[a4];
      i3 < this._startingPoint ? s4++ : i3 > this._startingPoint && r2++;
    }
    this._hasPrevious = s4 >= this._prevResultLimit, this._hasNext = null != t4 ? t4 : r2 >= this._nextResultLimit;
  }, e3.prototype.initialize = function(e4) {
    var t4 = this, n2 = new Ps();
    this._messages = [], this._unsentMessages = [], this._syncRange = new Es({}), this._hasNext = true, this._hasPrevious = true;
    var s4 = [], r2 = { messages: [], prevMessagesCount: 0, nextMessagesCount: 0 };
    return kr$1(function() {
      return r$1(t4, void 0, void 0, function() {
        var t5, a4, i3, o2, u3, c$1 = this;
        return s$1(this, function(l2) {
          switch (l2.label) {
            case 0:
              return [4, null === (u3 = this._backgroundSync) || void 0 === u3 ? void 0 : u3.loadMetadata()];
            case 1:
              if (t5 = l2.sent(), a4 = uo.of(this._iid), i3 = a4.cacheContext, o2 = a4.statManager, e4 === ms.CACHE_AND_REPLACE_BY_API) this._getLocalMessages(this._startingPoint, { prevLimit: this._prevResultLimit, nextLimit: this._nextResultLimit }).then(function(e5) {
                return r$1(c$1, void 0, void 0, function() {
                  return s$1(this, function(t6) {
                    switch (t6.label) {
                      case 0:
                        return r2 = e5, s4 = this._filterUnderOffsetMessage(r2.messages), this._addMessagesToView(s4, no.REQUEST_MESSAGE), [4, this._loadUnsentMessages()];
                      case 1:
                        return t6.sent(), n2._invokeResponse("local", null, s4), [2];
                    }
                  });
                });
              }).catch(function(e5) {
                if (v$2(e5)) throw e5;
                n2._invokeResponse("local", e5, null);
              }).finally(function() {
                return r$1(c$1, void 0, void 0, function() {
                  var a5, i4, u4, c$12, l3, h4, p2, v2 = this;
                  return s$1(this, function(f2) {
                    switch (f2.label) {
                      case 0:
                        return a5 = uo.of(this._iid).cacheContext, i4 = true, u4 = true, c$12 = false, a5.localCacheEnabled && s4.length > 0 && (l3 = t5.range).includes.apply(l3, c([], a$1(s4.map(function(e5) {
                          return e5.createdAt;
                        })), false)) && (!t5.previousComplete && r2.prevMessagesCount < this._prevResultLimit ? u4 = true : this._startingPoint > t5.range.bottom || r2.nextMessagesCount < this._nextResultLimit ? c$12 = true : u4 = false), [4, this._refreshChannel(no.REFRESH_CHANNEL, c$12)];
                      case 1:
                        return f2.sent(), c$12 && this._channel._runIfHandleableWithGroupChannel(function(e5) {
                          var t6 = Math.max.apply(Math, c([], a$1(s4.map(function(e6) {
                            return e6.createdAt;
                          })), false));
                          e5._latestMessageInfo && t6 >= e5._latestMessageInfo.createdAt && (u4 = false);
                        }), u4 ? (i4 = false, this._getRemoteMessages(this._startingPoint, { prevLimit: this._prevResultLimit, nextLimit: this._nextResultLimit, reverse: true, checkingHasNext: true, checkingContinuousMessages: a5.localCacheEnabled, sdkSource: qt$1.EXTERNAL_COLLECTION }).then(function(e5) {
                          var t6, s5, r3, a6 = e5.messages, i5 = e5.isContinuousMessages, o3 = e5.hasNext, u5 = v2._filterUnderOffsetMessage(a6);
                          v2._messages = [], u5.length > 0 ? (v2._setHasNextAndHasPrevious(u5, o3), (t6 = v2._syncRange).extends.apply(t6, c([], a$1(u5.map(function(e6) {
                            return e6.createdAt;
                          })), false)), i5 && (null === (s5 = v2._backgroundSync) || void 0 === s5 ? void 0 : s5.range.overlap(v2._syncRange)) && (null === (r3 = v2._backgroundSync) || void 0 === r3 || r3.range.extends(v2._syncRange.top, v2._syncRange.bottom)), v2._addMessagesToView(u5, no.REQUEST_MESSAGE)) : (v2._hasPrevious = false, v2._hasNext = false), n2._invokeResponse("remote", null, u5);
                        }).catch(function(e5) {
                          if (v$2(e5)) throw e5;
                          n2._invokeResponse("remote", e5, null);
                        })) : (this._setHasNextAndHasPrevious(s4), n2._invokeResponse("remote", null, s4)), a5.localCacheEnabled && o2.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "initial_load", event: i4 ? "cache_hit" : "cache_miss", max_db_size: null !== (p2 = null === (h4 = a5.localCacheConfig) || void 0 === h4 ? void 0 : h4.maxSize) && void 0 !== p2 ? p2 : 0, message_init_policy: e4, use_local_cache: a5.localCacheEnabled, collection_id: this._key } })), [2];
                    }
                  });
                });
              });
              return o2.put(new Ws$2({ type: Me$1.FEATURE_LOCALCACHE, data: { use_local_cache: i3.localCacheEnabled, collection_interface: { message_init_policy: e4, message: true } } })), [2];
          }
        });
      });
    }), n2;
  }, e3.prototype.loadPrevious = function() {
    var e4, t4, n2;
    return r$1(this, void 0, void 0, function() {
      var s4, r2, a4, i3, o2, u3, c$1, l2, v2 = this;
      return s$1(this, function(m4) {
        switch (m4.label) {
          case 0:
            if (this._isDisposed) throw new b$2({ code: u$1.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return s4 = uo.of(this._iid), r2 = s4.cacheContext, a4 = s4.statManager, i3 = s4.logger, this._hasPrevious ? this._isLoadingPrevious ? (i3.warn("Messages are already fetching."), [2, []]) : (this._isLoadingPrevious = true, o2 = this.viewTop, u3 = [], [4, Dr$1(function() {
              return r$1(v2, void 0, void 0, function() {
                var e5;
                return s$1(this, function(t5) {
                  switch (t5.label) {
                    case 0:
                      return [4, this._getLocalMessages(o2, { prevLimit: this._prevResultLimit, inclusive: false })];
                    case 1:
                      return e5 = t5.sent(), u3 = this._filterUnderOffsetMessage(e5.messages), [2];
                  }
                });
              });
            })]) : [2, []];
          case 1:
            return m4.sent(), c$1 = u3.length >= this._prevResultLimit, r2.localCacheEnabled && a4.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_prev", event: c$1 ? "cache_hit" : "cache_miss", max_db_size: null !== (t4 = null === (e4 = r2.localCacheConfig) || void 0 === e4 ? void 0 : e4.maxSize) && void 0 !== t4 ? t4 : 0, use_local_cache: r2.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), c$1 && (null === (n2 = this._backgroundSync) || void 0 === n2 ? void 0 : n2.isWrappingMessages(u3)) ? [3, 3] : (l2 = false, [4, Dr$1(function() {
              return r$1(v2, void 0, void 0, function() {
                var e5, t5, n3, s5, r3, i4, c$12, h4 = this;
                return s$1(this, function(p2) {
                  switch (p2.label) {
                    case 0:
                      return e5 = uo.of(this._iid).cacheContext, [4, this._getRemoteMessages(o2, { prevLimit: this._prevResultLimit, reverse: true, checkingContinuousMessages: e5.localCacheEnabled, sdkSource: qt$1.EXTERNAL_COLLECTION })];
                    case 1:
                      return t5 = p2.sent(), (u3 = this._filterUnderOffsetMessage(t5.messages)).length > 0 && ((n3 = this._syncRange).extends.apply(n3, c([], a$1(u3.map(function(e6) {
                        return e6.createdAt;
                      })), false)), (null === (s5 = this._backgroundSync) || void 0 === s5 ? void 0 : s5.range.overlap(this._syncRange)) && t5.isContinuousMessages && (l2 = true, null === (r3 = this._backgroundSync) || void 0 === r3 || r3.range.extends(this._syncRange.top))), u3 = u3.filter(function(e6) {
                        return Ms(h4._messages, e6) < 0;
                      }), this._hasPrevious = u3.length >= this._prevResultLimit, l2 && a4.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_prev", event: "cache_fetch", max_db_size: null !== (c$12 = null === (i4 = e5.localCacheConfig) || void 0 === i4 ? void 0 : i4.maxSize) && void 0 !== c$12 ? c$12 : 0, use_local_cache: e5.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), [2];
                  }
                });
              });
            })]);
          case 2:
            return m4.sent(), this._addMessagesToView(u3, no.REQUEST_MESSAGE), [3, 4];
          case 3:
            this._hasPrevious = u3.length >= this._prevResultLimit, u3.length > 0 && this._addMessagesToView(u3, no.REQUEST_MESSAGE), m4.label = 4;
          case 4:
            return this._isLoadingPrevious = false, [2, u3];
        }
      });
    });
  }, e3.prototype.loadNext = function() {
    var e4, t4, n2;
    return r$1(this, void 0, void 0, function() {
      var s4, r2, a4, i3, o2, u3, c$1, l2, v2 = this;
      return s$1(this, function(m4) {
        switch (m4.label) {
          case 0:
            if (this._isDisposed) throw new b$2({ code: u$1.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return s4 = uo.of(this._iid), r2 = s4.cacheContext, a4 = s4.statManager, i3 = s4.logger, this._hasNext ? this._isLoadingNext ? (i3.warn("Messages are already fetching."), [2, []]) : (this._isLoadingNext = true, o2 = this.viewBottom, u3 = [], [4, Dr$1(function() {
              return r$1(v2, void 0, void 0, function() {
                var e5;
                return s$1(this, function(t5) {
                  switch (t5.label) {
                    case 0:
                      return [4, this._getLocalMessages(o2, { nextLimit: this._nextResultLimit, inclusive: false })];
                    case 1:
                      return e5 = t5.sent(), u3 = this._filterUnderOffsetMessage(e5.messages), [2];
                  }
                });
              });
            })]) : [2, []];
          case 1:
            return m4.sent(), c$1 = u3.length >= this._nextResultLimit, r2.localCacheEnabled && a4.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_next", event: c$1 ? "cache_hit" : "cache_miss", max_db_size: null !== (t4 = null === (e4 = r2.localCacheConfig) || void 0 === e4 ? void 0 : e4.maxSize) && void 0 !== t4 ? t4 : 0, use_local_cache: r2.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), c$1 && (null === (n2 = this._backgroundSync) || void 0 === n2 ? void 0 : n2.isWrappingMessages(u3)) ? [3, 3] : (l2 = false, [4, Dr$1(function() {
              return r$1(v2, void 0, void 0, function() {
                var e5, t5, n3, s5, r3, i4, c$12, h4, p2 = this;
                return s$1(this, function(f2) {
                  switch (f2.label) {
                    case 0:
                      return e5 = uo.of(this._iid).cacheContext, [4, this._getRemoteMessages(o2, { nextLimit: this._nextResultLimit, reverse: true, checkingHasNext: true, checkingContinuousMessages: e5.localCacheEnabled, sdkSource: qt$1.EXTERNAL_COLLECTION })];
                    case 1:
                      return t5 = f2.sent(), (u3 = this._filterUnderOffsetMessage(t5.messages)).length > 0 && ((n3 = this._syncRange).extends.apply(n3, c([], a$1(u3.map(function(e6) {
                        return e6.createdAt;
                      })), false)), (null === (s5 = this._backgroundSync) || void 0 === s5 ? void 0 : s5.range.overlap(this._syncRange)) && t5.isContinuousMessages && (l2 = true, null === (r3 = this._backgroundSync) || void 0 === r3 || r3.range.extends(this._syncRange.bottom))), u3 = u3.filter(function(e6) {
                        return Ms(p2._messages, e6) < 0;
                      }), this._hasNext = null !== (i4 = t5.hasNext) && void 0 !== i4 ? i4 : u3.length >= this._nextResultLimit, l2 && a4.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_next", event: "cache_fetch", max_db_size: null !== (h4 = null === (c$12 = e5.localCacheConfig) || void 0 === c$12 ? void 0 : c$12.maxSize) && void 0 !== h4 ? h4 : 0, use_local_cache: e5.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), [2];
                  }
                });
              });
            })]);
          case 2:
            return m4.sent(), this._addMessagesToView(u3, no.REQUEST_MESSAGE), [3, 4];
          case 3:
            this._hasNext = u3.length >= this._nextResultLimit, u3.length > 0 && this._addMessagesToView(u3, no.REQUEST_MESSAGE), m4.label = 4;
          case 4:
            return this._isLoadingNext = false, [2, u3];
        }
      });
    });
  }, e3.prototype.removeFailedMessage = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            if (this._isDisposed) throw new b$2({ code: u$1.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return [4, this._channelManager.removeFailedMessageFromCache(e4)];
          case 1:
            return n2.sent(), (t4 = this._unsentMessages.findIndex(function(t5) {
              return t5.reqId === e4;
            })) > -1 && this._unsentMessages.splice(t4, 1), [2];
        }
      });
    });
  }, e3.prototype.dispose = function() {
    var e4, t4, n2, s4 = this;
    if (!this._isDisposed) {
      this._isDisposed = true;
      var r2 = uo.of(this._iid), a4 = r2.cacheContext, i3 = r2.dispatcher;
      this._messages = [], this._clearCheckMyMutedTimer(), this._channel._runIfHandleableWithGroupChannel(function(e5) {
        e5.myMemberState !== Zt$1.NONE && (s4._channel._updateMessageCollectionLastAccessedAt(), i3.dispatch(new Un$1({ channels: [s4._channel], context: { source: no.CHANNEL_LASTACCESSEDAT_UPDATED } })));
      }), a4.localCacheEnabled && (this._prevFill.stop(), this._nextFill.stop()), null === (e4 = this._backgroundSync) || void 0 === e4 || e4.close(), null === (t4 = this._changelogSync) || void 0 === t4 || t4.close(), null === (n2 = this._pollChangelogSync) || void 0 === n2 || n2.close(), this._channelManager.unsubscribeChannelEvent(this._key), this._channelManager.unsubscribeMessageEvent(this._key), this._connectionEventContext && this._connectionEventContext.close();
    }
  }, e3;
}(), Hs = function(t4) {
  function n2(e3, n3) {
    return t4.call(this, e3, n$2(n$2({}, n3), { channelManager: ys.of(e3) })) || this;
  }
  return t$2(n2, t4), n2.prototype.keyOf = function(e3) {
    return e3.messageId;
  }, n2.prototype.initialize = function(e3) {
    return t4.prototype.initialize.call(this, e3);
  }, n2.prototype.setMessageCollectionHandler = function(e3) {
    this._setBaseMessageCollectionHandler(e3);
  }, n2.prototype._addMessagesToView = function(e3, t5) {
    var n3, s4, r2 = this, a4 = this._filterUnderOffsetMessage(e3), i3 = [], o$1 = [];
    try {
      for (var u3 = o(a4), c$1 = u3.next(); !c$1.done; c$1 = u3.next()) {
        var l2 = c$1.value;
        if (t5 === no.SYNC_MESSAGE_FILL) {
          if (l2.messageId > 0) {
            if ((E3 = Ms(this._messages, l2)) < 0) {
              Ms(this._unsentMessages, l2) < 0 && i3.push(l2);
              var h4 = Ns(this._messages, l2);
              this._messages.splice(h4, 0, l2);
            }
          } else if (l2 instanceof _t) {
            (E3 = Ms(this._unsentMessages, l2)) < 0 && Ms(this._messages, l2) < 0 && (this._unsentMessages.push(l2), i3.push(l2));
          }
        } else if (l2.messageId > 0) {
          if ((E3 = Ms(this._messages, l2)) < 0) {
            var m4 = Ms(this._unsentMessages, l2);
            m4 < 0 ? i3.push(l2) : (this._unsentMessages.splice(m4, 1), o$1.push(l2));
            h4 = Ns(this._messages, l2);
            this._messages.splice(h4, 0, l2);
          } else o$1.push(l2), this._messages[E3] = l2;
          if (l2.updatedAt > 0) {
            var g2 = this._updateChildMessagesInView(l2);
            o$1.push.apply(o$1, c([], a$1(g2), false));
          }
        } else if (l2 instanceof _t) {
          var E3;
          (E3 = Ms(this._unsentMessages, l2)) < 0 ? Ms(this._messages, l2) < 0 && (this._unsentMessages.push(l2), i3.push(l2)) : (o$1.push(l2), this._unsentMessages[E3] = l2);
        }
      }
    } catch (e4) {
      n3 = { error: e4 };
    } finally {
      try {
        c$1 && !c$1.done && (s4 = u3.return) && s4.call(u3);
      } finally {
        if (n3) throw n3.error;
      }
    }
    fo(t5) && kr$1(function() {
      return r$1(r2, void 0, void 0, function() {
        var e4, n4, s5, r3, a5;
        return s$1(this, function(u4) {
          return e4 = { source: t5 }, i3.length > 0 && (null === (s5 = null === (n4 = this._handler) || void 0 === n4 ? void 0 : n4.onMessagesAdded) || void 0 === s5 || s5.call(n4, e4, this.channel, i3)), o$1.length > 0 && (null === (a5 = null === (r3 = this._handler) || void 0 === r3 ? void 0 : r3.onMessagesUpdated) || void 0 === a5 || a5.call(r3, e4, this.channel, o$1)), [2];
        });
      });
    });
  }, n2.prototype._updateMessagesToView = function(e3, t5) {
    var n3, s4, r2 = this, a4 = [], i3 = [], o$1 = [];
    try {
      for (var u3 = o(e3), c$1 = u3.next(); !c$1.done; c$1 = u3.next()) {
        var l2, h4 = c$1.value;
        if (h4.messageId > 0) if ((l2 = Ms(this._messages, h4)) >= 0) i3.push(h4), this._messages[l2] = h4;
        else {
          var m4 = Ms(this._unsentMessages, h4);
          if (m4 >= 0) {
            var g2 = a$1(this._unsentMessages.splice(m4, 1), 1)[0];
            if (this.hasNext && g2) o$1.push(g2);
            else {
              i3.push(h4);
              var E3 = Ns(this._messages, h4);
              this._messages.splice(E3, 0, h4);
            }
          } else {
            var C2 = this._messages.map(function(e4) {
              return e4.createdAt;
            });
            (h4.createdAt < Math.min.apply(Math, c([], a$1(C2), false)) && !this._hasPrevious || h4.createdAt > Math.max.apply(Math, c([], a$1(C2), false)) && !this._hasNext) && a4.push(h4);
          }
        }
        else if (h4 instanceof _t) (l2 = Ms(this._unsentMessages, h4)) >= 0 && (i3.push(h4), this._unsentMessages[l2] = h4);
      }
    } catch (e4) {
      n3 = { error: e4 };
    } finally {
      try {
        c$1 && !c$1.done && (s4 = u3.return) && s4.call(u3);
      } finally {
        if (n3) throw n3.error;
      }
    }
    return fo(t5) && kr$1(function() {
      return r$1(r2, void 0, void 0, function() {
        var e4, n4, s5, r3, u4;
        return s$1(this, function(c3) {
          return e4 = { source: t5 }, i3.length > 0 ? null === (s5 = null === (n4 = this._handler) || void 0 === n4 ? void 0 : n4.onMessagesUpdated) || void 0 === s5 || s5.call(n4, e4, this.channel, i3) : o$1.length > 0 ? null === (u4 = null === (r3 = this._handler) || void 0 === r3 ? void 0 : r3.onMessagesDeleted) || void 0 === u4 || u4.call(r3, e4, this.channel, [], o$1) : a4.length > 0 && this._addMessagesToView(a4, t5), [2];
        });
      });
    }), i3;
  }, n2;
}(Os), Gs = { coverUrl: void 0, coverImage: void 0, isDistinct: void 0, isPublic: void 0, isDiscoverable: void 0, accessCode: void 0, name: void 0, data: void 0, customType: void 0, operatorUserIds: void 0, messageSurvivalSeconds: void 0 }, Vs = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.token, a4 = e3.limit, i3 = e3.order, o2 = e3.mutedMemberFilter, u3 = e3.memberStateFilter, c3 = e3.nicknameStartsWithFilter, l2 = e3.operatorFilter;
    return (n3 = t4.call(this) || this).method = ae.GET, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/members"), n3.params = { token: r2, limit: a4, order: i3, muted_member_filter: o2, member_state_filter: u3, nickname_startswith: c3, operator_filter: l2, show_member_is_muted: true, show_read_receipt: true, show_delivery_receipt: true }, n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Bs = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    s4.members = [];
    var r2 = n3.next, a4 = n3.members;
    return s4.token = r2, a4 && a4.length > 0 && (s4.members = a4.map(function(t5) {
      return new un$1(e3, t5);
    })), s4;
  }
  return t$2(n2, t4), n2;
}(qe$2);
!function(e3) {
  e3.ALL = "all", e3.MUTED = "muted", e3.UNMUTED = "unmuted";
}(Rs || (Rs = {})), function(e3) {
  e3.MEMBER_NICKNAME_ALPHABETICAL = "member_nickname_alphabetical", e3.OPERATOR_THEN_MEMBER_ALPHABETICAL = "operator_then_member_alphabetical";
}(Fs || (Fs = {})), function(e3) {
  e3.ALL = "all", e3.JOINED = "joined_only", e3.INVITED = "invited_only", e3.INVITED_BY_FRIEND = "invited_by_friend", e3.INVITED_BY_NON_FRIEND = "invited_by_non_friend";
}(ks || (ks = {}));
var qs = function(t4) {
  function a4(e3, n2, s4) {
    var r2, a5, o2, u3, c3 = this;
    return (c3 = t4.call(this, e3, n2, H$1.GROUP, s4) || this).mutedMemberFilter = Rs.ALL, c3.memberStateFilter = ks.ALL, c3.nicknameStartsWithFilter = null, c3.operatorFilter = rn$1.ALL, c3.order = Fs.MEMBER_NICKNAME_ALPHABETICAL, c3.mutedMemberFilter = null !== (r2 = s4.mutedMemberFilter) && void 0 !== r2 ? r2 : Rs.ALL, c3.memberStateFilter = null !== (a5 = s4.memberStateFilter) && void 0 !== a5 ? a5 : ks.ALL, c3.nicknameStartsWithFilter = null !== (o2 = s4.nicknameStartsWithFilter) && void 0 !== o2 ? o2 : null, c3.order = null !== (u3 = s4.order) && void 0 !== u3 ? u3 : Fs.MEMBER_NICKNAME_ALPHABETICAL, c3;
  }
  return t$2(a4, t4), a4.prototype._validate = function() {
    return t4.prototype._validate.call(this) && T$2(Rs, this.mutedMemberFilter) && T$2(ks, this.memberStateFilter) && (S$1("string", this.nicknameStartsWithFilter) || null === this.nicknameStartsWithFilter) && T$2(rn$1, this.operatorFilter) && T$2(Fs, this.order);
  }, a4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, r2, a5, i3, o2;
      return s$1(this, function(u3) {
        switch (u3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e3 = uo.of(this._iid).requestQueue, t5 = new Vs(oe(n$2(n$2({}, this), { token: this._token }))), [4, e3.send(t5)]) : [3, 2] : [3, 5];
          case 1:
            return r2 = u3.sent(), a5 = r2.as(Bs), i3 = a5.members, o2 = a5.token, this._token = o2, this._hasNext = !!o2, this._isLoading = false, [2, i3];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, a4;
}(ko), zs = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.userId, a4 = e3.accessCode;
    return (n3 = t4.call(this) || this).method = ae.PUT, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/accept"), n3.params = { user_id: r2, access_code: a4 }, n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Ws = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.channel = new fr(e3, n3), s4.channel.myMemberState = Zt$1.JOINED, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), js = function(n2) {
  function s4(e3) {
    var s5 = this, r2 = e3.channelUrl, a4 = e3.isDistinct, i3 = e3.isPublic, o2 = e3.isDiscoverable, u3 = e3.coverUrl, c3 = e3.coverImage, l2 = e3.accessCode, h4 = e3.name, d4 = e3.data, _2 = e3.customType, p2 = e3.operatorUserIds, f2 = e3.messageSurvivalSeconds;
    return (s5 = n2.call(this) || this).method = ae.PUT, s5.path = "".concat(de, "/").concat(encodeURIComponent(r2)), s5.params = se({ is_distinct: a4, is_public: i3, is_discoverable: o2, name: h4, data: d4, custom_type: _2, cover_url: u3, cover_file: c3, access_code: l2, operator_ids: p2, message_survival_seconds: f2 }), s5;
  }
  return t$2(s4, n2), s4;
}(Fe$2), Qs = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.channel = new fr(e3, n3), s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), Ys = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl;
    return (n3 = t4.call(this) || this).method = ae.DELETE, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4)), n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2);
!function(t4) {
  function n2(e3, n3) {
    return t4.call(this, e3, n3) || this;
  }
  t$2(n2, t4);
}(qe$2);
var Ks = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl;
    return (n3 = t4.call(this) || this).method = ae.DELETE, n3.path = "".concat(de, "/").concat(encodeURIComponent(s4), "/hide"), n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2);
!function(t4) {
  function n2() {
    return null !== t4 && t4.apply(this, arguments) || this;
  }
  t$2(n2, t4);
}(qe$2);
var Js = function(t4) {
  function n2(e3) {
    var n3 = e3.userId, s4 = e3.channelUrl, r2 = e3.countPreference, a4 = t4.call(this) || this;
    return a4.method = ae.PUT, a4.path = "".concat(ue, "/").concat(encodeURIComponent(n3), "/count_preference/").concat(encodeURIComponent(s4)), a4.params = { count_preference: r2 }, a4;
  }
  return t$2(n2, t4), n2;
}(Fe$2), Xs = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.countPreference = n3.count_preference, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), Zs = function(n2) {
  function s4(e3) {
    var s5 = this, r2 = e3.channelUrl, a4 = e3.locale;
    return (s5 = n2.call(this) || this).method = ae.PUT, s5.path = "".concat(de, "/").concat(encodeURIComponent(r2), "/reset_user_history"), s5.params = se({ locale: a4 }), s5;
  }
  return t$2(s4, n2), s4;
}(Fe$2), $s = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this, r2 = n3.ts_message_offset;
    return s4.messageOffsetTimestamp = r2, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), er = n$2(n$2({}, bn$2), { scheduledAt: void 0, file: void 0, fileUrl: void 0, fileName: void 0, mimeType: void 0, fileSize: void 0, thumbnailSizes: void 0, requireAuth: false }), tr = n$2(n$2({}, En$2), { scheduledAt: void 0 }), nr = function(s4) {
  function r2(e3) {
    var r3, a4, i3 = this;
    i3 = s4.call(this) || this;
    var o2 = [];
    e3.mentionType === B.USERS && (e3.mentionedUserIds ? o2 = e3.mentionedUserIds : e3.mentionedUsers && (o2 = e3.mentionedUsers.map(function(e4) {
      return e4.userId;
    })));
    var u3 = e3.channelType, c3 = e3.channelUrl, l2 = e3.scheduledMessageId;
    return i3.method = ae.PUT, i3.path = "".concat(Re$3(u3), "/").concat(encodeURIComponent(c3), "/scheduled_messages/").concat(encodeURIComponent(l2)), i3.params = se(oe({ req_id: e3.reqId, scheduled_at: e3.scheduledAt, message_type: K$1.FILE, url: e3.fileUrl, file_name: e3.fileName, file_size: e3.fileSize, file_type: e3.mimeType, thumbnails: null === (r3 = e3._thumbnails) || void 0 === r3 ? void 0 : r3.map(function(e4) {
      return Pe$2.payloadify(e4);
    }), custom_type: e3.customType, data: e3.data, require_auth: e3.requireAuth, mention_type: e3.mentionType, mentioned_user_ids: o2, sorted_metaarray: null === (a4 = e3.metaArrays) || void 0 === a4 ? void 0 : a4.map(function(e4) {
      return Ve$1.payloadify(e4);
    }), apple_critical_alert_options: e3.appleCriticalAlertOptions ? Ke$1.payloadify(e3.appleCriticalAlertOptions) : null, push_option: e3.pushNotificationDeliveryOption })), i3;
  }
  return t$2(r2, s4), r2;
}(Fe$2), sr = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.message = new Nt$1(e3, n3), s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), rr = function(s4) {
  function r2(e3) {
    var r3, a4 = this;
    a4 = s4.call(this) || this;
    var i3 = [];
    e3.mentionType === B.USERS && (e3.mentionedUserIds ? i3 = e3.mentionedUserIds : e3.mentionedUsers && (i3 = e3.mentionedUsers.map(function(e4) {
      return e4.userId;
    })));
    var o2 = e3.channelType, u3 = e3.channelUrl, c3 = e3.scheduledMessageId;
    return a4.method = ae.PUT, a4.path = "".concat(Re$3(o2), "/").concat(encodeURIComponent(u3), "/scheduled_messages/").concat(encodeURIComponent(c3)), a4.params = se(oe({ req_id: e3.reqId, scheduled_at: e3.scheduledAt, message_type: K$1.USER, message: e3.message, custom_type: e3.customType, data: e3.data, mention_type: e3.mentionType, mentioned_user_ids: i3, sorted_metaarray: null === (r3 = e3.metaArrays) || void 0 === r3 ? void 0 : r3.map(function(e4) {
      return Ve$1.payloadify(e4);
    }), apple_critical_alert_options: e3.appleCriticalAlertOptions ? Ke$1.payloadify(e3.appleCriticalAlertOptions) : null, target_langs: e3.translationTargetLanguages, push_option: e3.pushNotificationDeliveryOption })), a4;
  }
  return t$2(r2, s4), r2;
}(Fe$2);
!function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.message = new wt(e3, n3), s4;
  }
  t$2(n2, t4);
}(qe$2);
var ar, ir, or = function(t4) {
  function n2(e3) {
    var n3 = t4.call(this) || this, s4 = e3.channelType, r2 = e3.channelUrl, a4 = e3.scheduledMessageId;
    return n3.method = ae.DELETE, n3.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/scheduled_messages/").concat(encodeURIComponent(a4)), n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), ur = function(t4) {
  function n2(e3) {
    var n3 = t4.call(this) || this, s4 = e3.channelType, r2 = e3.channelUrl, a4 = e3.scheduledMessageId;
    return n3.method = ae.POST, n3.path = "".concat(Re$3(s4), "/").concat(encodeURIComponent(r2), "/scheduled_messages/").concat(encodeURIComponent(a4), "/send_now"), n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), cr = function(t4) {
  function n2(e3) {
    var n3 = e3.userId, s4 = e3.channelUrl, r2 = e3.pushTriggerOption, a4 = t4.call(this) || this;
    return a4.method = ae.PUT, a4.path = "".concat(ue, "/").concat(encodeURIComponent(n3), "/push_preference/").concat(encodeURIComponent(s4)), a4.params = { push_trigger_option: r2 }, a4;
  }
  return t$2(n2, t4), n2;
}(Fe$2), lr = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.pushTriggerOption = n3.push_trigger_option, s4.enabled = n3.enable, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), hr = function(t4) {
  function n2(e3) {
    var n3 = e3.userId, s4 = e3.channelUrl, r2 = t4.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n3), "/push_preference/").concat(encodeURIComponent(s4)), r2;
  }
  return t$2(n2, t4), n2;
}(Fe$2), dr = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this;
    return s4.pushTriggerOption = n3.push_trigger_option, s4.enabled = n3.enable, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2), _r = function(t4) {
  function n2(e3) {
    var n3 = this, s4 = e3.channelUrl, r2 = e3.channelType;
    return (n3 = t4.call(this) || this).method = ae.GET, n3.path = "".concat(Re$3(r2), "/").concat(encodeURIComponent(s4), "/message_purge_offset"), n3;
  }
  return t$2(n2, t4), n2;
}(Fe$2), pr = function(t4) {
  function n2(e3, n3) {
    var s4 = t4.call(this, e3, n3) || this, r2 = n3.message_purge_offset;
    return s4.messageDeletionTimestamp = r2, s4;
  }
  return t$2(n2, t4), n2;
}(qe$2);
!function(e3) {
  e3.ALL = "all", e3.UNREAD_MESSAGE_COUNT_ONLY = "unread_message_count_only", e3.UNREAD_MENTION_COUNT_ONLY = "unread_mention_count_only", e3.OFF = "off";
}(ar || (ar = {})), function(e3) {
  e3.UNHIDDEN = "unhidden", e3.HIDDEN_ALLOW_AUTO_UNHIDE = "hidden_allow_auto_unhide", e3.HIDDEN_PREVENT_AUTO_UNHIDE = "hidden_prevent_auto_unhide";
}(ir || (ir = {}));
var fr = function(u3) {
  function c$1(e3, t4) {
    var n2, c$12, l2, h4, p2, f2, v2, m4, E3, C2, y4, M4, b3, N2, U2, S4, T3, A2, I3, w3, L3, D3 = this;
    return (D3 = u3.call(this, e3, t4) || this)._unreadMemberStateMap = /* @__PURE__ */ new Map(), D3._undeliveredMemberStateMap = /* @__PURE__ */ new Map(), D3._typingStatus = /* @__PURE__ */ new Map(), D3._lastMemberCountUpdated = 0, D3._typingStarted = 0, D3._typingEnded = 0, D3._hasBotInfo = { general: false, ai: false }, D3.isDistinct = false, D3.isSuper = false, D3.isBroadcast = false, D3.isExclusive = false, D3.isPublic = false, D3.isDiscoverable = true, D3.isChatNotification = false, D3.isAccessCodeRequired = false, D3.isPushEnabled = false, D3.unreadMessageCount = 0, D3.unreadMentionCount = 0, D3.totalUnreadReplyCount = 0, D3.members = [], D3.memberCount = 0, D3.joinedMemberCount = 0, D3.hiddenState = ir.UNHIDDEN, D3.lastMessage = null, D3.messageOffsetTimestamp = 0, D3.messageSurvivalSeconds = -1, D3.myMemberState = Zt$1.NONE, D3.myRole = V.NONE, D3.myMutedState = z.UNMUTED, D3.myLastRead = 0, D3.myCountPreference = ar.ALL, D3.myPushTriggerOption = _.DEFAULT, D3.inviter = null, D3.invitedAt = 0, D3.joinedAt = 0, D3.lastPinnedMessage = null, D3._latestMessageInfo = null, D3._pinnedMessagesUpdatedAt = 0, D3._myMutedRemainingTime = -1, D3._messageDeletionTimestamp = 0, D3.channelType = H$1.GROUP, D3.isDistinct = null !== (c$12 = t4.is_distinct) && void 0 !== c$12 && c$12, D3.isSuper = null !== (l2 = t4.is_super) && void 0 !== l2 && l2, D3.isBroadcast = null !== (h4 = t4.is_broadcast) && void 0 !== h4 && h4, D3.isExclusive = null !== (p2 = t4.is_exclusive) && void 0 !== p2 && p2, D3.isPublic = null !== (f2 = t4.is_public) && void 0 !== f2 && f2, D3.isDiscoverable = null !== (v2 = t4.is_discoverable) && void 0 !== v2 ? v2 : D3.isPublic, D3.isChatNotification = null !== (m4 = t4.is_chat_notification) && void 0 !== m4 && m4, D3.isAccessCodeRequired = null !== (E3 = t4.is_access_code_required) && void 0 !== E3 && E3, D3.isPushEnabled = null !== (C2 = t4.is_push_enabled) && void 0 !== C2 && C2, Array.isArray(t4.members) && (n2 = D3.members).push.apply(n2, c([], a$1(t4.members.map(function(e4) {
      return new un$1(D3._iid, e4);
    })), false)), D3.memberCount = null !== (y4 = t4.member_count) && void 0 !== y4 ? y4 : 0, D3.joinedMemberCount = null !== (M4 = t4.joined_member_count) && void 0 !== M4 ? M4 : 0, D3.hiddenState = T$2(ir, t4.hidden_state) ? t4.hidden_state : ir.UNHIDDEN, D3.messageOffsetTimestamp = null !== (b3 = t4.ts_message_offset) && void 0 !== b3 ? b3 : 0, D3.messageSurvivalSeconds = null !== (N2 = t4.message_survival_seconds) && void 0 !== N2 ? N2 : -1, D3.lastMessage = t4.last_message ? At$1(D3._iid, n$2({ channel_type: D3.channelType }, t4.last_message)) : null, t4.read_receipt && Object.keys(t4.read_receipt).forEach(function(e4) {
      S$1("number", t4.read_receipt[e4]) && D3._updateUnreadMemberState(e4, t4.read_receipt[e4]);
    }), t4.delivery_receipt && Object.keys(t4.delivery_receipt).forEach(function(e4) {
      S$1("number", t4.delivery_receipt[e4]) && D3._updateUndeliveredMemberState(e4, t4.delivery_receipt[e4]);
    }), D3.myMemberState = T$2(Zt$1, t4.member_state) ? t4.member_state : Zt$1.NONE, D3.myRole = T$2(V, t4.my_role) ? t4.my_role : V.NONE, T$2(z, t4.is_muted) ? D3.myMutedState = t4.is_muted : S$1("boolean", t4.is_muted) ? D3.myMutedState = t4.is_muted ? z.MUTED : z.UNMUTED : D3.myMutedState = z.UNMUTED, D3.myCountPreference = T$2(ar, t4.count_preference) ? t4.count_preference : ar.ALL, D3.myPushTriggerOption = T$2(_, t4.push_trigger_option) ? t4.push_trigger_option : _.ALL, D3.myLastRead = null !== (U2 = t4.user_last_read) && void 0 !== U2 ? U2 : 0, D3.inviter = t4.inviter ? new ls$2(D3._iid, t4.inviter) : null, D3.invitedAt = null !== (S4 = t4.invited_at) && void 0 !== S4 ? S4 : 0, D3.joinedAt = null !== (T3 = t4.joined_ts) && void 0 !== T3 ? T3 : 0, D3._updateUnreadCount(null !== (A2 = t4.unread_message_count) && void 0 !== A2 ? A2 : 0, null !== (I3 = t4.unread_mention_count) && void 0 !== I3 ? I3 : 0), D3.totalUnreadReplyCount = null !== (w3 = t4.total_unread_thread_message_count) && void 0 !== w3 ? w3 : 0, D3.lastPinnedMessage = t4.latest_pinned_message ? At$1(D3._iid, n$2({ channel_type: D3.channelType }, t4.latest_pinned_message)) : null, t4.latest_message && (D3._latestMessageInfo = { messageId: t4.latest_message.message_id, createdAt: t4.latest_message.created_at }), D3._hasBotInfo = { general: !!t4.has_bot, ai: !!t4.has_ai_bot }, D3._messageDeletionTimestamp = null !== (L3 = t4.message_purge_offset) && void 0 !== L3 ? L3 : 0, D3;
  }
  return t$2(c$1, u3), Object.defineProperty(c$1.prototype, "isHidden", { get: function() {
    return this.hiddenState !== ir.UNHIDDEN;
  }, enumerable: false, configurable: true }), Object.defineProperty(c$1.prototype, "isTyping", { get: function() {
    return this._typingStatus.size > 0;
  }, enumerable: false, configurable: true }), Object.defineProperty(c$1.prototype, "cachedUnreadMemberState", { get: function() {
    var e3, t4, n2 = {};
    try {
      for (var s4 = o(this._unreadMemberStateMap), r2 = s4.next(); !r2.done; r2 = s4.next()) {
        var a4 = a$1(r2.value, 2), i3 = a4[0], o$1 = a4[1];
        n2[i3] = o$1;
      }
    } catch (t5) {
      e3 = { error: t5 };
    } finally {
      try {
        r2 && !r2.done && (t4 = s4.return) && t4.call(s4);
      } finally {
        if (e3) throw e3.error;
      }
    }
    return n2;
  }, enumerable: false, configurable: true }), Object.defineProperty(c$1.prototype, "cachedUndeliveredMemberState", { get: function() {
    var e3, t4, n2 = {};
    try {
      for (var s4 = o(this._undeliveredMemberStateMap), r2 = s4.next(); !r2.done; r2 = s4.next()) {
        var a4 = a$1(r2.value, 2), i3 = a4[0], o$1 = a4[1];
        n2[i3] = o$1;
      }
    } catch (t5) {
      e3 = { error: t5 };
    } finally {
      try {
        r2 && !r2.done && (t4 = s4.return) && t4.call(s4);
      } finally {
        if (e3) throw e3.error;
      }
    }
    return n2;
  }, enumerable: false, configurable: true }), Object.defineProperty(c$1.prototype, "hasBot", { get: function() {
    return this._hasBotInfo.general;
  }, enumerable: false, configurable: true }), Object.defineProperty(c$1.prototype, "hasAiBot", { get: function() {
    return this._hasBotInfo.ai;
  }, enumerable: false, configurable: true }), Object.defineProperty(c$1.prototype, "messageDeletionTimestamp", { get: function() {
    return this._messageDeletionTimestamp;
  }, enumerable: false, configurable: true }), c$1.payloadify = function(e3) {
    return se(oe(n$2(n$2({}, u3.payloadify.call(this, e3)), { is_access_code_required: e3.isAccessCodeRequired, is_distinct: e3.isDistinct, is_super: e3.isSuper, is_broadcast: e3.isBroadcast, is_exclusive: e3.isExclusive, is_public: e3.isPublic, is_discoverable: e3.isDiscoverable, is_muted: e3.myMutedState, is_push_enabled: e3.isPushEnabled, unread_message_count: e3.unreadMessageCount, unread_mention_count: e3.unreadMentionCount, total_unread_thread_message_count: e3.totalUnreadReplyCount, push_trigger_option: e3.myPushTriggerOption, count_preference: e3.myCountPreference, hidden_state: e3.hiddenState, member_count: e3.memberCount, joined_member_count: e3.joinedMemberCount, member_state: e3.myMemberState, my_role: e3.myRole, user_last_read: e3.myLastRead, ts_message_offset: e3.messageOffsetTimestamp, message_survival_seconds: e3.messageSurvivalSeconds, read_receipt: e3.cachedUnreadMemberState, delivery_receipt: e3.cachedUndeliveredMemberState, members: e3.members.map(function(e4) {
      return un$1.payloadify(e4);
    }), last_message: e3.lastMessage ? Ut$1(e3.lastMessage) : null, inviter: e3.inviter ? ls$2.payloadify(e3.inviter) : null, invited_at: e3.invitedAt, joined_ts: e3.joinedAt, latest_pinned_message: e3.lastPinnedMessage ? Ut$1(e3.lastPinnedMessage) : null, latest_message: e3._latestMessageInfo ? { message_id: e3._latestMessageInfo.messageId, created_at: e3._latestMessageInfo.createdAt } : null, has_bot: e3.hasBot, has_ai_bot: e3.hasAiBot, message_purge_offset: e3.messageDeletionTimestamp })));
  }, c$1.prototype._shouldUpdateLastMessageWith = function(e3) {
    if (e3.silent) return false;
    var t4 = uo.of(this._iid).appInfo;
    switch (null == t4 ? void 0 : t4.lastMessageThreadingPolicy) {
      case Mr$1.NONE:
      case Mr$1.INCLUDE_REPLY:
        break;
      case Mr$1.EXCLUDE_REPLY:
        if (e3.parentMessageId > 0) return false;
        break;
      case Mr$1.INCLUDE_REPLY_TO_CHANNEL:
        if (e3 instanceof _t && e3.parentMessageId > 0 && !e3.replyToChannel) return false;
    }
    return !this.lastMessage || this.lastMessage.createdAt < e3.createdAt || this.lastMessage.createdAt === e3.createdAt && this.lastMessage.messageId === e3.messageId && this.lastMessage.updatedAt < e3.updatedAt;
  }, c$1.prototype._tryUpdateLastMessageAndCallEvents = function(e3, t4) {
    var n2 = uo.of(this._iid).dispatcher, s4 = ys.of(this._iid);
    this._updateLastMessage(t4), s4.handlers.map(function(t5) {
      t5.onChannelChanged && t5.onChannelChanged(e3);
    }), n2.dispatch(new Un$1({ channels: [e3], context: { source: no.EVENT_MESSAGE_SENT } }));
  }, c$1.prototype._shouldUpdateUnreadCountWith = function(e3) {
    var t4 = uo.of(this._iid).appInfo;
    switch (null == t4 ? void 0 : t4.unreadCountThreadingPolicy) {
      case Pr$1.NONE:
      case Pr$1.INCLUDE_REPLY:
        break;
      case Pr$1.EXCLUDE_REPLY:
        if (e3.parentMessageId > 0) return false;
        break;
      case Pr$1.INCLUDE_REPLY_TO_CHANNEL:
        if (e3 instanceof _t && e3.parentMessageId > 0 && !e3.replyToChannel) return false;
    }
    return true;
  }, c$1.prototype._updateLastMessage = function(e3) {
    return !!this._shouldUpdateLastMessageWith(e3) && (this.lastMessage = e3, true);
  }, c$1.prototype._updateUnreadCount = function(e3, t4) {
    if ("number" == typeof e3 && e3 >= 0) if (this.myCountPreference === ar.ALL || this.myCountPreference === ar.UNREAD_MESSAGE_COUNT_ONLY) if (this.isExclusive || this.isSuper || this.isBroadcast) {
      var n2 = uo.of(this._iid).maxSuperGroupChannelUnreadCount;
      this.unreadMessageCount = n2 && e3 >= n2 ? n2 : e3;
    } else this.unreadMessageCount = e3;
    else this.unreadMessageCount = 0;
    else this.unreadMessageCount = 0;
    "number" == typeof t4 && t4 >= 0 && (this.myCountPreference === ar.ALL || this.myCountPreference === ar.UNREAD_MENTION_COUNT_ONLY) ? this.unreadMentionCount = t4 : this.unreadMentionCount = 0;
  }, c$1.prototype._updateUnreadMemberState = function(e3, t4) {
    var n2 = this._unreadMemberStateMap.get(e3);
    return (!n2 || n2 < t4) && (this._unreadMemberStateMap.set(e3, t4), uo.of(this._iid).sdkState.userId === e3 && (this.myLastRead = t4), true);
  }, c$1.prototype._updateUndeliveredMemberState = function(e3, t4) {
    var n2 = this._undeliveredMemberStateMap.get(e3);
    return (!n2 || n2 < t4) && (this._undeliveredMemberStateMap.set(e3, t4), true);
  }, c$1.prototype._updateTypingStatus = function(e3, t4) {
    void 0 === t4 && (t4 = (/* @__PURE__ */ new Date()).getTime()), t4 > 0 ? this._typingStatus.set(e3.userId, { user: e3, ts: t4 }) : this._typingStatus.delete(e3.userId);
  }, c$1.prototype._clearTypingStatus = function() {
    this._typingStatus.clear(), this._typingStarted = 0, this._typingEnded = 0;
  }, c$1.prototype._setLatestMemberCount = function(e3, t4, n2) {
    var s4 = false;
    return n2 >= this._lastMemberCountUpdated && (this._lastMemberCountUpdated = n2, s4 = e3 !== this.memberCount || t4 !== this.joinedMemberCount, this.memberCount = e3, this.joinedMemberCount = t4), s4;
  }, c$1.prototype.isReadMessage = function(e3) {
    var t4 = uo.of(this._iid).sdkState, n2 = this._unreadMemberStateMap.get(t4.userId);
    return !!n2 && n2 >= e3.createdAt;
  }, c$1.prototype.serialize = function() {
    var e3 = this;
    return os$2(this, function(t4) {
      t4.cachedUnreadMemberState = e3.cachedUnreadMemberState, t4.cachedUndeliveredMemberState = e3.cachedUndeliveredMemberState, Object.assign(t4, e3._serializeCachedMetaData());
    });
  }, c$1.prototype.createMessageCollection = function(e3) {
    return void 0 === e3 && (e3 = {}), new Hs(this._iid, n$2(n$2({}, e3), { channel: this }));
  }, c$1.prototype.createMemberListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new qs(this._iid, this.url, e3);
  }, c$1.prototype.createThreadedParentMessageListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new _a$2(this._iid, this.url, this.channelType, e3);
  }, c$1.prototype.addMember = function(e3, t4) {
    if (void 0 === t4 && (t4 = 0), !this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var n2 = this.members.findIndex(function(t5) {
        return t5.userId === e3.userId;
      });
      if (n2 > -1) {
        var s4 = this.members[n2];
        s4.state === Zt$1.JOINED && (e3.state = s4.state), this.members.splice(n2, 1), this.memberCount--;
      }
      this.members.push(e3), this.memberCount++, this._updateUnreadMemberState(e3.userId, t4), this._updateUndeliveredMemberState(e3.userId, t4);
    }
  }, c$1.prototype.removeMember = function(e3) {
    if (!this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var t4 = e3 instanceof un$1 ? e3.userId : e3, n2 = this.members.findIndex(function(e4) {
        return e4.userId === t4;
      });
      if (n2 > -1) return this.members.splice(n2, 1), this.memberCount--, true;
    }
    return false;
  }, c$1.prototype.getUnreadMemberCount = function(e3) {
    var t4, n2;
    if (e3 instanceof _t && !this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var s4 = uo.of(this._iid).sdkState, r2 = e3.createdAt, a4 = 0;
      try {
        for (var i3 = o(this.members), o$1 = i3.next(); !o$1.done; o$1 = i3.next()) {
          var u4 = o$1.value;
          if (s4.userId !== u4.userId && u4.state === Zt$1.JOINED && e3.sender.userId !== u4.userId) (this.cachedUnreadMemberState[u4.userId] || 0) < r2 && a4++;
        }
      } catch (e4) {
        t4 = { error: e4 };
      } finally {
        try {
          o$1 && !o$1.done && (n2 = i3.return) && n2.call(i3);
        } finally {
          if (t4) throw t4.error;
        }
      }
      return a4;
    }
    return 0;
  }, c$1.prototype.getUndeliveredMemberCount = function(e3) {
    var t4, n2;
    if (e3 instanceof _t && !this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var s4 = uo.of(this._iid).sdkState, r2 = e3.createdAt, a4 = 0;
      try {
        for (var i3 = o(this.members), o$1 = i3.next(); !o$1.done; o$1 = i3.next()) {
          var u4 = o$1.value;
          if (s4.userId !== u4.userId && u4.state === Zt$1.JOINED && e3.sender.userId !== u4.userId) (this.cachedUndeliveredMemberState[u4.userId] || 0) < r2 && a4++;
        }
      } catch (e4) {
        t4 = { error: e4 };
      } finally {
        try {
          o$1 && !o$1.done && (n2 = i3.return) && n2.call(i3);
        } finally {
          if (t4) throw t4.error;
        }
      }
      return a4;
    }
    return 0;
  }, c$1.prototype.getReadMembers = function(e3, t4) {
    var n2 = this;
    void 0 === t4 && (t4 = false);
    var s4 = uo.of(this._iid).sdkState;
    if (!s4.userId || this.isExclusive || this.isSuper || this.isBroadcast) return [];
    var r2 = e3 instanceof _t ? e3.sender : null, a4 = [];
    return this.members.forEach(function(i3) {
      if (t4 || i3.userId !== s4.userId && i3.userId !== (null == r2 ? void 0 : r2.userId)) {
        var o2 = n2._unreadMemberStateMap.get(i3.userId);
        o2 && o2 >= e3.createdAt && a4.push(i3);
      }
    }), a4;
  }, c$1.prototype.getUnreadMembers = function(e3, t4) {
    var n2 = this;
    void 0 === t4 && (t4 = false);
    var s4 = uo.of(this._iid).sdkState;
    if (!s4.userId || this.isExclusive || this.isSuper || this.isBroadcast) return [];
    var r2 = e3 instanceof _t ? e3.sender : null, a4 = [];
    return this.members.forEach(function(i3) {
      if (t4 || i3.userId !== s4.userId && i3.userId !== (null == r2 ? void 0 : r2.userId)) {
        var o2 = n2._unreadMemberStateMap.get(i3.userId);
        o2 && o2 < e3.createdAt && a4.push(i3);
      }
    }), a4;
  }, c$1.prototype.getReadStatus = function(e3) {
    var t4 = this;
    void 0 === e3 && (e3 = false);
    var n2 = uo.of(this._iid).sdkState;
    if (!n2.userId || this.isExclusive || this.isSuper || this.isBroadcast) return null;
    var s4 = {};
    return this.members.forEach(function(r2) {
      if (e3 || r2.userId !== n2.userId) {
        var a4 = t4._unreadMemberStateMap.get(r2.userId);
        s4[r2.userId] = new Ye$1(t4._iid, { channel_url: t4.url, channel_type: t4.channelType, user: un$1.payloadify(r2), ts: null != a4 ? a4 : 0 });
      }
    }), s4;
  }, c$1.prototype.getDeliveryStatus = function(e3) {
    var t4 = this;
    void 0 === e3 && (e3 = true);
    var n2 = uo.of(this._iid).sdkState;
    if (!n2.userId || this.isExclusive || this.isSuper || this.isBroadcast) return null;
    var s4 = {};
    return this.members.forEach(function(r2) {
      if (e3 || r2.userId !== n2.userId) {
        var a4 = t4._undeliveredMemberStateMap.get(r2.userId);
        s4[r2.userId] = new cn$1(t4._iid, { channel_url: t4.url, channel_type: t4.channelType, user: un$1.payloadify(r2), ts: null != a4 ? a4 : 0 });
      }
    }), s4;
  }, c$1.prototype.getTypingUsers = function() {
    var e3 = [];
    return this._typingStatus.forEach(function(t4) {
      var n2 = t4.user;
      e3.push(n2);
    }), e3;
  }, c$1.prototype.invalidateTypingStatus = function() {
    var e3 = this, t4 = uo.of(this._iid).typingIndicatorInvalidateTime, n2 = Date.now(), s4 = false;
    return this._typingStatus.forEach(function(r2, a4) {
      var i3 = r2.ts;
      n2 - i3 >= t4 && (e3._typingStatus.delete(a4), s4 = true);
    }), s4;
  }, c$1.prototype.refresh = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        return [2, this._refresh()];
      });
    });
  }, c$1.prototype._refresh = function(e3) {
    return void 0 === e3 && (e3 = false), r$1(this, void 0, void 0, function() {
      var t4, n2, s4, r2, a4, i3;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return t4 = uo.of(this._iid), n2 = t4.requestQueue, s4 = t4.dispatcher, r2 = new Ln$1({ channelUrl: this.url }), [4, n2.send(r2)];
          case 1:
            return a4 = o2.sent(), i3 = a4.as(Dn$1).channel, this._update(i3), e3 || s4.dispatch(new Un$1({ channels: [i3], context: { source: no.REFRESH_CHANNEL } })), [2, this];
        }
      });
    });
  }, c$1.prototype.freeze = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return [4, u3.prototype.freeze.call(this)];
          case 1:
            return e3.sent(), uo.of(this._iid).dispatcher.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_FROZEN }, isWebSocketEventComing: true })), [2];
        }
      });
    });
  }, c$1.prototype.unfreeze = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return [4, u3.prototype.unfreeze.call(this)];
          case 1:
            return e3.sent(), uo.of(this._iid).dispatcher.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_UNFROZEN }, isWebSocketEventComing: true })), [2];
        }
      });
    });
  }, c$1.prototype.updateChannel = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, a4, i3, o2, u4;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return t4 = n$2(n$2({}, Gs), e3), cs$2(function(e4) {
              return S$1("string", e4.coverUrl, true) && (k(e4.coverImage) || S$1("string", e4.coverImage, true)) && S$1("boolean", e4.isDistinct, true) && S$1("boolean", e4.isPublic, true) && S$1("boolean", e4.isDiscoverable, true) && S$1("string", e4.accessCode, true) && S$1("string", e4.name, true) && S$1("string", e4.data, true) && S$1("string", e4.customType, true) && C$1("string", e4.operatorUserIds, true) && S$1("number", e4.messageSurvivalSeconds, true);
            }(t4)).throw(b$2.invalidParameters), n2 = uo.of(this._iid), r2 = n2.dispatcher, a4 = n2.requestQueue, i3 = new js(n$2({ channelUrl: this.url }, t4)), [4, a4.send(i3)];
          case 1:
            return o2 = c3.sent(), u4 = o2.as(Qs).channel, this._update(u4), r2.dispatch(new Un$1({ channels: [u4], context: { source: no.EVENT_CHANNEL_UPDATED }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c$1.prototype.invite = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        return cs$2(e3.every(function(e4) {
          return e4 instanceof ls$2;
        })).throw(b$2.invalidParameters), [2, this.inviteWithUserIds(e3.map(function(e4) {
          return e4.userId;
        }))];
      });
    });
  }, c$1.prototype.inviteWithUserIds = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, s4, r2, a4, i3, o2;
      return s$1(this, function(u4) {
        switch (u4.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid), n2 = t4.dispatcher, s4 = t4.requestQueue, r2 = t4.sessionManager, a4 = new ts({ channelUrl: this.url, userIds: e3 }), [4, s4.send(a4)];
          case 1:
            return i3 = u4.sent(), o2 = i3.as(ns).channel, this._update(o2), n2.dispatch(new Un$1({ channels: [o2], context: { source: no.EVENT_CHANNEL_INVITED, inviter: r2.currentUser, invitees: [] }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c$1.prototype.join = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, s4, r2, a4, i3, o2;
      return s$1(this, function(u4) {
        switch (u4.label) {
          case 0:
            return cs$2(S$1("string", e3, true)).throw(b$2.invalidParameters), t4 = uo.of(this._iid), n2 = t4.dispatcher, s4 = t4.sdkState, r2 = t4.requestQueue, a4 = new Jn({ channelUrl: this.url, userId: s4.userId, accessCode: e3 }), [4, r2.send(a4)];
          case 1:
            return i3 = u4.sent(), (o2 = i3.as(Xn).channel).myMemberState = this.myMemberState = Zt$1.JOINED, this._update(o2), n2.dispatch(new Un$1({ channels: [o2], context: { source: no.EVENT_CHANNEL_JOINED, users: [] }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c$1.prototype.leave = function(e3) {
    return void 0 === e3 && (e3 = false), r$1(this, void 0, void 0, function() {
      var t4, n2, s4, r2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return t4 = uo.of(this._iid), n2 = t4.sdkState, s4 = t4.requestQueue, r2 = new $n({ channelUrl: this.url, userId: n2.userId, shouldRemoveOperatorStatus: e3 }), [4, s4.send(r2)];
          case 1:
            return a4.sent(), this.myMemberState = Zt$1.NONE, [2];
        }
      });
    });
  }, c$1.prototype.acceptInvitation = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, s4, r2, a4, i3, o2;
      return s$1(this, function(u4) {
        switch (u4.label) {
          case 0:
            return cs$2(S$1("string", e3, true)).throw(b$2.invalidParameters), t4 = uo.of(this._iid), n2 = t4.dispatcher, s4 = t4.sdkState, r2 = t4.requestQueue, a4 = new zs({ channelUrl: this.url, userId: s4.userId, accessCode: e3 }), [4, r2.send(a4)];
          case 1:
            return i3 = u4.sent(), (o2 = i3.as(Ws).channel).myMemberState = this.myMemberState = Zt$1.JOINED, this._update(o2), n2.dispatch(new Un$1({ channels: [o2], context: { source: no.EVENT_CHANNEL_ACCEPTED_INVITE }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c$1.prototype.declineInvitation = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.sdkState, n2 = e3.requestQueue, s4 = new rs({ channelUrl: this.url, userId: t4.userId }), [4, n2.send(s4)];
          case 1:
            return r2.sent(), this.myMemberState = Zt$1.NONE, [2, this];
        }
      });
    });
  }, c$1.prototype.sendUserMessage = function(e3) {
    var t4 = this, n2 = new nn$2(), s4 = uo.of(this._iid).dispatcher, r2 = N.of(this._iid);
    return u3.prototype.sendUserMessage.call(this, e3).onPending(function(e4) {
      r2.completeCurrentAndProcessNextAutoResend(e4), n2._trigger(e4);
    }).onFailed(function(e4, t5) {
      t5 && r2.completeCurrentAndProcessNextAutoResend(t5), n2._triggerFailed(e4, t5);
    }).onSucceeded(function(e4) {
      r2.completeCurrentAndProcessNextAutoResend(e4), t4._updateLastMessage(e4), ys.of(t4._iid).handlers.map(function(e5) {
        e5.onChannelChanged && e5.onChannelChanged(t4);
      }), s4.dispatch(new Un$1({ channels: [t4], context: { source: no.EVENT_MESSAGE_SENT } })), n2._trigger(e4);
    }), n2;
  }, c$1.prototype.updateUserMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, s4, r2, a4, i3 = this;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return n2 = uo.of(this._iid).dispatcher, [4, u3.prototype.updateUserMessage.call(this, e3, t4)];
          case 1:
            return s4 = o2.sent(), r2 = this._updateLastMessage(s4), a4 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === s4.messageId && (this.lastPinnedMessage = s4, r2 = true, a4 = true), r2 && (ys.of(this._iid).handlers.map(function(e4) {
              e4.onChannelChanged && e4.onChannelChanged(i3);
            }), n2.dispatch(new Un$1({ channels: [this], context: { source: a4 ? no.EVENT_PINNED_MESSAGE_UPDATED : no.EVENT_MESSAGE_UPDATED } }))), a4 && ys.of(this._iid).handlers.map(function(e4) {
              e4.onPinnedMessageUpdated && e4.onPinnedMessageUpdated(i3);
            }), n2.dispatch(new po({ messages: [s4], source: no.EVENT_MESSAGE_UPDATED })), [2, s4];
        }
      });
    });
  }, c$1.prototype._autoResendUserMessage = function(e3) {
    var t4 = this, n2 = new nn$2(), s4 = uo.of(this._iid).dispatcher, r2 = N.of(this._iid);
    return u3.prototype._autoResendUserMessage.call(this, e3).onPending(function(e4) {
      r2.completeCurrentAndProcessNextAutoResend(e4), n2._trigger(e4);
    }).onFailed(function(e4, t5) {
      r2.completeCurrentAndProcessNextAutoResend(t5), n2._triggerFailed(e4, t5);
    }).onSucceeded(function(e4) {
      var a4 = ys.of(t4._iid);
      r2.completeCurrentAndProcessNextAutoResend(e4), t4._updateLastMessage(e4), a4.handlers.map(function(e5) {
        e5.onChannelChanged && e5.onChannelChanged(t4);
      }), s4.dispatch(new Un$1({ channels: [t4], context: { source: no.EVENT_MESSAGE_SENT } })), n2._trigger(e4);
    }), n2;
  }, c$1.prototype.sendFileMessage = function(e3) {
    var t4 = this, n2 = new nn$2(), s4 = uo.of(this._iid).dispatcher, r2 = N.of(this._iid);
    return u3.prototype.sendFileMessage.call(this, e3).onPending(function(e4) {
      r2.completeCurrentAndProcessNextAutoResend(e4), n2._trigger(e4);
    }).onFailed(function(e4, t5) {
      t5 && r2.completeCurrentAndProcessNextAutoResend(t5), n2._triggerFailed(e4, t5);
    }).onSucceeded(function(e4) {
      var a4 = ys.of(t4._iid);
      r2.completeCurrentAndProcessNextAutoResend(e4), t4._updateLastMessage(e4), a4.handlers.map(function(e5) {
        e5.onChannelChanged && e5.onChannelChanged(t4);
      }), s4.dispatch(new Un$1({ channels: [t4], context: { source: no.EVENT_MESSAGE_SENT } })), n2._trigger(e4);
    }), n2;
  }, c$1.prototype.sendMultipleFilesMessage = function(e3) {
    var t4 = this, n2 = new fi(), s4 = uo.of(this._iid).dispatcher;
    return u3.prototype.sendMultipleFilesMessage.call(this, e3).onPending(function(e4) {
      n2._trigger(e4);
    }).onFailed(function(e4, t5) {
      n2._triggerFailed(e4, t5);
    }).onSucceeded(function(e4) {
      var r2 = ys.of(t4._iid);
      t4._updateLastMessage(e4), r2.handlers.map(function(e5) {
        e5.onChannelChanged && e5.onChannelChanged(t4);
      }), s4.dispatch(new Un$1({ channels: [t4], context: { source: no.EVENT_MESSAGE_SENT } })), n2._trigger(e4);
    }).onFileUploaded(function(e4, t5, s5, r2) {
      n2._triggerOnFileUploaded(e4, t5, s5, r2);
    }), n2;
  }, c$1.prototype.updateFileMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, s4, r2, a4, i3 = this;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return n2 = uo.of(this._iid).dispatcher, [4, u3.prototype.updateFileMessage.call(this, e3, t4)];
          case 1:
            return s4 = o2.sent(), r2 = this._updateLastMessage(s4), a4 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === s4.messageId && (this.lastPinnedMessage = s4, r2 = true, a4 = true), r2 && (ys.of(this._iid).handlers.map(function(e4) {
              e4.onChannelChanged && e4.onChannelChanged(i3);
            }), n2.dispatch(new Un$1({ channels: [this], context: { source: a4 ? no.EVENT_PINNED_MESSAGE_UPDATED : no.EVENT_MESSAGE_UPDATED } }))), a4 && ys.of(this._iid).handlers.map(function(e4) {
              e4.onPinnedMessageUpdated && e4.onPinnedMessageUpdated(i3);
            }), n2.dispatch(new po({ messages: [s4], source: no.EVENT_MESSAGE_UPDATED })), [2, s4];
        }
      });
    });
  }, c$1.prototype._autoResendFileMessage = function(e3) {
    var t4 = this, n2 = new nn$2(), s4 = uo.of(this._iid).dispatcher, r2 = N.of(this._iid);
    return u3.prototype._autoResendFileMessage.call(this, e3).onPending(function(e4) {
      r2.completeCurrentAndProcessNextAutoResend(e4), n2._trigger(e4);
    }).onFailed(function(e4, t5) {
      r2.completeCurrentAndProcessNextAutoResend(t5), n2._triggerFailed(e4, t5);
    }).onSucceeded(function(e4) {
      var a4 = ys.of(t4._iid);
      r2.completeCurrentAndProcessNextAutoResend(e4), t4._updateLastMessage(e4), a4.handlers.map(function(e5) {
        e5.onChannelChanged && e5.onChannelChanged(t4);
      }), s4.dispatch(new Un$1({ channels: [t4], context: { source: no.EVENT_MESSAGE_SENT } })), n2._trigger(e4);
    }), n2;
  }, c$1.prototype.deleteMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, u3.prototype.deleteMessage.call(this, e3)];
          case 1:
            return t4.sent(), 0 === e3.messageId && e3 instanceof _t && uo.of(this._iid).dispatcher.dispatch(new mo({ reqId: e3.reqId, source: no.EVENT_MESSAGE_DELETED })), [2];
        }
      });
    });
  }, c$1.prototype.hide = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, r2, a4, i3, o2, u4, c3;
      return s$1(this, function(d4) {
        switch (d4.label) {
          case 0:
            return t4 = n$2(n$2({}, is), e3), cs$2(function(e4) {
              return S$1("boolean", e4.hidePreviousMessages, true) && S$1("boolean", e4.allowAutoUnhide, true);
            }(t4)).throw(b$2.invalidParameters), n2 = uo.of(this._iid), r2 = n2.dispatcher, a4 = n2.sdkState, i3 = n2.requestQueue, o2 = new os(n$2({ channelUrl: this.url, userId: a4.userId }, t4)), [4, i3.send(o2)];
          case 1:
            return u4 = d4.sent(), c3 = u4.as(us).messageOffsetTimestamp, this.hiddenState = t4.allowAutoUnhide ? ir.HIDDEN_ALLOW_AUTO_UNHIDE : ir.HIDDEN_PREVENT_AUTO_UNHIDE, t4.hidePreviousMessages && this._updateUnreadCount(0, 0), c3 && (this.messageOffsetTimestamp = c3), r2.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_HIDDEN }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c$1.prototype.unhide = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.dispatcher, n2 = e3.requestQueue, s4 = new Ks({ channelUrl: this.url }), [4, n2.send(s4)];
          case 1:
            return r2.sent(), this.hiddenState = ir.UNHIDDEN, t4.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_UNHIDDEN }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c$1.prototype.delete = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t4 = new Ys({ channelUrl: this.url }), [4, e3.send(t4)];
          case 1:
            return n2.sent(), [2];
        }
      });
    });
  }, c$1.prototype.markAsRead = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2, a4, i3, o2 = this;
      return s$1(this, function(u4) {
        switch (u4.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.sdkState, n2 = e3.dispatcher, s4 = e3.requestQueue, r2 = new Je$1({ channelUrl: this.url }), [4, s4.send(r2)];
          case 1:
            return a4 = u4.sent(), i3 = a4.as(Ze$1).readStatus, this._updateUnreadMemberState(t4.userId, i3.readAt), (this.unreadMessageCount > 0 || this.unreadMentionCount > 0) && (this._updateUnreadCount(0, 0), ys.of(this._iid).handlers.map(function(e4) {
              e4.onChannelChanged && e4.onChannelChanged(o2);
            })), n2.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_READ } })), [2];
        }
      });
    });
  }, c$1.prototype.markAsDelivered = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.sdkState, n2 = e3.requestQueue, s4 = new vs({ channelUrl: this.url, userId: t4.userId }), [4, n2.send(s4)];
          case 1:
            return r2.sent(), [2];
        }
      });
    });
  }, c$1.prototype.startTyping = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.requestQueue, n2 = e3.typingIndicatorThrottle, (s4 = (/* @__PURE__ */ new Date()).getTime()) - this._typingStarted >= n2 ? (this._typingStarted = s4, this._typingEnded = 0, r2 = new ls({ channelUrl: this.url, time: this._typingStarted }), [4, t4.send(r2)]) : [3, 2];
          case 1:
            a4.sent(), a4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, c$1.prototype.endTyping = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.requestQueue, n2 = e3.typingIndicatorThrottle, (s4 = (/* @__PURE__ */ new Date()).getTime()) - this._typingEnded >= n2 ? (this._typingStarted = 0, this._typingEnded = s4, r2 = new ds({ channelUrl: this.url, time: this._typingStarted }), [4, t4.send(r2)]) : [3, 2];
          case 1:
            a4.sent(), a4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, c$1.prototype.createScheduledUserMessage = function(e3) {
    e3 = n$2(n$2({}, Ks$1), e3), cs$2(Qs$1(e3)).throw(b$2.invalidParameters);
    var t4 = new nn$2();
    return this._createScheduledUserMessage(e3, t4), t4;
  }, c$1.prototype.updateScheduledUserMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, a4, i3;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return n2 = n$2(n$2({}, tr), t4), cs$2(function(e4) {
              return Tn$2(e4) && S$1("number", e4.scheduledAt, true);
            }(n2)).throw(b$2.invalidParameters), r2 = uo.of(this._iid).requestQueue, a4 = new rr(n$2({ reqId: this._generateRequestId(), scheduledMessageId: e3, channelType: this.channelType, channelUrl: this.url }, n2)), [4, r2.send(a4)];
          case 1:
            return i3 = o2.sent(), [2, i3.as(Pr).message];
        }
      });
    });
  }, c$1.prototype.createScheduledFileMessage = function(e3) {
    var t4 = this;
    e3 = n$2(n$2({}, Gs$1), e3), cs$2(Vs$1(e3)).throw(b$2.invalidParameters);
    var n2 = Date.now(), r2 = this._generateRequestId(), a4 = new nn$2();
    return ms$2(Ii).then(function() {
      var s4 = t4._createPendingScheduledFileMessage(e3, r2, n2);
      kr$1(function() {
        return r$1(t4, void 0, void 0, function() {
          return s$1(this, function(e4) {
            return [2, a4._trigger(s4)];
          });
        });
      });
    }), k(e3.file) ? this._uploadFileAndUpdateParams(e3).then(function() {
      return t4._createScheduledFileMessage(e3, a4, r2, n2);
    }) : this._createScheduledFileMessage(e3, a4, r2, n2), a4;
  }, c$1.prototype.updateScheduledFileMessage = function(e3, t4) {
    return r$1(this, void 0, void 0, function() {
      var n2, r2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return n2 = n$2(n$2({}, er), t4), cs$2(function(e4) {
              return In$2(e4) && S$1("number", e4.scheduledAt, true) && (k(e4.file) || S$1("string", e4.fileUrl)) && S$1("string", e4.fileName, true) && S$1("string", e4.mimeType, true) && S$1("number", e4.fileSize, true) && (null === e4.thumbnailSizes || void 0 === e4.thumbnailSizes || e4.thumbnailSizes.every(function(e5) {
                return S$1("object", e5) && e5.maxWidth > 0 && e5.maxHeight > 0;
              }));
            }(n2)).throw(b$2.invalidParameters), k(n2.file) ? [4, this._uploadFileAndUpdateParams(n2)] : [3, 2];
          case 1:
            i3.sent(), i3.label = 2;
          case 2:
            return r2 = new nr(n$2({ reqId: this._generateRequestId(), scheduledMessageId: e3, channelType: this.channelType, channelUrl: this.url }, n2)), [4, uo.of(this._iid).requestQueue.send(r2)];
          case 3:
            return a4 = i3.sent(), [2, a4.as(sr).message];
        }
      });
    });
  }, c$1.prototype.cancelScheduledMessage = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return t4 = new or({ scheduledMessageId: e3, channelType: this.channelType, channelUrl: this.url }), [4, uo.of(this._iid).requestQueue.send(t4)];
          case 1:
            return n2.sent(), [2];
        }
      });
    });
  }, c$1.prototype.sendScheduledMessageNow = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return t4 = new ur({ scheduledMessageId: e3, channelType: this.channelType, channelUrl: this.url }), [4, uo.of(this._iid).requestQueue.send(t4)];
          case 1:
            return n2.sent(), [2];
        }
      });
    });
  }, c$1.prototype.getMyPushTriggerOption = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.sdkState, n2 = e3.requestQueue, s4 = new hr({ userId: t4.userId, channelUrl: this.url }), [4, n2.send(s4)];
          case 1:
            return r2 = i3.sent(), a4 = r2.as(dr).pushTriggerOption, this.myPushTriggerOption = a4, [2, a4];
        }
      });
    });
  }, c$1.prototype.setMyPushTriggerOption = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, s4, a4, i3, o2, u4;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return cs$2(T$2(_, e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid), n2 = t4.dispatcher, s4 = t4.sdkState, a4 = t4.requestQueue, i3 = new cr({ userId: s4.userId, channelUrl: this.url, pushTriggerOption: e3 }), [4, a4.send(i3)];
          case 1:
            return o2 = c3.sent(), u4 = o2.as(lr).pushTriggerOption, this.myPushTriggerOption = u4, n2.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_UPDATED }, isWebSocketEventComing: true })), [2, u4];
        }
      });
    });
  }, c$1.prototype.setMyCountPreference = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, s4, a4, i3, o2, u4;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return cs$2(T$2(ar, e3)).throw(b$2.invalidParameters), t4 = uo.of(this._iid), n2 = t4.dispatcher, s4 = t4.sdkState, a4 = t4.requestQueue, i3 = new Js({ channelUrl: this.url, userId: s4.userId, countPreference: e3 }), [4, a4.send(i3)];
          case 1:
            return o2 = c3.sent(), u4 = o2.as(Xs).countPreference, this.myCountPreference = u4, this._updateUnreadCount(this.unreadMessageCount, this.unreadMentionCount), n2.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_UPDATED }, isWebSocketEventComing: true })), [2, u4];
        }
      });
    });
  }, c$1.prototype.resetMyHistory = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2, a4, i3;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.dispatcher, n2 = e3.requestQueue, s4 = e3.sdkState, r2 = new Zs({ channelUrl: this.url, locale: s4.localeForChatbot }), [4, n2.send(r2)];
          case 1:
            return a4 = o2.sent(), i3 = a4.as($s).messageOffsetTimestamp, this.messageOffsetTimestamp = i3, this.lastMessage && this.lastMessage.createdAt < i3 && (this.lastMessage = null), this._updateUnreadCount(0, 0), this.totalUnreadReplyCount = 0, t4.dispatch(new Un$1({ channels: [this], context: { source: no.EVENT_CHANNEL_RESET_HISTORY }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c$1.prototype._uploadFileAndUpdateParams = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t4, n2, s4, r2, a4, i3, o2, u4, c3, l2;
      return s$1(this, function(h4) {
        switch (h4.label) {
          case 0:
            return k(e3.file) ? (t4 = uo.of(this._iid).requestQueue, n2 = new Re$2({ file: e3.file, channelUrl: this.url, thumbnailSizes: e3.thumbnailSizes, requestId: this._generateRequestId() }), [4, t4.send(n2)]) : [3, 2];
          case 1:
            s4 = h4.sent(), r2 = s4.as(xe$1), a4 = r2.url, i3 = r2.fileSize, o2 = void 0 === i3 ? e3.fileSize : i3, u4 = r2.thumbnails, c3 = r2.requireAuth, l2 = void 0 !== c3 && c3, e3.fileUrl = a4, e3.fileSize = o2, e3.requireAuth = l2, e3._thumbnails = u4, h4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, c$1.prototype.resendMessage = function(e3, t4) {
    var n2, s4 = this;
    if (cs$2(e3 instanceof _t && !e3.scheduledInfo && e3.isResendable).throw(b$2.invalidParameters), e3.isUserMessage()) {
      var r2 = null !== (n2 = e3.messageParams) && void 0 !== n2 ? n2 : ln$2(e3), a4 = new nn$2();
      return this._sendUserMessage(r2, bi.RESEND, e3.reqId).onPending(function(e4) {
        a4._trigger(e4);
      }).onFailed(function(e4, t5) {
        a4._triggerFailed(e4, t5);
      }).onSucceeded(function(e4) {
        s4._tryUpdateLastMessageAndCallEvents(s4, e4), a4._trigger(e4);
      }), a4;
    }
    if (e3.isFileMessage()) {
      var i3 = this._validateFailedFileMessageHasFile(e3, t4);
      cs$2(i3).throw(b$2.invalidParameters);
      r2 = _n$2(e3, t4);
      var o2 = new nn$2();
      return this._sendFileMessage(r2, bi.RESEND, e3.reqId).onPending(function(e4) {
        o2._trigger(e4);
      }).onFailed(function(e4, t5) {
        o2._triggerFailed(e4, t5);
      }).onSucceeded(function(e4) {
        s4._tryUpdateLastMessageAndCallEvents(s4, e4), o2._trigger(e4);
      }), o2;
    }
    if (e3.isMultipleFilesMessage()) {
      r2 = e3.messageParams;
      var u4 = new fi();
      return this._sendMultipleFilesMessage(r2, bi.RESEND, e3.reqId).onPending(function(e4) {
        u4._trigger(e4);
      }).onFailed(function(e4, t5) {
        u4._triggerFailed(e4, t5);
      }).onSucceeded(function(e4) {
        s4._tryUpdateLastMessageAndCallEvents(s4, e4), u4._trigger(e4);
      }).onFileUploaded(function(e4, t5, n3, s5) {
        u4._triggerOnFileUploaded(e4, t5, n3, s5);
      }), u4;
    }
  }, c$1.prototype.copyMessage = function(e3, t4) {
    var n2 = this;
    if (cs$2(e3 instanceof Ti && t4 instanceof _t && t4.sendingStatus === Z.SUCCEEDED && this.url === t4.channelUrl && !t4.scheduledInfo).throw(b$2.invalidParameters), t4.isUserMessage()) {
      cs$2(!t4.poll).throw(b$2.notSupportedError);
      var s4 = un$2(t4), r2 = new nn$2();
      return e3._sendUserMessage(s4).onPending(function(e4) {
        r2._trigger(e4);
      }).onFailed(function(e4, t5) {
        r2._triggerFailed(e4, t5);
      }).onSucceeded(function(t5) {
        e3.isGroupChannel() && n2._tryUpdateLastMessageAndCallEvents(e3, t5), r2._trigger(t5);
      }), r2;
    }
    if (t4.isFileMessage()) {
      s4 = vn$2(t4);
      var a4 = new nn$2();
      return e3._sendFileMessage(s4).onPending(function(e4) {
        a4._trigger(e4);
      }).onFailed(function(e4, t5) {
        a4._triggerFailed(e4, t5);
      }).onSucceeded(function(t5) {
        e3.isGroupChannel() && n2._tryUpdateLastMessageAndCallEvents(e3, t5), a4._trigger(t5);
      }), a4;
    }
    if (t4.isMultipleFilesMessage()) {
      if (e3.isGroupChannel()) {
        s4 = li(t4);
        var i3 = new fi();
        return e3._sendMultipleFilesMessage(s4, bi.COPY).onPending(function(e4) {
          i3._trigger(e4);
        }).onFailed(function(e4, t5) {
          i3._triggerFailed(e4, t5);
        }).onSucceeded(function(t5) {
          n2._tryUpdateLastMessageAndCallEvents(e3, t5), i3._trigger(t5);
        }).onFileUploaded(function(e4, t5, n3, s5) {
          i3._triggerOnFileUploaded(e4, t5, n3, s5);
        }), i3;
      }
      throw b$2.channelTypeNotSupportedError;
    }
  }, c$1.prototype.getMessageDeletionTimestamp = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t4, n2, s4, r2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t4 = e3.requestQueue, n2 = e3.dispatcher, s4 = new _r({ channelUrl: this.url, channelType: this.channelType }), [4, t4.send(s4)];
          case 1:
            return r2 = i3.sent(), a4 = r2.as(pr).messageDeletionTimestamp, this._messageDeletionTimestamp = a4, n2.dispatch(new Tn$1({ channel: this })), [2, a4];
        }
      });
    });
  }, c$1;
}(Ti);
var t$1 = function() {
  this.onUserMuted = ut$1, this.onUserUnmuted = ut$1, this.onUserBanned = ut$1, this.onUserUnbanned = ut$1, this.onChannelChanged = ut$1, this.onChannelDeleted = ut$1, this.onChannelFrozen = ut$1, this.onChannelUnfrozen = ut$1, this.onOperatorUpdated = ut$1, this.onChannelMemberCountChanged = ut$1, this.onMetaDataCreated = ut$1, this.onMetaDataUpdated = ut$1, this.onMetaDataDeleted = ut$1, this.onMetaCounterCreated = ut$1, this.onMetaCounterUpdated = ut$1, this.onMetaCounterDeleted = ut$1, this.onMessageReceived = ut$1, this.onMessageUpdated = ut$1, this.onMessageDeleted = ut$1, this.onMentionReceived = ut$1, this.onReactionUpdated = ut$1, this.onThreadInfoUpdated = ut$1;
};
var De$1, Pe$1 = {}, He$1 = function() {
  function e3(e4) {
    var t4 = e4._iid, n2 = e4.limit, a4 = void 0 === n2 ? 100 : n2, r2 = this;
    this.ref = 0, this._iid = t4, this._limit = a4;
    var i3, o2 = uo.of(this._iid), l2 = o2.sdkState, u3 = o2.dispatcher, c$1 = o2.logger, p2 = o2.cacheContext, _2 = o2.statManager;
    this._metadataKey = (i3 = l2.userId, "sendbird:".concat(i3, "@groupchannel/sync.meta"));
    var m4 = function(e5) {
      return "sendbird:".concat(e5, "@groupchannel/sync");
    }(l2.userId);
    this._sync = new w(m4, function() {
      return r$1(r2, void 0, void 0, function() {
        var e5, t5, n3, a5, r3, i4, s4, o3, u4, h4, f2, v2, m5, C2, b3, S4;
        return s$1(this, function(d4) {
          switch (d4.label) {
            case 0:
              return e5 = { hasNext: true, nextToken: "" }, [4, this.loadMetadata()];
            case 1:
              if (d4.sent(), c$1.debug("channel background sync from", null === (u4 = this._metadata) || void 0 === u4 ? void 0 : u4.token), null === (h4 = this._metadata) || void 0 === h4 ? void 0 : h4.completed) return [3, 14];
              t5 = { includeEmpty: true, includeMetaData: true, hiddenChannelFilter: sn$1.ALL, order: E.CHRONOLOGICAL }, d4.label = 2;
            case 2:
              if (d4.trys.push([2, 9, 12, 13]), t5.order !== E.LATEST_LAST_MESSAGE) return [3, 6];
              d4.label = 3;
            case 3:
              return d4.trys.push([3, 5, , 6]), [4, p2.preference.get(Gr$1(l2.appId))];
            case 4:
              return n3 = d4.sent(), t5.includeChatNotification = Boolean(n3), [3, 6];
            case 5:
              return d4.sent(), t5.includeChatNotification = false, [3, 6];
            case 6:
              return [4, ys.of(this._iid).getMyGroupChannels(null !== (v2 = null === (f2 = this._metadata) || void 0 === f2 ? void 0 : f2.token) && void 0 !== v2 ? v2 : "", t5, this._limit, no.SYNC_CHANNEL_BACKGROUND)];
            case 7:
              return a5 = d4.sent(), r3 = a5.channels, i4 = a5.token, e5.hasNext = r3.length >= this._limit && !!i4, e5.nextToken = i4, this._metadata && (this._metadata.token = i4, (o3 = this._metadata.range).extends.apply(o3, c([], a$1(r3.map(function(e6) {
                return e6.createdAt;
              })), false)), this._metadata.completed = !e5.hasNext), c$1.debug("channel background sync progress", e5), [4, this.saveMetadata()];
            case 8:
              return d4.sent(), [3, 13];
            case 9:
              return s4 = d4.sent(), c$1.debug("channel background sync error", s4), s4 instanceof b$2 && s4.isInvalidTokenError ? [4, this.clearMetaData()] : [3, 11];
            case 10:
              d4.sent(), d4.label = 11;
            case 11:
              throw s4;
            case 12:
              return _2.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: "", measured_on: "channel_back_sync", event: "cache_fetch", max_db_size: null !== (C2 = null === (m5 = p2.localCacheConfig) || void 0 === m5 ? void 0 : m5.maxSize) && void 0 !== C2 ? C2 : 0, use_local_cache: p2.localCacheEnabled, starting_point: 0, message_init_policy: null !== (S4 = null === (b3 = t5.order) || void 0 === b3 ? void 0 : b3.toString()) && void 0 !== S4 ? S4 : "", collection_id: l2.userId } })), [7];
            case 13:
              return [3, 15];
            case 14:
              e5.hasNext = false, e5.nextToken = "", d4.label = 15;
            case 15:
              return [2, e5];
          }
        });
      });
    }), this._connectionEventContext = u3.on(function(e5) {
      if (e5 instanceof Fr$1) if (e5.stateType === Rr$1.CONNECTED) r2.resume();
      else r2.pause();
    });
  }
  return e3.of = function(t4) {
    return Pe$1[t4] || (Pe$1[t4] = new e3({ _iid: t4 })), Pe$1[t4].ref++, Pe$1[t4];
  }, e3.clear = function(e4) {
    Pe$1[e4] && (Pe$1[e4].close(), delete Pe$1[e4]);
  }, Object.defineProperty(e3.prototype, "range", { get: function() {
    var e4, t4;
    return null !== (t4 = null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.range) && void 0 !== t4 ? t4 : new Es({});
  }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "completed", { get: function() {
    var e4;
    return !!(null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.completed);
  }, enumerable: false, configurable: true }), e3.prototype.loadMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this._metadata ? [3, 2] : [4, uo.of(this._iid).cacheContext.preference.get(this._metadataKey)];
          case 1:
            e4 = t4.sent(), this._metadata = { token: e4 ? e4.token : "", range: new Es(e4 ? e4.range : { top: Number.MAX_SAFE_INTEGER, bottom: 0 }), completed: !!e4 && e4.completed }, t4.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, e3.prototype.saveMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._metadata ? [4, uo.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e4.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, e3.prototype.clearMetaData = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, uo.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e4.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e3.prototype.resume = function() {
    var e4, t4, n2 = uo.of(this._iid), a4 = n2.logger;
    n2.sessionManager.session.hasSession && (a4.debug("channel background sync resume()"), this._sync.start(null !== (t4 = null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.token) && void 0 !== t4 ? t4 : ""));
  }, e3.prototype.pause = function() {
    uo.of(this._iid).logger.debug("channel background sync stop()"), this._sync.stop();
  }, e3.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Pe$1[this._iid]);
  }, e3;
}(), Re$1 = {}, Ve = function() {
  function e3(e4) {
    var t4 = e4._iid, n2 = this;
    this.ref = 0, this._iid = t4;
    var a4, r2 = uo.of(this._iid), i3 = r2.logger, o2 = r2.sdkState, l2 = r2.dispatcher, u3 = r2.cacheContext, c3 = r2.statManager;
    this._metadataKey = (a4 = o2.userId, "sendbird:".concat(a4, "@groupchannel/changelogs.meta")), this._subscribers = new ne();
    var p2 = function(e5) {
      return "sendbird:".concat(e5, "@groupchannel/changelogs");
    }(o2.userId);
    this._sync = new w(p2, function() {
      return r$1(n2, void 0, void 0, function() {
        var e5, t5, n3, a5, r3, s4, l3, h4, p3, f2, _2, v2;
        return s$1(this, function(d4) {
          switch (d4.label) {
            case 0:
              return e5 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
            case 1:
              d4.sent(), i3.debug("channel changelog sync from", null === (f2 = this._metadata) || void 0 === f2 ? void 0 : f2.token), d4.label = 2;
            case 2:
              d4.trys.push([2, 9, , 12]), t5 = { includeEmpty: true, includeMetaData: true }, d4.label = 3;
            case 3:
              return d4.trys.push([3, 5, , 6]), [4, u3.preference.get(Gr$1(o2.appId))];
            case 4:
              return n3 = d4.sent(), t5.includeChatNotification = Boolean(n3), [3, 6];
            case 5:
              return d4.sent(), t5.includeChatNotification = false, [3, 6];
            case 6:
              return [4, ys.of(this._iid).getMyGroupChannelChangeLogs(null !== (v2 = null === (_2 = this._metadata) || void 0 === _2 ? void 0 : _2.token) && void 0 !== v2 ? v2 : "", t5, no.SYNC_CHANNEL_CHANGELOGS)];
            case 7:
              return a5 = d4.sent(), r3 = a5.updatedChannels, s4 = a5.deletedChannelUrls, l3 = a5.hasMore, h4 = a5.token, this._subscribers.dispatch("progress", { updatedChannels: r3, deletedChannelUrls: s4, hasMore: l3, token: h4 }), e5.hasNext = l3, e5.nextToken = h4, this._metadata && (this._metadata.token = h4), i3.debug("channel changelog sync progress", e5), [4, this.saveMetadata()];
            case 8:
              return d4.sent(), u3.localCacheEnabled && c3.put(new $e$1({ type: Me$1.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: "", measured_on: "channel_change_log_sync", event: r3.length > 0 || s4.length > 0 ? "cache_miss" : "cache_hit", max_db_size: r3.length, use_local_cache: u3.localCacheEnabled, starting_point: 0, message_init_policy: s4.length.toString(), collection_id: o2.userId } })), [3, 12];
            case 9:
              return p3 = d4.sent(), i3.debug("channel changelog sync error", p3), p3 instanceof b$2 && p3.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 11];
            case 10:
              d4.sent(), d4.label = 11;
            case 11:
              throw p3;
            case 12:
              return [2, e5];
          }
        });
      });
    }), this._sync.on("stop", function() {
      n2._subscribers.dispatch("pause");
    }), this._connectionEventContext = l2.on(function(e5) {
      if (e5 instanceof Fr$1) if (e5.stateType === Rr$1.CONNECTED) n2.resume();
      else n2.pause();
    });
  }
  return e3.of = function(t4) {
    return Re$1[t4] || (Re$1[t4] = new e3({ _iid: t4 })), Re$1[t4].ref++, Re$1[t4];
  }, e3.clear = function(e4) {
    Re$1[e4] && (Re$1[e4].close(), delete Re$1[e4]);
  }, Object.defineProperty(e3.prototype, "isRunning", { get: function() {
    return this._sync.isRunning;
  }, enumerable: false, configurable: true }), e3.prototype.loadMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2, a4;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return this._metadata ? [3, 2] : (e4 = uo.of(this._iid), t4 = e4.cacheContext, n2 = e4.firstConnectedAt, [4, t4.preference.get(this._metadataKey)]);
          case 1:
            a4 = r2.sent(), this._metadata = { token: a4 ? a4.token : n2 }, r2.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, e3.prototype.saveMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._metadata ? [4, uo.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e4.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, e3.prototype.clearMetadata = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, uo.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e4.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e3.prototype.on = function(e4, t4) {
    return this._subscribers.on(e4, t4);
  }, e3.prototype.resume = function() {
    uo.of(this._iid).sessionManager.session.hasSession && this._sync.start(0);
  }, e3.prototype.pause = function() {
    this._sync.stop();
  }, e3.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Re$1[this._iid]);
  }, e3;
}(), je = function(e3, t4) {
  return e3.findIndex(function(e4) {
    return e4.isIdentical(t4);
  });
}, Ke = function(e3, t4, n2) {
  if (e3.length > 0) {
    for (var a4 = je(e3, t4), r2 = 0, i3 = e3.length - 1, s4 = Math.floor((r2 + i3) / 2); r2 < i3; ) {
      var o2 = ze(e3[s4], t4, n2);
      if (o2 > 0) i3 = s4, s4 = Math.floor((r2 + i3) / 2);
      else {
        if (!(o2 < 0)) return { place: s4, oldPosition: a4 };
        r2 = s4 + 1, s4 = Math.floor((r2 + i3) / 2);
      }
    }
    return { place: ze(e3[s4], t4, n2) >= 0 ? s4 : s4 + 1, oldPosition: a4 };
  }
  return { place: e3.length, oldPosition: -1 };
}, ze = function(e3, t4, n2) {
  switch (n2) {
    case E.LATEST_LAST_MESSAGE:
      return e3.lastMessage && t4.lastMessage ? 0 === (a4 = t4.lastMessage.createdAt - e3.lastMessage.createdAt) ? t4.createdAt - e3.createdAt : a4 : e3.lastMessage ? -1 : t4.lastMessage ? 1 : t4.createdAt - e3.createdAt;
    case E.CHRONOLOGICAL:
      return t4.createdAt - e3.createdAt;
    case E.CHANNEL_NAME_ALPHABETICAL:
      var a4;
      return 0 === (a4 = e3.name.localeCompare(t4.name)) ? e3.createdAt - t4.createdAt : a4;
    default:
      return 0;
  }
}, Qe = function() {
  function e3(e4, t4) {
    var n2 = t4.filter, a4 = void 0 === n2 ? new hn$1() : n2, r2 = t4.order, i3 = void 0 === r2 ? E.LATEST_LAST_MESSAGE : r2, o2 = t4.limit, l2 = void 0 === o2 ? Wr : o2, u3 = t4.includeChangesOnInitialLoad, c3 = void 0 !== u3 && u3, p2 = this;
    this.channels = [], this._isInitialized = false, this._iid = e4, this._key = "gcc-".concat(ee()), this._isDisposed = false, this._isGetRemoteChannelsSucceeded = true, this._includeChangesOnInitialLoad = c3, this.filter = a4, this.order = i3, this._hasMore = true, this._token = "", this._limit = l2;
    var _2 = uo.of(this._iid), m4 = _2.sdkState, g2 = _2.cacheContext, y4 = _2.dispatcher;
    g2.localCacheEnabled && (this._backgroundSync = He$1.of(e4), this._backgroundSync.resume()), this._changelogSync = Ve.of(e4), this._changelogSync.resume(), ys.of(this._iid).subscribeChannelEvent(this._key, { onUpdate: function(e5, t5) {
      var n3 = t5.source;
      if (Nn$1(n3)) {
        var a5 = e5.filter(function(e6) {
          return p2.filter.match(e6, m4.userId);
        }), r3 = e5.filter(function(e6) {
          return !p2.filter.match(e6, m4.userId);
        }).map(function(e6) {
          return e6.url;
        });
        a5.length > 0 && p2._addChannelsToView(a5, t5), r3.length > 0 && p2._removeChannelsFromView(r3, t5);
      }
    }, onRemove: function(e5, t5) {
      p2._removeChannelsFromView(e5, t5);
    } }), y4.on(function(e5) {
      e5 instanceof Fr$1 && (e5.stateType === Rr$1.CONNECTED ? p2._isGetRemoteChannelsSucceeded || r$1(p2, void 0, void 0, function() {
        return s$1(this, function(e6) {
          switch (e6.label) {
            case 0:
              return [4, this._revokeLoadMore()];
            case 1:
              return e6.sent(), [2];
          }
        });
      }) : e5.stateType === Rr$1.LOGOUT && p2.dispose());
    });
  }
  return Object.defineProperty(e3.prototype, "hasMore", { get: function() {
    return !this._isDisposed && this._hasMore;
  }, enumerable: false, configurable: true }), e3.prototype.setGroupChannelCollectionHandler = function(e4) {
    this._handler = e4;
  }, e3.prototype._addChannelsToView = function(e4, t4, n2) {
    var a4, r2, i3, o$1, l2 = this;
    void 0 === n2 && (n2 = false);
    var u3 = [], c3 = [], h4 = [];
    try {
      for (var p2 = o(e4), f2 = p2.next(); !f2.done; f2 = p2.next()) {
        var _2 = f2.value, v2 = je(this.channels, _2);
        v2 >= 0 && this.channels.splice(v2, 1);
        var m4 = Ke(this.channels, _2, this.order).place;
        if (v2 < 0) m4 === this.channels.length ? !n2 && this._hasMore || (u3.push(_2), this.channels.push(_2)) : (u3.push(_2), this.channels.splice(m4, 0, _2));
        else switch (t4.source) {
          case no.EVENT_CHANNEL_UPDATED:
          case no.EVENT_MESSAGE_RECEIVED:
          case no.SYNC_CHANNEL_CHANGELOGS:
          case no.EVENT_MESSAGE_SENT:
            this.order === E.CHANNEL_NAME_ALPHABETICAL && this._hasMore && m4 === this.channels.length ? h4.push(_2) : (this.channels.splice(m4, 0, _2), c3.push(_2));
            break;
          default:
            this.channels.splice(m4, 0, _2), c3.push(_2);
        }
      }
    } catch (e5) {
      a4 = { error: e5 };
    } finally {
      try {
        f2 && !f2.done && (r2 = p2.return) && r2.call(p2);
      } finally {
        if (a4) throw a4.error;
      }
    }
    if (h4.length > 0) try {
      for (var g2 = o(h4), y4 = g2.next(); !y4.done; y4 = g2.next()) {
        _2 = y4.value;
        var C2 = je(this.channels, _2);
        -1 !== C2 && this.channels.splice(C2, 1);
      }
    } catch (e5) {
      i3 = { error: e5 };
    } finally {
      try {
        y4 && !y4.done && (o$1 = g2.return) && o$1.call(g2);
      } finally {
        if (i3) throw i3.error;
      }
    }
    Nn$1(t4.source) && kr$1(function() {
      return r$1(l2, void 0, void 0, function() {
        var e5, n3, a5;
        return s$1(this, function(r3) {
          return u3.length > 0 && (null === (e5 = this._handler) || void 0 === e5 ? void 0 : e5.onChannelsAdded) && this._handler.onChannelsAdded(t4, u3), c3.length > 0 && (null === (n3 = this._handler) || void 0 === n3 ? void 0 : n3.onChannelsUpdated) && this._handler.onChannelsUpdated(t4, c3), h4.length > 0 && (null === (a5 = this._handler) || void 0 === a5 ? void 0 : a5.onChannelsDeleted) && this._handler.onChannelsDeleted(t4, h4.map(function(e6) {
            return e6.url;
          })), [2];
        });
      });
    });
  }, e3.prototype._removeChannelsFromView = function(e4, t4) {
    var n2, a4, r2 = this, i3 = [], o$1 = function(e5) {
      var t5 = l2.channels.findIndex(function(t6) {
        return t6.url === e5;
      });
      t5 >= 0 && (i3.push(l2.channels[t5].url), l2.channels.splice(t5, 1));
    }, l2 = this;
    try {
      for (var u3 = o(e4), c3 = u3.next(); !c3.done; c3 = u3.next()) {
        o$1(c3.value);
      }
    } catch (e5) {
      n2 = { error: e5 };
    } finally {
      try {
        c3 && !c3.done && (a4 = u3.return) && a4.call(u3);
      } finally {
        if (n2) throw n2.error;
      }
    }
    return Nn$1(t4.source) && i3.length > 0 && kr$1(function() {
      return r$1(r2, void 0, void 0, function() {
        var e5;
        return s$1(this, function(n3) {
          return (null === (e5 = this._handler) || void 0 === e5 ? void 0 : e5.onChannelsDeleted) && this._handler.onChannelsDeleted(t4, i3), [2];
        });
      });
    }), i3;
  }, e3.prototype._getLocalChannels = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return e4 = ys.of(this._iid), t4 = this.channels.length > 0 ? function(e5, t5) {
              var n3, a4, r2, i3;
              switch (t5) {
                case E.LATEST_LAST_MESSAGE:
                  return null !== (a4 = null === (n3 = e5.lastMessage) || void 0 === n3 ? void 0 : n3.createdAt) && void 0 !== a4 ? a4 : e5.createdAt;
                case E.CHRONOLOGICAL:
                  return e5.createdAt;
                case E.CHANNEL_NAME_ALPHABETICAL:
                  return e5.name;
                default:
                  return null !== (i3 = null === (r2 = e5.lastMessage) || void 0 === r2 ? void 0 : r2.createdAt) && void 0 !== i3 ? i3 : e5.createdAt;
              }
            }(this.channels[this.channels.length - 1], this.order) : null, [4, e4.getChannelsFromCache(t4, this.filter, this.order, this._limit, t4 ? this.channels[this.channels.length - 1].url : void 0)];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, e3.prototype._getRemoteChannels = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t4, n2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return [4, ys.of(this._iid).getMyGroupChannels(this._token, oe(n$2(n$2({}, this.filter), { userIdsFilter: this.filter.userIdsFilter, searchFilter: this.filter.searchFilter, order: this.order })), this._limit)];
          case 1:
            return e4 = a4.sent(), t4 = e4.channels, n2 = e4.token, this._token = n2, this._hasMore = !!n2, [2, t4];
        }
      });
    });
  }, e3.prototype._revokeLoadMore = function() {
    return r$1(this, void 0, void 0, function() {
      var e4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            if (this._isDisposed) return [2];
            t4.label = 1;
          case 1:
            return t4.trys.push([1, 3, , 4]), [4, this._getRemoteChannels()];
          case 2:
            return e4 = t4.sent(), this._isGetRemoteChannelsSucceeded = true, this._addChannelsToView(e4, { source: no.REQUEST_CHANNEL }, true), [3, 4];
          case 3:
            return t4.sent(), this._isGetRemoteChannelsSucceeded = false, [3, 4];
          case 4:
            return [2];
        }
      });
    });
  }, e3.prototype.loadMore = function() {
    var e4;
    return r$1(this, void 0, void 0, function() {
      var t4, n2, a4, r2, i3, o$1, l2, u3, c3, p2, f2, _2, v2, m4, g2, C2, b3, S4, M4, A2 = this;
      return s$1(this, function(L3) {
        switch (L3.label) {
          case 0:
            if (this._isDisposed) throw new b$2({ code: u$1.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return t4 = null, this._includeChangesOnInitialLoad && 0 === this.channels.length && this._changelogSync.isRunning ? [4, new Promise(function(e5) {
              A2._changelogSyncSubscriberContext = A2._changelogSync.on("progress", function(t5) {
                return e5(t5);
              }).on("pause", function() {
                return e5(null);
              });
            })] : [3, 2];
          case 1:
            t4 = L3.sent(), null === (e4 = this._changelogSyncSubscriberContext) || void 0 === e4 || e4.close(), L3.label = 2;
          case 2:
            return n2 = uo.of(this._iid), a4 = n2.cacheContext, r2 = n2.connectionManager, i3 = n2.statManager, this._isInitialized ? [3, 5] : (this._isInitialized = true, a4.localCacheEnabled ? [4, this._backgroundSync.loadMetadata()] : [3, 4]);
          case 3:
            L3.sent(), L3.label = 4;
          case 4:
            i3.put(new Ws$2({ type: Me$1.FEATURE_LOCALCACHE, data: { use_local_cache: a4.localCacheEnabled, collection_interface: { group_channel: true } } })), L3.label = 5;
          case 5:
            return o$1 = [], this._hasMore ? !a4.localCacheEnabled || r2.isConnected && !this._backgroundSync.completed ? [3, 7] : [4, Dr$1(function() {
              return r$1(A2, void 0, void 0, function() {
                return s$1(this, function(e5) {
                  switch (e5.label) {
                    case 0:
                      return [4, this._getLocalChannels()];
                    case 1:
                      return o$1 = e5.sent(), [2];
                  }
                });
              });
            })] : [3, 11];
          case 6:
            return L3.sent(), this._hasMore = o$1.length >= this._limit, [3, 10];
          case 7:
            return L3.trys.push([7, 9, , 10]), [4, this._getRemoteChannels()];
          case 8:
            return o$1 = L3.sent(), this._isGetRemoteChannelsSucceeded = true, [3, 10];
          case 9:
            return L3.sent(), this._isGetRemoteChannelsSucceeded = false, [3, 10];
          case 10:
            this._addChannelsToView(o$1, { source: no.REQUEST_CHANNEL }, true), L3.label = 11;
          case 11:
            if (t4) {
              try {
                for (l2 = o(t4.updatedChannels), u3 = l2.next(); !u3.done; u3 = l2.next()) c3 = u3.value, (g2 = je(o$1, c3)) >= 0 ? o$1[g2] = c3 : (p2 = Ke(o$1, c3, this.order).place, o$1.splice(p2, 0, c3));
              } catch (e5) {
                C2 = { error: e5 };
              } finally {
                try {
                  u3 && !u3.done && (b3 = l2.return) && b3.call(l2);
                } finally {
                  if (C2) throw C2.error;
                }
              }
              f2 = o$1.map(function(e5) {
                return e5.url;
              });
              try {
                for (_2 = o(t4.deletedChannelUrls), v2 = _2.next(); !v2.done; v2 = _2.next()) m4 = v2.value, (g2 = f2.indexOf(m4)) >= 0 && (o$1.splice(g2, 1), f2.splice(g2, 1));
              } catch (e5) {
                S4 = { error: e5 };
              } finally {
                try {
                  v2 && !v2.done && (M4 = _2.return) && M4.call(_2);
                } finally {
                  if (S4) throw S4.error;
                }
              }
            }
            return [2, o$1];
        }
      });
    });
  }, e3.prototype.dispose = function() {
    var e4, t4, n2;
    this._isDisposed || (this._isDisposed = true, this.channels.length > 0 && this.channels.splice(0, this.channels.length), null === (e4 = this._backgroundSync) || void 0 === e4 || e4.close(), null === (t4 = this._changelogSync) || void 0 === t4 || t4.close(), null === (n2 = this._changelogSyncSubscriberContext) || void 0 === n2 || n2.close(), ys.of(this._iid).unsubscribeChannelEvent(this._key));
  }, e3;
}(), We = function(e3) {
  function t4(t5) {
    var n2 = this, a4 = t5.token, r2 = t5.limit, i3 = t5.order, s4 = t5.includeEmpty, o2 = t5.membershipFilter, l2 = t5.channelNameContainsFilter, u3 = t5.channelUrlsFilter, c3 = t5.customTypesFilter, h4 = t5.customTypeStartsWithFilter, d4 = t5.superChannelFilter, p2 = t5.metadataOrderKeyFilter, f2 = t5.metadataKey, _2 = t5.metadataValues, v2 = t5.metadataValueStartsWith, m4 = t5.includeFrozen, g2 = t5.includeMetaData;
    return (n2 = e3.call(this) || this).method = ae.GET, n2.path = de, n2.params = se(oe({ token: a4, limit: r2, order: i3, show_member: true, show_read_receipt: true, show_delivery_receipt: true, show_empty: s4, public_mode: $t$1.PUBLIC, public_membership_mode: o2, name_contains: l2, channel_urls: u3, custom_types: c3, custom_type_startswith: h4, super_mode: d4, metadata_order_key: p2, metadata_key: f2, metadata_values: _2, metadata_value_startswith: v2, show_frozen: m4, show_metadata: g2 })), n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Be = function(e3) {
  function t4(t5, n2) {
    var a4 = e3.call(this, t5, n2) || this;
    a4.channels = [];
    var r2 = n2.next, i3 = n2.channels, s4 = n2.ts;
    return a4.token = r2, i3 && i3.length > 0 && (a4.channels = i3.map(function(e4) {
      return e4.ts = s4, new fr(t5, e4);
    })), a4.ts = "number" == typeof s4 ? s4 : 0, a4;
  }
  return t$2(t4, e3), t4;
}(qe$2);
!function(e3) {
  e3.ALL = "all", e3.JOINED = "joined";
}(De$1 || (De$1 = {}));
var qe = function(e3) {
  function t4(t5, n2) {
    var a4, r2, i3, s4, o2, l2, u3, c3, h4, d4, p2, f2, _2, v2, m4 = this;
    return (m4 = e3.call(this, t5, n2) || this).includeEmpty = false, m4.includeFrozen = true, m4.includeMetaData = true, m4.channelUrlsFilter = null, m4.customTypesFilter = null, m4.customTypeStartsWithFilter = null, m4.channelNameContainsFilter = null, m4.membershipFilter = De$1.ALL, m4.superChannelFilter = tn$1.ALL, m4.metadataKey = null, m4.metadataValues = null, m4.metadataOrderKeyFilter = null, m4.metadataValueStartsWith = null, m4.order = C.CHRONOLOGICAL, m4.includeEmpty = null !== (a4 = n2.includeEmpty) && void 0 !== a4 && a4, m4.includeFrozen = null === (r2 = n2.includeFrozen) || void 0 === r2 || r2, m4.includeMetaData = null === (i3 = n2.includeMetaData) || void 0 === i3 || i3, m4.channelUrlsFilter = null !== (s4 = n2.channelUrlsFilter) && void 0 !== s4 ? s4 : null, m4.customTypesFilter = null !== (o2 = n2.customTypesFilter) && void 0 !== o2 ? o2 : null, m4.customTypeStartsWithFilter = null !== (l2 = n2.customTypeStartsWithFilter) && void 0 !== l2 ? l2 : null, m4.channelNameContainsFilter = null !== (u3 = n2.channelNameContainsFilter) && void 0 !== u3 ? u3 : null, m4.membershipFilter = null !== (c3 = n2.membershipFilter) && void 0 !== c3 ? c3 : De$1.ALL, m4.superChannelFilter = null !== (h4 = n2.superChannelFilter) && void 0 !== h4 ? h4 : tn$1.ALL, m4.metadataKey = null !== (d4 = n2.metadataKey) && void 0 !== d4 ? d4 : null, m4.metadataValues = null !== (p2 = n2.metadataValues) && void 0 !== p2 ? p2 : null, m4.metadataOrderKeyFilter = null !== (f2 = n2.metadataOrderKeyFilter) && void 0 !== f2 ? f2 : null, m4.metadataValueStartsWith = null !== (_2 = n2.metadataValueStartsWith) && void 0 !== _2 ? _2 : null, m4.order = null !== (v2 = n2.order) && void 0 !== v2 ? v2 : C.CHRONOLOGICAL, m4;
  }
  return t$2(t4, e3), t4.prototype._validate = function() {
    return e3.prototype._validate.call(this) && S$1("boolean", this.includeEmpty) && S$1("boolean", this.includeFrozen) && S$1("boolean", this.includeMetaData) && S$1("string", this.channelNameContainsFilter, true) && C$1("string", this.channelUrlsFilter, true) && C$1("string", this.customTypesFilter, true) && S$1("string", this.customTypeStartsWithFilter, true) && T$2(De$1, this.membershipFilter) && T$2(tn$1, this.superChannelFilter) && T$2(C, this.order) && S$1("string", this.metadataOrderKeyFilter, true) && S$1("string", this.metadataKey, true) && C$1("string", this.metadataValues, true) && S$1("string", this.metadataValueStartsWith, true);
  }, t4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, n2, a4, r2, i3, s4;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : (e4 = [], this._hasNext ? (this._isLoading = true, t5 = uo.of(this._iid).requestQueue, n2 = new We(oe(n$2(n$2({}, this), { token: this._token }))), [4, t5.send(n2)]) : [3, 2]) : [3, 5];
          case 1:
            return a4 = o2.sent(), r2 = a4.as(Be), i3 = r2.channels, s4 = r2.token, this._token = s4, this._hasNext = !!s4, this._isLoading = false, [2, i3];
          case 2:
            return [2, e4];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(Oo), Ye = function(e3) {
  function t4(t5) {
    void 0 === t5 && (t5 = {});
    var n2 = e3.call(this) || this;
    return Object.keys(t5).forEach(function(e4) {
      n2.hasOwnProperty(e4) && (n2[e4] = t5[e4]);
    }), n2;
  }
  return t$2(t4, e3), t4;
}(function(e3) {
  function t4() {
    var t5 = null !== e3 && e3.apply(this, arguments) || this;
    return t5.onUserJoined = ut$1, t5.onUserLeft = ut$1, t5.onUserReceivedInvitation = ut$1, t5.onUserDeclinedInvitation = ut$1, t5.onChannelHidden = ut$1, t5.onUnreadMemberStatusUpdated = ut$1, t5.onUndeliveredMemberStatusUpdated = ut$1, t5.onTypingStatusUpdated = ut$1, t5.onPollUpdated = ut$1, t5.onPollVoted = ut$1, t5.onPollDeleted = ut$1, t5.onPinnedMessageUpdated = ut$1, t5;
  }
  return t$2(t4, e3), t4;
}(t$1)), Xe = function(e3) {
  function t4(t5) {
    var n2 = this, a4 = t5.token, r2 = t5.limit, i3 = t5.order, s4 = t5.reverse, o2 = t5.channelUrl, l2 = t5.messageTypeFilter, u3 = t5.scheduledStatus;
    return (n2 = e3.call(this) || this).method = ae.GET, n2.path = "".concat(ye$1), n2.params = se(oe({ token: a4, limit: r2, reverse: s4, channel_url: o2, order: i3, message_type: l2, status: u3 })), n2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Je = function(e3) {
  function t4(t5, n2) {
    var a4 = e3.call(this, t5, n2) || this;
    a4.scheduledMessages = [];
    var r2 = n2.next, i3 = n2.scheduled_messages;
    return a4.token = r2, a4.scheduledMessages = i3.map(function(e4) {
      return At$1(t5, e4);
    }), a4;
  }
  return t$2(t4, e3), t4;
}(qe$2), Ze = function(e3) {
  function t4(t5, n2) {
    var a4, r2, i3, s4, o2, l2 = this;
    return (l2 = e3.call(this, t5, n2) || this).channelUrl = null, l2.order = null, l2.reverse = false, l2.scheduledStatus = null, l2.messageTypeFilter = j.ALL, l2.channelUrl = null !== (a4 = n2.channelUrl) && void 0 !== a4 ? a4 : null, l2.order = null !== (r2 = n2.order) && void 0 !== r2 ? r2 : null, l2.reverse = null !== (i3 = n2.reverse) && void 0 !== i3 && i3, l2.scheduledStatus = null !== (s4 = n2.scheduledStatus) && void 0 !== s4 ? s4 : null, l2.messageTypeFilter = null !== (o2 = n2.messageTypeFilter) && void 0 !== o2 ? o2 : j.ALL, l2;
  }
  return t$2(t4, e3), t4.prototype._validate = function() {
    return e3.prototype._validate.call(this) && S$1("string", this.channelUrl, true) && (T$2(R, this.order) || null === this.order) && S$1("boolean", this.reverse) && (C$1(dt, this.scheduledStatus) || null === this.scheduledStatus) && T$2(j, this.messageTypeFilter);
  }, t4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e4, t5, n2, a4, r2, i3;
      return s$1(this, function(s4) {
        switch (s4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = uo.of(this._iid).requestQueue, t5 = new Xe(oe(n$2(n$2({}, this), { token: this._token }))), [4, e4.send(t5)]) : [3, 2] : [3, 5];
          case 1:
            return n2 = s4.sent(), a4 = n2.as(Je), r2 = a4.scheduledMessages, i3 = a4.token, this._token = i3, this._hasNext = !!i3, this._isLoading = false, [2, r2];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t4;
}(Oo), $e = function(e3) {
  function t4() {
    var t5 = null !== e3 && e3.apply(this, arguments) || this;
    return t5.name = "groupChannel", t5;
  }
  return t$2(t4, e3), t4.prototype.init = function(t5, n2) {
    var a4 = n2.sdkState, r2 = n2.dispatcher, i3 = n2.sessionManager, s4 = n2.requestQueue, o2 = n2.logger, l2 = n2.onlineDetector, u3 = n2.cacheContext;
    e3.prototype.init.call(this, t5, { sdkState: a4, dispatcher: r2, sessionManager: i3, requestQueue: s4, logger: o2, onlineDetector: l2, cacheContext: u3 }), this._manager = new ys(t5, { sdkState: a4, cacheContext: u3, dispatcher: r2, sessionManager: i3, requestQueue: s4, logger: o2 });
  }, t4.prototype.createGroupChannelCollection = function(e4) {
    return void 0 === e4 && (e4 = {}), new Qe(this._iid, e4);
  }, t4.prototype.createMyGroupChannelListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new fs(this._iid, e4);
  }, t4.prototype.createPublicGroupChannelListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new qe(this._iid, e4);
  }, t4.prototype.createScheduledMessageListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Ze(this._iid, e4);
  }, t4.prototype.addGroupChannelHandler = function(e4, t5) {
    cs$2(S$1("string", e4) && t5 instanceof Ye).throw(b$2.invalidParameters), this._manager.addHandler(e4, t5);
  }, t4.prototype.removeGroupChannelHandler = function(e4) {
    cs$2(S$1("string", e4)).throw(b$2.invalidParameters), this._manager.removeHandler(e4);
  }, t4.prototype.removeAllGroupChannelHandlers = function() {
    this._manager.clearHandler();
  }, t4.prototype.buildGroupChannelFromSerializedData = function(e4) {
    return this._manager.buildGroupChannelFromSerializedData(e4);
  }, t4.prototype.buildGroupChannelListQueryFromSerializedData = function(e4) {
    return this._manager.buildGroupChannelListQueryFromSerializedData(e4);
  }, t4.prototype.buildMemberFromSerializedData = function(e4) {
    return this._manager.buildMemberFromSerializedData(e4);
  }, t4.prototype.getChannel = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return cs$2(S$1("string", e4)).throw(b$2.invalidParameters), [2, this._manager.getChannel(e4)];
      });
    });
  }, t4.prototype.getChannelWithoutCache = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return cs$2(S$1("string", e4)).throw(b$2.invalidParameters), [2, this._manager.getChannelWithoutCache(e4)];
      });
    });
  }, t4.prototype.getMyGroupChannelChangeLogsByToken = function(e4, t5) {
    return void 0 === t5 && (t5 = {}), r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return n2 = n$2(n$2({}, fn$1), t5), cs$2(S$1("string", e4) && vn$1(n2)).throw(b$2.invalidParameters), [4, this._manager.getMyGroupChannelChangeLogs(e4, n2)];
          case 1:
            return [2, a4.sent()];
        }
      });
    });
  }, t4.prototype.getMyGroupChannelChangeLogsByTimestamp = function(e4, t5) {
    return void 0 === t5 && (t5 = {}), r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(a4) {
        switch (a4.label) {
          case 0:
            return n2 = n$2(n$2({}, fn$1), t5), cs$2(S$1("number", e4) && vn$1(n2)).throw(b$2.invalidParameters), [4, this._manager.getMyGroupChannelChangeLogs(e4, n2)];
          case 1:
            return [2, a4.sent()];
        }
      });
    });
  }, t4.prototype.getGroupChannelCount = function(e4) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        return t5 = n$2(n$2({}, mn$1), e4), cs$2(gn$1(t5)).throw(b$2.invalidParameters), [2, this._manager.getGroupChannelCount(t5)];
      });
    });
  }, t4.prototype.getUnreadItemCount = function(e4) {
    return void 0 === e4 && (e4 = {}), r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return [4, this._manager.getUnreadItemCount(e4)];
          case 1:
            return [2, t5.sent()];
        }
      });
    });
  }, t4.prototype.getTotalUnreadChannelCount = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._manager.getTotalUnreadChannelCount()];
          case 1:
            return [2, e4.sent()];
        }
      });
    });
  }, t4.prototype.getTotalUnreadMessageCount = function(e4) {
    return void 0 === e4 && (e4 = {}), r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return [4, this._manager.getTotalUnreadMessageCount(e4)];
          case 1:
            return [2, t5.sent()];
        }
      });
    });
  }, t4.prototype.getTotalScheduledMessageCount = function(e4) {
    return void 0 === e4 && (e4 = {}), r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return [4, this._manager.getTotalScheduledMessageCount(e4)];
          case 1:
            return [2, t5.sent()];
        }
      });
    });
  }, t4.prototype.getSubscribedTotalUnreadMessageCount = function() {
    return this._manager.getSubscribedTotalUnreadMessageCount();
  }, t4.prototype.getSubscribedCustomTypeTotalUnreadMessageCount = function() {
    return this._manager.getSubscribedCustomTypeTotalUnreadMessageCount();
  }, t4.prototype.getSubscribedCustomTypeUnreadMessageCount = function(e4) {
    return this._manager.getSubscribedCustomTypeUnreadMessageCount(e4);
  }, t4.prototype.createChannel = function(e4) {
    return void 0 === e4 && (e4 = {}), r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        return t5 = n$2(n$2({}, _n$1), e4), cs$2(pn$1(t5)).throw(b$2.invalidParameters), [2, this._manager.createChannel(t5)];
      });
    });
  }, t4.prototype.createDistinctChannelIfNotExist = function(e4) {
    return void 0 === e4 && (e4 = {}), r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        return t5 = n$2(n$2({}, _n$1), e4), cs$2(pn$1(t5)).throw(b$2.invalidParameters), t5 && (t5.isDistinct = true), [2, this.createChannel(t5)];
      });
    });
  }, t4.prototype.createChannelWithUserIds = function(e4, t5, n2, a4, r2, i3) {
    return void 0 === t5 && (t5 = false), void 0 === r2 && (r2 = ""), void 0 === i3 && (i3 = ""), r$1(this, void 0, void 0, function() {
      var s4;
      return s$1(this, function(o2) {
        return s4 = n$2(n$2({}, _n$1), { invitedUserIds: e4, isDistinct: t5, name: n2, data: r2, customType: i3 }), "string" == typeof a4 ? s4.coverUrl = a4 : s4.coverImage = a4, [2, this.createChannel(s4)];
      });
    });
  }, t4.prototype.markAsReadAll = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        return this._manager.markAsReadAll(), [2];
      });
    });
  }, t4.prototype.markAsReadWithChannelUrls = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return cs$2(C$1("string", e4)).throw(b$2.invalidParameters), this._manager.markAsReadWithChannelUrls(e4), [2];
      });
    });
  }, t4.prototype.markAsDelivered = function(e4) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return cs$2(S$1("string", e4)).throw(b$2.invalidParameters), [4, this.getChannel(e4)];
          case 1:
            return [4, t5.sent().markAsDelivered()];
          case 2:
            return t5.sent(), [2];
        }
      });
    });
  }, t4;
}(lo);
const applicationAttributes = {
  reactions: "reactions",
  message_search_v3: "message_search_v3",
  enable_og_tag: "enable_og_tag"
};
const premiumFeatures = {
  delivery_receipt: "delivery_receipt"
};
const sbuConstants = {
  collection: {
    groupChannel: {
      defaultLimit: 20,
      defaultOrder: E.LATEST_LAST_MESSAGE,
      defaultIncludeEmpty: false
    },
    message: {
      defaultLimit: { next: 25, prev: 25 },
      searchLimit: { next: 10, prev: 10 }
    }
  }
};
var __awaiter$4 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e3) {
        reject(e3);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e3) {
        reject(e3);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const useAsyncEffect = (asyncEffect, deps) => {
  useEffect(createAsyncEffectCallback(asyncEffect), deps);
};
const useAsyncLayoutEffect = (asyncEffect, deps) => {
  useLayoutEffect(createAsyncEffectCallback(asyncEffect), deps);
};
const iife$1 = (callback) => typeof callback === "function" && callback();
const createAsyncEffectCallback = (asyncEffect) => () => {
  const destructor = iife$1(asyncEffect);
  return () => {
    if (!destructor)
      return;
    if (destructor instanceof Promise) {
      iife$1(() => __awaiter$4(void 0, void 0, void 0, function* () {
        const awaitedDestructor = yield destructor;
        if (typeof awaitedDestructor === "function")
          awaitedDestructor();
      }));
    } else if (typeof destructor === "function") {
      iife$1(destructor);
    }
  };
};
let id = 0;
function useUniqId() {
  return useState(() => `${id++}`)[0];
}
const useGroupChannelHandler = (sdk, hookHandler, handlerId) => {
  const handlerRef = useRef(hookHandler);
  const id2 = useUniqId();
  const internalHandlerId = id2;
  handlerRef.current = hookHandler;
  useEffect(() => {
    var _a2;
    const handlerMapper = (handler) => {
      const handlerKeys = Object.keys(handler);
      handlerKeys.forEach((key) => {
        handler[key] = (...args) => {
          var _a3, _b2;
          return (_b2 = (_a3 = handlerRef.current) === null || _a3 === void 0 ? void 0 : _a3[key]) === null || _b2 === void 0 ? void 0 : _b2.call(_a3, ...args);
        };
      });
      return handler;
    };
    (_a2 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a2 === void 0 ? void 0 : _a2.addGroupChannelHandler(internalHandlerId, handlerMapper(new Ye()));
    return () => {
      var _a3;
      (_a3 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.removeGroupChannelHandler(internalHandlerId);
    };
  }, [sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel, internalHandlerId]);
};
function usePreservedCallback$1(callback) {
  const callbackRef = useRef(callback);
  callbackRef.current = callback;
  return useCallback((...args) => callbackRef.current(...args), [callbackRef]);
}
var __rest$7 = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
const defaultReducer$1 = (_a2, action) => {
  var draft = __rest$7(_a2, []);
  const compareByOrder = createCompareByOrder(draft.order);
  switch (action.type) {
    case "update_refreshing": {
      draft.refreshing = action.value.status;
      break;
    }
    case "update_initialized": {
      draft.initialized = action.value.status;
      break;
    }
    case "update_channels": {
      getGroupChannels(action.value.channels).forEach((freshChannel) => {
        const idx = draft.groupChannels.findIndex((staleChannel) => staleChannel.url === freshChannel.url);
        if (idx > -1)
          draft.groupChannels[idx] = freshChannel;
      });
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "delete_channels": {
      action.value.channelUrls.forEach((url) => {
        const idx = draft.groupChannels.findIndex((c3) => c3.url === url);
        if (idx > -1)
          draft.groupChannels.splice(idx, 1);
      });
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "append_channels": {
      const groupChannels = getGroupChannels(action.value.channels);
      if (action.value.clearBeforeAction) {
        draft.groupChannels = groupChannels;
      } else {
        draft.groupChannels = mergeObjectArrays(draft.groupChannels, groupChannels, "url");
      }
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "update_order": {
      draft.order = action.value.order;
      const compareByOrder2 = createCompareByOrder(draft.order);
      compareByOrder2 && (draft.groupChannels = draft.groupChannels.sort(compareByOrder2));
      break;
    }
  }
  return draft;
};
const useGroupChannelListReducer = (order) => {
  const [{ initialized, refreshing, groupChannels }, dispatch] = useReducer(defaultReducer$1, {
    initialized: false,
    refreshing: false,
    groupChannels: [],
    order
  });
  const updateChannels = (channels) => {
    dispatch({ type: "update_channels", value: { channels } });
  };
  const deleteChannels = (channelUrls) => {
    dispatch({ type: "delete_channels", value: { channelUrls } });
  };
  const appendChannels = (channels, clearBeforeAction) => {
    dispatch({ type: "append_channels", value: { channels, clearBeforeAction } });
  };
  const updateInitialized = (status) => {
    dispatch({ type: "update_initialized", value: { status } });
  };
  const updateRefreshing = (status) => {
    dispatch({ type: "update_refreshing", value: { status } });
  };
  const updateOrder = (order2) => {
    dispatch({ type: "update_order", value: { order: order2 } });
  };
  return {
    updateInitialized,
    updateRefreshing,
    updateChannels,
    deleteChannels,
    appendChannels,
    updateOrder,
    initialized,
    refreshing,
    groupChannels
  };
};
const createCompareByOrder = (order) => {
  if (!order)
    return void 0;
  return (channel1, channel2) => {
    switch (order) {
      case "latest_last_message": {
        if (channel1.lastMessage && channel2.lastMessage) {
          return channel2.lastMessage.createdAt - channel1.lastMessage.createdAt;
        } else if (channel1.lastMessage) {
          return -1;
        } else if (channel2.lastMessage) {
          return 1;
        } else {
          return channel2.createdAt - channel1.createdAt;
        }
      }
      case "chronological": {
        return channel2.createdAt - channel1.createdAt;
      }
      case "channel_name_alphabetical": {
        return channel1.name.localeCompare(channel2.name);
      }
      default: {
        return 0;
      }
    }
  };
};
function mergeObjectArrays(A2, B3, key) {
  const uniqueValues = new Set(A2.map((obj) => obj[key]));
  const newArr = [...A2];
  for (let i3 = 0; i3 < B3.length; i3++) {
    if (!uniqueValues.has(B3[i3][key])) {
      newArr.push(B3[i3]);
      uniqueValues.add(B3[i3][key]);
    }
  }
  return newArr;
}
function getGroupChannels(channels) {
  return channels.filter((it2) => it2.isGroupChannel());
}
var __awaiter$3 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e3) {
        reject(e3);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e3) {
        reject(e3);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const createGroupChannelListCollection = (sdk, collectionCreator) => {
  const basicParams = {
    includeEmpty: sbuConstants.collection.groupChannel.defaultIncludeEmpty,
    limit: sbuConstants.collection.groupChannel.defaultLimit,
    order: sbuConstants.collection.groupChannel.defaultOrder
  };
  const passedCollection = collectionCreator === null || collectionCreator === void 0 ? void 0 : collectionCreator(basicParams);
  if (passedCollection)
    return passedCollection;
  return sdk.groupChannel.createGroupChannelCollection(Object.assign(Object.assign({}, basicParams), { filter: new hn$1(basicParams) }));
};
const useGroupChannelList$1 = (sdk, options) => {
  var _a2, _b2, _c;
  const deliveryReceiptEnabled = Boolean((_b2 = (_a2 = sdk.appInfo) === null || _a2 === void 0 ? void 0 : _a2.premiumFeatureList) === null || _b2 === void 0 ? void 0 : _b2.includes(premiumFeatures.delivery_receipt));
  const collectionRef = useRef();
  const internalOptions = useRef(options);
  internalOptions.current = options;
  const { initialized, groupChannels, refreshing, appendChannels, deleteChannels, updateRefreshing, updateInitialized } = useGroupChannelListReducer();
  const updateChannelsAndMarkAsDelivered = (shouldMarkAsDelivered, source, updatedChannels) => {
    var _a3, _b3, _c2, _d;
    const channels = (_b3 = (_a3 = collectionRef.current) === null || _a3 === void 0 ? void 0 : _a3.channels) !== null && _b3 !== void 0 ? _b3 : [];
    appendChannels(channels, true);
    if (shouldMarkAsDelivered && deliveryReceiptEnabled) {
      switch (source) {
        case bn$1.EVENT_MESSAGE_RECEIVED:
        case bn$1.EVENT_MESSAGE_SENT:
        case bn$1.SYNC_CHANNEL_BACKGROUND:
        case bn$1.SYNC_CHANNEL_CHANGELOGS:
        case void 0:
          (_d = (_c2 = internalOptions.current) === null || _c2 === void 0 ? void 0 : _c2.markAsDelivered) === null || _d === void 0 ? void 0 : _d.call(_c2, updatedChannels !== null && updatedChannels !== void 0 ? updatedChannels : channels);
          break;
      }
    }
  };
  const init = usePreservedCallback$1((uid) => __awaiter$3(void 0, void 0, void 0, function* () {
    var _d, _e2, _f, _g2;
    if (collectionRef.current)
      (_d = collectionRef.current) === null || _d === void 0 ? void 0 : _d.dispose();
    if (uid) {
      collectionRef.current = createGroupChannelListCollection(sdk, options === null || options === void 0 ? void 0 : options.collectionCreator);
      (_e2 = collectionRef.current) === null || _e2 === void 0 ? void 0 : _e2.setGroupChannelCollectionHandler({
        onChannelsAdded: (context, channels) => {
          var _a3, _b3;
          const groupChannels2 = channels.filter((channel) => channel.isGroupChannel());
          updateChannelsAndMarkAsDelivered(true, context.source, groupChannels2);
          (_b3 = (_a3 = internalOptions.current) === null || _a3 === void 0 ? void 0 : _a3.onChannelsAdded) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, groupChannels2);
        },
        onChannelsUpdated: (context, channels) => {
          var _a3, _b3;
          const groupChannels2 = channels.filter((channel) => channel.isGroupChannel());
          updateChannelsAndMarkAsDelivered(true, context.source, groupChannels2);
          (_b3 = (_a3 = internalOptions.current) === null || _a3 === void 0 ? void 0 : _a3.onChannelsUpdated) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, groupChannels2);
        },
        onChannelsDeleted: (_2, channelUrls) => {
          var _a3, _b3;
          updateChannelsAndMarkAsDelivered(false);
          (_b3 = (_a3 = internalOptions.current) === null || _a3 === void 0 ? void 0 : _a3.onChannelsDeleted) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, channelUrls);
        }
      });
      if ((_f = collectionRef.current) === null || _f === void 0 ? void 0 : _f.hasMore) {
        yield (_g2 = collectionRef.current) === null || _g2 === void 0 ? void 0 : _g2.loadMore();
        updateChannelsAndMarkAsDelivered(true);
      }
    }
  }));
  useEffect(() => {
    return () => {
      var _a3;
      if (collectionRef.current)
        (_a3 = collectionRef.current) === null || _a3 === void 0 ? void 0 : _a3.dispose();
    };
  }, []);
  useAsyncEffect(() => __awaiter$3(void 0, void 0, void 0, function* () {
    updateInitialized(false);
    if (sdk.currentUser) {
      yield init(sdk.currentUser.userId);
      updateInitialized(true);
    }
  }), [sdk, (_c = sdk.currentUser) === null || _c === void 0 ? void 0 : _c.userId]);
  useGroupChannelHandler(sdk, {
    onUserBanned: (channel, user) => {
      var _a3, _b3, _c2;
      const isMe = user.userId === ((_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
      if (isMe) {
        deleteChannels([channel.url]);
        (_c2 = (_b3 = internalOptions.current) === null || _b3 === void 0 ? void 0 : _b3.onChannelsDeleted) === null || _c2 === void 0 ? void 0 : _c2.call(_b3, [channel.url]);
      } else {
        updateChannelsAndMarkAsDelivered(false);
      }
    }
  });
  const refresh = usePreservedCallback$1(() => __awaiter$3(void 0, void 0, void 0, function* () {
    if (sdk.currentUser) {
      updateRefreshing(true);
      yield init(sdk.currentUser.userId);
      updateRefreshing(false);
    }
  }));
  const loadMore = usePreservedCallback$1(() => __awaiter$3(void 0, void 0, void 0, function* () {
    var _h, _j;
    if ((_h = collectionRef.current) === null || _h === void 0 ? void 0 : _h.hasMore) {
      yield (_j = collectionRef.current) === null || _j === void 0 ? void 0 : _j.loadMore();
      updateChannelsAndMarkAsDelivered(true);
    }
  }));
  return {
    /**
     * Initializing state, only available on first render
     * */
    initialized,
    /**
     * Get group channels state
     * */
    groupChannels,
    /**
     * Refresh, clear and reload messages from latest
     * @return {Promise<void>}
     * */
    refresh,
    /**
     * Refreshing state, status is changes when the refresh is called.
     * */
    refreshing,
    /**
     * Fetch more channels to state
     * @return {Promise<void>}
     * */
    loadMore
  };
};
var b = function(r2) {
  function b3() {
    var t4 = null !== r2 && r2.apply(this, arguments) || this;
    return t4.name = "poll", t4;
  }
  return t$2(b3, r2), b3.prototype.init = function(t4, a4) {
    var n2 = a4.sdkState, o2 = a4.dispatcher, i3 = a4.sessionManager, s4 = a4.requestQueue, l2 = a4.logger, u3 = a4.onlineDetector, c3 = a4.cacheContext;
    r2.prototype.init.call(this, t4, { sdkState: n2, dispatcher: o2, sessionManager: i3, requestQueue: s4, logger: l2, onlineDetector: u3, cacheContext: c3 }), this._manager = new Qo(t4, { sdkState: n2, dispatcher: o2, sessionManager: i3, requestQueue: s4, logger: l2, onlineDetector: u3, cacheContext: c3 });
  }, b3.prototype.create = function(t4) {
    return r$1(this, void 0, void 0, function() {
      var e3;
      return s$1(this, function(a4) {
        return e3 = n$2(n$2({}, Ho), t4), cs$2(Vo(e3)).throw(b$2.invalidParameters), [2, this._manager.create(e3)];
      });
    });
  }, b3.prototype.get = function(t4) {
    return r$1(this, void 0, void 0, function() {
      var e3;
      return s$1(this, function(a4) {
        return e3 = n$2(n$2({}, jo), t4), cs$2(Ko(e3)).throw(b$2.invalidParameters), [2, this._manager.get(e3)];
      });
    });
  }, b3.prototype.getOption = function(t4) {
    return r$1(this, void 0, void 0, function() {
      var e3;
      return s$1(this, function(a4) {
        return e3 = n$2(n$2({}, zo), t4), cs$2(Go(e3)).throw(b$2.invalidParameters), [2, this._manager.getOption(e3)];
      });
    });
  }, b3.prototype.buildPollFromSerializedData = function(t4) {
    return this._manager.buildPollFromSerializedData(t4);
  }, b3;
}(lo);
var n$1 = function(t4) {
  return ["-lastMessageUpdatedAt", "-createdAt", "syncIndex"];
}, a = function(e3) {
  function n2() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  return t$2(n2, e3), n2;
}(re);
var St = function(e3) {
  this.key = e3.key, this.url = e3.url;
}, It = function(e3) {
  this.id = e3.id, this.name = e3.name, this.url = e3.url, this.emojis = e3.emojis ? e3.emojis.map(function(e4) {
    return new St(e4);
  }) : [];
}, Ct = function(e3) {
  this.emojiHash = e3.emoji_hash || "", this.emojiCategories = e3.emoji_categories ? e3.emoji_categories.map(function(e4) {
    return new It(e4);
  }) : [];
}, Et = { profileImage: void 0, profileUrl: void 0, nickname: void 0 }, Tt = function(e3) {
  return { v2: function() {
    return r$1(void 0, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, e3.commitSchema([{ collectionName: Yr, keyName: Jr, index: [b$1(E.LATEST_LAST_MESSAGE), b$1(E.CHRONOLOGICAL), b$1(E.CHANNEL_NAME_ALPHABETICAL)] }, { collectionName: Zr, keyName: $r, index: [Bs$1(Ls$1.CHANNEL_LATEST), Bs$1(Ls$1.NEWEST_CHILD_MESSAGE)] }, { collectionName: Hs$1, keyName: Ws$1, index: [Bs$1(Ls$1.CHANNEL_LATEST), Bs$1(Ls$1.NEWEST_CHILD_MESSAGE)] }, { collectionName: ri, keyName: ii }])];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, v3: function() {
    return r$1(void 0, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, e3.commitSchema([{ collectionName: ai, keyName: oi, index: [n$1()] }])];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, v4: function() {
    return r$1(void 0, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, e3.commitSchema([{ collectionName: ti, keyName: ni, index: [js$1()] }])];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  }, v5: function() {
    return r$1(void 0, void 0, void 0, function() {
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, e3.commitSchema([{ collectionName: ui, keyName: ci, index: [["-userId", "-updatedAt"]] }])];
          case 1:
            return [2, t4.sent()];
        }
      });
    });
  } };
}, Pt = function(e3) {
  var t4 = new Fs$1();
  return function(n2, s4) {
    return r$1(void 0, void 0, void 0, function() {
      var r2, a4, u3, c3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            switch (n2) {
              case 1:
              case 2:
              case 3:
              case 4:
                return [3, 1];
              case 5:
                return [3, 2];
              case 6:
                return [3, 4];
              case 7:
                return [3, 11];
            }
            return [3, 15];
          case 1:
            return s4(), [3, 16];
          case 2:
            return [4, e3.reset()];
          case 3:
            return i3.sent(), s4(), [3, 16];
          case 4:
            return i3.trys.push([4, 9, , 10]), r2 = Tt(e3), a4 = r2.v2, u3 = r2.v3, c3 = r2.v4, [4, a4()];
          case 5:
            return i3.sent(), [4, u3()];
          case 6:
            return i3.sent(), [4, c3()];
          case 7:
            return i3.sent(), [4, e3.collection(Zr).removeIf({ where: { channelType: H$1.OPEN } })];
          case 8:
            return i3.sent(), [3, 10];
          case 9:
            return i3.sent(), t4.warn("Failed to migrate to v2, v3, v4"), [3, 10];
          case 10:
            return s4(), [3, 16];
          case 11:
            return i3.trys.push([11, 13, , 14]), [4, (0, Tt(e3).v5)()];
          case 12:
            return i3.sent(), [3, 14];
          case 13:
            return i3.sent(), t4.warn("Failed to migrate to v5"), [3, 14];
          case 14:
            return s4(), [3, 16];
          case 15:
            s4(), i3.label = 16;
          case 16:
            return [2];
        }
      });
    });
  };
}, Dt = function() {
  return "undefined" != typeof document ? document.visibilityState : "visible";
}, Ut = function(e3) {
  function t4(t5) {
    var n2 = t5.getVisibilityState, r2 = void 0 === n2 ? Dt : n2, i3 = t5.initialState, s4 = void 0 === i3 ? "visible" : i3, o2 = t5.isEnabled, a4 = void 0 === o2 || o2, u3 = t5.pauseCheckDelay, c3 = void 0 === u3 ? 3e4 : u3, d4 = e3.call(this) || this;
    return d4._pauseCheckDelay = 3e4, d4._currentState = "visible", d4._getVisibilityState = r2, d4._pauseCheckDelay = c3, d4._currentState = s4, d4._isEnabled = a4, d4._boundToggleState = d4._toggleState.bind(d4), d4;
  }
  return t$2(t4, e3), Object.defineProperty(t4.prototype, "currentState", { get: function() {
    return this._currentState;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "isAvailable", { get: function() {
    return "undefined" != typeof window && !!window.addEventListener && !!window.removeEventListener;
  }, enumerable: false, configurable: true }), t4.prototype._toggleState = function() {
    var e4 = this, t5 = this._getVisibilityState();
    "hidden" !== t5 ? "hidden" === this._currentState && (this._pauseDelayTimer && (clearTimeout(this._pauseDelayTimer), this._pauseDelayTimer = void 0), this.dispatch("resume")) : "hidden" !== this._currentState && (this._pauseDelayTimer = setTimeout(function() {
      e4._pauseDelayTimer = void 0, e4.dispatch("pause");
    }, this._pauseCheckDelay)), this._currentState = t5;
  }, t4.prototype.start = function() {
    this._isEnabled && this.isAvailable && (this._boundToggleState = this._toggleState.bind(this), window.addEventListener("visibilitychange", this._boundToggleState, { capture: true }));
  }, t4.prototype.stop = function() {
    this._isEnabled && this.isAvailable && this._boundToggleState && window.removeEventListener("visibilitychange", this._boundToggleState, { capture: true });
  }, t4;
}(ne), Ot = function() {
  function e3(e4) {
    var t4 = e4.logger, n2 = e4.connectionDelegate, r2 = void 0 === n2 ? null : n2, i3 = this;
    this._onlineWorker = function() {
      var e5;
      return null === (e5 = i3.connectionDelegate) || void 0 === e5 ? void 0 : e5.reconnect();
    }, this._offlineWorker = function() {
      var e5;
      return null === (e5 = i3.connectionDelegate) || void 0 === e5 ? void 0 : e5.disconnect();
    }, this.unsubscribes = [], this._onlineListener = function(e5) {
      if (i3.isAvailableOnWeb) return window.addEventListener("online", e5), function() {
        return window.removeEventListener("online", e5, false);
      };
    }, this._offlineListener = function(e5) {
      if (i3.isAvailableOnWeb) return window.addEventListener("offline", e5), function() {
        return window.removeEventListener("offline", e5, false);
      };
    }, this.logger = t4, r2 && (this.connectionDelegate = r2);
  }
  return Object.defineProperty(e3.prototype, "isAvailableOnWeb", { get: function() {
    return "undefined" != typeof window && !!window.addEventListener && "ononline" in window && "onoffline" in window && "undefined" != typeof navigator && void 0 !== navigator.onLine;
  }, enumerable: false, configurable: true }), e3.prototype.setOnlineListener = function(e4) {
    Boolean(e4) && "function" == typeof e4 && (this._onlineListener = e4);
  }, e3.prototype.setOfflineListener = function(e4) {
    Boolean(e4) && "function" == typeof e4 && (this._offlineListener = e4);
  }, e3.prototype.start = function() {
    this.unsubscribes = [this._onlineListener(this._onlineWorker), this._offlineListener(this._offlineWorker)];
  }, e3.prototype.stop = function() {
    var e4 = this;
    this.unsubscribes.forEach(function(t4) {
      try {
        null == t4 || t4();
      } catch (t5) {
        e4.logger.warn(t5.message);
      }
    }), this.unsubscribes = [];
  }, e3.prototype.isOnline = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e4) {
        return this.isAvailableOnWeb ? [2, navigator.onLine] : [2, new Promise(function(e5) {
          fetch("https://www.google.com", { method: ae.GET, mode: "no-cors" }).then(function() {
            return e5(true);
          }).catch(function() {
            return e5(false);
          });
        })];
      });
    });
  }, e3;
}(), At = function(e3) {
  function t4(t5) {
    var n2, r2 = this;
    return (r2 = e3.call(this) || this).method = ae.GET, r2.path = De$3, r2.params = se(oe({ ts: "number" == typeof t5.token ? t5.token : void 0, token: "string" == typeof t5.token ? t5.token : void 0, limit: null !== (n2 = t5.limit) && void 0 !== n2 ? n2 : 100 })), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Nt = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.configs = n2.configs, r2.hasMore = n2.has_more, r2.nextToken = n2.next, r2.ts = n2.ts, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Mt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.nickname, i3 = t5.profileUrl, s4 = t5.profileImage, o2 = t5.preferredLanguages, a4 = e3.call(this) || this;
    return a4.method = ae.PUT, a4.path = "".concat(ue, "/").concat(encodeURIComponent(n2)), a4.params = se(oe({ nickname: r2, profile_url: i3, profile_file: s4, preferred_languages: o2 })), a4;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Lt = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.user = new ls$2(t5, n$2({}, n2)), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Rt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.token, i3 = t5.deviceOS, s4 = t5.deviceManufacturer, o2 = t5.systemPushEnabled, a4 = e3.call(this) || this;
    return a4.method = ae.POST, a4.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/apns"), a4.params = se({ apns_device_token: r2, always_push: true, device_os: i3, device_manufacturer: s4, system_push_enabled: o2 }), a4;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.token = n2.token, r2.type = n2.type ? f$1[n2.type.toLowerCase()] : f$1.UNKNOWN, r2.user = new ls$2(t5, n2.user), r2;
  }
  t$2(t4, e3);
}(qe$2);
var zt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.token, i3 = t5.deviceOS, s4 = t5.deviceManufacturer, o2 = t5.systemPushEnabled, a4 = e3.call(this) || this;
    return a4.method = ae.POST, a4.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/gcm"), a4.params = se({ gcm_reg_token: r2, always_push: true, device_os: i3, device_manufacturer: s4, system_push_enabled: o2 }), a4;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.token = n2.token, r2.type = n2.type ? f$1[n2.type.toLowerCase()] : f$1.UNKNOWN, r2.user = new ls$2(t5, n2.user), r2;
  }
  t$2(t4, e3);
}(qe$2);
var Qt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.token, i3 = e3.call(this) || this;
    return i3.method = ae.DELETE, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/apns/").concat(encodeURIComponent(r2)), i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.token = n2.token, r2.user = new ls$2(t5, n2.user), r2.lastDeletedAt = n2.device_token_last_deleted_at, r2;
  }
  t$2(t4, e3);
}(qe$2);
var Ft = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.token, i3 = e3.call(this) || this;
    return i3.method = ae.DELETE, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/gcm/").concat(encodeURIComponent(r2)), i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.token = n2.token, r2.user = new ls$2(t5, n2.user), r2.lastDeletedAt = n2.device_token_last_deleted_at, r2;
  }
  t$2(t4, e3);
}(qe$2);
var jt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.DELETE, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/apns"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.type = n2.type ? f$1[n2.type.toLowerCase()] : f$1.UNKNOWN, r2.user = new ls$2(t5, n2.user), r2.lastDeletedAt = n2.device_token_last_deleted_at, r2;
  }
  t$2(t4, e3);
}(qe$2);
var qt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.DELETE, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/gcm"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.type = n2.type ? f$1[n2.type.toLowerCase()] : f$1.UNKNOWN, r2.user = new ls$2(t5, n2.user), r2.lastDeletedAt = n2.device_token_last_deleted_at, r2;
  }
  t$2(t4, e3);
}(qe$2);
var xt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.type, i3 = t5.token, s4 = t5.ts, o2 = e3.call(this) || this;
    return o2.method = ae.GET, o2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/").concat(encodeURIComponent(r2), "/device_tokens"), o2.params = { created_ts: s4, token: i3 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Ht = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.pushTokens = { type: n2.type ? f$1[n2.type.toLowerCase()] : f$1.UNKNOWN, deviceTokens: n2.device_tokens, hasMore: n2.has_more, token: n2.token }, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Kt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/channel_invitation_preference"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Gt = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.autoAccept = n2.auto_accept, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Wt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.willAutoAccept, i3 = e3.call(this) || this;
    return i3.method = ae.PUT, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/channel_invitation_preference"), i3.params = { auto_accept: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Vt = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.autoAccept = n2.auto_accept, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Bt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push_preference"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Jt = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.preference = { doNotDisturbOn: n2.do_not_disturb, startHour: n2.start_hour, startMin: n2.start_min, endHour: n2.end_hour, endMin: n2.end_min, timezone: n2.timezone }, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Zt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.doNotDisturbOn, i3 = t5.startHour, s4 = t5.startMin, o2 = t5.endHour, a4 = t5.endMin, u3 = t5.timezone, d4 = e3.call(this) || this;
    return d4.method = ae.PUT, d4.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push_preference"), d4.params = { do_not_disturb: r2, start_hour: i3, start_min: s4, end_hour: o2, end_min: a4, timezone: u3 }, d4;
  }
  return t$2(t4, e3), t4;
}(Fe$2), $t = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.preference = { doNotDisturbOn: n2.do_not_disturb, startHour: n2.start_hour, startMin: n2.start_min, endHour: n2.end_hour, endMin: n2.end_min, timezone: n2.timezone }, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Xt = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push_preference"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Yt = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.snoozePeriod = { isSnoozeOn: n2.snooze_enabled }, "number" == typeof n2.snooze_start_ts && (r2.snoozePeriod.startTs = n2.snooze_start_ts), "number" == typeof n2.snooze_end_ts && (r2.snoozePeriod.endTs = n2.snooze_end_ts), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), en = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.snoozeOn, i3 = t5.startTs, s4 = t5.endTs, o2 = e3.call(this) || this;
    return o2.method = ae.PUT, o2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push_preference"), o2.params = { snooze_enabled: r2, snooze_start_ts: i3, snooze_end_ts: s4 }, o2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), tn = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.snoozePeriod = { isSnoozeOn: n2.snooze_enabled }, "number" == typeof n2.snooze_start_ts && (r2.snoozePeriod.startTs = n2.snooze_start_ts), "number" == typeof n2.snooze_end_ts && (r2.snoozePeriod.endTs = n2.snooze_end_ts), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), nn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.blockedUserId, i3 = e3.call(this) || this;
    return i3.method = ae.POST, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/block"), i3.params = { target_id: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.user = new ls$2(t5, n2), r2;
  }
  t$2(t4, e3);
}(qe$2);
var rn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.unblockedUserId, i3 = e3.call(this) || this;
    return i3.method = ae.DELETE, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/block/").concat(encodeURIComponent(r2)), i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var sn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push_preference"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), on = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.pushTriggerOption = n2.push_trigger_option, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), an = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.pushTriggerOption, i3 = e3.call(this) || this;
    return i3.method = ae.PUT, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push_preference"), i3.params = { push_trigger_option: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), un = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.pushTriggerOption = n2.push_trigger_option, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), cn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/template"), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), dn = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.name = n2.name, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), ln = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.templateName, i3 = e3.call(this) || this;
    return i3.method = ae.PUT, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/push/template"), i3.params = { name: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), hn = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.name = n2.name, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), fn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.token, i3 = e3.call(this) || this;
    return i3.method = ae.GET, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/friends/changelogs"), i3.params = { token: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), pn = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.changelogs = { addedUsers: n2.added.map(function(e4) {
      return new ls$2(t5, e4);
    }), updatedUsers: n2.updated.map(function(e4) {
      return new ls$2(t5, e4);
    }), deletedUserIds: n2.deleted, hasMore: n2.has_more, token: n2.next }, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), vn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.discoveries, i3 = e3.call(this) || this;
    return i3.method = ae.PUT, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/friend_discoveries"), i3.params = { friend_discoveries: r2.map(function(e4) {
      return { friend_discovery_key: e4.friendDiscoveryKey, friend_name: e4.friendName };
    }) }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), gn = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.friendDiscoveryRequestId = n2.friend_discovery_request_id, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), mn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.discoveryKeys, i3 = e3.call(this) || this;
    return i3.method = ae.DELETE, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/friend_discoveries"), i3.params = { friend_discovery_keys: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var bn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.userIds, i3 = e3.call(this) || this;
    return i3.method = ae.POST, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/friends"), i3.params = { user_ids: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2), _n = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.users = n2.users.map(function(e4) {
      return new ls$2(t5, e4);
    }), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), yn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.userIds, i3 = e3.call(this) || this;
    return i3.method = ae.DELETE, i3.path = "".concat(ue, "/").concat(encodeURIComponent(n2), "/friends"), i3.params = { user_ids: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var wn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ue, "/").concat(n2, "/allow_friend_discovery"), r2.params = {}, r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), kn = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.allowFriendDiscovery = n2.allow_friend_discovery, r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Sn = function(e3) {
  function t4(t5) {
    var n2 = t5.userId, r2 = t5.allowFriendDiscovery, i3 = e3.call(this) || this;
    return i3.method = ae.PUT, i3.path = "".concat(ue, "/").concat(n2, "/allow_friend_discovery"), i3.params = { allow_friend_discovery: r2 }, i3;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
!function(e3) {
  function t4() {
    return null !== e3 && e3.apply(this, arguments) || this;
  }
  t$2(t4, e3);
}(qe$2);
var In, Cn = function(e3) {
  function t4() {
    var t5 = e3.call(this) || this;
    return t5.method = ae.GET, t5.path = be$1, t5;
  }
  return t$2(t4, e3), t4;
}(Fe$2), En = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.emojiContainer = new Ct(n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Tn = function(e3) {
  function t4(t5) {
    var n2 = t5.categoryId, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(be$1, "/").concat(n2), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Pn = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.emojiCategory = new It(n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), Dn = function(e3) {
  function t4(t5) {
    var n2 = t5.key, r2 = e3.call(this) || this;
    return r2.method = ae.GET, r2.path = "".concat(ve$1, "/").concat(n2), r2;
  }
  return t$2(t4, e3), t4;
}(Fe$2), Un = function(e3) {
  function t4(t5, n2) {
    var r2 = e3.call(this, t5, n2) || this;
    return r2.emoji = new St(n2), r2;
  }
  return t$2(t4, e3), t4;
}(qe$2), On = function(e3) {
  function t4() {
    var t5 = e3.call(this) || this;
    return t5.method = ae.GET, t5.path = "".concat(we$1), t5;
  }
  return t$2(t4, e3), t4;
}(Fe$2), An = function(e3) {
  function t4(t5, n2) {
    var r2, i3 = this, s4 = null != n2 ? n2 : {};
    return (i3 = e3.call(this, t5, n2) || this).uikitConfiguration = { string: JSON.stringify(s4), json: s4 }, i3.updatedAt = null !== (r2 = null == n2 ? void 0 : n2.updated_at) && void 0 !== r2 ? r2 : 0, i3;
  }
  return t$2(t4, e3), t4;
}(qe$2);
!function(e3) {
  e3.DELIVERED = "DELIVERED", e3.CLICKED = "CLICKED";
}(In || (In = {}));
var Nn, Mn = function(e3) {
  function t4(t5) {
    var n2 = t5.deviceToken, r2 = t5.pushTrackingId, i3 = t5.messageId, s4 = t5.allowedPushNotification, o2 = t5.channelKey, a4 = t5.templateKey, u3 = t5.eventType, d4 = t5.notificationEventDeadline, h4 = e3.call(this) || this;
    return h4.method = ae.POST, h4.path = Ie$1, h4.params = se({ device_token: n2, push_tracking_id: r2, message_id: i3, allowed_push_notification: s4, channel_key: o2, template_key: a4, event_type: u3, notification_event_deadline: d4 }), h4;
  }
  return t$2(t4, e3), t4;
}(Fe$2);
var Ln = function() {
  function t4(e3, t5, n2) {
    var s4 = this;
    this._storeInitialized = false, this._iid = e3, this.options = t5;
    var o2 = uo.of(e3), a$12 = o2.sdkState, u3 = o2.cacheContext, c3 = o2.dispatcher, d4 = o2.sessionManager, l2 = o2.requestQueue, h4 = o2.logger, f2 = o2.userEventHandlers, p2 = o2.appStateToggleEnabled;
    this._onlineDetector = new Ot({ logger: h4, connectionDelegate: { reconnect: function() {
      return r$1(s4, void 0, void 0, function() {
        var t6, n3, r2, s5, o3, a$13;
        return s$1(this, function(i3) {
          switch (i3.label) {
            case 0:
              if (t6 = uo.of(e3), n3 = t6.sdkState, r2 = t6.connectionManager, (s5 = t6.sessionManager).session.hasSession) return [3, 5];
              i3.label = 1;
            case 1:
              return i3.trys.push([1, 3, , 4]), [4, r2.connect(s5.session.authToken)];
            case 2:
              return i3.sent(), [3, 4];
            case 3:
              if (o3 = i3.sent(), v$2(o3)) throw o3;
              return h4.debug("connect failed by reconnect event = ", o3), [3, 4];
            case 4:
              return [3, 9];
            case 5:
              if ("foreground" !== n3.appState) return [3, 9];
              i3.label = 6;
            case 6:
              return i3.trys.push([6, 8, , 9]), [4, r2.resetAndReconnect()];
            case 7:
              return i3.sent(), [3, 9];
            case 8:
              if (a$13 = i3.sent(), v$2(a$13)) throw a$13;
              return h4.debug("resetAndReconnect failed by reconnect event = ", a$13), [3, 9];
            case 9:
              return c3.dispatch(new a()), [2];
          }
        });
      });
    }, disconnect: function() {
      Dr$1(function() {
        return r$1(s4, void 0, void 0, function() {
          return s$1(this, function(t6) {
            switch (t6.label) {
              case 0:
                return [4, uo.of(e3).connectionManager.disconnect()];
              case 1:
                return t6.sent(), [2];
            }
          });
        });
      });
    } } });
    var v2 = new N(e3, { localCacheEnabled: u3.localCacheEnabled, enableAutoResend: u3.localCacheConfig.enableAutoResend, dispatcher: c3, sdkState: a$12, logger: h4 });
    n2.forEach(function(t6) {
      t6.init(e3, { sdkState: a$12, cacheContext: u3, dispatcher: c3, sessionManager: d4, requestQueue: l2, logger: h4, onlineDetector: s4._onlineDetector }), s4[t6.name] = t6;
    }), this._appStateChangeDetector = new Ut({ isEnabled: p2 }), this._appStateChangeDetector.on("resume", function() {
      h4.debug("the page resumes from freeze"), s4.setForegroundState();
    }).on("pause", function() {
      h4.debug("the page freezes"), s4.setBackgroundState();
    }), c3.on(function(t6) {
      var n3;
      if (t6 instanceof Fr$1) {
        if (t6.stateType === Rr$1.CONNECTED) v2.processNonAutoResendRegisteredPendingMessages();
      } else if (t6 instanceof ze$2) {
        if ("USEV" === t6.code) {
          var o3 = t6.as(O$1).event;
          if (o3.category === L$1.FRIEND_DISCOVERED) {
            var c4 = v$1.getDataAsFriendDiscoveredEvent(e3, o3).friendDiscoveries;
            kr$1(function() {
              return r$1(s4, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return [2, f2.forEach(function(e5) {
                    e5.onFriendsDiscovered && e5.onFriendsDiscovered(c4);
                  })];
                });
              });
            });
          }
        }
      } else if (t6 instanceof xr$1) {
        var d5 = uo.of(s4._iid).subscribedUnreadMessageCount, l3 = false, p3 = t6.ts;
        "number" == typeof p3 && p3 > d5.ts && (d5.all !== t6.all && (l3 = true), d5.all = t6.all >= 0 ? t6.all : 0, t6.customTypes && Object.keys(t6.customTypes).forEach(function(e4) {
          d5.customTypes[e4] !== t6.customTypes[e4] && (l3 = true), d5.customTypes[e4] = t6.customTypes[e4];
        }), l3 = l3 && d5.ts > 0, d5.ts = p3), l3 && kr$1(function() {
          return r$1(s4, void 0, void 0, function() {
            return s$1(this, function(e4) {
              return [2, f2.forEach(function(e5) {
                e5.onTotalUnreadMessageCountChanged && e5.onTotalUnreadMessageCountChanged({ groupChannelCount: d5.all, feedChannelCount: d5.feed, customTypeUnreadCount: d5.customTypes }), e5.onTotalUnreadMessageCountUpdated && e5.onTotalUnreadMessageCountUpdated(d5.all, d5.customTypes);
              })];
            });
          });
        });
      } else t6 instanceof hs$2 ? (u3.preference.set(s4._getUserProfileCacheKey(a$12.userId), ds$2.payloadify(t6.userProfile)), (null === (n3 = t6.userProfile.appInfo.notificationInfo) || void 0 === n3 ? void 0 : n3.isEnabled) && u3.preference.set(Gr$1(s4.appId), { value: true })) : t6 instanceof fs$2 ? t6.configSyncNeeded && Dr$1(function() {
        return r$1(s4, void 0, void 0, function() {
          return s$1(this, function(e4) {
            switch (e4.label) {
              case 0:
                return [4, this._getAppConfigsInfo()];
              case 1:
                return e4.sent(), [2];
            }
          });
        });
      }) : t6 instanceof m$1 ? u3.preference.set(Xr$1(s4.appId), { configTs: t6.configTs }) : t6 instanceof Ve$2 && t6.error && t6.error.isSessionInvalidatedError && (h4.debug("session revoked."), s4._internalDisconnect(t6.error));
    });
  }
  return t4.init = function(e3) {
    var n2 = e3.appId, r2 = e3.appVersion, i3 = e3.modules, s4 = void 0 === i3 ? [] : i3, o2 = e3.options, a4 = void 0 === o2 ? new L$2() : o2, u3 = e3.debugMode, c$1 = void 0 !== u3 && u3, d4 = e3.customApiHost, l2 = e3.customWebSocketHost, h4 = e3.newInstance, f2 = void 0 !== h4 && h4, p2 = e3.logLevel, v2 = e3.localCacheEnabled, g2 = void 0 !== v2 && v2, m4 = e3.localCacheConfig, b$12 = void 0 === m4 ? new q() : m4, _2 = e3.localCacheEncryption, y4 = e3.useAsyncStorageStore, w3 = void 0 === y4 ? null : y4, k3 = e3.useMMKVStorageStore, S4 = void 0 === k3 ? null : k3, I3 = e3.appStateToggleEnabled, C2 = void 0 === I3 || I3;
    if (!Nn || f2) {
      var E3 = "su-".concat(ee()), P2 = null != _2 ? _2 : { encrypt: function(e4) {
        return e4;
      }, decrypt: function(e4) {
        return e4;
      } }, D3 = new Fs$1();
      D3.level = null != p2 ? p2 : xs$1.WARN;
      var U2 = new Ns$1({ encryption: P2 });
      c$1 || (et$1() ? S4 ? U2 = new Rs$1({ MMKV: S4, encryption: P2 }) : w3 && (U2 = new Ps$1({ AsyncStorage: w3, encryption: P2 }), D3.warn("AsyncStorage store is deprecated due to the small size limit. Please use MMKVStorage store instead.")) : U2 = new ks$1({ encryption: P2 })), new uo(E3, { appId: n2, appVersion: r2, options: a4, apiHost: null != d4 ? d4 : "https://api-".concat(n2, ".sendbird.com"), websocketHost: null != l2 ? l2 : "wss://ws-".concat(n2, ".sendbird.com"), store: U2, encryption: P2, logger: D3, localCacheEnabled: g2, localCacheConfig: b$12, debugMode: c$1, appStateToggleEnabled: C2 });
      var O3 = [new Ia(), new b()], L3 = new t4(E3, a4, c(c([], a$1(s4), false), a$1(O3), false));
      return Nn || (Nn = L3), L3;
    }
    return Nn;
  }, Object.defineProperty(t4, "instance", { get: function() {
    return Nn;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4, "version", { get: function() {
    return l;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "appId", { get: function() {
    return uo.of(this._iid).sdkState.appId;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "appInfo", { get: function() {
    var e3 = uo.of(this._iid).appInfo;
    return null != e3 ? e3 : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "appVersion", { get: function() {
    var e3;
    return null !== (e3 = uo.of(this._iid).sdkState.appVersion) && void 0 !== e3 ? e3 : "";
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "debugMode", { get: function() {
    return !!uo.of(this._iid).debugMode;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "logLevel", { get: function() {
    return uo.of(this._iid).logger.level;
  }, set: function(e3) {
    uo.of(this._iid).logger.level = e3;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "isCacheEnabled", { get: function() {
    return uo.of(this._iid).cacheContext.localCacheEnabled;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "localCacheConfig", { get: function() {
    var e3 = uo.of(this._iid).cacheContext;
    return e3.localCacheEnabled ? e3.localCacheConfig : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "ekey", { get: function() {
    return uo.of(this._iid).sessionManager.ekey;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "currentUser", { get: function() {
    var e3;
    return null !== (e3 = uo.of(this._iid).sessionManager.currentUser) && void 0 !== e3 ? e3 : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "connectionState", { get: function() {
    var e3 = uo.of(this._iid).connectionManager;
    return e3.isConnected ? Ar$1.OPEN : e3.isConnecting ? Ar$1.CONNECTING : Ar$1.CLOSED;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "lastConnectedAt", { get: function() {
    var e3 = uo.of(this._iid), t5 = e3.connectedAt;
    return e3.connectionManager.isConnected ? t5 : 0;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "fcmPushToken", { get: function() {
    var e3;
    return null !== (e3 = this._fcmPushToken) && void 0 !== e3 ? e3 : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(t4.prototype, "apnsPushToken", { get: function() {
    var e3;
    return null !== (e3 = this._apnsPushToken) && void 0 !== e3 ? e3 : null;
  }, enumerable: false, configurable: true }), t4.prototype._getNestDBVersion = function() {
    return 8;
  }, t4.prototype._getPreferenceVersion = function() {
    return 9;
  }, t4.prototype._getPreferenceCacheKey = function(e3) {
    return "sendbird@".concat(this.appId, "/").concat(e3, ".pref");
  }, t4.prototype._getUserProfileCacheKey = function(e3) {
    return "sendbird@".concat(this.appId, "/").concat(e3, ".profile");
  }, t4.prototype._internalDisconnect = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t5 = uo.of(this._iid), n2 = t5.connectionManager, r2 = t5.sdkState, s4 = t5.requestQueue, this._appStateChangeDetector.stop(), this._onlineDetector.stop(), s4.cancelAll(), [4, n2.logout(e3)];
          case 1:
            return i3.sent(), [4, this.clearCachedData()];
          case 2:
            return i3.sent(), r2.appState = "foreground", [2];
        }
      });
    });
  }, t4.prototype._getAppConfigsInfo = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, s4, o2, a4, u3, c3, d4 = this;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.requestQueue, n2 = e3.dispatcher, s4 = e3.cacheContext, o2 = e3.sdkState, a4 = {}, [4, s4.preference.get(Xr$1(o2.appId))];
          case 1:
            return (c3 = l2.sent()) && (u3 = c3.configTs), new w("appConfigsInfo", function(e4) {
              return r$1(d4, void 0, void 0, function() {
                var r2, s5, o3, u4, c4, d5, l3, h4;
                return s$1(this, function(i3) {
                  switch (i3.label) {
                    case 0:
                      return r2 = { hasNext: true, nextToken: e4 }, s5 = new At({ token: e4 }), [4, t5.send(s5)];
                    case 1:
                      return o3 = i3.sent(), u4 = o3.as(Nt), c4 = u4.configs, d5 = u4.hasMore, l3 = u4.nextToken, h4 = u4.ts, Object.keys(c4).forEach(function(e5) {
                        a4[e5] = c4[e5];
                      }), r2.hasNext = d5, r2.nextToken = l3, d5 || n2.dispatch(new P({ appConfigsInfo: a4, configTs: h4 })), [2, r2];
                  }
                });
              });
            }).start(u3), [2];
        }
      });
    });
  }, t4.prototype.getMemoryStoreForDebugging = function() {
    var e3 = uo.of(this._iid), t5 = e3.debugMode, n2 = e3.cacheContext;
    if (t5) return n2.store instanceof Ns$1 ? n2.store : null;
    throw b$2.debugModeRequired;
  }, t4.prototype.addExtension = function(e3, t5) {
    var n2 = uo.of(this._iid).sdkState;
    ["sb_uikit", "sb_syncmanager", "device-os-platform"].indexOf(e3) > -1 && n2.extensions && (n2.extensions[e3] = t5);
  }, t4.prototype.addSendbirdExtensions = function(e3, t5, n2) {
    var r2, i3, s4 = uo.of(this._iid), o$1 = s4.logger, a4 = s4.sdkState, u3 = new RegExp(nt$1);
    if (0 === e3.length) return o$1.debug("sb.addSendbirdExtensions() has failed because the given sendbirdExtensions is empty."), false;
    if (e3.find(function(e4) {
      return !u3.test(e4.version);
    })) return o$1.debug("sb.addSendbirdExtensions() has failed because the given version did not satisfy the SemVer specification."), false;
    if (n2) try {
      for (var c3 = o(Object.entries(n2)), d4 = c3.next(); !d4.done; d4 = c3.next()) {
        var l2 = a$1(d4.value, 2), h4 = l2[0], f2 = l2[1];
        if (/&|=/.test(h4) || /&|=/.test(f2)) return o$1.debug("sb.addSendbirdExtensions() has failed because the given customData includes at least one invalid character: = or &."), false;
      }
    } catch (e4) {
      r2 = { error: e4 };
    } finally {
      try {
        d4 && !d4.done && (i3 = c3.return) && i3.call(c3);
      } finally {
        if (r2) throw r2.error;
      }
    }
    return a4.sendbirdRuntimeEnvironment = { sendbirdExtensions: e3, deviceOS: t5, customData: n2 }, true;
  }, t4.prototype.setOnlineListener = function(e3) {
    this._onlineDetector.setOnlineListener(e3);
  }, t4.prototype.setOfflineListener = function(e3) {
    this._onlineDetector.setOfflineListener(e3);
  }, t4.prototype._safeInitializeStore = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5;
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            t5 = uo.of(this._iid).cacheContext, n2.label = 1;
          case 1:
            return n2.trys.push([1, 3, , 5]), [4, t5.store.init(e3)];
          case 2:
            return n2.sent(), this._storeInitialized = true, [3, 5];
          case 3:
            return n2.sent(), t5.replaceStore(new Ns$1()), [4, this._safeInitializeStore(e3)];
          case 4:
            return n2.sent(), [3, 5];
          case 5:
            return [2];
        }
      });
    });
  }, t4.prototype.setLocaleForChatbot = function(e3) {
    var t5 = uo.of(this._iid).sdkState, n2 = function(e4) {
      return e4.replace(/[^a-zA-Z-_.]/g, "");
    }(e3.trim());
    n2 && (t5.localeForChatbot = n2);
  }, t4.prototype.initializeCache = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4, o2, a4, u3, c3, d4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            if (t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.cacheContext, s4 = t5.dispatcher, o2 = t5.logger, n2.userId && n2.userId === e3) return [3, 13];
            a4 = "sendbird@".concat(n2.appId, "/").concat(e3, ".db"), i3.label = 1;
          case 1:
            return i3.trys.push([1, 9, 11, 13]), r2.localCacheEnabled ? r2.nestdb && r2.nestdb.state !== Os$1.CLOSED && r2.nestdb.name === a4 ? [3, 3] : (u3 = "sendbird@".concat(n2.appId, "/").concat(e3, ".db"), (c3 = r2.nestdb = new Ds$1({ name: u3, version: this._getNestDBVersion(), store: r2.store, config: new Li({ dbname: u3, itemSizeLimit: 61440 }) })).on("upgrade", Pt(c3)), c3.on("storeReplaced", function(e4) {
              r2.replaceStore(e4), r2.localCacheEnabled = false, c3.on("upgrade", Pt(c3));
            }), [4, c3.open()]) : [3, 6];
          case 2:
            return i3.sent(), this._storeInitialized = true, s4.dispatch(new T$1(this._iid, { userId: e3 })), [3, 5];
          case 3:
            return [4, this._safeInitializeStore(a4)];
          case 4:
            i3.sent(), i3.label = 5;
          case 5:
            return n2.userId = e3, [3, 8];
          case 6:
            return [4, this._safeInitializeStore(a4)];
          case 7:
            i3.sent(), n2.userId = e3, i3.label = 8;
          case 8:
            return [3, 13];
          case 9:
            return d4 = i3.sent(), o2.warn("Nest DB Open Failed. ", d4), r2.store instanceof Ns$1 || (r2.replaceStore(new Ns$1()), r2.localCacheEnabled = false), [4, this._safeInitializeStore(a4)];
          case 10:
            throw i3.sent(), n2.userId = e3, b$2.databaseError;
          case 11:
            return [4, this._setupPreference(e3)];
          case 12:
            return i3.sent(), [7];
          case 13:
            return [2];
        }
      });
    });
  }, t4.prototype.getCacheDataSize = function() {
    return r$1(this, void 0, void 0, function() {
      var e3;
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return (e3 = uo.of(this._iid).cacheContext).localCacheEnabled && e3.nestdb ? [4, e3.nestdb.estimateUsage()] : [3, 2];
          case 1:
            return [2, t5.sent()];
          case 2:
            return [2, 0];
        }
      });
    });
  }, t4.prototype.clearCachedData = function() {
    return r$1(this, void 0, void 0, function() {
      var e3;
      return s$1(this, function(t5) {
        switch (t5.label) {
          case 0:
            return (e3 = uo.of(this._iid).cacheContext).localCacheEnabled && e3.nestdb ? [4, e3.nestdb.clear()] : [3, 2];
          case 1:
            t5.sent(), t5.label = 2;
          case 2:
            return this._storeInitialized ? [4, e3.preference.clear()] : [3, 4];
          case 3:
            t5.sent(), t5.label = 4;
          case 4:
            return [2];
        }
      });
    });
  }, t4.prototype.clearCachedMessages = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, s4 = this;
      return s$1(this, function(o2) {
        switch (o2.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t5 = Zs$1.of(this._iid), n2 = Js$1.of(this._iid), t5 && n2 ? [4, Promise.all(e3.map(function(e4) {
              return r$1(s4, void 0, void 0, function() {
                return s$1(this, function(r2) {
                  switch (r2.label) {
                    case 0:
                      return [4, t5.removeMessagesOfChannel(e4)];
                    case 1:
                      return r2.sent(), [4, n2.removeMessagesOfChannel(e4)];
                    case 2:
                      return r2.sent(), [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            o2.sent(), o2.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t4.prototype._setupPreference = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4, o2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.cacheContext, s4 = t5.statManager, [4, r2.preference.init(this._getPreferenceCacheKey(e3), this._getPreferenceVersion())];
          case 1:
            return i3.sent(), [4, r2.preference.get(this._getUserProfileCacheKey(e3))];
          case 2:
            return (o2 = i3.sent()) && new ds$2(this._iid, o2).apply(), [4, s4.init("sendbird@".concat(n2.appId, "/").concat(e3, ".statlog"))];
          case 3:
            return i3.sent(), [2];
        }
      });
    });
  }, t4.prototype._ready = function(e3, t5, s4) {
    return void 0 === s4 && (s4 = {}), r$1(this, void 0, void 0, function() {
      var r2, o2, a4, u3, c3, d4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(S$1("string", e3) && S$1("string", t5, true)).throw(b$2.invalidParameters), r2 = uo.of(this._iid), o2 = r2.sdkState, a4 = r2.cacheContext, u3 = r2.connectionManager, c3 = s4.errorForOtherUser, o2.userId && o2.userId !== e3 ? c3 ? [3, 2] : [4, u3.logout()] : [3, 3];
          case 1:
            return i3.sent(), [3, 3];
          case 2:
            throw c3;
          case 3:
            return i3.trys.push([3, 5, , 6]), [4, this.initializeCache(e3)];
          case 4:
            return i3.sent(), uo.of(this._iid).dispatcher.dispatch(new S()), [3, 6];
          case 5:
            return i3.sent(), d4 = uo.of(this._iid).logger, a4.localCacheEnabled = false, d4.warn("Cache initialization failed - cache is not available."), [3, 6];
          case 6:
            return [2];
        }
      });
    });
  }, t4.prototype.authenticateFeed = function(e3, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this.authenticate(e3, t5)];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, t4.prototype.authenticate = function(e3, t5, n2) {
    var s4;
    return void 0 === n2 && (n2 = p.SESSION_TOKEN), r$1(this, void 0, void 0, function() {
      var r2, o2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return r2 = uo.of(this._iid), o2 = r2.sessionManager, a4 = r2.connectionManager, [4, this._ready(e3, t5, { errorForOtherUser: a4.isConnected ? b$2.alreadyConnectedAsAnotherUser : void 0 })];
          case 1:
            return i3.sent(), (null === (s4 = o2.session.services) || void 0 === s4 ? void 0 : s4.includes(M$1.CHAT)) ? [3, 3] : (o2.handler || t5 && n2 !== p.ACCESS_TOKEN || this.setSessionHandler(new Mi()), [4, o2.authenticate(e3, t5)]);
          case 2:
            i3.sent(), i3.label = 3;
          case 3:
            return [2, this.currentUser];
        }
      });
    });
  }, t4.prototype.connect = function(e3, t5) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._ready(e3, t5)];
          case 1:
            n2.sent(), n2.label = 2;
          case 2:
            return n2.trys.push([2, , 4, 5]), [4, uo.of(this._iid).connectionManager.connect(t5)];
          case 3:
            return n2.sent(), [3, 5];
          case 4:
            return this._onlineDetector.start(), this._appStateChangeDetector.start(), [7];
          case 5:
            return [2, this.currentUser];
        }
      });
    });
  }, t4.prototype.reconnect = function() {
    var e3 = uo.of(this._iid), t5 = e3.connectionManager, n2 = e3.sdkState, r2 = e3.sessionManager.session.hasSession;
    return r2 && (this._appStateChangeDetector.start(), this._onlineDetector.start(), t5.resetAndReconnect().then(function() {
      n2.appState = "foreground";
    }).catch(function() {
    })), r2;
  }, t4.prototype.disconnect = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return [4, this._internalDisconnect()];
          case 1:
            return e3.sent(), [2];
        }
      });
    });
  }, t4.prototype.disconnectWebSocket = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.connectionManager, n2 = e3.requestQueue, this._appStateChangeDetector.stop(), this._onlineDetector.stop(), n2.cancelAll(), [4, t5.disconnectWebSocket(true)];
          case 1:
            return r2.sent(), [2];
        }
      });
    });
  }, t4.prototype.setBackgroundState = function() {
    var e3 = uo.of(this._iid), t5 = e3.connectionManager, n2 = e3.sdkState, r2 = e3.logger;
    "foreground" === n2.appState && (n2.appState = "background", r2.debug("going background state"), t5.background().catch(function(e4) {
      r2.debug("setBackgroundState error = ", e4);
    }));
  }, t4.prototype.setForegroundState = function() {
    var e3 = uo.of(this._iid), t5 = e3.connectionManager, n2 = e3.sdkState, r2 = e3.dispatcher, i3 = e3.logger;
    "background" === n2.appState && (n2.appState = "foreground", i3.debug("going foreground state"), t5.resetAndReconnect().catch(function(e4) {
      i3.debug("setForgroundState error = ", e4);
    }), r2.dispatch(new a()));
  }, t4.prototype.setSessionHandler = function(e3) {
    cs$2(e3 instanceof Mi).throw(b$2.invalidParameters), uo.of(this._iid).sessionManager.handler = e3;
  }, t4.prototype.addUserEventHandler = function(e3, t5) {
    cs$2(S$1("string", e3) && t5 instanceof Si).throw(b$2.invalidParameters), uo.of(this._iid).userEventHandlers.set(e3, t5);
  }, t4.prototype.removeUserEventHandler = function(e3) {
    uo.of(this._iid).userEventHandlers.delete(e3);
  }, t4.prototype.removeAllUserEventHandler = function() {
    uo.of(this._iid).userEventHandlers.clear();
  }, t4.prototype.addConnectionHandler = function(e3, t5) {
    cs$2(S$1("string", e3) && t5 instanceof wi).throw(b$2.invalidParameters), uo.of(this._iid).connectionHandlers.set(e3, t5);
  }, t4.prototype.removeConnectionHandler = function(e3) {
    uo.of(this._iid).connectionHandlers.delete(e3);
  }, t4.prototype.removeAllConnectionHandler = function() {
    uo.of(this._iid).connectionHandlers.clear();
  }, t4.prototype.createApplicationUserListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new Ni(this._iid, e3);
  }, t4.prototype.createBlockedUserListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new ki(this._iid, e3);
  }, t4.prototype.createFriendListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new xi(this._iid, e3);
  }, t4.prototype.createMessageSearchQuery = function(e3) {
    return new ma(this._iid, e3);
  }, t4.prototype.createPollListQuery = function(e3) {
    return new Yo(this._iid, n$2({}, e3));
  }, t4.prototype.createPollVoterListQuery = function(e3) {
    return new $o(this._iid, n$2({}, e3));
  }, t4.prototype.buildUserFromSerializedData = function(e3) {
    var t5 = as$2(e3);
    return new ls$2(this._iid, ls$2.payloadify(t5));
  }, t4.prototype.updateCurrentUserInfo = function(t5) {
    return void 0 === t5 && (t5 = {}), r$1(this, void 0, void 0, function() {
      var r2, s4, o2, a4, u3, c3, d4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return r2 = n$2(n$2({}, Et), t5), cs$2(function(t6) {
              return k(t6.profileImage, true) && S$1("string", t6.profileUrl, true) && S$1("string", t6.nickname, true);
            }(r2)).throw(b$2.invalidParameters), this.currentUser ? (s4 = uo.of(this._iid), o2 = s4.sdkState, a4 = s4.requestQueue, u3 = new Mt(n$2({ userId: o2.userId }, r2)), [4, a4.send(u3)]) : [3, 2];
          case 1:
            return c3 = i3.sent(), d4 = c3.as(Lt).user, this.currentUser && (r2.nickname && (this.currentUser.nickname = d4.nickname), (r2.profileUrl || r2.profileImage) && (this.currentUser.plainProfileUrl = d4.profileUrl)), [2, d4];
          case 2:
            throw b$2.connectionRequired;
        }
      });
    });
  }, t4.prototype.updateCurrentUserInfoWithPreferredLanguages = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4, o2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), this.currentUser ? (t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.requestQueue, s4 = new Mt({ userId: n2.userId, preferredLanguages: e3 }), [4, r2.send(s4)]) : [3, 2];
          case 1:
            return o2 = i3.sent(), a4 = o2.as(Lt).user, this.currentUser && (this.currentUser.preferredLanguages = a4.preferredLanguages), [2, a4];
          case 2:
            throw b$2.connectionRequired;
        }
      });
    });
  }, t4.prototype.registerFCMPushTokenForCurrentUser = function(e3, t5) {
    var s4, o2;
    return r$1(this, void 0, void 0, function() {
      var a4, u3, c3, d$1, l2, h4, f2 = this;
      return s$1(this, function(p2) {
        switch (p2.label) {
          case 0:
            if (cs$2(S$1("string", e3) && S$1("string", null == t5 ? void 0 : t5.deviceManufacturer, true)).throw(b$2.invalidParameters), (null == t5 ? void 0 : t5.deviceOS) && cs$2(T$2(Je$2, t5.deviceOS.platform, true) && S$1("string", t5.deviceOS.version, true)).throw(b$2.invalidParameters), !this.currentUser) return [3, 6];
            a4 = { deviceOS: "".concat((null === (s4 = null == t5 ? void 0 : t5.deviceOS) || void 0 === s4 ? void 0 : s4.platform) || Je$2.ANDROID, "-").concat((null === (o2 = null == t5 ? void 0 : t5.deviceOS) || void 0 === o2 ? void 0 : o2.version) || "unknown"), deviceManufacturer: null == t5 ? void 0 : t5.deviceManufacturer, systemPushEnabled: null == t5 ? void 0 : t5.systemPushEnabled }, p2.label = 1;
          case 1:
            return p2.trys.push([1, 4, , 5]), u3 = uo.of(this._iid), c3 = u3.sessionManager, d$1 = u3.sdkState, l2 = u3.requestQueue, c3.hasDeviceToken(f$1.FCM, e3) ? [2, d.SUCCESS] : (h4 = new zt({ userId: d$1.userId, token: e3, deviceOS: a4.deviceOS, deviceManufacturer: a4.deviceManufacturer, systemPushEnabled: a4.systemPushEnabled }), [4, l2.send(h4)]);
          case 2:
            return p2.sent(), [4, Dr$1(function() {
              return r$1(f2, void 0, void 0, function() {
                return s$1(this, function(t6) {
                  switch (t6.label) {
                    case 0:
                      return c3.setDeviceToken(f$1.FCM, e3, a4), [4, c3.saveDeviceToken()];
                    case 1:
                      return t6.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return p2.sent(), this._fcmPushToken = "", [2, d.SUCCESS];
          case 4:
            return p2.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._fcmPushToken = e3, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, t4.prototype.unregisterFCMPushTokenForCurrentUser = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, s4, o2, a4, u3, c3, d$1 = this;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            if (cs$2(S$1("string", e3)).throw(b$2.invalidParameters), !this.currentUser) return [3, 6];
            l2.label = 1;
          case 1:
            return l2.trys.push([1, 4, , 5]), t5 = uo.of(this._iid), s4 = t5.sessionManager, o2 = t5.sdkState, a4 = t5.requestQueue, u3 = new Ft({ userId: o2.userId, token: e3 }), [4, a4.send(u3)];
          case 2:
            return c3 = l2.sent().lastDeletedAt, [4, Dr$1(function() {
              return r$1(d$1, void 0, void 0, function() {
                return s$1(this, function(t6) {
                  switch (t6.label) {
                    case 0:
                      return s4.unsetDeviceToken(f$1.FCM, e3), s4.setDeviceTokenDeletedAt(c3), [4, s4.saveDeviceToken()];
                    case 1:
                      return t6.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return l2.sent(), this._fcmPushToken = "", [2, d.SUCCESS];
          case 4:
            return l2.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._fcmPushToken = e3, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, t4.prototype.unregisterFCMPushTokenAllForCurrentUser = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, s4, o2, a4, u3 = this;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return this.currentUser ? (e3 = uo.of(this._iid), t5 = e3.sessionManager, n2 = e3.sdkState, s4 = e3.requestQueue, o2 = new qt({ userId: n2.userId }), [4, s4.send(o2)]) : [3, 3];
          case 1:
            return a4 = c3.sent().lastDeletedAt, [4, Dr$1(function() {
              return r$1(u3, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  switch (e4.label) {
                    case 0:
                      return t5.unsetDeviceTokens(f$1.FCM), t5.setDeviceTokenDeletedAt(a4), [4, t5.saveDeviceToken()];
                    case 1:
                      return e4.sent(), [2];
                  }
                });
              });
            })];
          case 2:
            c3.sent(), c3.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, t4.prototype.registerAPNSPushTokenForCurrentUser = function(e3, t5) {
    var s4, o2;
    return r$1(this, void 0, void 0, function() {
      var a4, u3, c3, d$1, l2, h4, f2 = this;
      return s$1(this, function(p2) {
        switch (p2.label) {
          case 0:
            if (cs$2(S$1("string", e3) && S$1("string", null == t5 ? void 0 : t5.deviceManufacturer, true)).throw(b$2.invalidParameters), (null == t5 ? void 0 : t5.deviceOS) && cs$2(T$2(Je$2, t5.deviceOS.platform, true) && S$1("string", t5.deviceOS.version, true)).throw(b$2.invalidParameters), !this.currentUser) return [3, 6];
            a4 = { deviceOS: "".concat((null === (s4 = null == t5 ? void 0 : t5.deviceOS) || void 0 === s4 ? void 0 : s4.platform) || Je$2.IOS, "-").concat((null === (o2 = null == t5 ? void 0 : t5.deviceOS) || void 0 === o2 ? void 0 : o2.version) || "unknown"), deviceManufacturer: null == t5 ? void 0 : t5.deviceManufacturer, systemPushEnabled: null == t5 ? void 0 : t5.systemPushEnabled }, p2.label = 1;
          case 1:
            return p2.trys.push([1, 4, , 5]), u3 = uo.of(this._iid), c3 = u3.sessionManager, d$1 = u3.sdkState, l2 = u3.requestQueue, c3.hasDeviceToken(f$1.APNS, e3) ? [2, d.SUCCESS] : (h4 = new Rt({ userId: d$1.userId, token: e3, deviceOS: a4.deviceOS, deviceManufacturer: a4.deviceManufacturer, systemPushEnabled: a4.systemPushEnabled }), [4, l2.send(h4)]);
          case 2:
            return p2.sent(), [4, Dr$1(function() {
              return r$1(f2, void 0, void 0, function() {
                return s$1(this, function(t6) {
                  switch (t6.label) {
                    case 0:
                      return c3.setDeviceToken(f$1.APNS, e3, a4), [4, c3.saveDeviceToken()];
                    case 1:
                      return t6.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return p2.sent(), this._apnsPushToken = "", [2, d.SUCCESS];
          case 4:
            return p2.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._apnsPushToken = e3, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, t4.prototype.unregisterAPNSPushTokenForCurrentUser = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, s4, o2, a4, u3, c3, d$1 = this;
      return s$1(this, function(l2) {
        switch (l2.label) {
          case 0:
            if (cs$2(S$1("string", e3)).throw(b$2.invalidParameters), !this.currentUser) return [3, 6];
            l2.label = 1;
          case 1:
            return l2.trys.push([1, 4, , 5]), t5 = uo.of(this._iid), s4 = t5.sessionManager, o2 = t5.sdkState, a4 = t5.requestQueue, u3 = new Qt({ userId: o2.userId, token: e3 }), [4, a4.send(u3)];
          case 2:
            return c3 = l2.sent().lastDeletedAt, [4, Dr$1(function() {
              return r$1(d$1, void 0, void 0, function() {
                return s$1(this, function(t6) {
                  switch (t6.label) {
                    case 0:
                      return s4.unsetDeviceToken(f$1.APNS, e3), s4.setDeviceTokenDeletedAt(c3), [4, s4.saveDeviceToken()];
                    case 1:
                      return t6.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return l2.sent(), this._apnsPushToken = "", [2, d.SUCCESS];
          case 4:
            return l2.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._apnsPushToken = e3, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, t4.prototype.unregisterAPNSPushTokenAllForCurrentUser = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, s4, o2, a4, u3 = this;
      return s$1(this, function(c3) {
        switch (c3.label) {
          case 0:
            return this.currentUser ? (e3 = uo.of(this._iid), t5 = e3.sessionManager, n2 = e3.sdkState, s4 = e3.requestQueue, o2 = new jt({ userId: n2.userId }), [4, s4.send(o2)]) : [3, 3];
          case 1:
            return a4 = c3.sent().lastDeletedAt, [4, Dr$1(function() {
              return r$1(u3, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  switch (e4.label) {
                    case 0:
                      return t5.unsetDeviceTokens(f$1.APNS), t5.setDeviceTokenDeletedAt(a4), [4, t5.saveDeviceToken()];
                    case 1:
                      return e4.sent(), [2];
                  }
                });
              });
            })];
          case 2:
            c3.sent(), c3.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, t4.prototype.markPushNotificationAsDelivered = function(e3, t5) {
    var n2;
    return void 0 === t5 && (t5 = true), r$1(this, void 0, void 0, function() {
      var r2, s4, o2, a4, u3, c3, d4, l2, h4, f2, p2, v2, g2, m4, b3, _2, y4, w3, k3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            if (r2 = uo.of(this._iid), s4 = r2.logger, o2 = r2.sessionManager, a4 = r2.requestQueue, u3 = r2.pushNotificationAckManager, s4.debug("markPushNotificationAsDelivered:", e3), c3 = In.DELIVERED, d4 = u3.parseData(e3), l2 = d4.pushTrackingId, h4 = d4.sessionTopics, f2 = d4.sessionKey, p2 = d4.messageId, v2 = d4.channelKey, g2 = d4.templateKey, m4 = d4.notificationEventDeadline, !f2) throw s4.info("Can't use markPushNotificationAsDelivered() feature."), b$2.malformedDataError;
            if (!h4.includes(Ks$2.PUSH_ACKNOWLEDGEMENT)) throw s4.info("Can't use markPushNotificationAsDelivered() feature."), b$2.malformedDataError;
            if (u3.isAcked(l2, c3)) return s4.info("already delivered push notification:", l2), [2];
            b3 = Boolean(v2), _2 = t5 && b3, y4 = null === (n2 = o2.deviceTokens[0]) || void 0 === n2 ? void 0 : n2.token, w3 = new Mn({ deviceToken: null != y4 ? y4 : "", pushTrackingId: l2, eventType: c3, messageId: p2, channelKey: v2, templateKey: g2, notificationEventDeadline: m4, allowedPushNotification: _2 }), f2 && (w3.headers["Session-Key"] = f2), i3.label = 1;
          case 1:
            return i3.trys.push([1, 3, , 4]), [4, a4.send(w3)];
          case 2:
            return i3.sent(), u3.markAsAcked(l2, c3), [3, 4];
          case 3:
            throw k3 = i3.sent(), s4.debug("failed to mark push notification as delivered. push tracking id: ".concat(l2, ". error: ").concat(k3)), k3;
          case 4:
            return [2];
        }
      });
    });
  }, t4.prototype.markPushNotificationAsClicked = function(e3) {
    var t5;
    return r$1(this, void 0, void 0, function() {
      var n2, r2, s4, o2, a4, u3, c3, d4, l2, h4, f2, p2, v2, g2, m4, b3, _2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            if (n2 = uo.of(this._iid), r2 = n2.logger, s4 = n2.sessionManager, o2 = n2.requestQueue, a4 = n2.pushNotificationAckManager, r2.debug("markPushNotificationAsClicked:", e3), u3 = In.CLICKED, c3 = a4.parseData(e3), d4 = c3.pushTrackingId, l2 = c3.sessionTopics, h4 = c3.sessionKey, f2 = c3.messageId, p2 = c3.channelKey, v2 = c3.templateKey, g2 = c3.notificationEventDeadline, !h4) throw r2.info("Can't use markPushNotificationAsClicked() feature."), b$2.malformedDataError;
            if (!l2.includes(Ks$2.PUSH_ACKNOWLEDGEMENT)) throw r2.info("Can't use markPushNotificationAsClicked() feature."), b$2.malformedDataError;
            if (a4.isAcked(d4, u3)) return r2.info("already clicked push notification:", d4), [2];
            m4 = null === (t5 = s4.deviceTokens[0]) || void 0 === t5 ? void 0 : t5.token, b3 = new Mn({ deviceToken: null != m4 ? m4 : "", pushTrackingId: d4, eventType: u3, messageId: f2, channelKey: p2, templateKey: v2, notificationEventDeadline: g2 }), h4 && (b3.headers["Session-Key"] = h4), i3.label = 1;
          case 1:
            return i3.trys.push([1, 3, , 4]), [4, o2.send(b3)];
          case 2:
            return i3.sent(), a4.markAsAcked(d4, u3), [3, 4];
          case 3:
            throw _2 = i3.sent(), r2.debug("failed to mark push notification as clicked. push tracking id: ".concat(d4, ". error: ").concat(_2)), _2;
          case 4:
            return [2];
        }
      });
    });
  }, t4.prototype.getChannelInvitationPreference = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.sdkState, n2 = e3.requestQueue, r2 = new Kt({ userId: t5.userId }), [4, n2.send(r2)];
          case 1:
            return s4 = i3.sent(), [2, { autoAccept: s4.as(Gt).autoAccept }];
        }
      });
    });
  }, t4.prototype.setChannelInvitationPreference = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, r2, s4, o2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(S$1("boolean", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), r2 = t5.sdkState, s4 = t5.requestQueue, o2 = new Wt({ userId: r2.userId, willAutoAccept: e3 }), [4, s4.send(o2)];
          case 1:
            return a4 = i3.sent(), [2, { autoAccept: a4.as(Vt).autoAccept }];
        }
      });
    });
  }, t4.prototype.getDoNotDisturb = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.sdkState, n2 = e3.requestQueue, r2 = new Bt({ userId: t5.userId }), [4, n2.send(r2)];
          case 1:
            return s4 = i3.sent(), [2, s4.as(Jt).preference];
        }
      });
    });
  }, t4.prototype.setDoNotDisturb = function(e3, t5, s4, o2, a4, u3) {
    return void 0 === t5 && (t5 = 0), void 0 === s4 && (s4 = 0), void 0 === o2 && (o2 = 0), void 0 === a4 && (a4 = 0), void 0 === u3 && (u3 = ""), r$1(this, void 0, void 0, function() {
      var r2, c3, d4, l2, h4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(S$1("boolean", e3) && S$1("number", t5) && S$1("number", s4) && S$1("number", o2) && S$1("number", a4) && S$1("string", u3)).throw(b$2.invalidParameters), r2 = uo.of(this._iid), c3 = r2.sdkState, d4 = r2.requestQueue, l2 = new Zt({ userId: c3.userId, doNotDisturbOn: e3, startHour: t5, startMin: s4, endHour: o2, endMin: a4, timezone: u3 }), [4, d4.send(l2)];
          case 1:
            return h4 = i3.sent(), [2, h4.as($t).preference];
        }
      });
    });
  }, t4.prototype.getSnoozePeriod = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.sdkState, n2 = e3.requestQueue, r2 = new Xt({ userId: t5.userId }), [4, n2.send(r2)];
          case 1:
            return s4 = i3.sent(), [2, s4.as(Yt).snoozePeriod];
        }
      });
    });
  }, t4.prototype.setSnoozePeriod = function(e3, t5, s4) {
    return void 0 === t5 && (t5 = 0), void 0 === s4 && (s4 = 0), r$1(this, void 0, void 0, function() {
      var r2, o2, a4, u3, c3;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(S$1("boolean", e3) && S$1("number", t5) && S$1("number", s4)).throw(b$2.invalidParameters), r2 = uo.of(this._iid), o2 = r2.sdkState, a4 = r2.requestQueue, u3 = new en({ userId: o2.userId, snoozeOn: e3, startTs: t5, endTs: s4 }), [4, a4.send(u3)];
          case 1:
            return c3 = i3.sent(), [2, c3.as(tn).snoozePeriod];
        }
      });
    });
  }, t4.prototype.getMyPushTokensByToken = function(e3, t5) {
    return r$1(this, void 0, void 0, function() {
      var r2, s4, o$1, a4, u3, c3, d4, l2, h4, f2, p2, v2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(S$1("string", e3) && T$2(f$1, t5)).throw(b$2.invalidParameters), r2 = uo.of(this._iid), s4 = r2.sdkState, o$1 = r2.requestQueue, a4 = r2.sessionManager, u3 = new xt({ userId: s4.userId, type: t5, token: e3 }), [4, o$1.send(u3)];
          case 1:
            c3 = i3.sent(), d4 = c3.as(Ht).pushTokens;
            try {
              for (l2 = o(d4.deviceTokens), h4 = l2.next(); !h4.done; h4 = l2.next()) f2 = h4.value, a4.setDeviceToken(d4.type, f2);
            } catch (e4) {
              p2 = { error: e4 };
            } finally {
              try {
                h4 && !h4.done && (v2 = l2.return) && v2.call(l2);
              } finally {
                if (p2) throw p2.error;
              }
            }
            return [4, a4.saveDeviceToken()];
          case 2:
            return i3.sent(), [2, d4];
        }
      });
    });
  }, t4.prototype.getPushTriggerOption = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, r2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.sdkState, n2 = e3.requestQueue, r2 = new sn({ userId: t5.userId }), [4, n2.send(r2)];
          case 1:
            return [2, i3.sent().as(on).pushTriggerOption];
        }
      });
    });
  }, t4.prototype.setPushTriggerOption = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(T$2(_, e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.requestQueue, s4 = new an({ userId: n2.userId, pushTriggerOption: e3 }), [4, r2.send(s4)];
          case 1:
            return [2, i3.sent().as(un).pushTriggerOption];
        }
      });
    });
  }, t4.prototype.getPushTemplate = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, r2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.sdkState, n2 = e3.requestQueue, r2 = new cn({ userId: t5.userId }), [4, n2.send(r2)];
          case 1:
            return [2, i3.sent().as(dn).name];
        }
      });
    });
  }, t4.prototype.setPushTemplate = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(T$2(E$1, e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.requestQueue, s4 = new ln({ userId: n2.userId, templateName: e3 }), [4, r2.send(s4)];
          case 1:
            return [2, i3.sent().as(hn).name];
        }
      });
    });
  }, t4.prototype.blockUser = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, r2, s4, o2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(e3 instanceof ls$2 || S$1("string", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), r2 = t5.sdkState, s4 = t5.requestQueue, o2 = new nn({ userId: r2.userId, blockedUserId: e3 instanceof ls$2 ? e3.userId : e3 }), [4, s4.send(o2)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, t4.prototype.blockUserWithUserId = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return [2, this.blockUser(e3)];
      });
    });
  }, t4.prototype.unblockUser = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, r2, s4, o2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(e3 instanceof ls$2 || S$1("string", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), r2 = t5.sdkState, s4 = t5.requestQueue, o2 = new rn({ userId: r2.userId, unblockedUserId: e3 instanceof ls$2 ? e3.userId : e3 }), [4, s4.send(o2)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, t4.prototype.unblockUserWithUserId = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return [2, this.unblockUser(e3)];
      });
    });
  }, t4.prototype.getFriendChangeLogsByToken = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, r2, s4, o2, a4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), r2 = t5.sdkState, s4 = t5.requestQueue, o2 = new fn({ userId: r2.userId, token: e3 }), [4, s4.send(o2)];
          case 1:
            return a4 = i3.sent(), [2, a4.as(pn).changelogs];
        }
      });
    });
  }, t4.prototype.getAllowFriendDiscovery = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), t5 = e3.sdkState, n2 = e3.requestQueue, r2 = new wn({ userId: t5.userId }), [4, n2.send(r2)];
          case 1:
            return s4 = i3.sent(), [2, s4.as(kn).allowFriendDiscovery];
        }
      });
    });
  }, t4.prototype.setAllowFriendDiscovery = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, r2, s4, o2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(S$1("boolean", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), r2 = t5.sdkState, s4 = t5.requestQueue, o2 = new Sn({ userId: r2.userId, allowFriendDiscovery: e3 }), [4, s4.send(o2)];
          case 1:
            return i3.sent(), [2, e3];
        }
      });
    });
  }, t4.prototype.uploadFriendDiscoveries = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4, o2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.requestQueue, s4 = new vn({ userId: n2.userId, discoveries: e3 }), [4, r2.send(s4)];
          case 1:
            return o2 = i3.sent(), [2, o2.as(gn).friendDiscoveryRequestId];
        }
      });
    });
  }, t4.prototype.deleteFriendDiscovery = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return [2, this.deleteFriendDiscoveries([e3])];
      });
    });
  }, t4.prototype.deleteFriendDiscoveries = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.requestQueue, s4 = new mn({ userId: n2.userId, discoveryKeys: e3 }), [4, r2.send(s4)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, t4.prototype.addFriends = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4, o2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.requestQueue, s4 = new bn({ userId: n2.userId, userIds: e3 }), [4, r2.send(s4)];
          case 1:
            return o2 = i3.sent(), [2, o2.as(_n).users];
        }
      });
    });
  }, t4.prototype.deleteFriend = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(t5) {
        return [2, this.deleteFriends([e3])];
      });
    });
  }, t4.prototype.deleteFriends = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2, s4;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return cs$2(C$1("string", e3)).throw(b$2.invalidParameters), t5 = uo.of(this._iid), n2 = t5.sdkState, r2 = t5.requestQueue, s4 = new yn({ userId: n2.userId, userIds: e3 }), [4, r2.send(s4)];
          case 1:
            return i3.sent(), [2];
        }
      });
    });
  }, t4.prototype.getAllEmoji = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2;
      return s$1(this, function(r2) {
        switch (r2.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, t5 = new Cn(), [4, e3.send(t5)];
          case 1:
            return n2 = r2.sent(), [2, n2.as(En).emojiContainer];
        }
      });
    });
  }, t4.prototype.getEmojiCategory = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t5 = uo.of(this._iid).requestQueue, n2 = new Tn({ categoryId: e3 }), [4, t5.send(n2)];
          case 1:
            return r2 = i3.sent(), [2, r2.as(Pn).emojiCategory];
        }
      });
    });
  }, t4.prototype.getEmoji = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var t5, n2, r2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return t5 = uo.of(this._iid).requestQueue, n2 = new Dn({ key: e3 }), [4, t5.send(n2)];
          case 1:
            return r2 = i3.sent(), [2, r2.as(Un).emoji];
        }
      });
    });
  }, t4.prototype.getUIKitConfiguration = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, t5, n2, r2;
      return s$1(this, function(i3) {
        switch (i3.label) {
          case 0:
            return e3 = uo.of(this._iid), cs$2(e3.hasExtension("sb_uikit")).throw(b$2.notSupportedError), t5 = e3.requestQueue, n2 = new On(), [4, t5.send(n2)];
          case 1:
            return r2 = i3.sent(), [2, r2.as(An).uikitConfiguration];
        }
      });
    });
  }, t4.prototype.getReportCategoryInfoList = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return [4, uo.of(this._iid).reportCategoryManager.categories()];
          case 1:
            return [2, e3.sent()];
        }
      });
    });
  }, t4;
}();
function isDifferentChannel(a4, b3) {
  if (!a4 || !b3)
    return true;
  return a4.url !== b3.url;
}
function isSendableMessage$1(msg) {
  return msg !== void 0 && msg !== null && "sendingStatus" in msg;
}
function isMyMessage(msg, currentUserId = "##__USER_ID_IS_NOT_PROVIDED__##") {
  var _a2;
  if (!isSendableMessage$1(msg))
    return false;
  return ((_a2 = msg.sender) === null || _a2 === void 0 ? void 0 : _a2.userId) === currentUserId;
}
function isNewMessage(msg, currentUserId) {
  const myMessage = isMyMessage(msg, currentUserId);
  if (myMessage)
    return false;
  if (msg.isAdminMessage())
    return false;
  return msg.updatedAt === 0;
}
function getMessageUniqId(msg) {
  if ("sendingStatus" in msg) {
    if (msg.sendingStatus === "succeeded")
      return String(msg.messageId);
    return msg.reqId;
  }
  return String(msg.messageId);
}
function isBoolean(val) {
  return typeof val === "boolean";
}
function isOneOf(val, values) {
  return values.includes(val);
}
function isSet(val) {
  return val instanceof Set;
}
function isNotEmptyArray(arr) {
  if (!arr || !Array.isArray(arr))
    return false;
  return arr.length !== 0;
}
function isSameType(a4, b3) {
  return Object.prototype.toString.call(a4) === Object.prototype.toString.call(b3);
}
const useForceUpdate = () => {
  const [, updater] = useState(0);
  return useCallback(() => updater((prev) => prev + 1), []);
};
function snakeToCamel(obj) {
  if (typeof obj !== "object" || obj === null) {
    return obj;
  }
  if (Array.isArray(obj)) {
    return obj.map((item) => snakeToCamel(item));
  }
  const result = {};
  Object.keys(obj).forEach((key) => {
    const camelKey = key.replace(/_\w/g, (m4) => m4[1].toUpperCase());
    result[camelKey] = snakeToCamel(obj[key]);
  });
  return result;
}
function arrayToMapWithGetter(arr, getSelector) {
  return arr.reduce((accum, curr) => {
    const _key = getSelector(curr);
    accum[_key] = curr;
    return accum;
  }, {});
}
var __rest$6 = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
const defaultReducer = (_a2, action) => {
  var draft = __rest$6(_a2, []);
  switch (action.type) {
    case "update_initialized": {
      draft["initialized"] = action.value.status;
      return draft;
    }
    case "update_refreshing": {
      draft["refreshing"] = action.value.status;
      return draft;
    }
    case "update_loading": {
      draft["loading"] = action.value.status;
      return draft;
    }
    case "update_messages": {
      if (action.value.clearBeforeAction) {
        draft["messageMap"] = messagesToObject(action.value.messages);
      } else {
        const draftMessageMap = Object.assign({}, draft["messageMap"]);
        const messagesToDelete = [];
        const messagesToAdd = [];
        action.value.messages.forEach((next) => {
          const requestId = isSendableMessage$1(next) ? next.reqId : void 0;
          const messageId = next.messageId || void 0;
          [requestId, messageId].forEach((id2) => {
            if (!id2)
              return;
            const prev = draftMessageMap[id2];
            if (shouldUpdateMessage(prev, next)) {
              prev && messagesToDelete.push(prev);
              messagesToAdd.push(next);
            }
          });
        });
        messagesToDelete.forEach((it2) => {
          if (isSendableMessage$1(it2))
            delete draftMessageMap[it2.reqId];
          delete draftMessageMap[it2.messageId];
        });
        messagesToAdd.forEach((it2) => {
          if (isSendableMessage$1(it2))
            draftMessageMap[it2.reqId] = it2;
          draftMessageMap[it2.messageId] = it2;
        });
        draft["messageMap"] = draftMessageMap;
      }
      return draft;
    }
    case "update_new_messages": {
      const userId = action.value.currentUserId;
      const newMessages = action.value.messages.filter((it2) => isNewMessage(it2, userId));
      if (action.value.clearBeforeAction) {
        draft["newMessageMap"] = arrayToMapWithGetter(newMessages, getMessageUniqId);
      } else {
        const messageKeys = newMessages.map((it2) => it2.messageId);
        messageKeys.forEach((key) => delete draft["newMessageMap"][key]);
        draft["newMessageMap"] = Object.assign(Object.assign({}, draft["newMessageMap"]), arrayToMapWithGetter(newMessages, getMessageUniqId));
      }
      return draft;
    }
    case "delete_messages":
    case "delete_new_messages": {
      const key = action.type === "delete_messages" ? "messageMap" : "newMessageMap";
      draft[key] = Object.assign({}, draft[key]);
      action.value.messageIds.forEach((msgId) => {
        const message = draft[key][msgId];
        if (message) {
          if (isSendableMessage$1(message))
            delete draft[key][message.reqId];
          delete draft[key][message.messageId];
        }
      });
      action.value.reqIds.forEach((reqId) => {
        const message = draft[key][reqId];
        if (message) {
          if (isSendableMessage$1(message))
            delete draft[key][message.reqId];
          delete draft[key][message.messageId];
        }
      });
      return draft;
    }
  }
};
const messagesToObject = (messages) => {
  return messages.reduce((accum, curr) => {
    if (isSendableMessage$1(curr)) {
      accum[curr.reqId] = curr;
      if (curr.sendingStatus === Z.SUCCEEDED) {
        accum[curr.messageId] = curr;
      }
    } else {
      accum[curr.messageId] = curr;
    }
    return accum;
  }, {});
};
const shouldUpdateMessage = (prev, next) => {
  if (!isSendableMessage$1(prev) || !isSendableMessage$1(next))
    return true;
  if (prev.sendingStatus === Z.SUCCEEDED)
    return next.sendingStatus === Z.SUCCEEDED;
  return prev.sendingStatus !== next.sendingStatus;
};
const useChannelMessagesReducer = (sortComparator = defaultMessageComparator) => {
  const [{ initialized, loading, refreshing, messageMap, newMessageMap }, dispatch] = useReducer(defaultReducer, {
    initialized: false,
    loading: true,
    refreshing: false,
    messageMap: {},
    newMessageMap: {}
  });
  const updateMessages = (messages2, clearBeforeAction, currentUserId) => {
    dispatch({ type: "update_messages", value: { messages: messages2, clearBeforeAction, currentUserId } });
  };
  const deleteMessages = (messageIds, reqIds) => {
    dispatch({ type: "delete_messages", value: { messageIds, reqIds } });
  };
  const updateNewMessages = (messages2, clearBeforeAction, currentUserId) => {
    dispatch({ type: "update_new_messages", value: { messages: messages2, clearBeforeAction, currentUserId } });
  };
  const deleteNewMessages = (messageIds, reqIds) => {
    dispatch({ type: "delete_new_messages", value: { messageIds, reqIds } });
  };
  const updateInitialized = (status) => {
    dispatch({ type: "update_initialized", value: { status } });
  };
  const updateLoading = (status) => {
    dispatch({ type: "update_loading", value: { status } });
  };
  const updateRefreshing = (status) => {
    dispatch({ type: "update_refreshing", value: { status } });
  };
  const newMessages = Object.values(newMessageMap);
  const messages = useMemo(() => Array.from(new Set(Object.values(messageMap))).sort(sortComparator), [messageMap]);
  return {
    updateInitialized,
    updateLoading,
    updateRefreshing,
    updateMessages,
    deleteMessages,
    initialized,
    loading,
    refreshing,
    messages,
    newMessages,
    updateNewMessages,
    deleteNewMessages
  };
};
const LARGE_OFFSET = Math.floor(Number.MAX_SAFE_INTEGER / 10);
function defaultMessageComparator(a4, b3) {
  let aStatusOffset = 0;
  let bStatusOffset = 0;
  if (isSendableMessage$1(a4) && a4.sendingStatus !== "succeeded")
    aStatusOffset = LARGE_OFFSET;
  if (isSendableMessage$1(b3) && b3.sendingStatus !== "succeeded")
    bStatusOffset = LARGE_OFFSET;
  return a4.createdAt + aStatusOffset - (b3.createdAt + bStatusOffset);
}
var __awaiter$2 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e3) {
        reject(e3);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e3) {
        reject(e3);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const createMessageCollection = (channel, limit, options) => {
  var _a2;
  const basicParams = {
    prevResultLimit: limit.prev,
    nextResultLimit: limit.next,
    startingPoint: options === null || options === void 0 ? void 0 : options.startingPoint,
    replyType: options === null || options === void 0 ? void 0 : options.replyType
  };
  const passedCollection = (_a2 = options === null || options === void 0 ? void 0 : options.collectionCreator) === null || _a2 === void 0 ? void 0 : _a2.call(options, basicParams);
  if (passedCollection)
    return passedCollection;
  return channel.createMessageCollection(Object.assign(Object.assign({}, basicParams), { filter: new qs$1(basicParams) }));
};
function getCollectionLimitBy(startingPoint) {
  return startingPoint < Date.now() ? sbuConstants.collection.message.searchLimit : sbuConstants.collection.message.defaultLimit;
}
const useGroupChannelMessages = (sdk, channel, options = {}) => {
  var _a2, _b2, _c;
  const internalOptions = useRef(options);
  internalOptions.current = options;
  const channelRef = useRef(channel);
  channelRef.current = channel;
  const logger = internalOptions.current.logger;
  const initialStartingPoint = (_a2 = internalOptions.current.startingPoint) !== null && _a2 !== void 0 ? _a2 : Number.MAX_SAFE_INTEGER;
  const initialLimit = getCollectionLimitBy(initialStartingPoint);
  const isFetching = useRef({ prev: false, next: false });
  const forceUpdate = useForceUpdate();
  const collectionRef = useRef({
    initialized: false,
    apiInitialized: false,
    instance: null
  });
  const { initialized, loading, refreshing, messages, newMessages, updateMessages, updateNewMessages, deleteNewMessages, deleteMessages, updateInitialized, updateLoading, updateRefreshing } = useChannelMessagesReducer(options === null || options === void 0 ? void 0 : options.sortComparator);
  const markAsReadBySource = usePreservedCallback$1((source) => {
    var _a3, _b3, _c2, _d;
    if (!channelRef.current || !channelRef.current.url)
      return (_a3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "[useGroupChannelMessages] channel is required");
    try {
      switch (source) {
        case no.EVENT_MESSAGE_RECEIVED:
        case no.EVENT_MESSAGE_SENT_SUCCESS:
        case no.SYNC_MESSAGE_FILL:
        case void 0:
          (_c2 = (_b3 = internalOptions.current).markAsRead) === null || _c2 === void 0 ? void 0 : _c2.call(_b3, [channelRef.current]);
          break;
      }
    } catch (e3) {
      (_d = logger === null || logger === void 0 ? void 0 : logger.warn) === null || _d === void 0 ? void 0 : _d.call(logger, "[useGroupChannelMessages/markAsReadBySource]", e3);
    }
  });
  const updateNewMessagesReceived = usePreservedCallback$1((source, messages2) => {
    var _a3, _b3, _c2, _d, _e2;
    const incomingMessages = messages2.filter((it2) => {
      var _a4;
      return !isMyMessage(it2, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
    });
    if (incomingMessages.length > 0) {
      switch (source) {
        case no.EVENT_MESSAGE_RECEIVED:
        case no.SYNC_MESSAGE_FILL: {
          if ((_b3 = (_a3 = internalOptions.current).shouldCountNewMessages) === null || _b3 === void 0 ? void 0 : _b3.call(_a3)) {
            updateNewMessages(incomingMessages, false, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          }
          (_e2 = (_d = internalOptions.current).onMessagesReceived) === null || _e2 === void 0 ? void 0 : _e2.call(_d, incomingMessages);
          break;
        }
      }
    }
  });
  const init = usePreservedCallback$1((startingPoint, limit) => __awaiter$2(void 0, void 0, void 0, function* () {
    return new Promise((resolve) => {
      var _a3, _b3;
      if (!channelRef.current || !channelRef.current.url)
        return (_a3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "[useGroupChannelMessages] channel is required");
      if (collectionRef.current.instance)
        collectionRef.current.instance.dispose();
      markAsReadBySource();
      updateNewMessages([], true, (_b3 = sdk.currentUser) === null || _b3 === void 0 ? void 0 : _b3.userId);
      const updateUnsentMessages = () => {
        var _a4, _b4, _c2;
        const { pendingMessages, failedMessages } = (_a4 = collectionRef.current.instance) !== null && _a4 !== void 0 ? _a4 : {};
        if (isNotEmptyArray(pendingMessages))
          updateMessages(pendingMessages, false, (_b4 = sdk.currentUser) === null || _b4 === void 0 ? void 0 : _b4.userId);
        if (isNotEmptyArray(failedMessages))
          updateMessages(failedMessages, false, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
      };
      const collectionInstance = createMessageCollection(channelRef.current, limit, Object.assign(Object.assign({}, internalOptions.current), { startingPoint }));
      collectionRef.current = { apiInitialized: false, initialized: false, instance: collectionInstance };
      collectionInstance.setMessageCollectionHandler({
        onMessagesAdded: (ctx, __, messages2) => {
          var _a4;
          markAsReadBySource(ctx.source);
          updateNewMessagesReceived(ctx.source, messages2);
          updateMessages(messages2, false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        },
        onMessagesUpdated: (ctx, __, messages2) => {
          var _a4, _b4, _c2;
          markAsReadBySource(ctx.source);
          updateNewMessagesReceived(ctx.source, messages2);
          updateMessages(messages2, false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
          if (ctx.source === no.EVENT_MESSAGE_UPDATED) {
            (_c2 = (_b4 = internalOptions.current).onMessagesUpdated) === null || _c2 === void 0 ? void 0 : _c2.call(_b4, messages2);
          }
        },
        onMessagesDeleted: (_2, __, ___, messages2) => {
          const msgIds = messages2.map((it2) => it2.messageId);
          const reqIds = messages2.filter(isSendableMessage$1).map((it2) => it2.reqId);
          deleteMessages(msgIds, reqIds);
          deleteNewMessages(msgIds, reqIds);
        },
        onChannelDeleted: (_2, channelUrl) => {
          var _a4, _b4;
          (_b4 = (_a4 = internalOptions.current).onChannelDeleted) === null || _b4 === void 0 ? void 0 : _b4.call(_a4, channelUrl);
        },
        onChannelUpdated: (_2, channel2) => {
          var _a4, _b4;
          forceUpdate();
          (_b4 = (_a4 = internalOptions.current).onChannelUpdated) === null || _b4 === void 0 ? void 0 : _b4.call(_a4, channel2);
        },
        onHugeGapDetected: () => {
          init(Number.MAX_SAFE_INTEGER, sbuConstants.collection.message.defaultLimit);
        }
      });
      collectionInstance.initialize(ms.CACHE_AND_REPLACE_BY_API).onCacheResult((err, messages2) => {
        var _a4, _b4, _c2;
        if (err)
          sdk.isCacheEnabled && ((_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages/onCacheResult]", err));
        else if (messages2) {
          (_b4 = logger === null || logger === void 0 ? void 0 : logger.debug) === null || _b4 === void 0 ? void 0 : _b4.call(logger, "[useGroupChannelMessages/onCacheResult]", "message length:", messages2.length);
          updateMessages(messages2, true, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          updateUnsentMessages();
          if (messages2.length > 0) {
            collectionRef.current.initialized = true;
            resolve();
          }
        }
      }).onApiResult((err, messages2) => {
        var _a4, _b4, _c2, _d, _e2;
        if (err)
          (_a4 = logger === null || logger === void 0 ? void 0 : logger.warn) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages/onApiResult]", err);
        else if (messages2) {
          (_b4 = logger === null || logger === void 0 ? void 0 : logger.debug) === null || _b4 === void 0 ? void 0 : _b4.call(logger, "[useGroupChannelMessages/onApiResult]", "message length:", messages2.length);
          updateMessages(messages2, true, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          if (!internalOptions.current.startingPoint)
            (_e2 = (_d = internalOptions.current).onMessagesReceived) === null || _e2 === void 0 ? void 0 : _e2.call(_d, messages2);
          if (sdk.isCacheEnabled)
            updateUnsentMessages();
        }
        collectionRef.current.initialized = true;
        collectionRef.current.apiInitialized = true;
        resolve();
      });
    });
  }));
  useGroupChannelHandler(sdk, {
    onUserBanned(eventChannel, bannedUser) {
      var _a3, _b3, _c2;
      if (eventChannel.isGroupChannel() && !isDifferentChannel(eventChannel, channelRef.current)) {
        if (bannedUser.userId === ((_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId)) {
          (_c2 = (_b3 = internalOptions.current).onCurrentUserBanned) === null || _c2 === void 0 ? void 0 : _c2.call(_b3);
        } else {
          forceUpdate();
        }
      }
    }
  });
  useLayoutEffect(() => {
    const timeout = setTimeout(() => __awaiter$2(void 0, void 0, void 0, function* () {
      if (sdk.currentUser && channelRef.current) {
        updateInitialized(false);
        updateLoading(true);
        yield init(initialStartingPoint, initialLimit);
        updateLoading(false);
        updateInitialized(true);
      }
    }));
    return () => clearTimeout(timeout);
  }, [sdk, (_b2 = sdk.currentUser) === null || _b2 === void 0 ? void 0 : _b2.userId, (_c = channelRef.current) === null || _c === void 0 ? void 0 : _c.url, internalOptions.current.replyType]);
  useEffect(() => {
    return () => {
      if (collectionRef.current.instance)
        collectionRef.current.instance.dispose();
    };
  }, []);
  const refresh = usePreservedCallback$1(() => __awaiter$2(void 0, void 0, void 0, function* () {
    if (sdk.currentUser && channelRef.current) {
      updateRefreshing(true);
      yield init(Number.MAX_SAFE_INTEGER, sbuConstants.collection.message.defaultLimit);
      updateRefreshing(false);
    }
  }));
  const loadPrevious = usePreservedCallback$1(() => __awaiter$2(void 0, void 0, void 0, function* () {
    var _d;
    const collection = collectionRef.current.instance;
    if ((collection === null || collection === void 0 ? void 0 : collection.hasPrevious) && !isFetching.current.prev) {
      try {
        isFetching.current.prev = true;
        const list = yield collection.loadPrevious();
        updateMessages(list, false, (_d = sdk.currentUser) === null || _d === void 0 ? void 0 : _d.userId);
      } catch (_e2) {
      } finally {
        isFetching.current.prev = false;
      }
    }
  }));
  const hasPrevious = usePreservedCallback$1(() => {
    const { initialized: initialized2, instance } = collectionRef.current;
    if (initialized2 && instance) {
      return instance.hasPrevious;
    } else {
      return false;
    }
  });
  const loadNext = usePreservedCallback$1(() => __awaiter$2(void 0, void 0, void 0, function* () {
    var _f;
    const collection = collectionRef.current.instance;
    if ((collection === null || collection === void 0 ? void 0 : collection.hasNext) && !isFetching.current.next) {
      try {
        isFetching.current.next = true;
        const list = yield collection.loadNext();
        updateMessages(list, false, (_f = sdk.currentUser) === null || _f === void 0 ? void 0 : _f.userId);
      } catch (_g2) {
      } finally {
        isFetching.current.next = false;
      }
    }
  }));
  const hasNext = usePreservedCallback$1(() => {
    const { initialized: initialized2, apiInitialized, instance } = collectionRef.current;
    if (apiInitialized && initialized2 && instance) {
      return instance.hasNext;
    } else {
      return false;
    }
  });
  const sendUserMessage = usePreservedCallback$1((params, onPending) => {
    var _a3;
    if (!channelRef.current || !channelRef.current.url) {
      (_a3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendUserMessage(params).onPending((pendingMessage) => {
        var _a4;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a4;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a4;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        reject(err);
      });
    });
  });
  const sendFileMessage = usePreservedCallback$1((params, onPending) => {
    var _a3;
    if (!channelRef.current || !channelRef.current.url) {
      (_a3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendFileMessage(params).onPending((pendingMessage) => {
        var _a4;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a4;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a4;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        reject(err);
      });
    });
  });
  const sendFileMessages = usePreservedCallback$1((paramsList, onPending) => __awaiter$2(void 0, void 0, void 0, function* () {
    var _h;
    if (!channelRef.current || !channelRef.current.url) {
      (_h = logger === null || logger === void 0 ? void 0 : logger.error) === null || _h === void 0 ? void 0 : _h.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve) => {
      const messages2 = [];
      channelRef.current.sendFileMessages(paramsList).onPending((pendingMessage) => {
        var _a3;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a3;
        if (sentMessage.isFileMessage() && sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
          messages2.push(sentMessage);
        }
        if (messages2.length === paramsList.length)
          resolve(messages2);
      }).onFailed((_2, failedMessage) => {
        var _a3;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
          messages2.push(failedMessage);
        } else {
          messages2.push(null);
        }
        if (messages2.length === paramsList.length)
          resolve(messages2);
      });
    });
  }));
  const sendMultipleFilesMessage = usePreservedCallback$1((params, onPending) => {
    var _a3;
    if (!channelRef.current || !channelRef.current.url) {
      (_a3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendMultipleFilesMessage(params).onPending((pendingMessage) => {
        var _a4;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onFileUploaded(() => {
        forceUpdate();
      }).onSucceeded((sentMessage) => {
        var _a4;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a4;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        reject(err);
      });
    });
  });
  const updateUserMessage = usePreservedCallback$1((messageId, params) => __awaiter$2(void 0, void 0, void 0, function* () {
    var _j, _k;
    if (!channelRef.current || !channelRef.current.url) {
      (_j = logger === null || logger === void 0 ? void 0 : logger.error) === null || _j === void 0 ? void 0 : _j.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    const updatedMessage = yield channelRef.current.updateUserMessage(messageId, params);
    if (updatedMessage.channelUrl === channelRef.current.url) {
      updateMessages([updatedMessage], false, (_k = sdk.currentUser) === null || _k === void 0 ? void 0 : _k.userId);
    }
    return updatedMessage;
  }));
  const updateFileMessage = usePreservedCallback$1((messageId, params) => __awaiter$2(void 0, void 0, void 0, function* () {
    var _l, _m;
    if (!channelRef.current || !channelRef.current.url) {
      (_l = logger === null || logger === void 0 ? void 0 : logger.error) === null || _l === void 0 ? void 0 : _l.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    const updatedMessage = yield channelRef.current.updateFileMessage(messageId, params);
    if (updatedMessage.channelUrl === channelRef.current.url) {
      updateMessages([updatedMessage], false, (_m = sdk.currentUser) === null || _m === void 0 ? void 0 : _m.userId);
    }
    return updatedMessage;
  }));
  const resendMessage = usePreservedCallback$1((failedMessage) => __awaiter$2(void 0, void 0, void 0, function* () {
    var _o;
    if (!channelRef.current || !channelRef.current.url) {
      (_o = logger === null || logger === void 0 ? void 0 : logger.error) === null || _o === void 0 ? void 0 : _o.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      let handler = void 0;
      if (failedMessage.isUserMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (failedMessage.isFileMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (failedMessage.isMultipleFilesMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (handler) {
        if ("onPending" in handler) {
          handler.onPending((message) => {
            var _a3;
            if (message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
            }
          });
        }
        if ("onFileUploaded" in handler) {
          handler.onFileUploaded(() => {
            forceUpdate();
          });
        }
        if ("onSucceeded" in handler) {
          handler.onSucceeded((message) => {
            var _a3;
            if (message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
            }
            resolve(message);
          });
        }
        if ("onFailed" in handler) {
          handler.onFailed((err, message) => {
            var _a3;
            if (message && message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
            }
            reject(err);
          });
        }
      }
    });
  }));
  const deleteMessage = usePreservedCallback$1((message) => __awaiter$2(void 0, void 0, void 0, function* () {
    var _p, _q;
    if (!channelRef.current || !channelRef.current.url) {
      (_p = logger === null || logger === void 0 ? void 0 : logger.error) === null || _p === void 0 ? void 0 : _p.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    if (message.sendingStatus === "succeeded") {
      if (message.isUserMessage())
        yield channelRef.current.deleteMessage(message);
      if (message.isFileMessage())
        yield channelRef.current.deleteMessage(message);
      if (message.isMultipleFilesMessage())
        yield channelRef.current.deleteMessage(message);
    } else {
      try {
        yield (_q = collectionRef.current.instance) === null || _q === void 0 ? void 0 : _q.removeFailedMessage(message.reqId);
      } finally {
        deleteMessages([message.messageId], [message.reqId]);
      }
    }
  }));
  const resetNewMessages = usePreservedCallback$1(() => {
    var _a3;
    updateNewMessages([], true, (_a3 = sdk.currentUser) === null || _a3 === void 0 ? void 0 : _a3.userId);
  });
  const resetWithStartingPoint = usePreservedCallback$1((startingPoint) => __awaiter$2(void 0, void 0, void 0, function* () {
    var _r2;
    if (sdk.currentUser && channelRef.current) {
      const limit = getCollectionLimitBy(startingPoint);
      updateLoading(true);
      updateMessages([], true, (_r2 = sdk.currentUser) === null || _r2 === void 0 ? void 0 : _r2.userId);
      yield init(startingPoint, limit);
      updateLoading(false);
    }
  }));
  return {
    /**
     * Initialized state, only available on first render
     * */
    initialized,
    /**
     * Loading state, status is changes on first mount or when the resetWithStartingPoint is called.
     * */
    loading,
    /**
     * Refreshing state, status is changes when the refresh is called.
     * */
    refreshing,
    /**
     * Get messages, this state is for render
     * For example, if a user receives a new messages while searching for an old message
     * for this case, new messages will be included here.
     * */
    messages,
    /**
     * If the `shouldCountNewMessages()` is true, only then push in the newMessages state.
     * (Return false for the `shouldCountNewMessages()` if the message scroll is the most recent; otherwise, return true.)
     *
     * A new message means a message that meets the below conditions
     * - Not admin message
     * - Not updated message
     * - Not current user's message
     * */
    newMessages,
    /**
     * Reset new message list
     * @return {void}
     * */
    resetNewMessages,
    /**
     * Reset message list and create a new collection for latest messages
     * @return {Promise<void>}
     * */
    refresh,
    /**
     * Load previous messages to state
     * @return {Promise<void>}
     * */
    loadPrevious,
    /**
     * Check if there are more previous messages to fetch
     * @return {boolean}
     * */
    hasPrevious,
    /**
     * Load next messages to state
     * @return {Promise<void>}
     * */
    loadNext,
    /**
     * Check if there are more next messages to fetch
     * @return {boolean}
     * */
    hasNext,
    /**
     * Send user message
     * @param {UserMessageCreateParams} params user message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<UserMessage>} succeeded message
     * */
    sendUserMessage,
    /**
     * Send file message
     * @param {FileMessageCreateParams} params file message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<FileMessage>} succeeded message
     * */
    sendFileMessage,
    /**
     * Send file messages
     * @param {FileMessageCreateParams[]} paramList file message create params
     * @param {function} [onPending] pending message callback for each message request
     * @return {Promise<FileMessage[]>} succeeded or failed message
     * */
    sendFileMessages,
    /**
     * Send multiple files message
     * @param {MultipleFilesMessageCreateParams} params multiple files message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<MultipleFilesMessage>} succeeded message
     * */
    sendMultipleFilesMessage,
    /**
     * Update user message
     * @param {number} messageId
     * @param {UserMessageUpdateParams} params user message update params
     * @return {Promise<UserMessage>}
     * */
    updateUserMessage,
    /**
     * Update file message
     * @param {number} messageId
     * @param {FileMessageUpdateParams} params file message update params
     * @return {Promise<FileMessage>}
     * */
    updateFileMessage,
    /**
     * Resend failed message
     * @template {UserMessage | FileMessage | MultipleFilesMessage} T
     * @param {T} failedMessage message to resend
     * @return {Promise<T>}
     * */
    resendMessage,
    /**
     * Delete a message
     * @template {UserMessage | FileMessage | MultipleFilesMessage} T
     * @param {T} message succeeded or failed message
     * @return {Promise<void>}
     * */
    deleteMessage,
    /**
     * Reset message list and create a new collection with starting point
     * @param {number} startingPoint
     * @param {function} callback
     * @return {void}
     * */
    resetWithStartingPoint,
    /**
     * Do not use this api
     * */
    _dangerous_reducer_updateMessages: updateMessages,
    /**
     * Do not use this api
     * */
    _dangerous_reducer_deleteMessages: deleteMessages
  };
};
(function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
});
(function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e3) {
        reject(e3);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e3) {
        reject(e3);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
});
const useIIFE = (callback) => {
  return iife(callback);
};
const iife = (callback) => typeof callback === "function" && callback();
function mergeObject(target, subset) {
  const object = Object.assign({}, target);
  Object.keys(subset).forEach((key) => {
    if (Object.prototype.hasOwnProperty.call(object, key) && isSameType(object[key], subset[key])) {
      if (typeof subset[key] === "object" && !Array.isArray(subset[key])) {
        object[key] = mergeObject(object[key], subset[key]);
      } else {
        object[key] = subset[key];
      }
    }
  });
  return object;
}
const createInitialConfig = () => ({
  common: {
    enableUsingDefaultUserProfile: false
  },
  groupChannel: {
    channel: {
      enableMention: false,
      enableOgtag: true,
      enableReactions: true,
      enableReactionsSupergroup: false,
      enableTypingIndicator: true,
      enableVoiceMessage: false,
      input: {
        camera: {
          enablePhoto: true,
          enableVideo: true
        },
        enableDocument: true,
        gallery: {
          enablePhoto: true,
          enableVideo: true
        }
      },
      replyType: "quote_reply",
      threadReplySelectType: "thread",
      typingIndicatorTypes: /* @__PURE__ */ new Set(["text"]),
      enableFeedback: false,
      enableSuggestedReplies: false,
      showSuggestedRepliesFor: "last_message_only",
      suggestedRepliesDirection: "vertical",
      enableMarkdownForUserMessage: false,
      enableFormTypeMessage: false
    },
    channelList: {
      enableMessageReceiptStatus: false,
      enableTypingIndicator: false
    },
    setting: {
      enableMessageSearch: false
    }
  },
  openChannel: {
    channel: {
      enableOgtag: true,
      input: {
        camera: {
          enablePhoto: true,
          enableVideo: true
        },
        enableDocument: true,
        gallery: {
          enablePhoto: true,
          enableVideo: true
        }
      }
    }
  }
});
function deleteLocalConfigs(config2) {
  delete config2.groupChannel.channel.typingIndicatorTypes;
  delete config2.groupChannel.channel.enableFeedback;
  delete config2.groupChannel.channel.enableSuggestedReplies;
  delete config2.groupChannel.channel.showSuggestedRepliesFor;
  delete config2.groupChannel.channel.suggestedRepliesDirection;
  delete config2.groupChannel.channel.enableMarkdownForUserMessage;
  delete config2.groupChannel.channel.enableFormTypeMessage;
  return config2;
}
const createInitialRemoteConfig = () => {
  const config2 = createInitialConfig();
  return deleteLocalConfigs(config2);
};
const initialConfig = createInitialConfig();
const initialRemoteConfig = createInitialRemoteConfig();
var __awaiter$1 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e3) {
        reject(e3);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e3) {
        reject(e3);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const MemoryStorage = {
  items: {},
  getItem(key) {
    var _a2;
    return __awaiter$1(this, void 0, void 0, function* () {
      return (_a2 = MemoryStorage.items[key]) !== null && _a2 !== void 0 ? _a2 : null;
    });
  },
  setItem(key, value) {
    return __awaiter$1(this, void 0, void 0, function* () {
      MemoryStorage.items[key] = value;
    });
  }
};
class UIKitConfigManager {
  constructor(storage) {
    this.storage = storage !== null && storage !== void 0 ? storage : MemoryStorage;
  }
  init(appId) {
    this.key = `sbu@${appId}.uikitConfiguration`;
    return this.get();
  }
  get safeKey() {
    if (!this.key)
      throw new Error("Please UIKitConfigManager.init() first");
    return this.key;
  }
  update(remoteConfigPayload) {
    return __awaiter$1(this, void 0, void 0, function* () {
      const storedConfigPayload = yield this.get();
      const mergedConfigPayload = {
        updatedAt: remoteConfigPayload.updatedAt,
        configuration: mergeObject(storedConfigPayload.configuration, remoteConfigPayload.configuration)
      };
      yield this.storage.setItem(this.safeKey, JSON.stringify(mergedConfigPayload));
      return mergedConfigPayload;
    });
  }
  get() {
    return __awaiter$1(this, void 0, void 0, function* () {
      const initialPayload = {
        updatedAt: 0,
        configuration: initialRemoteConfig
      };
      try {
        const storedConfig = yield this.storage.getItem(this.safeKey);
        if (storedConfig) {
          return JSON.parse(storedConfig);
        } else {
          return initialPayload;
        }
      } catch (_a2) {
        return initialPayload;
      }
    });
  }
}
function updateCommonConfigs(target, local, remote) {
  var _a2, _b2;
  if (remote.common && isBoolean((_a2 = remote.common) === null || _a2 === void 0 ? void 0 : _a2.enableUsingDefaultUserProfile)) {
    target.enableUsingDefaultUserProfile = remote.common.enableUsingDefaultUserProfile;
  }
  if (local.common && isBoolean((_b2 = local.common) === null || _b2 === void 0 ? void 0 : _b2.enableUsingDefaultUserProfile)) {
    target.enableUsingDefaultUserProfile = local.common.enableUsingDefaultUserProfile;
  }
}
function updateGroupChannelConfigs(target, local, remote) {
  updateChannelConfig$1(target, local, remote);
  updateChannelInputConfig$1(target, local, remote);
  updateChannelListConfig(target, local, remote);
  updateChannelSettingConfig(target, local, remote);
}
function updateChannelConfig$1(target, local, remote) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r2, _s2, _t2, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86;
  if (((_a2 = remote.groupChannel) === null || _a2 === void 0 ? void 0 : _a2.channel) && isBoolean((_c = (_b2 = remote.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.channel) === null || _c === void 0 ? void 0 : _c.enableOgtag)) {
    target.channel.enableOgtag = remote.groupChannel.channel.enableOgtag;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.channel) && isBoolean((_f = (_e2 = local.groupChannel) === null || _e2 === void 0 ? void 0 : _e2.channel) === null || _f === void 0 ? void 0 : _f.enableOgtag)) {
    target.channel.enableOgtag = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.channel) === null || _h === void 0 ? void 0 : _h.enableOgtag;
  }
  if (((_j = remote.groupChannel) === null || _j === void 0 ? void 0 : _j.channel) && isBoolean((_l = (_k = remote.groupChannel) === null || _k === void 0 ? void 0 : _k.channel) === null || _l === void 0 ? void 0 : _l.enableTypingIndicator)) {
    target.channel.enableTypingIndicator = (_o = (_m = remote.groupChannel) === null || _m === void 0 ? void 0 : _m.channel) === null || _o === void 0 ? void 0 : _o.enableTypingIndicator;
  }
  if (((_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channel) && isBoolean((_r2 = (_q = local.groupChannel) === null || _q === void 0 ? void 0 : _q.channel) === null || _r2 === void 0 ? void 0 : _r2.enableTypingIndicator)) {
    target.channel.enableTypingIndicator = (_t2 = (_s2 = local.groupChannel) === null || _s2 === void 0 ? void 0 : _s2.channel) === null || _t2 === void 0 ? void 0 : _t2.enableTypingIndicator;
  }
  if (((_u = remote.groupChannel) === null || _u === void 0 ? void 0 : _u.channel) && isBoolean((_w = (_v = remote.groupChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.enableReactions)) {
    target.channel.enableReactions = (_y = (_x = remote.groupChannel) === null || _x === void 0 ? void 0 : _x.channel) === null || _y === void 0 ? void 0 : _y.enableReactions;
  }
  if (((_z = local.groupChannel) === null || _z === void 0 ? void 0 : _z.channel) && isBoolean((_1 = (_0 = local.groupChannel) === null || _0 === void 0 ? void 0 : _0.channel) === null || _1 === void 0 ? void 0 : _1.enableReactions)) {
    target.channel.enableReactions = (_3 = (_2 = local.groupChannel) === null || _2 === void 0 ? void 0 : _2.channel) === null || _3 === void 0 ? void 0 : _3.enableReactions;
  }
  if (((_4 = remote.groupChannel) === null || _4 === void 0 ? void 0 : _4.channel) && isBoolean((_6 = (_5 = remote.groupChannel) === null || _5 === void 0 ? void 0 : _5.channel) === null || _6 === void 0 ? void 0 : _6.enableReactionsSupergroup)) {
    target.channel.enableReactionsSupergroup = (_8 = (_7 = remote.groupChannel) === null || _7 === void 0 ? void 0 : _7.channel) === null || _8 === void 0 ? void 0 : _8.enableReactionsSupergroup;
  }
  if (((_9 = local.groupChannel) === null || _9 === void 0 ? void 0 : _9.channel) && isBoolean((_11 = (_10 = local.groupChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.enableReactionsSupergroup)) {
    console.warn("Currently, EnableReactionsSupergroup feature is turned off by default. If you wish to use this feature, contact us: https://dashboard.sendbird.com/settings/contact_us?category=feedback_and_feature_requests&product=UIKit");
  }
  if (((_12 = remote.groupChannel) === null || _12 === void 0 ? void 0 : _12.channel) && isBoolean((_14 = (_13 = remote.groupChannel) === null || _13 === void 0 ? void 0 : _13.channel) === null || _14 === void 0 ? void 0 : _14.enableMention)) {
    target.channel.enableMention = (_16 = (_15 = remote.groupChannel) === null || _15 === void 0 ? void 0 : _15.channel) === null || _16 === void 0 ? void 0 : _16.enableMention;
  }
  if (((_17 = local.groupChannel) === null || _17 === void 0 ? void 0 : _17.channel) && isBoolean((_19 = (_18 = local.groupChannel) === null || _18 === void 0 ? void 0 : _18.channel) === null || _19 === void 0 ? void 0 : _19.enableMention)) {
    target.channel.enableMention = (_21 = (_20 = local.groupChannel) === null || _20 === void 0 ? void 0 : _20.channel) === null || _21 === void 0 ? void 0 : _21.enableMention;
  }
  if (((_22 = remote.groupChannel) === null || _22 === void 0 ? void 0 : _22.channel) && isOneOf((_24 = (_23 = remote.groupChannel) === null || _23 === void 0 ? void 0 : _23.channel) === null || _24 === void 0 ? void 0 : _24.replyType, ["none", "quote_reply", "thread"])) {
    target.channel.replyType = (_26 = (_25 = remote.groupChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.replyType;
  }
  if (((_27 = local.groupChannel) === null || _27 === void 0 ? void 0 : _27.channel) && isOneOf((_29 = (_28 = local.groupChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.replyType, ["none", "quote_reply", "thread"])) {
    target.channel.replyType = (_31 = (_30 = local.groupChannel) === null || _30 === void 0 ? void 0 : _30.channel) === null || _31 === void 0 ? void 0 : _31.replyType;
  }
  if (((_32 = remote.groupChannel) === null || _32 === void 0 ? void 0 : _32.channel) && isOneOf((_34 = (_33 = remote.groupChannel) === null || _33 === void 0 ? void 0 : _33.channel) === null || _34 === void 0 ? void 0 : _34.threadReplySelectType, ["thread", "parent"])) {
    target.channel.threadReplySelectType = (_36 = (_35 = remote.groupChannel) === null || _35 === void 0 ? void 0 : _35.channel) === null || _36 === void 0 ? void 0 : _36.threadReplySelectType;
  }
  if (((_37 = local.groupChannel) === null || _37 === void 0 ? void 0 : _37.channel) && isOneOf((_39 = (_38 = local.groupChannel) === null || _38 === void 0 ? void 0 : _38.channel) === null || _39 === void 0 ? void 0 : _39.threadReplySelectType, ["thread", "parent"])) {
    target.channel.threadReplySelectType = (_41 = (_40 = local.groupChannel) === null || _40 === void 0 ? void 0 : _40.channel) === null || _41 === void 0 ? void 0 : _41.threadReplySelectType;
  }
  if (((_42 = remote.groupChannel) === null || _42 === void 0 ? void 0 : _42.channel) && isBoolean((_44 = (_43 = remote.groupChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.enableVoiceMessage)) {
    target.channel.enableVoiceMessage = (_46 = (_45 = remote.groupChannel) === null || _45 === void 0 ? void 0 : _45.channel) === null || _46 === void 0 ? void 0 : _46.enableVoiceMessage;
  }
  if (((_47 = local.groupChannel) === null || _47 === void 0 ? void 0 : _47.channel) && isBoolean((_49 = (_48 = local.groupChannel) === null || _48 === void 0 ? void 0 : _48.channel) === null || _49 === void 0 ? void 0 : _49.enableVoiceMessage)) {
    target.channel.enableVoiceMessage = (_51 = (_50 = local.groupChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.enableVoiceMessage;
  }
  if (((_52 = local.groupChannel) === null || _52 === void 0 ? void 0 : _52.channel) && isSet((_54 = (_53 = local.groupChannel) === null || _53 === void 0 ? void 0 : _53.channel) === null || _54 === void 0 ? void 0 : _54.typingIndicatorTypes)) {
    target.channel.typingIndicatorTypes = (_56 = (_55 = local.groupChannel) === null || _55 === void 0 ? void 0 : _55.channel) === null || _56 === void 0 ? void 0 : _56.typingIndicatorTypes;
  }
  if (((_57 = local.groupChannel) === null || _57 === void 0 ? void 0 : _57.channel) && isBoolean((_59 = (_58 = local.groupChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.enableFeedback)) {
    target.channel.enableFeedback = (_61 = (_60 = local.groupChannel) === null || _60 === void 0 ? void 0 : _60.channel) === null || _61 === void 0 ? void 0 : _61.enableFeedback;
  }
  if (((_62 = local.groupChannel) === null || _62 === void 0 ? void 0 : _62.channel) && isBoolean((_64 = (_63 = local.groupChannel) === null || _63 === void 0 ? void 0 : _63.channel) === null || _64 === void 0 ? void 0 : _64.enableSuggestedReplies)) {
    target.channel.enableSuggestedReplies = (_66 = (_65 = local.groupChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.enableSuggestedReplies;
  }
  if (((_67 = local.groupChannel) === null || _67 === void 0 ? void 0 : _67.channel) && isOneOf((_69 = (_68 = local.groupChannel) === null || _68 === void 0 ? void 0 : _68.channel) === null || _69 === void 0 ? void 0 : _69.showSuggestedRepliesFor, ["all_messages", "last_message_only"])) {
    target.channel.showSuggestedRepliesFor = (_71 = (_70 = local.groupChannel) === null || _70 === void 0 ? void 0 : _70.channel) === null || _71 === void 0 ? void 0 : _71.showSuggestedRepliesFor;
  }
  if (((_72 = local.groupChannel) === null || _72 === void 0 ? void 0 : _72.channel) && isOneOf((_74 = (_73 = local.groupChannel) === null || _73 === void 0 ? void 0 : _73.channel) === null || _74 === void 0 ? void 0 : _74.suggestedRepliesDirection, ["vertical", "horizontal"])) {
    target.channel.suggestedRepliesDirection = (_76 = (_75 = local.groupChannel) === null || _75 === void 0 ? void 0 : _75.channel) === null || _76 === void 0 ? void 0 : _76.suggestedRepliesDirection;
  }
  if (((_77 = local.groupChannel) === null || _77 === void 0 ? void 0 : _77.channel) && isBoolean((_79 = (_78 = local.groupChannel) === null || _78 === void 0 ? void 0 : _78.channel) === null || _79 === void 0 ? void 0 : _79.enableMarkdownForUserMessage)) {
    target.channel.enableMarkdownForUserMessage = (_81 = (_80 = local.groupChannel) === null || _80 === void 0 ? void 0 : _80.channel) === null || _81 === void 0 ? void 0 : _81.enableMarkdownForUserMessage;
  }
  if (((_82 = local.groupChannel) === null || _82 === void 0 ? void 0 : _82.channel) && isBoolean((_84 = (_83 = local.groupChannel) === null || _83 === void 0 ? void 0 : _83.channel) === null || _84 === void 0 ? void 0 : _84.enableFormTypeMessage)) {
    target.channel.enableFormTypeMessage = (_86 = (_85 = local.groupChannel) === null || _85 === void 0 ? void 0 : _85.channel) === null || _86 === void 0 ? void 0 : _86.enableFormTypeMessage;
  }
}
function updateChannelInputConfig$1(target, local, remote) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r2, _s2, _t2, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79;
  if (((_b2 = (_a2 = remote.groupChannel) === null || _a2 === void 0 ? void 0 : _a2.channel) === null || _b2 === void 0 ? void 0 : _b2.input) && isBoolean((_e2 = (_d = (_c = remote.groupChannel) === null || _c === void 0 ? void 0 : _c.channel) === null || _d === void 0 ? void 0 : _d.input) === null || _e2 === void 0 ? void 0 : _e2.enableDocument)) {
    target.channel.input.enableDocument = (_h = (_g2 = (_f = remote.groupChannel) === null || _f === void 0 ? void 0 : _f.channel) === null || _g2 === void 0 ? void 0 : _g2.input) === null || _h === void 0 ? void 0 : _h.enableDocument;
  }
  if (((_k = (_j = local.groupChannel) === null || _j === void 0 ? void 0 : _j.channel) === null || _k === void 0 ? void 0 : _k.input) && isBoolean((_o = (_m = (_l = local.groupChannel) === null || _l === void 0 ? void 0 : _l.channel) === null || _m === void 0 ? void 0 : _m.input) === null || _o === void 0 ? void 0 : _o.enableDocument)) {
    target.channel.input.enableDocument = (_r2 = (_q = (_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channel) === null || _q === void 0 ? void 0 : _q.input) === null || _r2 === void 0 ? void 0 : _r2.enableDocument;
  }
  if (((_u = (_t2 = (_s2 = remote.groupChannel) === null || _s2 === void 0 ? void 0 : _s2.channel) === null || _t2 === void 0 ? void 0 : _t2.input) === null || _u === void 0 ? void 0 : _u.camera) && isBoolean((_y = (_x = (_w = (_v = remote.groupChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.input) === null || _x === void 0 ? void 0 : _x.camera) === null || _y === void 0 ? void 0 : _y.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_2 = (_1 = (_0 = (_z = remote.groupChannel) === null || _z === void 0 ? void 0 : _z.channel) === null || _0 === void 0 ? void 0 : _0.input) === null || _1 === void 0 ? void 0 : _1.camera) === null || _2 === void 0 ? void 0 : _2.enablePhoto;
  }
  if (((_5 = (_4 = (_3 = local.groupChannel) === null || _3 === void 0 ? void 0 : _3.channel) === null || _4 === void 0 ? void 0 : _4.input) === null || _5 === void 0 ? void 0 : _5.camera) && isBoolean((_9 = (_8 = (_7 = (_6 = local.groupChannel) === null || _6 === void 0 ? void 0 : _6.channel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.camera) === null || _9 === void 0 ? void 0 : _9.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_13 = (_12 = (_11 = (_10 = local.groupChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.input) === null || _12 === void 0 ? void 0 : _12.camera) === null || _13 === void 0 ? void 0 : _13.enablePhoto;
  }
  if (((_16 = (_15 = (_14 = remote.groupChannel) === null || _14 === void 0 ? void 0 : _14.channel) === null || _15 === void 0 ? void 0 : _15.input) === null || _16 === void 0 ? void 0 : _16.camera) && isBoolean((_20 = (_19 = (_18 = (_17 = remote.groupChannel) === null || _17 === void 0 ? void 0 : _17.channel) === null || _18 === void 0 ? void 0 : _18.input) === null || _19 === void 0 ? void 0 : _19.camera) === null || _20 === void 0 ? void 0 : _20.enableVideo)) {
    target.channel.input.camera.enableVideo = (_24 = (_23 = (_22 = (_21 = remote.groupChannel) === null || _21 === void 0 ? void 0 : _21.channel) === null || _22 === void 0 ? void 0 : _22.input) === null || _23 === void 0 ? void 0 : _23.camera) === null || _24 === void 0 ? void 0 : _24.enableVideo;
  }
  if (((_27 = (_26 = (_25 = local.groupChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.input) === null || _27 === void 0 ? void 0 : _27.camera) && isBoolean((_31 = (_30 = (_29 = (_28 = local.groupChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.input) === null || _30 === void 0 ? void 0 : _30.camera) === null || _31 === void 0 ? void 0 : _31.enableVideo)) {
    target.channel.input.camera.enableVideo = (_35 = (_34 = (_33 = (_32 = local.groupChannel) === null || _32 === void 0 ? void 0 : _32.channel) === null || _33 === void 0 ? void 0 : _33.input) === null || _34 === void 0 ? void 0 : _34.camera) === null || _35 === void 0 ? void 0 : _35.enableVideo;
  }
  if (((_38 = (_37 = (_36 = remote.groupChannel) === null || _36 === void 0 ? void 0 : _36.channel) === null || _37 === void 0 ? void 0 : _37.input) === null || _38 === void 0 ? void 0 : _38.gallery) && isBoolean((_42 = (_41 = (_40 = (_39 = remote.groupChannel) === null || _39 === void 0 ? void 0 : _39.channel) === null || _40 === void 0 ? void 0 : _40.input) === null || _41 === void 0 ? void 0 : _41.gallery) === null || _42 === void 0 ? void 0 : _42.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_46 = (_45 = (_44 = (_43 = remote.groupChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.input) === null || _45 === void 0 ? void 0 : _45.gallery) === null || _46 === void 0 ? void 0 : _46.enablePhoto;
  }
  if (((_49 = (_48 = (_47 = local.groupChannel) === null || _47 === void 0 ? void 0 : _47.channel) === null || _48 === void 0 ? void 0 : _48.input) === null || _49 === void 0 ? void 0 : _49.gallery) && isBoolean((_53 = (_52 = (_51 = (_50 = local.groupChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.input) === null || _52 === void 0 ? void 0 : _52.gallery) === null || _53 === void 0 ? void 0 : _53.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_57 = (_56 = (_55 = (_54 = local.groupChannel) === null || _54 === void 0 ? void 0 : _54.channel) === null || _55 === void 0 ? void 0 : _55.input) === null || _56 === void 0 ? void 0 : _56.gallery) === null || _57 === void 0 ? void 0 : _57.enablePhoto;
  }
  if (((_60 = (_59 = (_58 = remote.groupChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.input) === null || _60 === void 0 ? void 0 : _60.gallery) && isBoolean((_64 = (_63 = (_62 = (_61 = remote.groupChannel) === null || _61 === void 0 ? void 0 : _61.channel) === null || _62 === void 0 ? void 0 : _62.input) === null || _63 === void 0 ? void 0 : _63.gallery) === null || _64 === void 0 ? void 0 : _64.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_68 = (_67 = (_66 = (_65 = remote.groupChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.input) === null || _67 === void 0 ? void 0 : _67.gallery) === null || _68 === void 0 ? void 0 : _68.enableVideo;
  }
  if (((_71 = (_70 = (_69 = local.groupChannel) === null || _69 === void 0 ? void 0 : _69.channel) === null || _70 === void 0 ? void 0 : _70.input) === null || _71 === void 0 ? void 0 : _71.gallery) && isBoolean((_75 = (_74 = (_73 = (_72 = local.groupChannel) === null || _72 === void 0 ? void 0 : _72.channel) === null || _73 === void 0 ? void 0 : _73.input) === null || _74 === void 0 ? void 0 : _74.gallery) === null || _75 === void 0 ? void 0 : _75.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_79 = (_78 = (_77 = (_76 = local.groupChannel) === null || _76 === void 0 ? void 0 : _76.channel) === null || _77 === void 0 ? void 0 : _77.input) === null || _78 === void 0 ? void 0 : _78.gallery) === null || _79 === void 0 ? void 0 : _79.enableVideo;
  }
}
function updateChannelListConfig(target, local, remote) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r2, _s2, _t2;
  if (((_a2 = remote.groupChannel) === null || _a2 === void 0 ? void 0 : _a2.channelList) && isBoolean((_c = (_b2 = remote.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.channelList) === null || _c === void 0 ? void 0 : _c.enableTypingIndicator)) {
    target.channelList.enableTypingIndicator = remote.groupChannel.channelList.enableTypingIndicator;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.channelList) && isBoolean((_f = (_e2 = local.groupChannel) === null || _e2 === void 0 ? void 0 : _e2.channelList) === null || _f === void 0 ? void 0 : _f.enableTypingIndicator)) {
    target.channelList.enableTypingIndicator = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.channelList) === null || _h === void 0 ? void 0 : _h.enableTypingIndicator;
  }
  if (((_j = remote.groupChannel) === null || _j === void 0 ? void 0 : _j.channelList) && isBoolean((_l = (_k = remote.groupChannel) === null || _k === void 0 ? void 0 : _k.channelList) === null || _l === void 0 ? void 0 : _l.enableMessageReceiptStatus)) {
    target.channelList.enableMessageReceiptStatus = (_o = (_m = remote.groupChannel) === null || _m === void 0 ? void 0 : _m.channelList) === null || _o === void 0 ? void 0 : _o.enableMessageReceiptStatus;
  }
  if (((_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channelList) && isBoolean((_r2 = (_q = local.groupChannel) === null || _q === void 0 ? void 0 : _q.channelList) === null || _r2 === void 0 ? void 0 : _r2.enableMessageReceiptStatus)) {
    target.channelList.enableMessageReceiptStatus = (_t2 = (_s2 = local.groupChannel) === null || _s2 === void 0 ? void 0 : _s2.channelList) === null || _t2 === void 0 ? void 0 : _t2.enableMessageReceiptStatus;
  }
}
function updateChannelSettingConfig(target, local, remote) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h;
  if (((_a2 = remote.groupChannel) === null || _a2 === void 0 ? void 0 : _a2.setting) && isBoolean((_c = (_b2 = remote.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.setting) === null || _c === void 0 ? void 0 : _c.enableMessageSearch)) {
    target.setting.enableMessageSearch = remote.groupChannel.setting.enableMessageSearch;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.setting) && isBoolean((_f = (_e2 = local.groupChannel) === null || _e2 === void 0 ? void 0 : _e2.setting) === null || _f === void 0 ? void 0 : _f.enableMessageSearch)) {
    target.setting.enableMessageSearch = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.setting) === null || _h === void 0 ? void 0 : _h.enableMessageSearch;
  }
}
function updateOpenChannelConfigs(target, local, remote) {
  updateChannelConfig(target, local, remote);
  updateChannelInputConfig(target, local, remote);
}
function updateChannelConfig(target, local, remote) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h;
  if (((_a2 = remote.openChannel) === null || _a2 === void 0 ? void 0 : _a2.channel) && isBoolean((_c = (_b2 = remote.openChannel) === null || _b2 === void 0 ? void 0 : _b2.channel) === null || _c === void 0 ? void 0 : _c.enableOgtag)) {
    target.channel.enableOgtag = remote.openChannel.channel.enableOgtag;
  }
  if (((_d = local.openChannel) === null || _d === void 0 ? void 0 : _d.channel) && isBoolean((_f = (_e2 = local.openChannel) === null || _e2 === void 0 ? void 0 : _e2.channel) === null || _f === void 0 ? void 0 : _f.enableOgtag)) {
    target.channel.enableOgtag = (_h = (_g2 = local.openChannel) === null || _g2 === void 0 ? void 0 : _g2.channel) === null || _h === void 0 ? void 0 : _h.enableOgtag;
  }
}
function updateChannelInputConfig(target, local, remote) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r2, _s2, _t2, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79;
  if (((_b2 = (_a2 = remote.openChannel) === null || _a2 === void 0 ? void 0 : _a2.channel) === null || _b2 === void 0 ? void 0 : _b2.input) && isBoolean((_e2 = (_d = (_c = remote.openChannel) === null || _c === void 0 ? void 0 : _c.channel) === null || _d === void 0 ? void 0 : _d.input) === null || _e2 === void 0 ? void 0 : _e2.enableDocument)) {
    target.channel.input.enableDocument = (_h = (_g2 = (_f = remote.openChannel) === null || _f === void 0 ? void 0 : _f.channel) === null || _g2 === void 0 ? void 0 : _g2.input) === null || _h === void 0 ? void 0 : _h.enableDocument;
  }
  if (((_k = (_j = local.openChannel) === null || _j === void 0 ? void 0 : _j.channel) === null || _k === void 0 ? void 0 : _k.input) && isBoolean((_o = (_m = (_l = local.openChannel) === null || _l === void 0 ? void 0 : _l.channel) === null || _m === void 0 ? void 0 : _m.input) === null || _o === void 0 ? void 0 : _o.enableDocument)) {
    target.channel.input.enableDocument = (_r2 = (_q = (_p = local.openChannel) === null || _p === void 0 ? void 0 : _p.channel) === null || _q === void 0 ? void 0 : _q.input) === null || _r2 === void 0 ? void 0 : _r2.enableDocument;
  }
  if (((_u = (_t2 = (_s2 = remote.openChannel) === null || _s2 === void 0 ? void 0 : _s2.channel) === null || _t2 === void 0 ? void 0 : _t2.input) === null || _u === void 0 ? void 0 : _u.camera) && isBoolean((_y = (_x = (_w = (_v = remote.openChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.input) === null || _x === void 0 ? void 0 : _x.camera) === null || _y === void 0 ? void 0 : _y.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_2 = (_1 = (_0 = (_z = remote.openChannel) === null || _z === void 0 ? void 0 : _z.channel) === null || _0 === void 0 ? void 0 : _0.input) === null || _1 === void 0 ? void 0 : _1.camera) === null || _2 === void 0 ? void 0 : _2.enablePhoto;
  }
  if (((_5 = (_4 = (_3 = local.openChannel) === null || _3 === void 0 ? void 0 : _3.channel) === null || _4 === void 0 ? void 0 : _4.input) === null || _5 === void 0 ? void 0 : _5.camera) && isBoolean((_9 = (_8 = (_7 = (_6 = local.openChannel) === null || _6 === void 0 ? void 0 : _6.channel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.camera) === null || _9 === void 0 ? void 0 : _9.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_13 = (_12 = (_11 = (_10 = local.openChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.input) === null || _12 === void 0 ? void 0 : _12.camera) === null || _13 === void 0 ? void 0 : _13.enablePhoto;
  }
  if (((_16 = (_15 = (_14 = remote.openChannel) === null || _14 === void 0 ? void 0 : _14.channel) === null || _15 === void 0 ? void 0 : _15.input) === null || _16 === void 0 ? void 0 : _16.camera) && isBoolean((_20 = (_19 = (_18 = (_17 = remote.openChannel) === null || _17 === void 0 ? void 0 : _17.channel) === null || _18 === void 0 ? void 0 : _18.input) === null || _19 === void 0 ? void 0 : _19.camera) === null || _20 === void 0 ? void 0 : _20.enableVideo)) {
    target.channel.input.camera.enableVideo = (_24 = (_23 = (_22 = (_21 = remote.openChannel) === null || _21 === void 0 ? void 0 : _21.channel) === null || _22 === void 0 ? void 0 : _22.input) === null || _23 === void 0 ? void 0 : _23.camera) === null || _24 === void 0 ? void 0 : _24.enableVideo;
  }
  if (((_27 = (_26 = (_25 = local.openChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.input) === null || _27 === void 0 ? void 0 : _27.camera) && isBoolean((_31 = (_30 = (_29 = (_28 = local.openChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.input) === null || _30 === void 0 ? void 0 : _30.camera) === null || _31 === void 0 ? void 0 : _31.enableVideo)) {
    target.channel.input.camera.enableVideo = (_35 = (_34 = (_33 = (_32 = local.openChannel) === null || _32 === void 0 ? void 0 : _32.channel) === null || _33 === void 0 ? void 0 : _33.input) === null || _34 === void 0 ? void 0 : _34.camera) === null || _35 === void 0 ? void 0 : _35.enableVideo;
  }
  if (((_38 = (_37 = (_36 = remote.openChannel) === null || _36 === void 0 ? void 0 : _36.channel) === null || _37 === void 0 ? void 0 : _37.input) === null || _38 === void 0 ? void 0 : _38.gallery) && isBoolean((_42 = (_41 = (_40 = (_39 = remote.openChannel) === null || _39 === void 0 ? void 0 : _39.channel) === null || _40 === void 0 ? void 0 : _40.input) === null || _41 === void 0 ? void 0 : _41.gallery) === null || _42 === void 0 ? void 0 : _42.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_46 = (_45 = (_44 = (_43 = remote.openChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.input) === null || _45 === void 0 ? void 0 : _45.gallery) === null || _46 === void 0 ? void 0 : _46.enablePhoto;
  }
  if (((_49 = (_48 = (_47 = local.openChannel) === null || _47 === void 0 ? void 0 : _47.channel) === null || _48 === void 0 ? void 0 : _48.input) === null || _49 === void 0 ? void 0 : _49.gallery) && isBoolean((_53 = (_52 = (_51 = (_50 = local.openChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.input) === null || _52 === void 0 ? void 0 : _52.gallery) === null || _53 === void 0 ? void 0 : _53.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_57 = (_56 = (_55 = (_54 = local.openChannel) === null || _54 === void 0 ? void 0 : _54.channel) === null || _55 === void 0 ? void 0 : _55.input) === null || _56 === void 0 ? void 0 : _56.gallery) === null || _57 === void 0 ? void 0 : _57.enablePhoto;
  }
  if (((_60 = (_59 = (_58 = remote.openChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.input) === null || _60 === void 0 ? void 0 : _60.gallery) && isBoolean((_64 = (_63 = (_62 = (_61 = remote.openChannel) === null || _61 === void 0 ? void 0 : _61.channel) === null || _62 === void 0 ? void 0 : _62.input) === null || _63 === void 0 ? void 0 : _63.gallery) === null || _64 === void 0 ? void 0 : _64.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_68 = (_67 = (_66 = (_65 = remote.openChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.input) === null || _67 === void 0 ? void 0 : _67.gallery) === null || _68 === void 0 ? void 0 : _68.enableVideo;
  }
  if (((_71 = (_70 = (_69 = local.openChannel) === null || _69 === void 0 ? void 0 : _69.channel) === null || _70 === void 0 ? void 0 : _70.input) === null || _71 === void 0 ? void 0 : _71.gallery) && isBoolean((_75 = (_74 = (_73 = (_72 = local.openChannel) === null || _72 === void 0 ? void 0 : _72.channel) === null || _73 === void 0 ? void 0 : _73.input) === null || _74 === void 0 ? void 0 : _74.gallery) === null || _75 === void 0 ? void 0 : _75.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_79 = (_78 = (_77 = (_76 = local.openChannel) === null || _76 === void 0 ? void 0 : _76.channel) === null || _77 === void 0 ? void 0 : _77.input) === null || _78 === void 0 ? void 0 : _78.gallery) === null || _79 === void 0 ? void 0 : _79.enableVideo;
  }
}
function getConfigsByPriority(localConfigs, remoteConfigs) {
  const prioritizedConfigs = createInitialConfig();
  updateCommonConfigs(prioritizedConfigs.common, localConfigs, remoteConfigs);
  updateGroupChannelConfigs(prioritizedConfigs.groupChannel, localConfigs, remoteConfigs);
  updateOpenChannelConfigs(prioritizedConfigs.openChannel, localConfigs, remoteConfigs);
  return prioritizedConfigs;
}
function isRawSBUConfigPayload(json) {
  return typeof json === "object" && "configuration" in json && "updated_at" in json;
}
var __awaiter = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e3) {
        reject(e3);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e3) {
        reject(e3);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
function getApplicationAttributes(sdk) {
  var _a2, _b2;
  return (_b2 = (_a2 = sdk.appInfo) === null || _a2 === void 0 ? void 0 : _a2.applicationAttributes) !== null && _b2 !== void 0 ? _b2 : [];
}
const UIKitConfigContext = createContext({
  initDashboardConfigs: () => Promise.resolve(),
  configs: initialConfig,
  configsWithAppAttr: () => initialConfig
});
const UIKitConfigProvider = ({ storage, children, localConfigs = {} }) => {
  const [remoteConfigs, setRemoteConfigs] = useState(createInitialRemoteConfig);
  const [manager] = useState(() => new UIKitConfigManager(storage));
  const initDashboardConfigs = useCallback((sdk) => __awaiter(void 0, void 0, void 0, function* () {
    const storedConfigPayload = yield manager.init(sdk.appId);
    if (sdk.appInfo && sdk.appInfo.uikitConfigInfo.lastUpdatedAt === storedConfigPayload.updatedAt) {
      setRemoteConfigs(storedConfigPayload.configuration);
    } else {
      try {
        const response = yield sdk.getUIKitConfiguration();
        if (isRawSBUConfigPayload(response.json)) {
          const remoteConfigPayload = snakeToCamel(response.json);
          const updatedConfigPayload = yield manager.update(remoteConfigPayload);
          setRemoteConfigs(updatedConfigPayload.configuration);
        }
      } catch (_a2) {
        setRemoteConfigs(storedConfigPayload.configuration);
      }
    }
  }), [manager]);
  const configs = getConfigsByPriority(localConfigs, remoteConfigs);
  const configsWithAppAttr = usePreservedCallback$1((sdk) => ({
    groupChannel: {
      channel: {
        get enableReactions() {
          return configs.groupChannel.channel.enableReactions && getApplicationAttributes(sdk).includes(applicationAttributes.reactions);
        },
        get enableReactionsSupergroup() {
          return configs.groupChannel.channel.enableReactionsSupergroup && getApplicationAttributes(sdk).includes(applicationAttributes.reactions);
        },
        get enableOgtag() {
          return configs.groupChannel.channel.enableOgtag && getApplicationAttributes(sdk).includes(applicationAttributes.enable_og_tag);
        }
      },
      setting: {
        get enableMessageSearch() {
          return configs.groupChannel.setting.enableMessageSearch && getApplicationAttributes(sdk).includes(applicationAttributes.message_search_v3);
        }
      }
    },
    openChannel: {
      channel: {
        get enableOgtag() {
          return configs.openChannel.channel.enableOgtag && getApplicationAttributes(sdk).includes(applicationAttributes.enable_og_tag);
        }
      }
    }
  }));
  return React__default__default.createElement(UIKitConfigContext.Provider, { value: { initDashboardConfigs, configs, configsWithAppAttr } }, children);
};
const useUIKitConfig = () => useContext(UIKitConfigContext);
var ONE_MiB = 1024 * 1024;
var SCROLL_BUFFER = 10;
var SCROLL_BOTTOM_DELAY_FOR_SEND = 100;
var VOICE_RECORDER_CLICK_BUFFER_TIME = 250;
var VOICE_RECORDER_DEFAULT_MIN = 1e3;
var VOICE_RECORDER_DEFAULT_MAX = 6e5;
var VOICE_RECORDER_AUDIO_BIT_RATE = 12e3;
var VOICE_RECORDER_AUDIO_SAMPLE_RATE = 11025;
var BROWSER_SUPPORT_MIME_TYPE_LIST = ["audio/webm", "audio/mp4", "audio/mpeg", "audio/ogg"];
var VOICE_PLAYER_ROOT_ID = "sendbird-voice-player-provider-root";
var VOICE_PLAYER_AUDIO_ID = "sendbird-global-audio-player-id";
var VOICE_MESSAGE_FILE_NAME = "Voice_message.mp3";
var VOICE_MESSAGE_FILE_NAME__XM4A = "Voice_message.m4a";
var VOICE_MESSAGE_MIME_TYPE = "audio/mp3;sbu_type=voice";
var VOICE_MESSAGE_MIME_TYPE__XM4A = "audio/x-m4a;sbu_type=voice";
var META_ARRAY_VOICE_DURATION_KEY = "KEY_VOICE_MESSAGE_DURATION";
var META_ARRAY_MESSAGE_TYPE_KEY = "KEY_INTERNAL_MESSAGE_TYPE";
var META_ARRAY_MESSAGE_TYPE_VALUE__VOICE = "voice/mp3";
var SLIDER_BUTTON_ICON_SIDE_LENGTH = "32px";
var DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT = 10;
var DEFAULT_UPLOAD_SIZE_LIMIT = 25 * 1024 * 1024;
var CACHED_MESSAGE_TEMPLATES_TOKEN_KEY = "sendbird_message_templates_token_key";
var CACHED_MESSAGE_TEMPLATES_KEY = "sendbird_message_templates_key";
var MESSAGE_TEMPLATE_KEY = "message_template";
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x3) {
  return x3 && x3.__esModule && Object.prototype.hasOwnProperty.call(x3, "default") ? x3["default"] : x3;
}
var shim = { exports: {} };
var useSyncExternalStoreShim_production_min = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_production_min;
function requireUseSyncExternalStoreShim_production_min() {
  if (hasRequiredUseSyncExternalStoreShim_production_min) return useSyncExternalStoreShim_production_min;
  hasRequiredUseSyncExternalStoreShim_production_min = 1;
  var e3 = React__default__default;
  function h4(a4, b3) {
    return a4 === b3 && (0 !== a4 || 1 / a4 === 1 / b3) || a4 !== a4 && b3 !== b3;
  }
  var k3 = "function" === typeof Object.is ? Object.is : h4, l2 = e3.useState, m4 = e3.useEffect, n2 = e3.useLayoutEffect, p2 = e3.useDebugValue;
  function q3(a4, b3) {
    var d4 = b3(), f2 = l2({ inst: { value: d4, getSnapshot: b3 } }), c3 = f2[0].inst, g2 = f2[1];
    n2(function() {
      c3.value = d4;
      c3.getSnapshot = b3;
      r2(c3) && g2({ inst: c3 });
    }, [a4, d4, b3]);
    m4(function() {
      r2(c3) && g2({ inst: c3 });
      return a4(function() {
        r2(c3) && g2({ inst: c3 });
      });
    }, [a4]);
    p2(d4);
    return d4;
  }
  function r2(a4) {
    var b3 = a4.getSnapshot;
    a4 = a4.value;
    try {
      var d4 = b3();
      return !k3(a4, d4);
    } catch (f2) {
      return true;
    }
  }
  function t4(a4, b3) {
    return b3();
  }
  var u3 = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? t4 : q3;
  useSyncExternalStoreShim_production_min.useSyncExternalStore = void 0 !== e3.useSyncExternalStore ? e3.useSyncExternalStore : u3;
  return useSyncExternalStoreShim_production_min;
}
var useSyncExternalStoreShim_development = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_development;
function requireUseSyncExternalStoreShim_development() {
  if (hasRequiredUseSyncExternalStoreShim_development) return useSyncExternalStoreShim_development;
  hasRequiredUseSyncExternalStoreShim_development = 1;
  if (process.env.NODE_ENV !== "production") {
    (function() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      }
      var React = React__default__default;
      var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function error(format2) {
        {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format2, args);
          }
        }
      }
      function printWarning(level, format2, args) {
        {
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
          var stack = ReactDebugCurrentFrame.getStackAddendum();
          if (stack !== "") {
            format2 += "%s";
            args = args.concat([stack]);
          }
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format2);
          Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      function is2(x3, y4) {
        return x3 === y4 && (x3 !== 0 || 1 / x3 === 1 / y4) || x3 !== x3 && y4 !== y4;
      }
      var objectIs = typeof Object.is === "function" ? Object.is : is2;
      var useState2 = React.useState, useEffect2 = React.useEffect, useLayoutEffect2 = React.useLayoutEffect, useDebugValue = React.useDebugValue;
      var didWarnOld18Alpha = false;
      var didWarnUncachedGetSnapshot = false;
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        {
          if (!didWarnOld18Alpha) {
            if (React.startTransition !== void 0) {
              didWarnOld18Alpha = true;
              error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
            }
          }
        }
        var value = getSnapshot();
        {
          if (!didWarnUncachedGetSnapshot) {
            var cachedValue = getSnapshot();
            if (!objectIs(value, cachedValue)) {
              error("The result of getSnapshot should be cached to avoid an infinite loop");
              didWarnUncachedGetSnapshot = true;
            }
          }
        }
        var _useState = useState2({
          inst: {
            value,
            getSnapshot
          }
        }), inst = _useState[0].inst, forceUpdate = _useState[1];
        useLayoutEffect2(function() {
          inst.value = value;
          inst.getSnapshot = getSnapshot;
          if (checkIfSnapshotChanged(inst)) {
            forceUpdate({
              inst
            });
          }
        }, [subscribe, value, getSnapshot]);
        useEffect2(function() {
          if (checkIfSnapshotChanged(inst)) {
            forceUpdate({
              inst
            });
          }
          var handleStoreChange = function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          };
          return subscribe(handleStoreChange);
        }, [subscribe]);
        useDebugValue(value);
        return value;
      }
      function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
          var nextValue = latestGetSnapshot();
          return !objectIs(prevValue, nextValue);
        } catch (error2) {
          return true;
        }
      }
      function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
        return getSnapshot();
      }
      var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
      var isServerEnvironment = !canUseDOM;
      var shim2 = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;
      var useSyncExternalStore$2 = React.useSyncExternalStore !== void 0 ? React.useSyncExternalStore : shim2;
      useSyncExternalStoreShim_development.useSyncExternalStore = useSyncExternalStore$2;
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
      }
    })();
  }
  return useSyncExternalStoreShim_development;
}
if (process.env.NODE_ENV === "production") {
  shim.exports = requireUseSyncExternalStoreShim_production_min();
} else {
  shim.exports = requireUseSyncExternalStoreShim_development();
}
var shimExports = shim.exports;
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
function eq$2(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_1 = eq$2;
var eq$1 = eq_1;
function assocIndexOf$4(array, key) {
  var length = array.length;
  while (length--) {
    if (eq$1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key) {
  var data = this.__data__, index = assocIndexOf$3(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key) {
  var data = this.__data__, index = assocIndexOf$2(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key) {
  return assocIndexOf$1(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key, value) {
  var data = this.__data__, index = assocIndexOf(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear, listCacheDelete = _listCacheDelete, listCacheGet = _listCacheGet, listCacheHas = _listCacheHas, listCacheSet = _listCacheSet;
function ListCache$4(entries2) {
  var index = -1, length = entries2 == null ? 0 : entries2.length;
  this.clear();
  while (++index < length) {
    var entry = entries2[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache$4.prototype.clear = listCacheClear;
ListCache$4.prototype["delete"] = listCacheDelete;
ListCache$4.prototype.get = listCacheGet;
ListCache$4.prototype.has = listCacheHas;
ListCache$4.prototype.set = listCacheSet;
var _ListCache = ListCache$4;
var ListCache$3 = _ListCache;
function stackClear$1() {
  this.__data__ = new ListCache$3();
  this.size = 0;
}
var _stackClear = stackClear$1;
function stackDelete$1(key) {
  var data = this.__data__, result = data["delete"](key);
  this.size = data.size;
  return result;
}
var _stackDelete = stackDelete$1;
function stackGet$1(key) {
  return this.__data__.get(key);
}
var _stackGet = stackGet$1;
function stackHas$1(key) {
  return this.__data__.has(key);
}
var _stackHas = stackHas$1;
var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root$8 = freeGlobal || freeSelf || Function("return this")();
var _root = root$8;
var root$7 = _root;
var Symbol$3 = root$7.Symbol;
var _Symbol = Symbol$3;
var Symbol$2 = _Symbol;
var objectProto$b = Object.prototype;
var hasOwnProperty$8 = objectProto$b.hasOwnProperty;
var nativeObjectToString$1 = objectProto$b.toString;
var symToStringTag$1 = Symbol$2 ? Symbol$2.toStringTag : void 0;
function getRawTag$1(value) {
  var isOwn = hasOwnProperty$8.call(value, symToStringTag$1), tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e3) {
  }
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$a = Object.prototype;
var nativeObjectToString = objectProto$a.toString;
function objectToString$1(value) {
  return nativeObjectToString.call(value);
}
var _objectToString = objectToString$1;
var Symbol$1 = _Symbol, getRawTag = _getRawTag, objectToString = _objectToString;
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : void 0;
function baseGetTag$4(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
var _baseGetTag = baseGetTag$4;
function isObject$2(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_1 = isObject$2;
var baseGetTag$3 = _baseGetTag, isObject$1 = isObject_1;
var asyncTag = "[object AsyncFunction]", funcTag$1 = "[object Function]", genTag = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
function isFunction$2(value) {
  if (!isObject$1(value)) {
    return false;
  }
  var tag = baseGetTag$3(value);
  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction$2;
var root$6 = _root;
var coreJsData$1 = root$6["__core-js_shared__"];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource$2(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e3) {
    }
    try {
      return func + "";
    } catch (e3) {
    }
  }
  return "";
}
var _toSource = toSource$2;
var isFunction$1 = isFunction_1, isMasked = _isMasked, isObject = isObject_1, toSource$1 = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype, objectProto$9 = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$7 = objectProto$9.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString.call(hasOwnProperty$7).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative$1(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource$1(value));
}
var _baseIsNative = baseIsNative$1;
function getValue$1(object, key) {
  return object == null ? void 0 : object[key];
}
var _getValue = getValue$1;
var baseIsNative = _baseIsNative, getValue = _getValue;
function getNative$6(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : void 0;
}
var _getNative = getNative$6;
var getNative$5 = _getNative, root$5 = _root;
var Map$3 = getNative$5(root$5, "Map");
var _Map = Map$3;
var getNative$4 = _getNative;
var nativeCreate$4 = getNative$4(Object, "create");
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
var objectProto$8 = Object.prototype;
var hasOwnProperty$6 = objectProto$8.hasOwnProperty;
function hashGet$1(key) {
  var data = this.__data__;
  if (nativeCreate$2) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$6.call(data, key) ? data[key] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto$7 = Object.prototype;
var hasOwnProperty$5 = objectProto$7.hasOwnProperty;
function hashHas$1(key) {
  var data = this.__data__;
  return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$5.call(data, key);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet$1(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED$1 : value;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear, hashDelete = _hashDelete, hashGet = _hashGet, hashHas = _hashHas, hashSet = _hashSet;
function Hash$1(entries2) {
  var index = -1, length = entries2 == null ? 0 : entries2.length;
  this.clear();
  while (++index < length) {
    var entry = entries2[index];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype["delete"] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
var Hash = _Hash, ListCache$2 = _ListCache, Map$2 = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map$2 || ListCache$2)(),
    "string": new Hash()
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key) {
  var result = getMapData$3(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key) {
  return getMapData$2(this, key).get(key);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key) {
  return getMapData$1(this, key).has(key);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key, value) {
  var data = getMapData(this, key), size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear, mapCacheDelete = _mapCacheDelete, mapCacheGet = _mapCacheGet, mapCacheHas = _mapCacheHas, mapCacheSet = _mapCacheSet;
function MapCache$2(entries2) {
  var index = -1, length = entries2 == null ? 0 : entries2.length;
  this.clear();
  while (++index < length) {
    var entry = entries2[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache$2.prototype.clear = mapCacheClear;
MapCache$2.prototype["delete"] = mapCacheDelete;
MapCache$2.prototype.get = mapCacheGet;
MapCache$2.prototype.has = mapCacheHas;
MapCache$2.prototype.set = mapCacheSet;
var _MapCache = MapCache$2;
var ListCache$1 = _ListCache, Map$1 = _Map, MapCache$1 = _MapCache;
var LARGE_ARRAY_SIZE = 200;
function stackSet$1(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache$1) {
    var pairs = data.__data__;
    if (!Map$1 || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache$1(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var _stackSet = stackSet$1;
var ListCache = _ListCache, stackClear = _stackClear, stackDelete = _stackDelete, stackGet = _stackGet, stackHas = _stackHas, stackSet = _stackSet;
function Stack$1(entries2) {
  var data = this.__data__ = new ListCache(entries2);
  this.size = data.size;
}
Stack$1.prototype.clear = stackClear;
Stack$1.prototype["delete"] = stackDelete;
Stack$1.prototype.get = stackGet;
Stack$1.prototype.has = stackHas;
Stack$1.prototype.set = stackSet;
var _Stack = Stack$1;
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function setCacheAdd$1(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}
var _setCacheAdd = setCacheAdd$1;
function setCacheHas$1(value) {
  return this.__data__.has(value);
}
var _setCacheHas = setCacheHas$1;
var MapCache = _MapCache, setCacheAdd = _setCacheAdd, setCacheHas = _setCacheHas;
function SetCache$1(values) {
  var index = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache$1.prototype.add = SetCache$1.prototype.push = setCacheAdd;
SetCache$1.prototype.has = setCacheHas;
var _SetCache = SetCache$1;
function arraySome$1(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome$1;
function cacheHas$1(cache, key) {
  return cache.has(key);
}
var _cacheHas = cacheHas$1;
var SetCache = _SetCache, arraySome = _arraySome, cacheHas = _cacheHas;
var COMPARE_PARTIAL_FLAG$3 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome(other, function(othValue2, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result;
}
var _equalArrays = equalArrays$2;
var root$4 = _root;
var Uint8Array$1 = root$4.Uint8Array;
var _Uint8Array = Uint8Array$1;
function mapToArray$1(map) {
  var index = -1, result = Array(map.size);
  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}
var _mapToArray = mapToArray$1;
function setToArray$1(set) {
  var index = -1, result = Array(set.size);
  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}
var _setToArray = setToArray$1;
var Symbol$4 = _Symbol, Uint8Array$2 = _Uint8Array, eq = eq_1, equalArrays$1 = _equalArrays, mapToArray = _mapToArray, setToArray = _setToArray;
var COMPARE_PARTIAL_FLAG$2 = 1, COMPARE_UNORDERED_FLAG = 2;
var boolTag$1 = "[object Boolean]", dateTag$1 = "[object Date]", errorTag$1 = "[object Error]", mapTag$2 = "[object Map]", numberTag$1 = "[object Number]", regexpTag$1 = "[object RegExp]", setTag$2 = "[object Set]", stringTag$1 = "[object String]", symbolTag = "[object Symbol]";
var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]";
var symbolProto = Symbol$4 ? Symbol$4.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag$1(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag$2:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag$1:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array$2(object), new Uint8Array$2(other))) {
        return false;
      }
      return true;
    case boolTag$1:
    case dateTag$1:
    case numberTag$1:
      return eq(+object, +other);
    case errorTag$1:
      return object.name == other.name && object.message == other.message;
    case regexpTag$1:
    case stringTag$1:
      return object == other + "";
    case mapTag$2:
      var convert = mapToArray;
    case setTag$2:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
      convert || (convert = setToArray);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;
      stack.set(object, other);
      var result = equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag$1;
function arrayPush$1(array, values) {
  var index = -1, length = values.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var _arrayPush = arrayPush$1;
var isArray$3 = Array.isArray;
var isArray_1 = isArray$3;
var arrayPush$2 = _arrayPush, isArray$2 = isArray_1;
function baseGetAllKeys$1(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray$2(object) ? result : arrayPush$2(result, symbolsFunc(object));
}
var _baseGetAllKeys = baseGetAllKeys$1;
function arrayFilter$1(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter$1;
function stubArray$1() {
  return [];
}
var stubArray_1 = stubArray$1;
var arrayFilter = _arrayFilter, stubArray = stubArray_1;
var objectProto$6 = Object.prototype;
var propertyIsEnumerable$1 = objectProto$6.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols$1 = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable$1.call(object, symbol);
  });
};
var _getSymbols = getSymbols$1;
function baseTimes$1(n2, iteratee) {
  var index = -1, result = Array(n2);
  while (++index < n2) {
    result[index] = iteratee(index);
  }
  return result;
}
var _baseTimes = baseTimes$1;
function isObjectLike$4(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_1 = isObjectLike$4;
var baseGetTag$2 = _baseGetTag, isObjectLike$3 = isObjectLike_1;
var argsTag$2 = "[object Arguments]";
function baseIsArguments$1(value) {
  return isObjectLike$3(value) && baseGetTag$2(value) == argsTag$2;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments, isObjectLike$2 = isObjectLike_1;
var objectProto$5 = Object.prototype;
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
var propertyIsEnumerable = objectProto$5.propertyIsEnumerable;
var isArguments$1 = baseIsArguments(/* @__PURE__ */ function() {
  return arguments;
}()) ? baseIsArguments : function(value) {
  return isObjectLike$2(value) && hasOwnProperty$4.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_1 = isArguments$1;
var isBuffer$2 = { exports: {} };
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
isBuffer$2.exports;
(function(module, exports) {
  var root2 = _root, stubFalse2 = stubFalse_1;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer2 = moduleExports ? root2.Buffer : void 0;
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
  var isBuffer2 = nativeIsBuffer || stubFalse2;
  module.exports = isBuffer2;
})(isBuffer$2, isBuffer$2.exports);
var isBufferExports = isBuffer$2.exports;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex$1(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var _isIndex = isIndex$1;
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength$2(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
var isLength_1 = isLength$2;
var baseGetTag$1 = _baseGetTag, isLength$1 = isLength_1, isObjectLike$1 = isObjectLike_1;
var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", funcTag = "[object Function]", mapTag$1 = "[object Map]", numberTag = "[object Number]", objectTag$2 = "[object Object]", regexpTag = "[object RegExp]", setTag$1 = "[object Set]", stringTag = "[object String]", weakMapTag$1 = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag$1] = typedArrayTags[numberTag] = typedArrayTags[objectTag$2] = typedArrayTags[regexpTag] = typedArrayTags[setTag$1] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag$1] = false;
function baseIsTypedArray$1(value) {
  return isObjectLike$1(value) && isLength$1(value.length) && !!typedArrayTags[baseGetTag$1(value)];
}
var _baseIsTypedArray = baseIsTypedArray$1;
function baseUnary$1(func) {
  return function(value) {
    return func(value);
  };
}
var _baseUnary = baseUnary$1;
var _nodeUtil = { exports: {} };
_nodeUtil.exports;
(function(module, exports) {
  var freeGlobal2 = _freeGlobal;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal2.process;
  var nodeUtil2 = function() {
    try {
      var types = freeModule && freeModule.require && freeModule.require("util").types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e3) {
    }
  }();
  module.exports = nodeUtil2;
})(_nodeUtil, _nodeUtil.exports);
var _nodeUtilExports = _nodeUtil.exports;
var baseIsTypedArray = _baseIsTypedArray, baseUnary = _baseUnary, nodeUtil = _nodeUtilExports;
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
var isTypedArray$2 = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
var isTypedArray_1 = isTypedArray$2;
var baseTimes = _baseTimes, isArguments = isArguments_1, isArray$1 = isArray_1, isBuffer$1 = isBufferExports, isIndex = _isIndex, isTypedArray$1 = isTypedArray_1;
var objectProto$4 = Object.prototype;
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
function arrayLikeKeys$1(value, inherited) {
  var isArr = isArray$1(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType = !isArr && !isArg && !isBuff && isTypedArray$1(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty$3.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys$1;
var objectProto$3 = Object.prototype;
function isPrototype$1(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$3;
  return value === proto;
}
var _isPrototype = isPrototype$1;
function overArg$1(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg$1;
var overArg = _overArg;
var nativeKeys$1 = overArg(Object.keys, Object);
var _nativeKeys = nativeKeys$1;
var isPrototype = _isPrototype, nativeKeys = _nativeKeys;
var objectProto$2 = Object.prototype;
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
function baseKeys$1(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$2.call(object, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
var _baseKeys = baseKeys$1;
var isFunction = isFunction_1, isLength = isLength_1;
function isArrayLike$1(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}
var isArrayLike_1 = isArrayLike$1;
var arrayLikeKeys = _arrayLikeKeys, baseKeys = _baseKeys, isArrayLike = isArrayLike_1;
function keys$1(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
var keys_1 = keys$1;
var baseGetAllKeys = _baseGetAllKeys, getSymbols = _getSymbols, keys = keys_1;
function getAllKeys$1(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}
var _getAllKeys = getAllKeys$1;
var getAllKeys = _getAllKeys;
var COMPARE_PARTIAL_FLAG$1 = 1;
var objectProto$1 = Object.prototype;
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result;
}
var _equalObjects = equalObjects$1;
var getNative$3 = _getNative, root$3 = _root;
var DataView$1 = getNative$3(root$3, "DataView");
var _DataView = DataView$1;
var getNative$2 = _getNative, root$2 = _root;
var Promise$2 = getNative$2(root$2, "Promise");
var _Promise = Promise$2;
var getNative$1 = _getNative, root$1 = _root;
var Set$2 = getNative$1(root$1, "Set");
var _Set = Set$2;
var getNative = _getNative, root = _root;
var WeakMap$1 = getNative(root, "WeakMap");
var _WeakMap = WeakMap$1;
var DataView = _DataView, Map$4 = _Map, Promise$1 = _Promise, Set$1 = _Set, WeakMap$2 = _WeakMap, baseGetTag = _baseGetTag, toSource = _toSource;
var mapTag = "[object Map]", objectTag$1 = "[object Object]", promiseTag = "[object Promise]", setTag = "[object Set]", weakMapTag = "[object WeakMap]";
var dataViewTag = "[object DataView]";
var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map$4), promiseCtorString = toSource(Promise$1), setCtorString = toSource(Set$1), weakMapCtorString = toSource(WeakMap$2);
var getTag$1 = baseGetTag;
if (DataView && getTag$1(new DataView(new ArrayBuffer(1))) != dataViewTag || Map$4 && getTag$1(new Map$4()) != mapTag || Promise$1 && getTag$1(Promise$1.resolve()) != promiseTag || Set$1 && getTag$1(new Set$1()) != setTag || WeakMap$2 && getTag$1(new WeakMap$2()) != weakMapTag) {
  getTag$1 = function(value) {
    var result = baseGetTag(value), Ctor = result == objectTag$1 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;
        case mapCtorString:
          return mapTag;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag;
        case weakMapCtorString:
          return weakMapTag;
      }
    }
    return result;
  };
}
var _getTag = getTag$1;
var Stack = _Stack, equalArrays = _equalArrays, equalByTag = _equalByTag, equalObjects = _equalObjects, getTag = _getTag, isArray = isArray_1, isBuffer = isBufferExports, isTypedArray = isTypedArray_1;
var COMPARE_PARTIAL_FLAG = 1;
var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
function baseIsEqualDeep$1(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep$1;
var baseIsEqualDeep = _baseIsEqualDeep, isObjectLike = isObjectLike_1;
function baseIsEqual$1(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$1, stack);
}
var _baseIsEqual = baseIsEqual$1;
var baseIsEqual = _baseIsEqual;
function isEqual(value, other) {
  return baseIsEqual(value, other);
}
var isEqual_1 = isEqual;
var isEqual$1 = /* @__PURE__ */ getDefaultExportFromCjs(isEqual_1);
function hasStateChanged(prevState, updates) {
  return Object.entries(updates).some(function(_a2) {
    var key = _a2[0], value = _a2[1];
    if (typeof prevState[key] === "function" && typeof value === "function") {
      return false;
    }
    return !isEqual$1(prevState[key], value);
  });
}
function createStore(initialState2) {
  var state = __assign({}, initialState2);
  var listeners = /* @__PURE__ */ new Set();
  var isUpdating = false;
  var setState = function(partial, force) {
    if (isUpdating)
      return;
    try {
      isUpdating = true;
      var nextState = typeof partial === "function" ? partial(state) : partial;
      var hasChanged = hasStateChanged(state, nextState);
      if (force || hasChanged) {
        state = __assign(__assign({}, state), nextState);
        listeners.forEach(function(listener) {
          return listener();
        });
      }
    } finally {
      isUpdating = false;
    }
  };
  return {
    getState: function() {
      return state;
    },
    setState,
    subscribe: function(listener) {
      listeners.add(listener);
      return function() {
        return listeners.delete(listener);
      };
    }
  };
}
var deprecatedConfig = {
  onUserProfileMessage: void 0,
  disableUserProfile: false,
  isReactionEnabled: true,
  isMentionEnabled: false,
  isVoiceMessageEnabled: true,
  replyType: "NONE",
  showSearchIcon: true,
  isTypingIndicatorEnabledOnChannelList: false,
  isMessageReceiptStatusEnabledOnChannelList: false,
  setCurrenttheme: function() {
  }
};
var config = __assign(__assign({}, deprecatedConfig), {
  // Connection
  appId: "",
  userId: "",
  accessToken: void 0,
  theme: "light",
  isOnline: false,
  // High level options
  allowProfileEdit: true,
  forceLeftToRightMessageLayout: false,
  disableMarkAsDelivered: false,
  isMultipleFilesMessageEnabled: false,
  htmlTextDirection: "ltr",
  uikitUploadSizeLimit: DEFAULT_UPLOAD_SIZE_LIMIT,
  uikitMultipleFilesMessageLimit: DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT,
  imageCompression: void 0,
  voiceRecord: void 0,
  userMention: void 0,
  // Functions
  renderUserProfile: void 0,
  onStartDirectMessage: void 0,
  setCurrentTheme: void 0,
  userListQuery: void 0,
  // Utils
  pubSub: void 0,
  logger: void 0,
  markAsReadScheduler: void 0,
  markAsDeliveredScheduler: void 0,
  // UIKit Configs
  common: {
    enableUsingDefaultUserProfile: false
  },
  groupChannel: {
    enableOgtag: true,
    enableTypingIndicator: true,
    enableReactions: true,
    enableMention: false,
    replyType: "none",
    threadReplySelectType: "thread",
    enableVoiceMessage: true,
    typingIndicatorTypes: void 0,
    enableDocument: false,
    enableFeedback: false,
    enableSuggestedReplies: false,
    showSuggestedRepliesFor: "all_messages",
    suggestedRepliesDirection: "vertical",
    enableMarkdownForUserMessage: false,
    enableFormTypeMessage: false,
    enableReactionsSupergroup: void 0
    // @deprecated
  },
  groupChannelList: {
    enableTypingIndicator: false,
    enableMessageReceiptStatus: false
  },
  groupChannelSettings: {
    enableMessageSearch: false
  },
  openChannel: {
    enableOgtag: true,
    enableDocument: false
  }
});
var stores = {
  sdkStore: {
    sdk: {},
    initialized: false,
    loading: false,
    error: void 0
  },
  userStore: {
    user: {},
    initialized: false,
    loading: false
  },
  appInfoStore: {
    messageTemplatesInfo: void 0,
    waitingTemplateKeysMap: {}
  }
};
var initialState$3 = {
  config,
  stores,
  emojiManager: void 0,
  eventHandlers: {
    reaction: {
      onPressUserProfile: function() {
      }
    },
    connection: {
      onConnected: function() {
      },
      onFailed: function() {
      }
    },
    modal: {
      onMounted: function() {
      }
    },
    message: {
      onSendMessageFailed: function() {
      },
      onUpdateMessageFailed: function() {
      },
      onFileUploadFailed: function() {
      }
    }
  },
  utils: {
    updateMessageTemplatesInfo: function() {
      return new Promise(function() {
      });
    },
    getCachedTemplate: function() {
      return null;
    }
  }
};
function useStore(StoreContext, selector, initialState2) {
  var store = useContext(StoreContext);
  if (!store) {
    throw new Error("useStore must be used within a StoreProvider");
  }
  var selectorRef = useRef(selector);
  selectorRef.current = selector;
  var state = shimExports.useSyncExternalStore(store.subscribe, function() {
    return selectorRef.current(store.getState());
  }, function() {
    return selectorRef.current(initialState2);
  });
  var updateState = useCallback(function(updates) {
    var currentState = store.getState();
    if (hasStateChanged(currentState, updates)) {
      store.setState(function(prevState) {
        return __assign(__assign({}, prevState), updates);
      });
    }
  }, [store]);
  return useMemo(function() {
    return {
      state,
      updateState
    };
  }, [state, updateState]);
}
var SendbirdContext = React__default__default.createContext(null);
var createSendbirdContextStore = function(props) {
  return createStore({
    config: __assign(__assign({}, initialState$3.config), props === null || props === void 0 ? void 0 : props.config),
    stores: __assign(__assign({}, initialState$3.stores), props === null || props === void 0 ? void 0 : props.stores),
    eventHandlers: __assign(__assign({}, initialState$3.eventHandlers), props === null || props === void 0 ? void 0 : props.eventHandlers),
    emojiManager: initialState$3.emojiManager,
    utils: __assign(__assign({}, initialState$3.utils), props === null || props === void 0 ? void 0 : props.utils)
  });
};
var useSendbirdStore = function() {
  return useStore(SendbirdContext, function(state) {
    return state;
  }, initialState$3);
};
var Ce = function(r2) {
  function a4() {
    var e3 = null !== r2 && r2.apply(this, arguments) || this;
    return e3._channels = /* @__PURE__ */ new Map(), e3._enteredChannelUrls = [], e3;
  }
  return t$2(a4, r2), Object.defineProperty(a4.prototype, "enteredChannels", { get: function() {
    var e3 = this;
    return this._enteredChannelUrls.map(function(n2) {
      return e3._channels.get(n2);
    }).filter(function(e4) {
      return !!e4;
    });
  }, enumerable: false, configurable: true }), a4.prototype.isEnteredChannel = function(e3) {
    return this._enteredChannelUrls.includes(e3);
  }, a4.prototype.enter = function(e3) {
    this._enteredChannelUrls.indexOf(e3) < 0 && this._enteredChannelUrls.push(e3);
  }, a4.prototype.exit = function(e3) {
    var n2 = this._enteredChannelUrls.indexOf(e3);
    n2 >= 0 && this._enteredChannelUrls.splice(n2, 1);
  }, a4.prototype.exitAll = function() {
    this._enteredChannelUrls = [];
  }, a4.prototype.get = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return [2, this._channels.get(e3)];
      });
    });
  }, a4.prototype.upsert = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var n2, r3 = this;
      return s$1(this, function(t4) {
        return n2 = [], e3.forEach(function(e4) {
          if (r3._channels.has(e4.url)) {
            var t5 = r3._channels.get(e4.url);
            Object.assign(t5, e4), n2.push(t5);
          } else r3._channels.set(e4.url, e4), n2.push(e4);
        }), [2, n2];
      });
    });
  }, a4.prototype.remove = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return this._channels.delete(e3), this.exit(e3), [2];
      });
    });
  }, a4.prototype.clear = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        return this._channels.clear(), this._enteredChannelUrls = [], [2];
      });
    });
  }, a4;
}(Jr$1), ve = { channelUrl: void 0, name: void 0, coverUrlOrImage: void 0, data: void 0, customType: void 0, operatorUserIds: void 0, isEphemeral: void 0 }, _e = function(n2) {
  function t4(e3) {
    var t5 = e3.channelUrl, r2 = e3.isInternalCall, a4 = n2.call(this) || this;
    return a4.method = ae.GET, a4.path = "".concat(r2 ? pe : fe, "/").concat(encodeURIComponent(t5)), a4.params = { show_pinned_messages: true }, a4;
  }
  return t$2(t4, n2), t4;
}(Fe$2), ge = function(n2) {
  function t4(e3, t5) {
    var r2 = n2.call(this, e3, t5) || this;
    return r2.channel = new xe(e3, t5), r2;
  }
  return t$2(t4, n2), t4;
}(qe$2), ye = function(n2) {
  function t4(e3) {
    var t5 = this, r2 = e3.channelUrl, a4 = e3.coverUrlOrImage, u3 = e3.name, c3 = e3.data, h4 = e3.customType, f2 = e3.operatorUserIds, C2 = e3.isEphemeral;
    return (t5 = n2.call(this) || this).method = ae.POST, t5.path = fe, t5.params = se(oe({ channel_url: r2, cover_url: S$1("string", a4) ? a4 : null, cover_file: k(a4) ? a4 : null, name: u3, data: c3, custom_type: h4, operators: f2, is_ephemeral: C2 })), t5;
  }
  return t$2(t4, n2), t4;
}(Fe$2);
!function(n2) {
  function t4(e3, t5) {
    var r2 = n2.call(this, e3, t5) || this;
    return r2.channel = new xe(e3, t5), r2;
  }
  t$2(t4, n2);
}(qe$2);
var me = function(n2) {
  function t4(e3) {
    var t5 = e3.channelUrl;
    return n2.call(this, { code: "ENTR", payload: { channel_url: t5 }, ackRequired: true }) || this;
  }
  return t$2(t4, n2), t4;
}(Ge$1), Ue = function(n2) {
  function t4(e3, t5, r2) {
    var a4, s4, i3 = this;
    return i3 = n2.call(this, e3, "SYEV", r2) || this, r2.data && (i3.participantCount = null !== (a4 = r2.data.participant_count) && void 0 !== a4 ? a4 : 0, i3.user = new ls$2(e3, r2.data), i3.ts = null !== (s4 = r2.data.edge_ts) && void 0 !== s4 ? s4 : 0), i3;
  }
  return t$2(t4, n2), t4;
}(v), Ee = function(n2) {
  function t4(e3) {
    var t5 = e3.channelUrl;
    return n2.call(this, { code: "EXIT", payload: { channel_url: t5 }, ackRequired: true }) || this;
  }
  return t$2(t4, n2), t4;
}(Ge$1), Me = function(n2) {
  function t4(e3, t5, r2) {
    var a4, s4, i3 = this;
    return i3 = n2.call(this, e3, "EXIT", r2) || this, r2.data && (i3.participantCount = null !== (a4 = r2.data.participant_count) && void 0 !== a4 ? a4 : 0, i3.user = new ls$2(e3, r2.data), i3.ts = null !== (s4 = r2.data.edge_ts) && void 0 !== s4 ? s4 : 0), i3;
  }
  return t$2(t4, n2), t4;
}(v), we = {}, Pe = function(r2) {
  function o$1(e3, a4) {
    var s4 = r2.call(this, e3, n$2(n$2({}, a4), { channelType: H$1.OPEN })) || this;
    return s4.subscribeChannelEvent = ut$1, s4.unsubscribeChannelEvent = ut$1, s4.refreshChannel = function() {
      return r$1(s4, void 0, void 0, function() {
        return s$1(this, function(e4) {
          return [2, ut$1()];
        });
      });
    }, s4._openChannelCache = new Ce(e3), s4._openChannelHandlers = /* @__PURE__ */ new Map(), s4._dispatcher.on(function(e4) {
      var n2, t4;
      if (e4 instanceof ze$2) s4._handleEvent(e4).catch(function(e5) {
        if (v$2(e5) && "foreground" === s4._sdkState.appState) throw e5;
      });
      else if (e4 instanceof Fr$1 && e4.stateType === Rr$1.CONNECTED) {
        var r3 = s4._openChannelCache.enteredChannels;
        try {
          for (var a5 = o(r3), i3 = a5.next(); !i3.done; i3 = a5.next()) {
            i3.value.enter();
          }
        } catch (e5) {
          n2 = { error: e5 };
        } finally {
          try {
            i3 && !i3.done && (t4 = a5.return) && t4.call(a5);
          } finally {
            if (n2) throw n2.error;
          }
        }
      }
    }), we[e3] || (we[e3] = s4), s4;
  }
  return t$2(o$1, r2), o$1.of = function(e3) {
    return we[e3];
  }, o$1.prototype.buildOpenChannelFromSerializedData = function(e3) {
    var n2 = as$2(e3);
    return new xe(this._iid, xe.payloadify(n2));
  }, o$1.prototype.getChannelFromCache = function(e3) {
    var r3;
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._openChannelCache.get(e3)];
          case 1:
            return [2, null !== (r3 = n2.sent()) && void 0 !== r3 ? r3 : null];
        }
      });
    });
  }, o$1.prototype.upsertChannelsToCache = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        switch (n2.label) {
          case 0:
            return [4, this._openChannelCache.upsert(e3)];
          case 1:
            return [2, n2.sent()];
        }
      });
    });
  }, o$1.prototype.removeChannelsFromCache = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var n2, r3, a4, s4, i3, o$12;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            t4.trys.push([0, 5, 6, 7]), n2 = o(e3), r3 = n2.next(), t4.label = 1;
          case 1:
            return r3.done ? [3, 4] : (a4 = r3.value, [4, this._openChannelCache.remove(a4)]);
          case 2:
            t4.sent(), t4.label = 3;
          case 3:
            return r3 = n2.next(), [3, 1];
          case 4:
            return [3, 7];
          case 5:
            return s4 = t4.sent(), i3 = { error: s4 }, [3, 7];
          case 6:
            try {
              r3 && !r3.done && (o$12 = n2.return) && o$12.call(n2);
            } finally {
              if (i3) throw i3.error;
            }
            return [7];
          case 7:
            return [2];
        }
      });
    });
  }, o$1.prototype.setEnteredToCache = function(e3) {
    this._openChannelCache.enter(e3.url);
  }, o$1.prototype.setExitedToCache = function(e3) {
    this._openChannelCache.exit(e3.url);
  }, Object.defineProperty(o$1.prototype, "handlers", { get: function() {
    return c([], a$1(this._openChannelHandlers.values()), false);
  }, enumerable: false, configurable: true }), o$1.prototype._handleEvent = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var r3, a4, s4, i3, o$12, u3, l2, c3, h4, d4, p2, f$12, C2, v$12, _2, g2, y$12, U$12, E3, w3, P2, O3, x3, R3, L$12, F2, k3, S4, $2, J2, ee2, ne2, te2, ae2, fe2, Ce2, ve2, _e2, ge2, ye2, me2, Ee2, we2, Pe2, be2, Te2, Ne2, De2, He2, Ie2, Oe2, xe2, Ae2, Re2, Le2, Fe2, ke2, Se2, qe2, ze2, Qe2, Ge2, je2, Ke2, Ve2, We2, Be2, Xe2, Ye2, Ze2, $e2, Je2, en2, nn2, tn2 = this;
      return s$1(this, function(rn2) {
        switch (rn2.label) {
          case 0:
            switch (rn2.trys.push([0, 59, , 60]), e3.code) {
              case "MESG":
              case "FILE":
              case "ADMM":
              case "BRDM":
                return [3, 1];
              case "MEDI":
              case "FEDI":
              case "AEDI":
                return [3, 4];
              case "DELM":
                return [3, 7];
              case "MRCT":
                return [3, 10];
              case "MTHD":
                return [3, 13];
              case "MCNT":
                return [3, 16];
              case "PEDI":
                return [3, 27];
              case "VOTE":
                return [3, 30];
              case "SYEV":
                return [3, 33];
            }
            return [3, 58];
          case 1:
            return i3 = null, "MESG" === e3.code ? i3 = e3.as(Ir) : "FILE" === e3.code ? i3 = e3.as(Pt$1) : "ADMM" !== e3.code && "BRDM" != e3.code || (i3 = e3.as(L)), i3 ? (r3 = i3.message, a4 = i3.isMentioned, r3.channelType !== H$1.OPEN ? [3, 3] : [4, this.getChannel(r3.channelUrl, true)]) : [3, 3];
          case 2:
            s4 = rn2.sent(), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, i4, o$13, u4;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) i4 = n2.value, this._openChannelCache.isEnteredChannel(s4.url) && (i4.onMessageReceived && i4.onMessageReceived(s4, r3), a4 && i4.onMentionReceived && i4.onMentionReceived(s4, r3));
                  } catch (e5) {
                    o$13 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (u4 = e4.return) && u4.call(e4);
                    } finally {
                      if (o$13) throw o$13.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 3;
          case 3:
            return [3, 58];
          case 4:
            return i3 = null, "MEDI" === e3.code ? i3 = e3.as(Tr) : "FEDI" === e3.code ? i3 = e3.as(Mr) : "AEDI" === e3.code && (i3 = e3.as(I)), i3 ? (o$12 = i3.message, u3 = i3.mentionCountChange, o$12.channelType !== H$1.OPEN ? [3, 6] : [4, this.getChannel(o$12.channelUrl, true)]) : [3, 6];
          case 5:
            l2 = rn2.sent(), c3 = false, l2.lastPinnedMessage && l2.lastPinnedMessage.messageId === o$12.messageId && l2.lastPinnedMessage.updatedAt < o$12.updatedAt && (l2.lastPinnedMessage = o$12, c3 = true), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5, i4, h5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) r4 = n2.value, this._openChannelCache.isEnteredChannel(l2.url) && (c3 && (null === (i4 = r4.onPinnedMessageUpdated) || void 0 === i4 || i4.call(r4, l2), null === (h5 = r4.onChannelChanged) || void 0 === h5 || h5.call(r4, l2)), r4.onMessageUpdated && r4.onMessageUpdated(l2, o$12), u3 > 0 && r4.onMentionReceived && r4.onMentionReceived(l2, o$12));
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 6;
          case 6:
            return [3, 58];
          case 7:
            return h4 = e3.as(at$1), ne2 = h4.channelUrl, te2 = h4.channelType, d4 = h4.messageId, te2 !== H$1.OPEN ? [3, 9] : [4, this.getChannel(ne2, true)];
          case 8:
            p2 = rn2.sent(), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) r4 = n2.value, this._openChannelCache.isEnteredChannel(p2.url) && r4.onMessageDeleted && r4.onMessageDeleted(p2, d4);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 9;
          case 9:
            return [3, 58];
          case 10:
            return f$12 = e3.as(U), ne2 = f$12.channelUrl, te2 = f$12.channelType, C2 = f$12.event, te2 !== H$1.OPEN ? [3, 12] : [4, this.getChannel(ne2, true)];
          case 11:
            v$12 = rn2.sent(), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) r4 = n2.value, this._openChannelCache.isEnteredChannel(v$12.url) && r4.onReactionUpdated && r4.onReactionUpdated(v$12, C2);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 12;
          case 12:
            return [3, 58];
          case 13:
            return (_2 = e3.as(M).event).channelType !== H$1.OPEN ? [3, 15] : [4, this.getChannel(_2.channelUrl, true)];
          case 14:
            g2 = rn2.sent(), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) r4 = n2.value, this._openChannelCache.isEnteredChannel(g2.url) && r4.onThreadInfoUpdated && r4.onThreadInfoUpdated(g2, _2);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 15;
          case 15:
            return [3, 58];
          case 16:
            y$12 = e3.as(y).openChannelMemberCounts, U$12 = [], rn2.label = 17;
          case 17:
            rn2.trys.push([17, 22, 23, 24]), E3 = o(y$12), w3 = E3.next(), rn2.label = 18;
          case 18:
            return w3.done ? [3, 21] : (P2 = w3.value, ne2 = P2.channelUrl, Ee2 = P2.participantCount, O3 = P2.updatedAt, [4, this.getChannelFromCache(ne2)]);
          case 19:
            (x3 = rn2.sent()) && x3._updateParticipantCount(Ee2, O3) && U$12.push(x3), rn2.label = 20;
          case 20:
            return w3 = E3.next(), [3, 18];
          case 21:
            return [3, 24];
          case 22:
            return R3 = rn2.sent(), en2 = { error: R3 }, [3, 24];
          case 23:
            try {
              w3 && !w3.done && (nn2 = E3.return) && nn2.call(E3);
            } finally {
              if (en2) throw en2.error;
            }
            return [7];
          case 24:
            return U$12.length > 0 ? [4, this.upsertChannelsToCache(U$12)] : [3, 26];
          case 25:
            L$12 = rn2.sent(), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) (r4 = n2.value).onChannelMemberCountChanged && r4.onChannelMemberCountChanged(L$12);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 26;
          case 26:
            return [3, 58];
          case 27:
            return F2 = e3.as(D), k3 = F2.event, S4 = F2.status, ne2 = F2.channelUrl, te2 = F2.channelType, ne2 && te2 === H$1.OPEN ? [4, this.getChannel(ne2, true)] : [3, 29];
          case 28:
            $2 = rn2.sent(), this._dispatcher.dispatch(new wo({ event: k3, source: no.EVENT_POLL_UPDATED })), kr$1(S4 === To ? function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) (r4 = n2.value).onPollDeleted && r4.onPollDeleted($2, k3.pollId);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            } : function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) (r4 = n2.value).onPollUpdated && r4.onPollUpdated($2, k3);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 29;
          case 29:
            return [3, 58];
          case 30:
            return J2 = e3.as(Hr), ee2 = J2.event, ne2 = J2.channelUrl, te2 = J2.channelType, ne2 && te2 === H$1.OPEN ? [4, this.getChannel(ne2, true)] : [3, 32];
          case 31:
            ae2 = rn2.sent(), this._dispatcher.dispatch(new So({ event: ee2, source: no.EVENT_POLL_VOTED })), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) (r4 = n2.value).onPollVoted && r4.onPollVoted(ae2, ee2);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn2.label = 32;
          case 32:
            return [3, 58];
          case 33:
            if (!(fe2 = e3.as(v).event).isOpenChannelEvent) return [3, 57];
            switch (fe2.category) {
              case f.CHANNEL_ENTER:
                return [3, 34];
              case f.CHANNEL_EXIT:
                return [3, 36];
              case f.CHANNEL_OPERATOR_UPDATE:
                return [3, 38];
              case f.USER_CHANNEL_MUTE:
              case f.USER_CHANNEL_UNMUTE:
                return [3, 40];
              case f.USER_CHANNEL_BAN:
              case f.USER_CHANNEL_UNBAN:
                return [3, 42];
              case f.CHANNEL_FREEZE:
              case f.CHANNEL_UNFREEZE:
                return [3, 44];
              case f.CHANNEL_DELETED:
                return [3, 46];
              case f.CHANNEL_PROP_CHANGED:
                return [3, 49];
              case f.CHANNEL_META_DATA_CHANGED:
                return [3, 51];
              case f.CHANNEL_META_COUNTERS_CHANGED:
                return [3, 53];
              case f.PINNED_MESSAGE_CHANGED:
                return [3, 55];
            }
            return [3, 57];
          case 34:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 35:
            return Ce2 = rn2.sent(), ve2 = e3.as(Ue), Ee2 = ve2.participantCount, _e2 = ve2.user, ge2 = Ce2._updateParticipantCount(Ee2, fe2.ts), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    e5.onUserEntered && e5.onUserEntered(Ce2, _e2), ge2 && e5.onChannelParticipantCountChanged && e5.onChannelParticipantCountChanged(Ce2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 36:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 37:
            return ye2 = rn2.sent(), me2 = e3.as(Me), Ee2 = me2.participantCount, we2 = me2.user, Pe2 = ye2._updateParticipantCount(Ee2, fe2.ts), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    e5.onUserExited && e5.onUserExited(ye2, we2), Pe2 && e5.onChannelParticipantCountChanged && e5.onChannelParticipantCountChanged(ye2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 38:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 39:
            return be2 = rn2.sent(), Te2 = e3.as(T).operators, be2.operators = Te2, this.upsertChannelsToCache([be2]), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    e5.onOperatorUpdated && e5.onOperatorUpdated(be2, Te2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 40:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 41:
            return Ne2 = rn2.sent(), De2 = fe2.category === f.USER_CHANNEL_MUTE, He2 = e3.as(De2 ? ar$1 : ur$1).user, kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    De2 ? e5.onUserMuted && e5.onUserMuted(Ne2, He2) : e5.onUserUnmuted && e5.onUserUnmuted(Ne2, He2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 42:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 43:
            return Ie2 = rn2.sent(), Oe2 = fe2.category === f.USER_CHANNEL_BAN, xe2 = e3.as(Oe2 ? lr$1 : hr$1).user, kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    Oe2 ? e5.onUserBanned && e5.onUserBanned(Ie2, xe2) : e5.onUserUnbanned && e5.onUserUnbanned(Ie2, xe2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 44:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 45:
            return Ae2 = rn2.sent(), Re2 = e3.as(pr$1).freeze, Ae2.isFrozen = Re2, this.upsertChannelsToCache([Ae2]), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    Re2 ? e5.onChannelFrozen && e5.onChannelFrozen(Ae2) : e5.onChannelUnfrozen && e5.onChannelUnfrozen(Ae2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 46:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 47:
            return Le2 = rn2.sent(), [4, this.removeChannelsFromCache([Le2.url])];
          case 48:
            return rn2.sent(), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    e5.onChannelDeleted && e5.onChannelDeleted(Le2.url, Le2.channelType);
                  }), [2];
                });
              });
            }), [3, 57];
          case 49:
            return [4, this.getChannelWithoutCache(fe2.channelUrl, true)];
          case 50:
            return Fe2 = rn2.sent(), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    e5.onChannelChanged && e5.onChannelChanged(Fe2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 51:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 52:
            return ke2 = rn2.sent(), Se2 = e3.as(Gn$1), qe2 = Se2.created, ze2 = Se2.updated, Qe2 = Se2.deleted, qe2 && ke2._upsertCachedMetaData(qe2, fe2.ts), ze2 && ke2._upsertCachedMetaData(ze2, fe2.ts), Qe2 && ke2._removeFromCachedMetaData(Qe2, fe2.ts), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    qe2 && e5.onMetaDataCreated && e5.onMetaDataCreated(ke2, qe2), ze2 && e5.onMetaDataUpdated && e5.onMetaDataUpdated(ke2, ze2), Qe2 && e5.onMetaDataDeleted && e5.onMetaDataDeleted(ke2, Qe2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 53:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 54:
            return Ge2 = rn2.sent(), je2 = e3.as(nr$1), Ke2 = je2.created, Ve2 = je2.updated, We2 = je2.deleted, kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    Ke2 && e5.onMetaCounterCreated && e5.onMetaCounterCreated(Ge2, Ke2), Ve2 && e5.onMetaCounterUpdated && e5.onMetaCounterUpdated(Ge2, Ve2), We2 && e5.onMetaCounterDeleted && e5.onMetaCounterDeleted(Ge2, We2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 55:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 56:
            return Be2 = rn2.sent(), Xe2 = e3.as(H), Ye2 = Xe2.pinnedMessageIds, Ze2 = Xe2.latestPinnedMessage, ($e2 = Xe2.ts) > Be2._pinnedMessagesUpdatedAt && (Be2.pinnedMessageIds = Ye2, Be2.lastPinnedMessage = Ze2, Be2._pinnedMessagesUpdatedAt = $e2, this.upsertChannelsToCache([Be2]), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                var e4, n2, r4, a5, s5;
                return s$1(this, function(t4) {
                  try {
                    for (e4 = o(this._openChannelHandlers.values()), n2 = e4.next(); !n2.done; n2 = e4.next()) (r4 = n2.value).onChannelChanged && r4.onChannelChanged(Be2);
                  } catch (e5) {
                    a5 = { error: e5 };
                  } finally {
                    try {
                      n2 && !n2.done && (s5 = e4.return) && s5.call(e4);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), kr$1(function() {
              return r$1(tn2, void 0, void 0, function() {
                return s$1(this, function(e4) {
                  return this._openChannelHandlers.forEach(function(e5) {
                    e5.onPinnedMessageUpdated && e5.onPinnedMessageUpdated(Be2);
                  }), [2];
                });
              });
            })), [3, 57];
          case 57:
            return [3, 58];
          case 58:
            return [3, 60];
          case 59:
            if (Je2 = rn2.sent(), v$2(Je2)) throw Je2;
            return [3, 60];
          case 60:
            return [2];
        }
      });
    });
  }, o$1.prototype.addHandler = function(e3, n2) {
    this._openChannelHandlers.set(e3, n2);
  }, o$1.prototype.removeHandler = function(e3) {
    this._openChannelHandlers.delete(e3);
  }, o$1.prototype.clearHandler = function() {
    this._openChannelHandlers.clear();
  }, o$1.prototype.getChannel = function(e3, r3) {
    return void 0 === r3 && (r3 = false), r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            cs$2(S$1("string", e3)).throw(b$2.invalidParameters), t4.label = 1;
          case 1:
            return t4.trys.push([1, 3, , 4]), [4, this.getChannelFromCache(e3)];
          case 2:
            return (n2 = t4.sent()) ? [2, n2] : [3, 4];
          case 3:
            return t4.sent(), [3, 4];
          case 4:
            return [4, this.getChannelWithoutCache(e3, r3)];
          case 5:
            return [2, t4.sent()];
        }
      });
    });
  }, o$1.prototype.getChannelWithoutCache = function(e3, r3) {
    return void 0 === r3 && (r3 = false), r$1(this, void 0, void 0, function() {
      var n2, a4, i3;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return cs$2(S$1("string", e3)).throw(b$2.invalidParameters), n2 = new _e({ channelUrl: e3, isInternalCall: r3 }), [4, this._requestQueue.send(n2)];
          case 1:
            return a4 = t4.sent(), i3 = a4.as(ge).channel, [4, this.upsertChannelsToCache([i3])];
          case 2:
            return [2, t4.sent()[0]];
        }
      });
    });
  }, o$1.prototype.createChannel = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var n2, r3, o2, u3;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return n2 = n$2(n$2({}, ve), e3), cs$2(function(e4) {
              return C$1("string", e4.operatorUserIds, true) && (S$1("string", e4.coverUrlOrImage, true) || k(e4.coverUrlOrImage, true)) && S$1("string", e4.name, true) && S$1("string", e4.data, true) && S$1("string", e4.customType, true) && (S$1("string", e4.channelUrl) && /^\w+$/.test(e4.channelUrl) || null === e4.channelUrl || void 0 === e4.channelUrl) && S$1("boolean", e4.isEphemeral, true);
            }(n2)).throw(b$2.invalidParameters), r3 = new ye(n2), [4, this._requestQueue.send(r3)];
          case 1:
            return o2 = t4.sent(), u3 = o2.as(ge).channel, this.upsertChannelsToCache([u3]), [2, u3];
        }
      });
    });
  }, o$1;
}(g), be = { name: void 0, coverUrlOrImage: void 0, data: void 0, customType: void 0, operatorUserIds: void 0 }, Te = function(n2) {
  function t4(e3) {
    var t5 = this, r2 = e3.channelUrl, a4 = e3.token, s4 = e3.limit;
    return (t5 = n2.call(this) || this).method = ae.GET, t5.path = "".concat(fe, "/").concat(encodeURIComponent(r2), "/participants"), t5.params = { token: a4, limit: s4 }, t5;
  }
  return t$2(t4, n2), t4;
}(Fe$2), Ne = function(n2) {
  function t4(e3, t5) {
    var r2 = n2.call(this, e3, t5) || this;
    r2.participants = [];
    var a4 = t5.next, s4 = t5.participants;
    return r2.token = a4, r2.participants = s4.map(function(n3) {
      return new tn$2(e3, n3);
    }), r2;
  }
  return t$2(t4, n2), t4;
}(qe$2), De = function(r2) {
  function a4(e3, n2, t4) {
    return r2.call(this, e3, n2, H$1.OPEN, t4) || this;
  }
  return t$2(a4, r2), a4.prototype._validate = function() {
    return r2.prototype._validate.call(this);
  }, a4.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, n2, r3, a5, s4, i3;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e3 = uo.of(this._iid).requestQueue, n2 = new Te(n$2(n$2({}, this), { token: this._token })), [4, e3.send(n2)]) : [3, 2] : [3, 5];
          case 1:
            return r3 = t4.sent(), a5 = r3.as(Ne), s4 = a5.participants, i3 = a5.token, this._token = i3, this._hasNext = !!i3, this._isLoading = false, [2, s4];
          case 2:
            return [2, []];
          case 3:
            throw b$2.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw b$2.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, a4;
}(ko), He = function(n2) {
  function t4(e3) {
    var t5 = this, r2 = e3.channelUrl, a4 = e3.coverUrlOrImage, u3 = e3.name, c3 = e3.data, h4 = e3.customType, f2 = e3.operatorUserIds;
    return (t5 = n2.call(this) || this).method = ae.PUT, t5.path = "".concat(fe, "/").concat(encodeURIComponent(r2)), t5.params = se(oe({ cover_url: S$1("string", a4) ? a4 : null, cover_file: k(a4) ? a4 : null, name: u3, data: c3, custom_type: h4, operators: f2 })), t5;
  }
  return t$2(t4, n2), t4;
}(Fe$2), Ie = function(n2) {
  function t4(e3, t5) {
    var r2 = n2.call(this, e3, t5) || this;
    return r2.channel = new xe(e3, t5), r2;
  }
  return t$2(t4, n2), t4;
}(qe$2), Oe = function(n2) {
  function t4(e3) {
    var t5 = this, r2 = e3.channelUrl;
    return (t5 = n2.call(this) || this).method = ae.DELETE, t5.path = "".concat(fe, "/").concat(encodeURIComponent(r2)), t5;
  }
  return t$2(t4, n2), t4;
}(Fe$2);
!function(n2) {
  function t4(e3, t5) {
    return n2.call(this, e3, t5) || this;
  }
  t$2(t4, n2);
}(qe$2);
var xe = function(r2) {
  function o2(e3, n2) {
    var t4, a4 = this;
    return (a4 = r2.call(this, e3, n2) || this)._lastParticipantCountUpdated = 0, a4.participantCount = 0, a4.operators = [], a4.lastPinnedMessage = null, a4._pinnedMessagesUpdatedAt = 0, a4.channelType = H$1.OPEN, a4.participantCount = null !== (t4 = n2.participant_count) && void 0 !== t4 ? t4 : 0, a4.operators = Array.isArray(n2.operators) ? n2.operators.map(function(n3) {
      return new ls$2(e3, n3);
    }) : [], a4.lastPinnedMessage = n2.latest_pinned_message ? At$1(a4._iid, n$2({ channel_type: a4.channelType }, n2.latest_pinned_message)) : null, a4;
  }
  return t$2(o2, r2), o2.payloadify = function(e3) {
    return se(oe(n$2(n$2({}, Ti.payloadify(e3)), { participant_count: e3.participantCount, operators: e3.operators.map(function(e4) {
      return ls$2.payloadify(e4);
    }), latest_pinned_message: e3.lastPinnedMessage ? Ut$1(e3.lastPinnedMessage) : null })));
  }, o2.prototype.serialize = function() {
    return os$2(this);
  }, o2.prototype.isOperator = function(e3) {
    return e3 instanceof ls$2 ? this.isOperator(e3.userId) : this.operators.some(function(n2) {
      return n2.userId === e3;
    });
  }, o2.prototype._updateParticipantCount = function(e3, n2) {
    return n2 > this._lastParticipantCountUpdated && (this.participantCount = e3, this._lastParticipantCountUpdated = n2, true);
  }, o2.prototype.createParticipantListQuery = function(e3) {
    return new De(this._iid, this.url, e3);
  }, o2.prototype.refresh = function() {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(e3) {
        switch (e3.label) {
          case 0:
            return [4, Pe.of(this._iid).getChannelWithoutCache(this.url)];
          case 1:
            return [2, e3.sent()];
        }
      });
    });
  }, o2.prototype.enter = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, n2, r3, a4, s4, i3;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, n2 = new me({ channelUrl: this.url }), [4, e3.send(n2)];
          case 1:
            return r3 = t4.sent(), a4 = r3.as(Ue), s4 = a4.participantCount, i3 = a4.ts, this._updateParticipantCount(s4, i3), Pe.of(this._iid).setEnteredToCache(this), [2];
        }
      });
    });
  }, o2.prototype.exit = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, n2, r3, a4, s4, i3;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, n2 = new Ee({ channelUrl: this.url }), [4, e3.send(n2)];
          case 1:
            return r3 = t4.sent(), a4 = r3.as(Me), s4 = a4.participantCount, i3 = a4.ts, this._updateParticipantCount(s4, i3), Pe.of(this._iid).setExitedToCache(this), la.of(this._iid).fileMessageQueue.cancel(this), [2];
        }
      });
    });
  }, o2.prototype.updateChannel = function(e3) {
    return r$1(this, void 0, void 0, function() {
      var n2, r3, o3, u3, l2;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return n2 = n$2(n$2({}, be), e3), cs$2(function(e4) {
              return C$1("string", e4.operatorUserIds, true) && (S$1("string", e4.coverUrlOrImage, true) || k(e4.coverUrlOrImage, true)) && S$1("string", e4.name, true) && S$1("string", e4.data, true) && S$1("string", e4.customType, true);
            }(n2)).throw(b$2.invalidParameters), r3 = uo.of(this._iid).requestQueue, o3 = new He(n$2({ channelUrl: this.url }, n2)), [4, r3.send(o3)];
          case 1:
            return u3 = t4.sent(), l2 = u3.as(Ie).channel, this._update(l2), [4, Pe.of(this._iid).upsertChannelsToCache([l2])];
          case 2:
            return t4.sent(), [2, this];
        }
      });
    });
  }, o2.prototype.updateChannelWithOperatorUserIds = function(e3, r3, a4, s4, i3) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(t4) {
        return n2 = n$2(n$2({}, be), { name: e3, coverUrlOrImage: r3, data: a4, operatorUserIds: s4, customType: i3 }), [2, this.updateChannel(n2)];
      });
    });
  }, o2.prototype.delete = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, n2;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return e3 = uo.of(this._iid).requestQueue, n2 = new Oe({ channelUrl: this.url }), [4, e3.send(n2)];
          case 1:
            return t4.sent(), [4, Pe.of(this._iid).removeChannelsFromCache([this.url])];
          case 2:
            return t4.sent(), [2];
        }
      });
    });
  }, o2.prototype.updateUserMessage = function(e3, a4) {
    return r$1(this, void 0, void 0, function() {
      var n2, s4, i3, o3 = this;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, r2.prototype.updateUserMessage.call(this, e3, a4)];
          case 1:
            return n2 = t4.sent(), s4 = false, i3 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === n2.messageId && (this.lastPinnedMessage = n2, s4 = true, i3 = true), s4 && Pe.of(this._iid).handlers.map(function(e4) {
              e4.onChannelChanged && e4.onChannelChanged(o3);
            }), i3 && Pe.of(this._iid).handlers.map(function(e4) {
              e4.onPinnedMessageUpdated && e4.onPinnedMessageUpdated(o3);
            }), [2, n2];
        }
      });
    });
  }, o2.prototype.updateFileMessage = function(e3, a4) {
    return r$1(this, void 0, void 0, function() {
      var n2, s4, i3, o3 = this;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return [4, r2.prototype.updateFileMessage.call(this, e3, a4)];
          case 1:
            return n2 = t4.sent(), s4 = false, i3 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === n2.messageId && (this.lastPinnedMessage = n2, s4 = true, i3 = true), s4 && Pe.of(this._iid).handlers.map(function(e4) {
              e4.onChannelChanged && e4.onChannelChanged(o3);
            }), i3 && Pe.of(this._iid).handlers.map(function(e4) {
              e4.onPinnedMessageUpdated && e4.onPinnedMessageUpdated(o3);
            }), [2, n2];
        }
      });
    });
  }, o2;
}(Ti);
(function(n2) {
  function t4(e3) {
    void 0 === e3 && (e3 = {});
    var t5 = n2.call(this) || this;
    return Object.keys(e3).forEach(function(n3) {
      t5.hasOwnProperty(n3) && (t5[n3] = e3[n3]);
    }), t5;
  }
  return t$2(t4, n2), t4;
})(function(n2) {
  function t4() {
    var e3 = null !== n2 && n2.apply(this, arguments) || this;
    return e3.onUserEntered = ut$1, e3.onUserExited = ut$1, e3.onChannelParticipantCountChanged = ut$1, e3.onPollUpdated = ut$1, e3.onPollVoted = ut$1, e3.onPollDeleted = ut$1, e3.onPinnedMessageUpdated = ut$1, e3;
  }
  return t$2(t4, n2), t4;
}(t$1));
var Re = function(n2) {
  function t4(e3) {
    var t5 = this, r2 = e3.token, a4 = e3.limit, s4 = e3.nameKeyword, i3 = e3.urlKeyword, u3 = e3.customTypes, c3 = e3.includeFrozen, h4 = e3.includeMetaData;
    return (t5 = n2.call(this) || this).method = ae.GET, t5.path = fe, t5.params = se({ token: r2, limit: a4, name_contains: s4, url_contains: i3, custom_types: u3, show_frozen: c3, show_metadata: h4, show_pinned_messages: true }), t5;
  }
  return t$2(t4, n2), t4;
}(Fe$2), Le = function(n2) {
  function t4(e3, t5) {
    var r2 = n2.call(this, e3, t5) || this;
    r2.channels = [];
    var a4 = t5.next, s4 = t5.channels, i3 = t5.ts;
    return r2.token = a4, s4 && s4.length > 0 && (r2.channels = s4.map(function(n3) {
      return new xe(e3, n3);
    })), r2.ts = "number" == typeof i3 ? i3 : null, r2;
  }
  return t$2(t4, n2), t4;
}(qe$2), Fe = function(r2) {
  function i3(e3, n2) {
    var t4, a4, s4, i4, o2, u3 = this;
    return (u3 = r2.call(this, e3, n2) || this).includeFrozen = true, u3.includeMetaData = true, u3.nameKeyword = null, u3.urlKeyword = null, u3.customTypes = null, u3.includeFrozen = null === (t4 = n2.includeFrozen) || void 0 === t4 || t4, u3.includeMetaData = null === (a4 = n2.includeMetaData) || void 0 === a4 || a4, u3.nameKeyword = null !== (s4 = n2.nameKeyword) && void 0 !== s4 ? s4 : null, u3.urlKeyword = null !== (i4 = n2.urlKeyword) && void 0 !== i4 ? i4 : null, u3.customTypes = null !== (o2 = n2.customTypes) && void 0 !== o2 ? o2 : null, u3;
  }
  return t$2(i3, r2), i3.prototype._validate = function() {
    return r2.prototype._validate.call(this) && S$1("boolean", this.includeFrozen) && S$1("boolean", this.includeMetaData) && S$1("string", this.nameKeyword, true) && S$1("string", this.urlKeyword, true) && C$1("string", this.customTypes, true);
  }, i3.prototype.next = function() {
    return r$1(this, void 0, void 0, function() {
      var e3, n2, r3, a4, s4, i4;
      return s$1(this, function(t4) {
        switch (t4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 4] : this._hasNext ? (this._isLoading = true, e3 = uo.of(this._iid).requestQueue, n2 = new Re(oe(n$2(n$2({}, this), { token: this._token }))), [4, e3.send(n2)]) : [3, 3] : [3, 6];
          case 1:
            return r3 = t4.sent(), a4 = r3.as(Le), s4 = a4.channels, i4 = a4.token, this._token = i4, this._hasNext = !!i4, [4, Pe.of(this._iid).upsertChannelsToCache(s4)];
          case 2:
            return t4.sent(), this._isLoading = false, [2, s4];
          case 3:
            return [2, []];
          case 4:
            throw b$2.queryInProgress;
          case 5:
            return [3, 7];
          case 6:
            throw b$2.invalidParameters;
          case 7:
            return [2];
        }
      });
    });
  }, i3;
}(Oo), ke = function(r2) {
  function a4() {
    var e3 = null !== r2 && r2.apply(this, arguments) || this;
    return e3.name = "openChannel", e3;
  }
  return t$2(a4, r2), a4.prototype.init = function(e3, n2) {
    var t4 = n2.sdkState, a5 = n2.dispatcher, s4 = n2.sessionManager, i3 = n2.requestQueue, o2 = n2.logger, u3 = n2.onlineDetector, l2 = n2.cacheContext;
    r2.prototype.init.call(this, e3, { sdkState: t4, dispatcher: a5, sessionManager: s4, requestQueue: i3, logger: o2, onlineDetector: u3, cacheContext: l2 }), this._manager = new Pe(e3, { sdkState: t4, dispatcher: a5, requestQueue: i3, logger: o2, cacheContext: l2, sessionManager: s4 });
  }, a4.prototype.createOpenChannelListQuery = function(e3) {
    return void 0 === e3 && (e3 = {}), new Fe(this._iid, e3);
  }, a4.prototype.addOpenChannelHandler = function(e3, n2) {
    this._manager.addHandler(e3, n2);
  }, a4.prototype.removeOpenChannelHandler = function(e3) {
    this._manager.removeHandler(e3);
  }, a4.prototype.removeAllOpenChannelHandlers = function() {
    this._manager.clearHandler();
  }, a4.prototype.buildOpenChannelFromSerializedData = function(e3) {
    return this._manager.buildOpenChannelFromSerializedData(e3);
  }, a4.prototype.getChannel = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return [2, this._manager.getChannel(e3)];
      });
    });
  }, a4.prototype.getChannelWithoutCache = function(e3) {
    return r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return [2, this._manager.getChannelWithoutCache(e3)];
      });
    });
  }, a4.prototype.createChannel = function(e3) {
    return void 0 === e3 && (e3 = {}), r$1(this, void 0, void 0, function() {
      return s$1(this, function(n2) {
        return [2, this._manager.createChannel(e3)];
      });
    });
  }, a4.prototype.createChannelWithOperatorUserIds = function(e3, r3, a5, s4, i3) {
    return r$1(this, void 0, void 0, function() {
      var n2;
      return s$1(this, function(t4) {
        return (n2 = n$2({}, ve)).name = e3, n2.coverUrlOrImage = r3, n2.data = a5, n2.operatorUserIds = s4, n2.customType = i3, [2, this._manager.createChannel(n2)];
      });
    });
  }, a4;
}(lo);
var updateAppInfoStore = function(state, payload) {
  return __assign(__assign({}, state), { stores: __assign(__assign({}, state.stores), { appInfoStore: __assign(__assign({}, state.stores.appInfoStore), payload) }) });
};
var updateSdkStore = function(state, payload) {
  return __assign(__assign({}, state), { stores: __assign(__assign({}, state.stores), { sdkStore: __assign(__assign({}, state.stores.sdkStore), payload) }) });
};
var updateUserStore = function(state, payload) {
  return __assign(__assign({}, state), { stores: __assign(__assign({}, state.stores), { userStore: __assign(__assign({}, state.stores.userStore), payload) }) });
};
function initSDK(_a2) {
  var appId = _a2.appId, customApiHost = _a2.customApiHost, customWebSocketHost = _a2.customWebSocketHost, _b2 = _a2.sdkInitParams, sdkInitParams = _b2 === void 0 ? {} : _b2;
  var params = Object.assign(sdkInitParams, {
    appId,
    modules: [new $e(), new ke()],
    // newInstance: isNewApp,
    localCacheEnabled: true
  });
  if (customApiHost)
    params.customApiHost = customApiHost;
  if (customWebSocketHost)
    params.customWebSocketHost = customWebSocketHost;
  return Ln.init(params);
}
var APP_VERSION_STRING = "3.16.2";
function setupSDK(sdk, params) {
  var _a2, _b2;
  var logger = params.logger, sessionHandler = params.sessionHandler, isMobile = params.isMobile, customExtensionParams = params.customExtensionParams;
  (_a2 = logger.info) === null || _a2 === void 0 ? void 0 : _a2.call(logger, "SendbirdProvider | useConnect/setupConnection/setVersion", { version: APP_VERSION_STRING });
  sdk.addExtension("sb_uikit", APP_VERSION_STRING);
  sdk.addSendbirdExtensions([{ product: Ye$2.UIKIT_CHAT, version: APP_VERSION_STRING, platform: Xe$1 === null || Xe$1 === void 0 ? void 0 : Xe$1.JS }], { platform: isMobile ? Je$2.MOBILE_WEB : Je$2.WEB }, customExtensionParams);
  if (sessionHandler) {
    (_b2 = logger.info) === null || _b2 === void 0 ? void 0 : _b2.call(logger, "SendbirdProvider | useConnect/setupConnection/configureSession", sessionHandler);
    sdk.setSessionHandler(sessionHandler);
  }
}
var NO_CONTEXT_ERROR = "No sendbird state value available. Make sure you are rendering `<SendbirdProvider>` at the top of your app.";
var useSendbird = function() {
  var store = useContext(SendbirdContext);
  if (!store)
    throw new Error(NO_CONTEXT_ERROR);
  var state = shimExports.useSyncExternalStore(store.subscribe, store.getState);
  var actions = useMemo(function() {
    return {
      /* Example: How to set the state basically */
      // exampleAction: () => {
      //   store.setState((state): SendbirdState => ({
      //     ...state,
      //     example: true,
      //   })),
      // },
      /* AppInfo */
      initMessageTemplateInfo: function(_a2) {
        var payload = _a2.payload;
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            messageTemplatesInfo: payload,
            waitingTemplateKeysMap: {}
          });
        });
      },
      upsertMessageTemplates: function(_a2) {
        var payload = _a2.payload;
        var appInfoStore = state.stores.appInfoStore;
        var templatesInfo = appInfoStore.messageTemplatesInfo;
        if (!templatesInfo)
          return state;
        var waitingTemplateKeysMap = __assign({}, appInfoStore.waitingTemplateKeysMap);
        payload.forEach(function(templatesMapData) {
          var key = templatesMapData.key, template = templatesMapData.template;
          templatesInfo.templatesMap[key] = template;
          delete waitingTemplateKeysMap[key];
        });
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            waitingTemplateKeysMap,
            messageTemplatesInfo: templatesInfo
          });
        });
      },
      upsertWaitingTemplateKeys: function(_a2) {
        var payload = _a2.payload;
        var appInfoStore = state.stores.appInfoStore;
        var keys2 = payload.keys, requestedAt = payload.requestedAt;
        var waitingTemplateKeysMap = __assign({}, appInfoStore.waitingTemplateKeysMap);
        keys2.forEach(function(key) {
          var _a3, _b2;
          waitingTemplateKeysMap[key] = {
            erroredMessageIds: (_b2 = (_a3 = waitingTemplateKeysMap[key]) === null || _a3 === void 0 ? void 0 : _a3.erroredMessageIds) !== null && _b2 !== void 0 ? _b2 : [],
            requestedAt
          };
        });
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            waitingTemplateKeysMap
          });
        });
      },
      markErrorWaitingTemplateKeys: function(_a2) {
        var payload = _a2.payload;
        var appInfoStore = state.stores.appInfoStore;
        var keys2 = payload.keys, messageId = payload.messageId;
        var waitingTemplateKeysMap = __assign({}, appInfoStore.waitingTemplateKeysMap);
        keys2.forEach(function(key) {
          var waitingTemplateKeyData = waitingTemplateKeysMap[key];
          if (waitingTemplateKeyData && waitingTemplateKeyData.erroredMessageIds.indexOf(messageId) === -1) {
            waitingTemplateKeyData.erroredMessageIds.push(messageId);
          }
        });
        store.setState(function(state2) {
          return updateAppInfoStore(state2, {
            waitingTemplateKeysMap
          });
        });
      },
      /* SDK */
      setSdkLoading: function(payload) {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            initialized: false,
            loading: payload
          });
        });
      },
      sdkError: function() {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            initialized: false,
            loading: false,
            error: true
          });
        });
      },
      initSdk: function(payload) {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            sdk: payload,
            initialized: true,
            loading: false,
            error: false
          });
        });
      },
      resetSdk: function() {
        store.setState(function(state2) {
          return updateSdkStore(state2, {
            sdk: {},
            initialized: false,
            loading: false,
            error: false
          });
        });
      },
      /* User */
      initUser: function(payload) {
        store.setState(function(state2) {
          return updateUserStore(state2, {
            initialized: true,
            loading: false,
            user: payload
          });
        });
      },
      resetUser: function() {
        store.setState(function(state2) {
          return updateUserStore(state2, {
            initialized: false,
            loading: false,
            user: {}
          });
        });
      },
      updateUserInfo: function(payload) {
        store.setState(function(state2) {
          return updateUserStore(state2, {
            user: payload
          });
        });
      },
      /* Connection */
      connect: function(params) {
        return __awaiter$5(void 0, void 0, void 0, function() {
          var logger, userId, appId, accessToken, nickname, profileUrl, isMobile, sdkInitParams, customApiHost, customWebSocketHost, customExtensionParams, eventHandlers, initializeMessageTemplatesInfo, configureSession, initDashboardConfigs, sdk, user, error_1, sendbirdError;
          var _a2, _b2, _c, _d, _e2;
          return __generator(this, function(_f) {
            switch (_f.label) {
              case 0:
                logger = params.logger, userId = params.userId, appId = params.appId, accessToken = params.accessToken, nickname = params.nickname, profileUrl = params.profileUrl, isMobile = params.isMobile, sdkInitParams = params.sdkInitParams, customApiHost = params.customApiHost, customWebSocketHost = params.customWebSocketHost, customExtensionParams = params.customExtensionParams, eventHandlers = params.eventHandlers, initializeMessageTemplatesInfo = params.initializeMessageTemplatesInfo, configureSession = params.configureSession, initDashboardConfigs = params.initDashboardConfigs;
                return [4, actions.disconnect({ logger })];
              case 1:
                _f.sent();
                sdk = initSDK({
                  appId,
                  customApiHost,
                  customWebSocketHost,
                  sdkInitParams
                });
                setupSDK(sdk, {
                  logger,
                  isMobile,
                  customExtensionParams,
                  sessionHandler: configureSession ? configureSession(sdk) : void 0
                });
                actions.setSdkLoading(true);
                _f.label = 2;
              case 2:
                _f.trys.push([2, 8, , 9]);
                return [4, sdk.connect(userId, accessToken)];
              case 3:
                user = _f.sent();
                actions.initUser(user);
                if (!(nickname || profileUrl)) return [3, 5];
                return [4, sdk.updateCurrentUserInfo({
                  nickname: nickname || user.nickname || "",
                  profileUrl: profileUrl || user.profileUrl
                })];
              case 4:
                _f.sent();
                _f.label = 5;
              case 5:
                return [4, initializeMessageTemplatesInfo === null || initializeMessageTemplatesInfo === void 0 ? void 0 : initializeMessageTemplatesInfo(sdk)];
              case 6:
                _f.sent();
                return [4, initDashboardConfigs === null || initDashboardConfigs === void 0 ? void 0 : initDashboardConfigs(sdk)];
              case 7:
                _f.sent();
                actions.initSdk(sdk);
                (_b2 = (_a2 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.connection) === null || _a2 === void 0 ? void 0 : _a2.onConnected) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, user);
                return [3, 9];
              case 8:
                error_1 = _f.sent();
                sendbirdError = error_1;
                actions.resetSdk();
                actions.resetUser();
                (_c = logger.error) === null || _c === void 0 ? void 0 : _c.call(logger, "SendbirdProvider | useSendbird/connect failed", sendbirdError);
                (_e2 = (_d = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.connection) === null || _d === void 0 ? void 0 : _d.onFailed) === null || _e2 === void 0 ? void 0 : _e2.call(_d, sendbirdError);
                return [3, 9];
              case 9:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      },
      disconnect: function(_a2) {
        return __awaiter$5(void 0, [_a2], void 0, function(_b2) {
          var sdk;
          var _c;
          var logger = _b2.logger;
          return __generator(this, function(_d) {
            switch (_d.label) {
              case 0:
                actions.setSdkLoading(true);
                sdk = state.stores.sdkStore.sdk;
                if (!(sdk === null || sdk === void 0 ? void 0 : sdk.disconnectWebSocket)) return [3, 2];
                return [4, sdk.disconnectWebSocket()];
              case 1:
                _d.sent();
                _d.label = 2;
              case 2:
                actions.resetSdk();
                actions.resetUser();
                (_c = logger.info) === null || _c === void 0 ? void 0 : _c.call(logger, "SendbirdProvider | useSendbird/disconnect completed");
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    };
  }, [store, state.stores.appInfoStore]);
  return { state, actions };
};
var UserProfileContext = React__default__default.createContext({
  disableUserProfile: true,
  isOpenChannel: false
});
var useUserProfileContext = function() {
  return useContext(UserProfileContext);
};
var UserProfileProvider = function(_a2) {
  var _b2;
  var _c = _a2.isOpenChannel, isOpenChannel = _c === void 0 ? false : _c, _d = _a2.disableUserProfile, _disableUserProfile = _d === void 0 ? false : _d, _renderUserProfile = _a2.renderUserProfile, _onUserProfileMessage = _a2.onUserProfileMessage, _onStartDirectMessage = _a2.onStartDirectMessage, children = _a2.children;
  var state = useSendbird().state;
  var config2 = state.config;
  var onStartDirectMessage = (_b2 = _onStartDirectMessage !== null && _onStartDirectMessage !== void 0 ? _onStartDirectMessage : _onUserProfileMessage) !== null && _b2 !== void 0 ? _b2 : config2.onStartDirectMessage;
  return React__default__default.createElement(UserProfileContext.Provider, { value: {
    isOpenChannel,
    disableUserProfile: _disableUserProfile !== null && _disableUserProfile !== void 0 ? _disableUserProfile : !config2.common.enableUsingDefaultUserProfile,
    renderUserProfile: _renderUserProfile !== null && _renderUserProfile !== void 0 ? _renderUserProfile : config2.renderUserProfile,
    onStartDirectMessage,
    /** legacy of onStartDirectMessage */
    onUserProfileMessage: onStartDirectMessage
  } }, children);
};
var pubSubFactory = function(opts) {
  var topics = {};
  return {
    __getTopics: function() {
      return topics;
    },
    subscribe: function(topic, listener) {
      var _a2;
      (_a2 = topics[topic]) !== null && _a2 !== void 0 ? _a2 : topics[topic] = /* @__PURE__ */ new Set();
      topics[topic].add(listener);
      return {
        remove: function() {
          topics[topic].delete(listener);
        }
      };
    },
    publish: function(topic, info) {
      if (topics[topic]) {
        topics[topic].forEach(function(fn2) {
          if (opts === null || opts === void 0 ? void 0 : opts.publishSynchronous) {
            fn2(info !== void 0 ? info : {});
          } else {
            setTimeout(function() {
              return fn2(info !== void 0 ? info : {});
            }, 0);
          }
        });
      }
    }
  };
};
var MAX_USER_MENTION_COUNT = 10;
var MAX_USER_SUGGESTION_COUNT = 15;
var USER_MENTION_TEMP_CHAR = "@";
var UIKIT_COMPATIBLE_FORM_VERSION = 1;
var ThreadReplySelectType;
(function(ThreadReplySelectType2) {
  ThreadReplySelectType2["PARENT"] = "PARENT";
  ThreadReplySelectType2["THREAD"] = "THREAD";
})(ThreadReplySelectType || (ThreadReplySelectType = {}));
function getComponentKeyFromMessage(message) {
  if ("sendingStatus" in message) {
    if (message.sendingStatus === "succeeded")
      return String(message.messageId);
    return message.reqId;
  }
  return String(message.messageId);
}
function isContextMenuClosed() {
  var _a2, _b2;
  return ((_a2 = document.getElementById("sendbird-dropdown-portal")) === null || _a2 === void 0 ? void 0 : _a2.childElementCount) === 0 && ((_b2 = document.getElementById("sendbird-emoji-list-portal")) === null || _b2 === void 0 ? void 0 : _b2.childElementCount) === 0;
}
function getMessageTopOffset(messageCreatedAt) {
  var _a2;
  var element = (_a2 = document.querySelectorAll('[data-sb-created-at="'.concat(messageCreatedAt, '"]'))) === null || _a2 === void 0 ? void 0 : _a2[0];
  if (element instanceof HTMLElement) {
    return element.offsetTop;
  }
  return null;
}
var isDisabledBecauseFrozen$1 = function(groupChannel) {
  if (!groupChannel)
    return false;
  return groupChannel.isFrozen && groupChannel.myRole !== "operator";
};
var isDisabledBecauseMuted$1 = function(groupChannel) {
  if (!groupChannel)
    return false;
  return groupChannel.myMutedState === "muted";
};
var isDisabledBecauseSuggestedReplies = function(channel, enableSuggestedReplies) {
  var _a2, _b2, _c, _d;
  return enableSuggestedReplies && Array.isArray((_b2 = (_a2 = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _a2 === void 0 ? void 0 : _a2.extendedMessagePayload) === null || _b2 === void 0 ? void 0 : _b2.suggested_replies) && !!((_d = (_c = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _c === void 0 ? void 0 : _c.extendedMessagePayload) === null || _d === void 0 ? void 0 : _d.disable_chat_input);
};
var isFormVersionCompatible = function(version) {
  return version <= UIKIT_COMPATIBLE_FORM_VERSION;
};
var isDisabledBecauseMessageForm = function(allMessages, enableFormTypeMessage) {
  return enableFormTypeMessage && allMessages.some(function(message) {
    var _a2;
    return !!message.messageForm && !message.messageForm.isSubmitted && !!((_a2 = message.extendedMessagePayload) === null || _a2 === void 0 ? void 0 : _a2.disable_chat_input) && isFormVersionCompatible(message.messageForm.version);
  });
};
function getIsReactionEnabled(_a2) {
  var channel = _a2.channel, config2 = _a2.config, moduleLevel = _a2.moduleLevel;
  if (!channel || channel.isBroadcast || channel.isEphemeral) {
    return false;
  }
  if (channel.isSuper)
    return moduleLevel !== null && moduleLevel !== void 0 ? moduleLevel : config2.groupChannel.enableReactionsSupergroup;
  return moduleLevel !== null && moduleLevel !== void 0 ? moduleLevel : config2.groupChannel.enableReactions;
}
function getCaseResolvedReplyType(replyType) {
  return {
    lowerCase: replyType.toLowerCase(),
    upperCase: replyType.toUpperCase()
  };
}
function getCaseResolvedThreadReplySelectType(threadReplySelectType) {
  return {
    lowerCase: threadReplySelectType.toLowerCase(),
    upperCase: threadReplySelectType.toUpperCase()
  };
}
var PublishingModuleType;
(function(PublishingModuleType2) {
  PublishingModuleType2["CHANNEL"] = "CHANNEL";
  PublishingModuleType2["THREAD"] = "THREAD";
})(PublishingModuleType || (PublishingModuleType = {}));
var isTargetIncludedInModules = function(target, modules) {
  if (!modules || modules.length === 0)
    return true;
  else
    return modules.includes(target);
};
function shouldPubSubPublishToChannel(modules) {
  return isTargetIncludedInModules(PublishingModuleType.CHANNEL, modules);
}
function shouldPubSubPublishToThread(modules) {
  return isTargetIncludedInModules(PublishingModuleType.THREAD, modules);
}
var PUBSUB_TOPICS;
(function(PUBSUB_TOPICS2) {
  PUBSUB_TOPICS2["USER_UPDATED"] = "USER_UPDATED";
  PUBSUB_TOPICS2["SEND_MESSAGE_START"] = "SEND_MESSAGE_START";
  PUBSUB_TOPICS2["SEND_MESSAGE_FAILED"] = "SEND_MESSAGE_FAILED";
  PUBSUB_TOPICS2["SEND_USER_MESSAGE"] = "SEND_USER_MESSAGE";
  PUBSUB_TOPICS2["SEND_FILE_MESSAGE"] = "SEND_FILE_MESSAGE";
  PUBSUB_TOPICS2["ON_FILE_INFO_UPLOADED"] = "ON_FILE_INFO_UPLOADED";
  PUBSUB_TOPICS2["UPDATE_USER_MESSAGE"] = "UPDATE_USER_MESSAGE";
  PUBSUB_TOPICS2["DELETE_MESSAGE"] = "DELETE_MESSAGE";
  PUBSUB_TOPICS2["LEAVE_CHANNEL"] = "LEAVE_CHANNEL";
  PUBSUB_TOPICS2["CREATE_CHANNEL"] = "CREATE_CHANNEL";
  PUBSUB_TOPICS2["UPDATE_OPEN_CHANNEL"] = "UPDATE_OPEN_CHANNEL";
})(PUBSUB_TOPICS || (PUBSUB_TOPICS = {}));
var pubSubTopics = PUBSUB_TOPICS;
function useDeepCompareMemoize(value) {
  var ref = useRef(value);
  if (!isEqual$1(value, ref.current)) {
    ref.current = value;
  }
  return ref.current;
}
function useDeepCompareEffect(callback, dependencies) {
  useEffect(callback, dependencies.map(useDeepCompareMemoize));
}
var delay = function(ms2) {
  return new Promise(function(resolve) {
    setTimeout(resolve, ms2);
  });
};
var noop$4 = function() {
};
var deleteNullish = function(obj) {
  var cleaned = {};
  Object.entries(obj).forEach(function(_a2) {
    var key = _a2[0], value = _a2[1];
    if (value !== void 0 && value !== null) {
      cleaned[key] = value;
    }
  });
  return cleaned;
};
function openURL(url) {
  var safeURL = url;
  if (safeURL) {
    if (!safeURL.startsWith("http://") && !safeURL.startsWith("https://")) {
      safeURL = "https://" + safeURL;
    }
    window.open(safeURL, "_blank", "noopener,noreferrer");
  }
}
function classnames() {
  var args = [];
  for (var _i2 = 0; _i2 < arguments.length; _i2++) {
    args[_i2] = arguments[_i2];
  }
  return args.filter(Boolean).join(" ");
}
var n = Symbol("@ts-pattern/matcher"), t = "@ts-pattern/anonymous-select-key", e = function(n2) {
  return Boolean(n2 && "object" == typeof n2);
}, r = function(t4) {
  return t4 && !!t4[n];
}, u = function t2(u3, i3, c3) {
  if (e(u3)) {
    if (r(u3)) {
      var o2 = u3[n]().match(i3), a4 = o2.matched, f2 = o2.selections;
      return a4 && f2 && Object.keys(f2).forEach(function(n2) {
        return c3(n2, f2[n2]);
      }), a4;
    }
    if (!e(i3)) return false;
    if (Array.isArray(u3)) return !!Array.isArray(i3) && u3.length === i3.length && u3.every(function(n2, e3) {
      return t2(n2, i3[e3], c3);
    });
    if (u3 instanceof Map) return i3 instanceof Map && Array.from(u3.keys()).every(function(n2) {
      return t2(u3.get(n2), i3.get(n2), c3);
    });
    if (u3 instanceof Set) {
      if (!(i3 instanceof Set)) return false;
      if (0 === u3.size) return 0 === i3.size;
      if (1 === u3.size) {
        var s4 = Array.from(u3.values())[0];
        return r(s4) ? Array.from(i3.values()).every(function(n2) {
          return t2(s4, n2, c3);
        }) : i3.has(s4);
      }
      return Array.from(u3.values()).every(function(n2) {
        return i3.has(n2);
      });
    }
    return Object.keys(u3).every(function(e3) {
      var o3, a5 = u3[e3];
      return (e3 in i3 || r(o3 = a5) && "optional" === o3[n]().matcherType) && t2(a5, i3[e3], c3);
    });
  }
  return Object.is(i3, u3);
};
function h(t4) {
  var e3;
  return (e3 = {})[n] = function() {
    return { match: function(n2) {
      return { matched: Boolean(t4(n2)) };
    } };
  }, e3;
}
h(function(n2) {
  return true;
});
h(function(n2) {
  return "string" == typeof n2;
});
h(function(n2) {
  return "number" == typeof n2;
});
h(function(n2) {
  return "boolean" == typeof n2;
});
h(function(n2) {
  return "bigint" == typeof n2;
});
h(function(n2) {
  return "symbol" == typeof n2;
});
h(function(n2) {
  return null == n2;
});
function K(n2) {
  return new O(n2, []);
}
var O = /* @__PURE__ */ function() {
  function n2(n3, t4) {
    this.value = void 0, this.cases = void 0, this.value = n3, this.cases = t4;
  }
  var e3 = n2.prototype;
  return e3.with = function() {
    var e4 = [].slice.call(arguments), r2 = e4[e4.length - 1], i3 = [e4[0]], c3 = [];
    return 3 === e4.length && "function" == typeof e4[1] ? (i3.push(e4[0]), c3.push(e4[1])) : e4.length > 2 && i3.push.apply(i3, e4.slice(1, e4.length - 1)), new n2(this.value, this.cases.concat([{ match: function(n3) {
      var e5 = {}, r3 = Boolean(i3.some(function(t4) {
        return u(t4, n3, function(n4, t5) {
          e5[n4] = t5;
        });
      }) && c3.every(function(t4) {
        return t4(n3);
      }));
      return { matched: r3, value: r3 && Object.keys(e5).length ? t in e5 ? e5[t] : e5 : n3 };
    }, handler: r2 }]));
  }, e3.when = function(t4, e4) {
    return new n2(this.value, this.cases.concat([{ match: function(n3) {
      return { matched: Boolean(t4(n3)), value: n3 };
    }, handler: e4 }]));
  }, e3.otherwise = function(t4) {
    return new n2(this.value, this.cases.concat([{ match: function(n3) {
      return { matched: true, value: n3 };
    }, handler: t4 }])).run();
  }, e3.exhaustive = function() {
    return this.run();
  }, e3.run = function() {
    for (var n3 = this.value, t4 = void 0, e4 = 0; e4 < this.cases.length; e4++) {
      var r2 = this.cases[e4], u3 = r2.match(this.value);
      if (u3.matched) {
        n3 = u3.value, t4 = r2.handler;
        break;
      }
    }
    if (!t4) {
      var i3;
      try {
        i3 = JSON.stringify(this.value);
      } catch (n4) {
        i3 = this.value;
      }
      throw new Error("Pattern matching error: no pattern matches value " + i3);
    }
    return t4(n3, this.value);
  }, n2;
}();
var pass = function(value) {
  return value;
};
function useMessageActions(params) {
  var _this = this;
  var _a2 = params.onBeforeSendUserMessage, onBeforeSendUserMessage = _a2 === void 0 ? pass : _a2, _b2 = params.onBeforeSendFileMessage, onBeforeSendFileMessage = _b2 === void 0 ? pass : _b2, _c = params.onBeforeUpdateUserMessage, onBeforeUpdateUserMessage = _c === void 0 ? pass : _c, _d = params.onBeforeSendVoiceMessage, onBeforeSendVoiceMessage = _d === void 0 ? pass : _d, _e2 = params.onBeforeSendMultipleFilesMessage, onBeforeSendMultipleFilesMessage = _e2 === void 0 ? pass : _e2, sendFileMessage = params.sendFileMessage, sendMultipleFilesMessage = params.sendMultipleFilesMessage, sendUserMessage = params.sendUserMessage, updateUserMessage = params.updateUserMessage, updateFileMessage = params.updateFileMessage, resendMessage = params.resendMessage, deleteMessage = params.deleteMessage, resetNewMessages = params.resetNewMessages, scrollToBottom = params.scrollToBottom, quoteMessage = params.quoteMessage, replyType = params.replyType, currentChannel = params.currentChannel;
  var _f = useSendbird().state, eventHandlers = _f.eventHandlers, pubSub = _f.config.pubSub;
  var buildInternalMessageParams = useCallback(function(basicParams) {
    var messageParams = __assign({}, basicParams);
    if (params.quoteMessage && replyType !== "NONE") {
      messageParams.isReplyToChannel = true;
      messageParams.parentMessageId = quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId;
    }
    return messageParams;
  }, [replyType, quoteMessage]);
  var asyncScrollToBottom = useCallback(function() {
    setTimeout(scrollToBottom, 0);
  }, []);
  var processParams = useCallback(function(handler, params2, type) {
    return __awaiter$5(_this, void 0, void 0, function() {
      var result, error_1;
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            _a3.trys.push([0, 2, , 3]);
            return [4, handler(params2)];
          case 1:
            result = _a3.sent();
            return [2, result === void 0 ? params2 : result];
          case 2:
            error_1 = _a3.sent();
            if (typeof (eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.message) === "object") {
              K(type).with("file", "voice", function() {
                var _a4, _b3, _c2, _d2;
                if (params2.file) {
                  (_b3 = (_a4 = eventHandlers.message).onFileUploadFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, error_1);
                }
                (_d2 = (_c2 = eventHandlers.message).onSendMessageFailed) === null || _d2 === void 0 ? void 0 : _d2.call(_c2, params2, error_1);
              }).with("multipleFiles", function() {
                var _a4, _b3, _c2, _d2;
                if (params2.fileInfoList) {
                  (_b3 = (_a4 = eventHandlers.message).onFileUploadFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, error_1);
                }
                (_d2 = (_c2 = eventHandlers.message).onSendMessageFailed) === null || _d2 === void 0 ? void 0 : _d2.call(_c2, params2, error_1);
              }).with("user", function() {
                var _a4, _b3;
                (_b3 = (_a4 = eventHandlers.message).onSendMessageFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, params2, error_1);
              }).with("update", function() {
                var _a4, _b3;
                (_b3 = (_a4 = eventHandlers.message).onUpdateMessageFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, params2, error_1);
              }).exhaustive();
            }
            throw error_1;
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [eventHandlers]);
  return {
    sendUserMessage: useCallback(function(params2) {
      return __awaiter$5(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a3) {
          switch (_a3.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, processParams(onBeforeSendUserMessage, internalParams, "user")];
            case 1:
              processedParams = _a3.sent();
              return [2, sendUserMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendUserMessage, scrollToBottom, processParams]),
    sendFileMessage: useCallback(function(params2) {
      return __awaiter$5(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a3) {
          switch (_a3.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, processParams(onBeforeSendFileMessage, internalParams, "file")];
            case 1:
              processedParams = _a3.sent();
              return [2, sendFileMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendFileMessage, scrollToBottom, processParams]),
    sendMultipleFilesMessage: useCallback(function(params2) {
      return __awaiter$5(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a3) {
          switch (_a3.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, processParams(onBeforeSendMultipleFilesMessage, internalParams, "multipleFiles")];
            case 1:
              processedParams = _a3.sent();
              return [2, sendMultipleFilesMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendMultipleFilesMessage, scrollToBottom, processParams]),
    sendVoiceMessage: useCallback(function(params2, duration) {
      return __awaiter$5(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a3) {
          switch (_a3.label) {
            case 0:
              internalParams = buildInternalMessageParams(__assign(__assign({}, params2), { fileName: VOICE_MESSAGE_FILE_NAME, mimeType: VOICE_MESSAGE_MIME_TYPE, metaArrays: [
                new Ve$1({
                  key: META_ARRAY_VOICE_DURATION_KEY,
                  value: ["".concat(duration)]
                }),
                new Ve$1({
                  key: META_ARRAY_MESSAGE_TYPE_KEY,
                  value: [META_ARRAY_MESSAGE_TYPE_VALUE__VOICE]
                })
              ] }));
              return [4, processParams(onBeforeSendVoiceMessage, internalParams, "voice")];
            case 1:
              processedParams = _a3.sent();
              return [2, sendFileMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendFileMessage, scrollToBottom, processParams]),
    updateUserMessage: useCallback(function(messageId, params2) {
      return __awaiter$5(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a3) {
          switch (_a3.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, processParams(onBeforeUpdateUserMessage, internalParams, "update")];
            case 1:
              processedParams = _a3.sent();
              return [2, updateUserMessage(messageId, processedParams).then(function(message) {
                pubSub.publish(PUBSUB_TOPICS.UPDATE_USER_MESSAGE, {
                  channel: currentChannel,
                  message,
                  publishingModules: [PublishingModuleType.CHANNEL]
                });
                return message;
              })];
          }
        });
      });
    }, [buildInternalMessageParams, updateUserMessage, processParams, currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]),
    updateFileMessage,
    resendMessage,
    deleteMessage,
    resetNewMessages
  };
}
var useGroupChannel = function() {
  var _a2, _b2, _c;
  var store = useContext(GroupChannelContext);
  if (!store)
    throw new Error("useGroupChannel must be used within a GroupChannelProvider");
  var config2 = useSendbird().state.config;
  var markAsReadScheduler = config2.markAsReadScheduler;
  var state = shimExports.useSyncExternalStore(store.subscribe, store.getState);
  var setAnimatedMessageId = useCallback(function(messageId) {
    store.setState(function(state2) {
      return __assign(__assign({}, state2), { animatedMessageId: messageId });
    });
  }, []);
  var setIsScrollBottomReached = useCallback(function(isReached) {
    store.setState(function(state2) {
      return __assign(__assign({}, state2), { isScrollBottomReached: isReached });
    });
  }, []);
  var scrollToBottom = useCallback(function(animated) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            if (!state.scrollRef.current)
              return [
                2
                /*return*/
              ];
            setAnimatedMessageId(null);
            setIsScrollBottomReached(true);
            return [4, delay()];
          case 1:
            _a3.sent();
            if (!(config2.isOnline && state.hasNext())) return [3, 3];
            return [4, state.resetWithStartingPoint(Number.MAX_SAFE_INTEGER)];
          case 2:
            _a3.sent();
            _a3.label = 3;
          case 3:
            state.scrollPubSub.publish("scrollToBottom", { animated });
            if (state.currentChannel && !state.hasNext()) {
              state.resetNewMessages();
              if (!state.disableMarkAsRead) {
                markAsReadScheduler.push(state.currentChannel);
              }
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [state.scrollRef.current, config2.isOnline, markAsReadScheduler]);
  var scrollToMessage = useCallback(function(createdAt, messageId, messageFocusAnimated, scrollAnimated) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var element, parentNode, clickHandler, message, topOffset;
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            element = state.scrollRef.current;
            parentNode = element === null || element === void 0 ? void 0 : element.parentNode;
            clickHandler = {
              activate: function() {
                if (!element || !parentNode)
                  return;
                element.style.pointerEvents = "auto";
                parentNode.style.cursor = "auto";
              },
              deactivate: function() {
                if (!element || !parentNode)
                  return;
                element.style.pointerEvents = "none";
                parentNode.style.cursor = "wait";
              }
            };
            clickHandler.deactivate();
            setAnimatedMessageId(null);
            message = state.messages.find(function(it2) {
              return it2.messageId === messageId || it2.createdAt === createdAt;
            });
            if (!message) return [3, 1];
            topOffset = getMessageTopOffset(message.createdAt);
            if (topOffset)
              state.scrollPubSub.publish("scroll", { top: topOffset, animated: scrollAnimated });
            if (messageFocusAnimated !== null && messageFocusAnimated !== void 0 ? messageFocusAnimated : true)
              setAnimatedMessageId(messageId);
            return [3, 3];
          case 1:
            return [4, state.resetWithStartingPoint(createdAt)];
          case 2:
            _a3.sent();
            setTimeout(function() {
              var topOffset2 = getMessageTopOffset(createdAt);
              if (topOffset2) {
                state.scrollPubSub.publish("scroll", {
                  top: topOffset2,
                  lazy: false,
                  animated: scrollAnimated
                });
              }
              if (messageFocusAnimated !== null && messageFocusAnimated !== void 0 ? messageFocusAnimated : true)
                setAnimatedMessageId(messageId);
            });
            _a3.label = 3;
          case 3:
            clickHandler.activate();
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [setAnimatedMessageId, state.scrollRef.current, (_a2 = state.messages) === null || _a2 === void 0 ? void 0 : _a2.map(function(it2) {
    return it2 === null || it2 === void 0 ? void 0 : it2.messageId;
  })]);
  var toggleReaction = useCallback(function(message, emojiKey, isReacted) {
    if (!state.currentChannel)
      return;
    if (isReacted) {
      state.currentChannel.deleteReaction(message, emojiKey).catch(function(error) {
        var _a3;
        (_a3 = config2.logger) === null || _a3 === void 0 ? void 0 : _a3.warning("Failed to delete reaction:", error);
      });
    } else {
      state.currentChannel.addReaction(message, emojiKey).catch(function(error) {
        var _a3;
        (_a3 = config2.logger) === null || _a3 === void 0 ? void 0 : _a3.warning("Failed to add reaction:", error);
      });
    }
  }, [(_b2 = state.currentChannel) === null || _b2 === void 0 ? void 0 : _b2.deleteReaction, (_c = state.currentChannel) === null || _c === void 0 ? void 0 : _c.addReaction]);
  var messageActions = useMessageActions(__assign(__assign({}, state), { scrollToBottom }));
  var setCurrentChannel = useCallback(function(channel) {
    store.setState(function(state2) {
      return __assign(__assign({}, state2), { currentChannel: channel, fetchChannelError: null, quoteMessage: null, animatedMessageId: null, nicknamesMap: new Map(channel.members.map(function(_a3) {
        var userId = _a3.userId, nickname = _a3.nickname;
        return [userId, nickname];
      })) });
    }, true);
  }, []);
  var handleChannelError = useCallback(function(error) {
    store.setState(function(state2) {
      return __assign(__assign({}, state2), { currentChannel: null, fetchChannelError: error, quoteMessage: null, animatedMessageId: null });
    });
  }, []);
  var setQuoteMessage = useCallback(function(message) {
    store.setState(function(state2) {
      return __assign(__assign({}, state2), { quoteMessage: message });
    });
  }, []);
  var actions = useMemo(function() {
    return __assign({ setCurrentChannel, handleChannelError, setQuoteMessage, scrollToBottom, scrollToMessage, toggleReaction, setAnimatedMessageId, setIsScrollBottomReached }, messageActions);
  }, [
    setCurrentChannel,
    handleChannelError,
    setQuoteMessage,
    scrollToBottom,
    scrollToMessage,
    toggleReaction,
    setAnimatedMessageId,
    setIsScrollBottomReached,
    messageActions
  ]);
  return { state, actions };
};
function useMessageListScroll(behavior, deps) {
  if (deps === void 0) {
    deps = [];
  }
  var scrollRef = useRef(null);
  var scrollPositionRef = useRef(0);
  var scrollDistanceFromBottomRef = useRef(0);
  var scrollPubSub = useState(function() {
    return pubSubFactory({ publishSynchronous: true });
  })[0];
  var setIsScrollBottomReached = useGroupChannel().actions.setIsScrollBottomReached;
  useLayoutEffect(function() {
    scrollPositionRef.current = 0;
    scrollDistanceFromBottomRef.current = 0;
    setIsScrollBottomReached(true);
    if (scrollRef.current)
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
  }, deps);
  useLayoutEffect(function() {
    var unsubscribes = [];
    unsubscribes.push(scrollPubSub.subscribe("scrollToBottom", function(_a2) {
      var resolve = _a2.resolve, animated = _a2.animated;
      runCallback(function() {
        if (!scrollRef.current) {
          if (resolve)
            resolve();
          return;
        }
        if (scrollRef.current.scroll) {
          scrollRef.current.scroll({ top: scrollRef.current.scrollHeight, behavior: getScrollBehavior(behavior, animated) });
        } else {
          scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
        }
        scrollDistanceFromBottomRef.current = 0;
        setIsScrollBottomReached(true);
        if (resolve)
          resolve();
      });
    }));
    unsubscribes.push(scrollPubSub.subscribe("scroll", function(_a2) {
      var top = _a2.top, animated = _a2.animated, lazy = _a2.lazy, resolve = _a2.resolve;
      runCallback(function() {
        if (!scrollRef.current)
          return;
        var _a3 = scrollRef.current, scrollTop = _a3.scrollTop, scrollHeight = _a3.scrollHeight, clientHeight = _a3.clientHeight;
        if (scrollRef.current.scroll) {
          scrollRef.current.scroll({ top, behavior: getScrollBehavior(behavior, animated) });
        } else if (typeof top === "number") {
          scrollRef.current.scrollTop = top;
        }
        scrollDistanceFromBottomRef.current = Math.max(0, scrollHeight - scrollTop - clientHeight);
        setIsScrollBottomReached(scrollDistanceFromBottomRef.current === 0);
        if (resolve)
          resolve();
      }, lazy);
    }));
    return function() {
      unsubscribes.forEach(function(_a2) {
        var remove2 = _a2.remove;
        return remove2();
      });
    };
  }, [behavior]);
  return {
    scrollRef,
    scrollPubSub,
    scrollDistanceFromBottomRef,
    scrollPositionRef
  };
}
function runCallback(callback, lazy) {
  if (lazy === void 0) {
    lazy = true;
  }
  if (lazy) {
    setTimeout(function() {
      callback();
    });
  } else {
    callback();
  }
}
function getScrollBehavior(behavior, animated) {
  if (typeof animated === "boolean")
    return animated ? "smooth" : "auto";
  return behavior;
}
var initialState$2 = {
  currentChannel: null,
  channelUrl: "",
  fetchChannelError: null,
  nicknamesMap: /* @__PURE__ */ new Map(),
  messages: [],
  quoteMessage: null,
  animatedMessageId: null,
  isScrollBottomReached: true,
  scrollRef: { current: null },
  scrollDistanceFromBottomRef: { current: 0 },
  scrollPositionRef: { current: 0 },
  messageInputRef: { current: null },
  isReactionEnabled: false,
  isMessageGroupingEnabled: true,
  isMultipleFilesMessageEnabled: false,
  showSearchIcon: true,
  replyType: "NONE",
  threadReplySelectType: ThreadReplySelectType.PARENT,
  disableMarkAsRead: false,
  scrollBehavior: "auto",
  scrollPubSub: null
};
var GroupChannelContext = createContext(null);
var createGroupChannelStore = function(props) {
  return createStore(__assign(__assign({}, initialState$2), props));
};
var InternalGroupChannelProvider = function(props) {
  var children = props.children;
  var defaultProps = deleteNullish({
    channelUrl: props === null || props === void 0 ? void 0 : props.channelUrl,
    renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile,
    disableUserProfile: props === null || props === void 0 ? void 0 : props.disableUserProfile,
    onUserProfileMessage: props === null || props === void 0 ? void 0 : props.onUserProfileMessage,
    onStartDirectMessage: props === null || props === void 0 ? void 0 : props.onStartDirectMessage,
    isReactionEnabled: props === null || props === void 0 ? void 0 : props.isReactionEnabled,
    isMessageGroupingEnabled: props === null || props === void 0 ? void 0 : props.isMessageGroupingEnabled,
    isMultipleFilesMessageEnabled: props === null || props === void 0 ? void 0 : props.isMultipleFilesMessageEnabled,
    showSearchIcon: props === null || props === void 0 ? void 0 : props.showSearchIcon,
    threadReplySelectType: props === null || props === void 0 ? void 0 : props.threadReplySelectType,
    disableMarkAsRead: props === null || props === void 0 ? void 0 : props.disableMarkAsRead,
    scrollBehavior: props === null || props === void 0 ? void 0 : props.scrollBehavior,
    forceLeftToRightMessageLayout: props === null || props === void 0 ? void 0 : props.forceLeftToRightMessageLayout,
    startingPoint: props === null || props === void 0 ? void 0 : props.startingPoint,
    animatedMessageId: props === null || props === void 0 ? void 0 : props.animatedMessageId,
    onMessageAnimated: props === null || props === void 0 ? void 0 : props.onMessageAnimated,
    messageListQueryParams: props === null || props === void 0 ? void 0 : props.messageListQueryParams,
    filterEmojiCategoryIds: props === null || props === void 0 ? void 0 : props.filterEmojiCategoryIds,
    onBeforeSendUserMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendUserMessage,
    onBeforeSendFileMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendFileMessage,
    onBeforeSendVoiceMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendVoiceMessage,
    onBeforeSendMultipleFilesMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendMultipleFilesMessage,
    onBeforeUpdateUserMessage: props === null || props === void 0 ? void 0 : props.onBeforeUpdateUserMessage,
    onBeforeDownloadFileMessage: props === null || props === void 0 ? void 0 : props.onBeforeDownloadFileMessage,
    onBackClick: props === null || props === void 0 ? void 0 : props.onBackClick,
    onChatHeaderActionClick: props === null || props === void 0 ? void 0 : props.onChatHeaderActionClick,
    onReplyInThreadClick: props === null || props === void 0 ? void 0 : props.onReplyInThreadClick,
    onSearchClick: props === null || props === void 0 ? void 0 : props.onSearchClick,
    onQuoteMessageClick: props === null || props === void 0 ? void 0 : props.onQuoteMessageClick,
    renderUserMentionItem: props === null || props === void 0 ? void 0 : props.renderUserMentionItem
  });
  var storeRef = useRef(createGroupChannelStore(defaultProps));
  return React__default__default.createElement(GroupChannelContext.Provider, { value: storeRef.current }, children);
};
var GroupChannelManager = function(props) {
  var _a2, _b2, _c;
  var channelUrl = props.channelUrl, children = props.children, moduleReactionEnabled = props.isReactionEnabled, moduleReplyType = props.replyType, moduleThreadReplySelectType = props.threadReplySelectType, _d = props.isMessageGroupingEnabled, isMessageGroupingEnabled = _d === void 0 ? true : _d, isMultipleFilesMessageEnabled = props.isMultipleFilesMessageEnabled, showSearchIcon = props.showSearchIcon, _e2 = props.disableMarkAsRead, disableMarkAsRead = _e2 === void 0 ? false : _e2, _f = props.scrollBehavior, scrollBehavior = _f === void 0 ? "auto" : _f, startingPoint = props.startingPoint, _animatedMessageId = props.animatedMessageId, messageListQueryParams = props.messageListQueryParams, onBeforeSendUserMessage = props.onBeforeSendUserMessage, onBeforeSendFileMessage = props.onBeforeSendFileMessage, onBeforeSendVoiceMessage = props.onBeforeSendVoiceMessage, onBeforeSendMultipleFilesMessage = props.onBeforeSendMultipleFilesMessage, onBeforeUpdateUserMessage = props.onBeforeUpdateUserMessage, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, onMessageAnimated = props.onMessageAnimated, onBackClick = props.onBackClick, onChatHeaderActionClick = props.onChatHeaderActionClick, onReplyInThreadClick = props.onReplyInThreadClick, onSearchClick = props.onSearchClick, onQuoteMessageClick = props.onQuoteMessageClick, renderUserMentionItem = props.renderUserMentionItem, filterEmojiCategoryIds = props.filterEmojiCategoryIds;
  var _g2 = useGroupChannel(), state = _g2.state, actions = _g2.actions;
  var updateState = useGroupChannelStore().updateState;
  var _h = useSendbird().state, config2 = _h.config, stores2 = _h.stores;
  var sdkStore = stores2.sdkStore;
  var markAsReadScheduler = config2.markAsReadScheduler, logger = config2.logger, pubSub = config2.pubSub;
  var _j = useMessageListScroll(scrollBehavior, [(_a2 = state.currentChannel) === null || _a2 === void 0 ? void 0 : _a2.url]), scrollRef = _j.scrollRef, scrollPubSub = _j.scrollPubSub, scrollDistanceFromBottomRef = _j.scrollDistanceFromBottomRef, scrollPositionRef = _j.scrollPositionRef;
  var isScrollBottomReached = state.isScrollBottomReached;
  var resolvedReplyType = getCaseResolvedReplyType(moduleReplyType !== null && moduleReplyType !== void 0 ? moduleReplyType : config2.groupChannel.replyType).upperCase;
  var resolvedThreadReplySelectType = getCaseResolvedThreadReplySelectType(moduleThreadReplySelectType !== null && moduleThreadReplySelectType !== void 0 ? moduleThreadReplySelectType : config2.groupChannel.threadReplySelectType).upperCase;
  var replyType = getCaseResolvedReplyType(moduleReplyType !== null && moduleReplyType !== void 0 ? moduleReplyType : config2.groupChannel.replyType).upperCase;
  var resolvedIsReactionEnabled = getIsReactionEnabled({
    channel: state.currentChannel,
    config: config2,
    moduleLevel: moduleReactionEnabled
  });
  var chatReplyType = useIIFE(function() {
    if (replyType === "NONE")
      return Q.NONE;
    return Q.ONLY_REPLY_TO_CHANNEL;
  });
  var messageDataSource = useGroupChannelMessages(sdkStore.sdk, state.currentChannel, {
    startingPoint,
    replyType: chatReplyType,
    collectionCreator: getCollectionCreator$1(state.currentChannel, messageListQueryParams),
    shouldCountNewMessages: function() {
      return !isScrollBottomReached;
    },
    markAsRead: function(channels) {
      if (isScrollBottomReached && !disableMarkAsRead) {
        channels.forEach(function(it2) {
          return markAsReadScheduler.push(it2);
        });
      }
    },
    onMessagesReceived: function(messages) {
      if (isScrollBottomReached && isContextMenuClosed() && messages.length !== state.messages.length) {
        setTimeout(function() {
          return actions.scrollToBottom(true);
        }, 10);
      }
    },
    onChannelDeleted: function() {
      actions.setCurrentChannel(null);
      onBackClick === null || onBackClick === void 0 ? void 0 : onBackClick();
    },
    onCurrentUserBanned: function() {
      actions.setCurrentChannel(null);
      onBackClick === null || onBackClick === void 0 ? void 0 : onBackClick();
    },
    onChannelUpdated: function(channel) {
      actions.setCurrentChannel(channel);
    },
    logger
  });
  useAsyncEffect(function() {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var channel, error_1;
      var _a3;
      return __generator(this, function(_b3) {
        switch (_b3.label) {
          case 0:
            if (!(sdkStore.initialized && channelUrl)) return [3, 4];
            _b3.label = 1;
          case 1:
            _b3.trys.push([1, 3, , 4]);
            return [4, sdkStore.sdk.groupChannel.getChannel(channelUrl)];
          case 2:
            channel = _b3.sent();
            actions.setCurrentChannel(channel);
            return [3, 4];
          case 3:
            error_1 = _b3.sent();
            actions.handleChannelError(error_1);
            (_a3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "GroupChannelProvider: error when fetching channel", error_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [sdkStore.initialized, sdkStore.sdk, channelUrl]);
  useAsyncLayoutEffect(function() {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var handleExternalMessage, subscriptions;
      return __generator(this, function(_a3) {
        if (messageDataSource.initialized) {
          actions.scrollToBottom();
        }
        handleExternalMessage = function(data) {
          var _a4;
          if (data.channel.url === ((_a4 = state.currentChannel) === null || _a4 === void 0 ? void 0 : _a4.url)) {
            actions.scrollToBottom(true);
          }
        };
        if ((pubSub === null || pubSub === void 0 ? void 0 : pubSub.subscribe) === void 0)
          return [
            2
            /*return*/
          ];
        subscriptions = [
          config2.pubSub.subscribe(pubSubTopics.SEND_USER_MESSAGE, handleExternalMessage),
          config2.pubSub.subscribe(pubSubTopics.SEND_FILE_MESSAGE, handleExternalMessage)
        ];
        return [2, function() {
          subscriptions.forEach(function(subscription) {
            return subscription.remove();
          });
        }];
      });
    });
  }, [messageDataSource.initialized, (_b2 = state.currentChannel) === null || _b2 === void 0 ? void 0 : _b2.url]);
  useEffect(function() {
    if (typeof startingPoint === "number") {
      actions.scrollToMessage(startingPoint, 0, false, false);
    }
  }, [startingPoint]);
  useEffect(function() {
    if (_animatedMessageId) {
      actions.setAnimatedMessageId(_animatedMessageId);
    }
  }, [_animatedMessageId]);
  var eventHandlers = useMemo(function() {
    return {
      onBeforeSendUserMessage,
      onBeforeSendFileMessage,
      onBeforeSendVoiceMessage,
      onBeforeSendMultipleFilesMessage,
      onBeforeUpdateUserMessage,
      onBeforeDownloadFileMessage,
      onBackClick,
      onChatHeaderActionClick,
      onReplyInThreadClick,
      onSearchClick,
      onQuoteMessageClick,
      onMessageAnimated
    };
  }, [
    onBeforeSendUserMessage,
    onBeforeSendFileMessage,
    onBeforeSendVoiceMessage,
    onBeforeSendMultipleFilesMessage,
    onBeforeUpdateUserMessage,
    onBeforeDownloadFileMessage,
    onBackClick,
    onChatHeaderActionClick,
    onReplyInThreadClick,
    onSearchClick,
    onQuoteMessageClick,
    onMessageAnimated
  ]);
  var renderProps = useMemo(function() {
    return {
      renderUserMentionItem,
      filterEmojiCategoryIds
    };
  }, [renderUserMentionItem, filterEmojiCategoryIds]);
  var configurations = useMemo(function() {
    return {
      isReactionEnabled: resolvedIsReactionEnabled,
      isMessageGroupingEnabled,
      isMultipleFilesMessageEnabled,
      replyType: resolvedReplyType,
      threadReplySelectType: resolvedThreadReplySelectType,
      showSearchIcon: showSearchIcon !== null && showSearchIcon !== void 0 ? showSearchIcon : config2.groupChannelSettings.enableMessageSearch,
      disableMarkAsRead,
      scrollBehavior
    };
  }, [
    resolvedIsReactionEnabled,
    isMessageGroupingEnabled,
    isMultipleFilesMessageEnabled,
    resolvedReplyType,
    resolvedThreadReplySelectType,
    showSearchIcon,
    disableMarkAsRead,
    scrollBehavior,
    config2.groupChannelSettings.enableMessageSearch
  ]);
  var scrollState = useMemo(function() {
    return {
      scrollRef,
      scrollPubSub,
      scrollDistanceFromBottomRef,
      scrollPositionRef,
      isScrollBottomReached
    };
  }, [
    scrollRef,
    scrollPubSub,
    scrollDistanceFromBottomRef,
    scrollPositionRef,
    isScrollBottomReached
  ]);
  useDeepCompareEffect(function() {
    updateState(__assign(__assign(__assign(__assign(__assign({
      // Channel state
      channelUrl,
      currentChannel: state.currentChannel
    }, configurations), scrollState), eventHandlers), renderProps), messageDataSource));
  }, [
    channelUrl,
    (_c = state.currentChannel) === null || _c === void 0 ? void 0 : _c.serialize(),
    configurations,
    scrollState,
    eventHandlers,
    renderProps,
    messageDataSource.initialized,
    messageDataSource.loading,
    messageDataSource.messages.map(function(it2) {
      return it2.serialize();
    })
  ]);
  return children;
};
var GroupChannelProvider = function(props) {
  return React__default__default.createElement(
    InternalGroupChannelProvider,
    __assign({}, props),
    React__default__default.createElement(
      GroupChannelManager,
      __assign({}, props),
      React__default__default.createElement(UserProfileProvider, __assign({}, props), props.children)
    )
  );
};
var useGroupChannelStore = function() {
  return useStore(GroupChannelContext, function(state) {
    return state;
  }, initialState$2);
};
var useGroupChannelContext = function() {
  var _a2 = useGroupChannel(), state = _a2.state, actions = _a2.actions;
  return __assign(__assign({}, state), actions);
};
function getCollectionCreator$1(groupChannel, messageListQueryParams) {
  return function(defaultParams) {
    var params = __assign(__assign(__assign({}, defaultParams), { prevResultLimit: 30, nextResultLimit: 30 }), messageListQueryParams);
    return groupChannel.createMessageCollection(__assign(__assign({}, params), { filter: new qs$1(params) }));
  };
}
var stringSet = {
  en: {
    // Group Channel - Conversation
    MESSAGE_STATUS__YESTERDAY: "Yesterday",
    CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE: "new message(s) since",
    /** @deprecated Please use `DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE` instead * */
    CHANNEL__MESSAGE_LIST__NOTIFICATION__ON: "on",
    // Channel List
    CHANNEL_PREVIEW_MOBILE_LEAVE: "Leave channel",
    // Group Channel - Settings
    CHANNEL_SETTING__HEADER__TITLE: "Channel information",
    CHANNEL_SETTING__PROFILE__EDIT: "Edit",
    CHANNEL_SETTING__MEMBERS__TITLE: "Members",
    CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS: "All members",
    CHANNEL_SETTING__MEMBERS__INVITE_MEMBER: "Invite users",
    CHANNEL_SETTING__MEMBERS__YOU: " (You)",
    CHANNEL_SETTING__MEMBERS__SELECT_TITLE: "Select members",
    CHANNEL_SETTING__MEMBERS__OPERATOR: "Operator",
    CHANNEL_SETTING__LEAVE_CHANNEL__TITLE: "Leave channel",
    CHANNEL_SETTING__OPERATORS__TITLE: "Operators",
    CHANNEL_SETTING__OPERATORS__TITLE_ALL: "All operators",
    CHANNEL_SETTING__OPERATORS__TITLE_ADD: "Add operator",
    CHANNEL_SETTING__OPERATORS__ADD_BUTTON: "Add",
    CHANNEL_SETTING__MUTED_MEMBERS__TITLE: "Muted members",
    CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL: "All muted members",
    CHANNEL_SETTING__NO_UNMUTED: "No muted members yet",
    CHANNEL_SETTING__BANNED_MEMBERS__TITLE: "Banned users",
    CHANNEL_SETTING__FREEZE_CHANNEL: "Freeze Channel",
    CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR: "Register as operator",
    CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR: "Unregister operator",
    CHANNEL_SETTING__MODERATION__MUTE: "Mute",
    CHANNEL_SETTING__MODERATION__UNMUTE: "Unmute",
    CHANNEL_SETTING__MODERATION__BAN: "Ban",
    CHANNEL_SETTING__MODERATION__UNBAN: "Unban",
    CHANNEL_SETTING__MODERATION__EMPTY_BAN: "No banned members yet",
    CHANNEL_SETTING__MODERATION__ALL_BAN: "All banned members",
    // OpenChannel - Conversation
    OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS: "participants",
    OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS: "Select participants",
    // OpenChannelList
    OPEN_CHANNEL_LIST__TITLE: "Channels",
    CREATE_OPEN_CHANNEL_LIST__TITLE: "New channel profile",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_SECTION: "Channel image",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_UPLOAD: "Upload",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_SECTION: "Channel name",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_PLACE_HOLDER: "Enter channel name",
    CREATE_OPEN_CHANNEL_LIST__SUBMIT: "Create",
    // OpenChannel - Settings
    OPEN_CHANNEL_SETTINGS__OPERATOR_TITLE: "Channel Information",
    OPEN_CHANNEL_SETTINGS__OPERATOR_URL: "URL",
    OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE: "Participants",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL: "Delete channel",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE: "Delete channel?",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT: "Once deleted, this channel can't be restored.",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT: "Delete",
    OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE: "Operators",
    OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD: "Add operator",
    OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL: "All operators",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE: "Muted participants",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL: "All muted participants",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE: "No muted participants yet",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE: "Banned users",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL: "All banned users",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE: "No banned users yet",
    OPEN_CHANNEL_SETTINGS__MEMBERS__YOU: " (You)",
    OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR: "Operator",
    OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE: "Participants",
    OPEN_CHANNEL_SETTINGS__EMPTY_LIST: "No participants yet",
    OPEN_CHANNEL_SETTINGS__SEE_ALL: "See all participants",
    OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE: "All participants",
    OPEN_CHANNEL_SETTINGS__NO_TITLE: "(No title)",
    OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR: "Register as operator",
    OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR: "Unregister operator",
    OPEN_CHANNEL_SETTING__MODERATION__MUTE: "Mute",
    OPEN_CHANNEL_SETTING__MODERATION__UNMUTE: "Unmute",
    OPEN_CHANNEL_SETTING__MODERATION__BAN: "Ban",
    OPEN_CHANNEL_SETTING__MODERATION__UNBAN: "Unban",
    // Channel - Common
    TRYING_TO_CONNECT: "Trying to connect…",
    TYPING_INDICATOR__IS_TYPING: "is typing...",
    TYPING_INDICATOR__AND: "and",
    TYPING_INDICATOR__ARE_TYPING: "are typing...",
    TYPING_INDICATOR__MULTIPLE_TYPING: "Several people are typing...",
    CHANNEL_FROZEN: "Channel frozen",
    PLACE_HOLDER__NO_CHANNEL: "No channels",
    PLACE_HOLDER__WRONG: "Something went wrong",
    PLACE_HOLDER__RETRY_TO_CONNECT: "Retry",
    PLACE_HOLDER__NO_MESSAGES: "No messages",
    TOOLTIP__AND_YOU: ", and you",
    TOOLTIP__YOU: "you",
    TOOLTIP__UNKNOWN_USER: "(no name)",
    UNKNOWN__UNKNOWN_MESSAGE_TYPE: "(Unknown message type)",
    UNKNOWN__CANNOT_READ_MESSAGE: "Cannot read this message.",
    UNKNOWN__TEMPLATE_ERROR: "(Template error)",
    FORM_VERSION_ERROR: "Form type messages are not available in this version.",
    UNKNOWN__CANNOT_READ_TEMPLATE: "Cannot read this template.",
    MESSAGE_EDITED: "(edited)",
    // Channel - Modal
    MODAL__DELETE_MESSAGE__TITLE: "Delete this message?",
    MODAL__CHANNEL_INFORMATION__TITLE: "Edit channel information",
    MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE: "Channel image",
    MODAL__CHANNEL_INFORMATION__UPLOAD: "Upload",
    MODAL__CHANNEL_INFORMATION__CHANNEL_NAME: "Channel name",
    MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER: "Enter name",
    MODAL__INVITE_MEMBER__TITLE: "Invite member",
    MODAL__INVITE_MEMBER__SELECTED: "selected",
    MODAL__CHOOSE_CHANNEL_TYPE__TITLE: "New channel",
    MODAL__CHOOSE_CHANNEL_TYPE__GROUP: "Group",
    MODAL__CHOOSE_CHANNEL_TYPE__SUPER_GROUP: "Super group",
    MODAL__CHOOSE_CHANNEL_TYPE__BROADCAST: "Broadcast",
    MODAL__CREATE_CHANNEL__TITLE: "New channel",
    MODAL__CREATE_CHANNEL__GROUP: "Group",
    MODAL__CREATE_CHANNEL__SUPER: "Super group",
    MODAL__CREATE_CHANNEL__BROADCAST: "Broadcast",
    MODAL__CREATE_CHANNEL__SELECTED: "selected",
    MODAL__LEAVE_CHANNEL__TITLE: "Leave this channel?",
    MODAL__LEAVE_CHANNEL__FOOTER: "Leave",
    MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED: "You're muted by the operator.",
    MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN: "Channel is frozen.",
    // User Profile
    USER_PROFILE__MESSAGE: "Message",
    USER_PROFILE__USER_ID: "User ID",
    EDIT_PROFILE__TITLE: "My profile",
    EDIT_PROFILE__IMAGE_LABEL: "Profile image",
    EDIT_PROFILE__IMAGE_UPLOAD: "Upload",
    EDIT_PROFILE__NICKNAME_LABEL: "Nickname",
    EDIT_PROFILE__NICKNAME_PLACEHOLDER: "Enter your nickname",
    EDIT_PROFILE__USERID_LABEL: "User ID",
    EDIT_PROFILE__THEME_LABEL: "Dark theme",
    // Message Input
    MESSAGE_INPUT__PLACE_HOLDER: "Enter message",
    MESSAGE_INPUT__PLACE_HOLDER__DISABLED: "Chat is unavailable in this channel",
    MESSAGE_INPUT__PLACE_HOLDER__SUGGESTED_REPLIES: "Please choose one from above",
    MESSAGE_INPUT__PLACE_HOLDER__MESSAGE_FORM: "Please fill out the message form.",
    MESSAGE_INPUT__PLACE_HOLDER__FROZEN: "Chat is unavailable in this channel",
    MESSAGE_INPUT__PLACE_HOLDER__MUTED: "Chat is unavailable because you're muted",
    MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT: "You're muted",
    MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER: "Reply to message",
    // Common UI
    BUTTON__SUBMIT: "Submit",
    BUTTON__CANCEL: "Cancel",
    BUTTON__DELETE: "Delete",
    BUTTON__SAVE: "Save",
    BUTTON__CREATE: "Create",
    BUTTON__INVITE: "Invite",
    BUTTON__OK: "OK",
    BADGE__OVER: "+",
    NO_TITLE: "No title",
    NO_NAME: "(No name)",
    NO_MEMBERS: "(No members)",
    LABEL__OPERATOR: "Operator",
    // Context Menu
    MESSAGE_MENU__COPY: "Copy",
    MESSAGE_MENU__REPLY: "Reply",
    MESSAGE_MENU__THREAD: "Reply in thread",
    MESSAGE_MENU__OPEN_IN_CHANNEL: "Open in channel",
    MESSAGE_MENU__EDIT: "Edit",
    MESSAGE_MENU__RESEND: "Resend",
    MESSAGE_MENU__DELETE: "Delete",
    MESSAGE_MENU__SAVE: "Save",
    //  * FIXME: get back legacy, remove after refactoring open channel messages *
    CONTEXT_MENU_DROPDOWN__COPY: "Copy",
    CONTEXT_MENU_DROPDOWN__EDIT: "Edit",
    CONTEXT_MENU_DROPDOWN__RESEND: "Resend",
    CONTEXT_MENU_DROPDOWN__DELETE: "Delete",
    CONTEXT_MENU_DROPDOWN__SAVE: "Save",
    // Feature - Message Search
    SEARCH: "Search",
    SEARCH_IN_CHANNEL: "Search in channel",
    SEARCH_IN: "Search in",
    SEARCHING: "Searching for messages...",
    NO_SEARCHED_MESSAGE: "No results found.",
    // Feature - Message Reply
    QUOTE_MESSAGE_INPUT__REPLY_TO: "Reply to",
    QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE: "Photo",
    QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF: "GIF",
    QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO: "Video",
    QUOTED_MESSAGE__REPLIED_TO: "replied to",
    QUOTED_MESSAGE__CURRENT_USER: "You",
    QUOTED_MESSAGE__UNAVAILABLE: "Message unavailable",
    // Feature - Thread
    THREAD__HEADER_TITLE: "Thread",
    CHANNEL__THREAD_REPLY: "reply",
    CHANNEL__THREAD_REPLIES: "replies",
    CHANNEL__THREAD_OVER_MAX: "99+",
    THREAD__THREAD_REPLY: "reply",
    THREAD__THREAD_REPLIES: "replies",
    THREAD__INPUT__REPLY_TO_THREAD: "Reply to thread",
    THREAD__INPUT__REPLY_IN_THREAD: "Reply in thread",
    // Feature - Mention
    MENTION_NAME__NO_NAME: "(No name)",
    MENTION_COUNT__OVER_LIMIT: "You can mention up to %d times at a time.",
    UI__FILE_VIEWER__UNSUPPORT: "Unsupported message",
    // Feature - Voice Message
    VOICE_RECORDING_PERMISSION_DENIED: "You cannot record the voice since\n        voice recording is not permitted in your device system setting",
    VOICE_MESSAGE: "Voice Message",
    // Channel preview last message file type display strings
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GIF: "GIF",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO: "Photo",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VIDEO: "Video",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_AUDIO: "Audio",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VOICE_MESSAGE: "Voice message",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GENERAL: "File",
    CHANNEL_PREVIEW_LAST_MESSAGE_TEMPLATE_MESSAGE: "Message",
    // Date format
    DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE: "p 'on' MMM dd",
    DATE_FORMAT__MESSAGE_LIST__DATE_SEPARATOR: "MMMM dd, yyyy",
    DATE_FORMAT__THREAD_LIST__DATE_SEPARATOR: "MMM dd, yyyy",
    DATE_FORMAT__MESSAGE_CREATED_AT: "p",
    DATE_FORMAT__UNREAD_SINCE: "p MMM dd",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__TODAY: "p",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__THIS_YEAR: "MMM d",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__PREVIOUS_YEAR: "yyyy/M/d",
    // File upload
    FILE_UPLOAD_NOTIFICATION__COUNT_LIMIT: "Up to %d files can be attached.",
    FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT: "The maximum size per file is %d MB.",
    // Feedback button text
    FEEDBACK_LIKE: "Like",
    FEEDBACK_DISLIKE: "Dislike",
    // Mobile feedback options menu items
    EDIT_COMMENT: "Edit comment",
    REMOVE_FEEDBACK: "Remove Feedback",
    // Feedback modal title
    FEEDBACK_MODAL_TITLE: "Provide additional feedback (optional)",
    FEEDBACK_CONTENT_PLACEHOLDER: "Leave a comment",
    BUTTON__REMOVE_FEEDBACK: "Remove feedback",
    // Feedback failed modal title
    FEEDBACK_FAILED_SUBMIT: "Couldn’t submit. Try again.",
    FEEDBACK_FAILED_SAVE: "Couldn’t save. Try again.",
    FEEDBACK_FAILED_DELETE: "Couldn’t delete. Try again.",
    // Form submit failed error messages
    FORM_ITEM_REQUIRED: "This field is required",
    FORM_ITEM_INVALID: "Please check the value",
    FORM_ITEM_OPTIONAL_EMPTY: "No Response"
  }
};
var getStringSet = function(lang) {
  return stringSet[lang];
};
var Typography = {
  H_1: "H_1",
  H_2: "H_2",
  SUBTITLE_1: "SUBTITLE_1",
  SUBTITLE_2: "SUBTITLE_2",
  BODY_1: "BODY_1",
  BODY_2: "BODY_2",
  BUTTON_1: "BUTTON_1",
  BUTTON_2: "BUTTON_2",
  BUTTON_3: "BUTTON_3",
  CAPTION_1: "CAPTION_1",
  CAPTION_2: "CAPTION_2",
  CAPTION_3: "CAPTION_3"
};
var Colors$2 = {
  ONBACKGROUND_1: "ONBACKGROUND_1",
  ONBACKGROUND_2: "ONBACKGROUND_2",
  ONBACKGROUND_3: "ONBACKGROUND_3",
  ONBACKGROUND_4: "ONBACKGROUND_4",
  ONCONTENT_1: "ONCONTENT_1",
  ONCONTENT_2: "ONCONTENT_2",
  ONCONTENT_3: "ONCONTENT_3",
  ONCONTENT_INVERSE_1: "ONCONTENT_INVERSE_1",
  ONCONTENT_INVERSE_3: "ONCONTENT_INVERSE_3",
  PRIMARY: "PRIMARY",
  ERROR: "ERROR",
  SECONDARY_3: "SECONDARY_3"
};
function changeTypographyToClassName(type) {
  switch (type) {
    case Typography.H_1:
      return "sendbird-label--h-1";
    case Typography.H_2:
      return "sendbird-label--h-2";
    case Typography.SUBTITLE_1:
      return "sendbird-label--subtitle-1";
    case Typography.SUBTITLE_2:
      return "sendbird-label--subtitle-2";
    case Typography.BODY_1:
      return "sendbird-label--body-1";
    case Typography.BODY_2:
      return "sendbird-label--body-2";
    case Typography.BUTTON_1:
      return "sendbird-label--button-1";
    case Typography.BUTTON_2:
      return "sendbird-label--button-2";
    case Typography.BUTTON_3:
      return "sendbird-label--button-3";
    case Typography.CAPTION_1:
      return "sendbird-label--caption-1";
    case Typography.CAPTION_2:
      return "sendbird-label--caption-2";
    case Typography.CAPTION_3:
      return "sendbird-label--caption-3";
    default:
      return "";
  }
}
function changeColorToClassName$2(color) {
  switch (color) {
    case Colors$2.ONBACKGROUND_1:
      return "sendbird-label--color-onbackground-1";
    case Colors$2.ONBACKGROUND_2:
      return "sendbird-label--color-onbackground-2";
    case Colors$2.ONBACKGROUND_3:
      return "sendbird-label--color-onbackground-3";
    case Colors$2.ONBACKGROUND_4:
      return "sendbird-label--color-onbackground-4";
    case Colors$2.ONCONTENT_1:
      return "sendbird-label--color-oncontent-1";
    case Colors$2.ONCONTENT_2:
      return "sendbird-label--color-oncontent-2";
    case Colors$2.ONCONTENT_3:
      return "sendbird-label--color-oncontent-3";
    case Colors$2.ONCONTENT_INVERSE_1:
      return "sendbird-label--color-oncontent-inverse-1";
    case Colors$2.ONCONTENT_INVERSE_3:
      return "sendbird-label--color-oncontent-inverse-3";
    case Colors$2.PRIMARY:
      return "sendbird-label--color-primary";
    case Colors$2.ERROR:
      return "sendbird-label--color-error";
    case Colors$2.SECONDARY_3:
      return "sendbird-label--color-secondary-3";
    default:
      return "";
  }
}
var Label = forwardRef(function(_a2, ref) {
  var _b2 = _a2.className, className = _b2 === void 0 ? [] : _b2, type = _a2.type, color = _a2.color, _c = _a2.children, children = _c === void 0 ? null : _c, testID = _a2.testID;
  return (
    // Donot make this into div
    // Mention uses Label. If we use div, it would break the mention detection on Paste
    // https://github.com/sendbird/sendbird-uikit-react/pull/479
    React__default__default.createElement("span", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-label",
      changeTypographyToClassName(type),
      changeColorToClassName$2(color)
    ], false).join(" "), ref, "data-testid": testID }, children)
  );
});
var LabelTypography = Typography;
var LabelColors = Colors$2;
var LabelStringSet = getStringSet("en");
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
var formatDistance = function formatDistance2(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }
  return result;
};
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format2 = args.formats[width] || args.formats[args.defaultWidth];
    return format2;
  };
}
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var locale = {
  code: "en-US",
  formatDistance,
  formatLong,
  formatRelative,
  localize,
  match,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};
var LocalizationContextDefault = {
  stringSet: getStringSet("en"),
  dateLocale: locale
};
var LocalizationContext = React__default__default.createContext(LocalizationContextDefault);
var LocalizationProvider = function(props) {
  var children = props.children;
  return React__default__default.createElement(LocalizationContext.Provider, { value: __assign(__assign({}, LocalizationContextDefault), props) }, children);
};
var useLocalization = function() {
  var context = React__default__default.useContext(LocalizationContext);
  if (!context) {
    throw new Error("`useLocalization` hook must be used within `SendbirdProvider` that includes `LocalizationProvider`.");
  }
  return context;
};
var uuidv4 = function() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c3) {
    var r2 = Math.random() * 16 | 0;
    var v2 = c3 === "x" ? r2 : r2 & 3 | 8;
    return v2.toString(16);
  });
};
var TypingIndicatorText = function(_a2) {
  var members = _a2.members;
  function getText() {
    var stringSet2 = useContext(LocalizationContext).stringSet;
    if (!members || members.length === 0) {
      return "";
    }
    if (members && members.length === 1) {
      return "".concat(members[0].nickname, " ").concat(stringSet2.TYPING_INDICATOR__IS_TYPING);
    }
    if (members && members.length === 2) {
      return "".concat(members[0].nickname, " ").concat(stringSet2.TYPING_INDICATOR__AND, " ").concat(members[1].nickname, " ").concat(stringSet2.TYPING_INDICATOR__ARE_TYPING);
    }
    return stringSet2.TYPING_INDICATOR__MULTIPLE_TYPING;
  }
  return React__default__default.createElement(React__default__default.Fragment, null, getText());
};
var TypingIndicator = function(_a2) {
  var _b2, _c, _d;
  var channelUrl = _a2.channelUrl;
  var state = useSendbird().state;
  var sb = (_c = (_b2 = state === null || state === void 0 ? void 0 : state.stores) === null || _b2 === void 0 ? void 0 : _b2.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;
  var logger = (_d = state === null || state === void 0 ? void 0 : state.config) === null || _d === void 0 ? void 0 : _d.logger;
  var _e2 = useState(uuidv4()), handlerId = _e2[0], setHandlerId = _e2[1];
  var _f = useState([]), typingMembers = _f[0], setTypingMembers = _f[1];
  useEffect(function() {
    var _a3;
    if ((_a3 = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.addGroupChannelHandler) {
      sb.groupChannel.removeGroupChannelHandler(handlerId);
      var newHandlerId = uuidv4();
      var handler = new Ye({
        onTypingStatusUpdated: function(groupChannel) {
          logger.info("Channel > Typing Indicator: onTypingStatusUpdated", groupChannel);
          if (groupChannel.url === channelUrl) {
            var members = groupChannel.getTypingUsers();
            setTypingMembers(members);
          }
        }
      });
      sb.groupChannel.addGroupChannelHandler(newHandlerId, handler);
      setHandlerId(newHandlerId);
    }
    return function() {
      var _a4;
      setTypingMembers([]);
      if ((_a4 = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.removeGroupChannelHandler) {
        sb.groupChannel.removeGroupChannelHandler(handlerId);
      }
    };
  }, [channelUrl]);
  return React__default__default.createElement(
    Label,
    { className: "sendbird-conversation__footer__typing-indicator__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 },
    React__default__default.createElement(TypingIndicatorText, { members: typingMembers })
  );
};
var TypingIndicatorType;
(function(TypingIndicatorType2) {
  TypingIndicatorType2["Text"] = "text";
  TypingIndicatorType2["Bubble"] = "bubble";
})(TypingIndicatorType || (TypingIndicatorType = {}));
var Types = {
  ADD: "ADD",
  ARROW_LEFT: "ARROW_LEFT",
  ATTACH: "ATTACH",
  AUDIO_ON_LINED: "AUDIO_ON_LINED",
  BAN: "BAN",
  BROADCAST: "BROADCAST",
  CAMERA: "CAMERA",
  CHANNELS: "CHANNELS",
  CHAT: "CHAT",
  CHAT_FILLED: "CHAT_FILLED",
  CHEVRON_DOWN: "CHEVRON_DOWN",
  CHEVRON_RIGHT: "CHEVRON_RIGHT",
  CLOSE: "CLOSE",
  COLLAPSE: "COLLAPSE",
  COPY: "COPY",
  CREATE: "CREATE",
  DELETE: "DELETE",
  DISCONNECTED: "DISCONNECTED",
  DOCUMENT: "DOCUMENT",
  DONE: "DONE",
  DONE_ALL: "DONE_ALL",
  DOWNLOAD: "DOWNLOAD",
  EDIT: "EDIT",
  EMOJI_MORE: "EMOJI_MORE",
  ERROR: "ERROR",
  EXPAND: "EXPAND",
  FILE_AUDIO: "FILE_AUDIO",
  FILE_DOCUMENT: "FILE_DOCUMENT",
  FREEZE: "FREEZE",
  GIF: "GIF",
  INFO: "INFO",
  LEAVE: "LEAVE",
  MEMBERS: "MEMBERS",
  MESSAGE: "MESSAGE",
  MODERATIONS: "MODERATIONS",
  MORE: "MORE",
  MUTE: "MUTE",
  NOTIFICATIONS: "NOTIFICATIONS",
  NOTIFICATIONS_OFF_FILLED: "NOTIFICATIONS_OFF_FILLED",
  OPERATOR: "OPERATOR",
  PHOTO: "PHOTO",
  PLAY: "PLAY",
  PLUS: "PLUS",
  QUESTION: "QUESTION",
  REFRESH: "REFRESH",
  REPLY: "REPLY",
  REMOVE: "REMOVE",
  SEARCH: "SEARCH",
  SEND: "SEND",
  SETTINGS_FILLED: "SETTINGS_FILLED",
  SLIDE_LEFT: "SLIDE_LEFT",
  SPINNER: "SPINNER",
  SUPERGROUP: "SUPERGROUP",
  THREAD: "THREAD",
  THUMBNAIL_NONE: "THUMBNAIL_NONE",
  TOGGLE_OFF: "TOGGLE_OFF",
  TOGGLE_ON: "TOGGLE_ON",
  USER: "USER",
  FEEDBACK_LIKE: "FEEDBACK_LIKE",
  FEEDBACK_DISLIKE: "FEEDBACK_DISLIKE"
};
var Colors$1 = {
  DEFAULT: "DEFAULT",
  PRIMARY: "PRIMARY",
  PRIMARY_2: "PRIMARY_2",
  SECONDARY: "SECONDARY",
  SECONDARY_2: "SECONDARY_2",
  CONTENT: "CONTENT",
  CONTENT_INVERSE: "CONTENT_INVERSE",
  CONTENT_INVERSE_3: "CONTENT_INVERSE_3",
  WHITE: "WHITE",
  GRAY: "GRAY",
  THUMBNAIL_ICON: "THUMBNAIL_ICON",
  SENT: "SENT",
  READ: "READ",
  ON_BACKGROUND_1: "ON_BACKGROUND_1",
  ON_BACKGROUND_2: "ON_BACKGROUND_2",
  ON_BACKGROUND_3: "ON_BACKGROUND_3",
  ON_BACKGROUND_4: "ON_BACKGROUND_4",
  BACKGROUND_3: "BACKGROUND_3",
  ERROR: "ERROR"
};
function changeColorToClassName$1(color) {
  switch (color) {
    case Colors$1.PRIMARY:
      return "sendbird-icon-color--primary";
    case Colors$1.PRIMARY_2:
      return "sendbird-icon-color--primary-2";
    case Colors$1.SECONDARY:
      return "sendbird-icon-color--secondary";
    case Colors$1.SECONDARY_2:
      return "sendbird-icon-color--secondary-2";
    case Colors$1.CONTENT:
      return "sendbird-icon-color--content";
    case Colors$1.CONTENT_INVERSE:
      return "sendbird-icon-color--content-inverse";
    case Colors$1.CONTENT_INVERSE_3:
      return "sendbird-icon-color--content-inverse-3";
    case Colors$1.WHITE:
      return "sendbird-icon-color--white";
    case Colors$1.GRAY:
      return "sendbird-icon-color--gray";
    case Colors$1.THUMBNAIL_ICON:
      return "sendbird-icon-color--thumbnail-icon";
    case Colors$1.SENT:
      return "sendbird-icon-color--sent";
    case Colors$1.READ:
      return "sendbird-icon-color--read";
    case Colors$1.ON_BACKGROUND_1:
      return "sendbird-icon-color--on-background-1";
    case Colors$1.ON_BACKGROUND_2:
      return "sendbird-icon-color--on-background-2";
    case Colors$1.ON_BACKGROUND_3:
      return "sendbird-icon-color--on-background-3";
    case Colors$1.ON_BACKGROUND_4:
      return "sendbird-icon-color--on-background-4";
    case Colors$1.BACKGROUND_3:
      return "sendbird-icon-color--background-3";
    case Colors$1.ERROR:
      return "sendbird-icon-color--error";
    default:
      return "";
  }
}
function changeTypeToIconClassName(type) {
  switch (type) {
    case Types.ADD:
      return "sendbird-icon-add";
    case Types.ARROW_LEFT:
      return "sendbird-icon-arrow-left";
    case Types.ATTACH:
      return "sendbird-icon-attach";
    case Types.AUDIO_ON_LINED:
      return "sendbird-icon-audio-on-lined";
    case Types.BAN:
      return "sendbird-icon-ban";
    case Types.BROADCAST:
      return "sendbird-icon-broadcast";
    case Types.CAMERA:
      return "sendbird-icon-camera";
    case Types.CHANNELS:
      return "sendbird-icon-channels";
    case Types.CHAT:
      return "sendbird-icon-chat";
    case Types.CHAT_FILLED:
      return "sendbird-icon-chat-filled";
    case Types.CHEVRON_DOWN:
      return "sendbird-icon-chevron-down";
    case Types.CHEVRON_RIGHT:
      return "sendbird-icon-chevron-right";
    case Types.CLOSE:
      return "sendbird-icon-close";
    case Types.COLLAPSE:
      return "sendbird-icon-collapse";
    case Types.COPY:
      return "sendbird-icon-copy";
    case Types.CREATE:
      return "sendbird-icon-create";
    case Types.DELETE:
      return "sendbird-icon-delete";
    case Types.DISCONNECTED:
      return "sendbird-icon-disconnected";
    case Types.DOCUMENT:
      return "sendbird-icon-document";
    case Types.DONE:
      return "sendbird-icon-done";
    case Types.DONE_ALL:
      return "sendbird-icon-done-all";
    case Types.DOWNLOAD:
      return "sendbird-icon-down-load";
    case Types.EDIT:
      return "sendbird-icon-edit";
    case Types.EMOJI_MORE:
      return "sendbird-icon-emoji-more";
    case Types.ERROR:
      return "sendbird-icon-error";
    case Types.EXPAND:
      return "sendbird-icon-expand";
    case Types.FILE_AUDIO:
      return "sendbird-icon-file-audio";
    case Types.FILE_DOCUMENT:
      return "sendbird-icon-file-document";
    case Types.FREEZE:
      return "sendbird-icon-freeze";
    case Types.GIF:
      return "sendbird-icon-gif";
    case Types.INFO:
      return "sendbird-icon-info";
    case Types.LEAVE:
      return "sendbird-icon-leave";
    case Types.MEMBERS:
      return "sendbird-icon-members";
    case Types.MESSAGE:
      return "sendbird-icon-message";
    case Types.MODERATIONS:
      return "sendbird-icon-moderations";
    case Types.MORE:
      return "sendbird-icon-more";
    case Types.MUTE:
      return "sendbird-icon-mute";
    case Types.NOTIFICATIONS:
      return "sendbird-icon-notifications";
    case Types.NOTIFICATIONS_OFF_FILLED:
      return "sendbird-icon-notifications-off-filled";
    case Types.OPERATOR:
      return "sendbird-icon-operator";
    case Types.PHOTO:
      return "sendbird-icon-photo";
    case Types.PLAY:
      return "sendbird-icon-play";
    case Types.PLUS:
      return "sendbird-iconn-plus";
    case Types.QUESTION:
      return "sendbird-icon-question";
    case Types.REFRESH:
      return "sendbird-icon-refresh";
    case Types.REMOVE:
      return "sendbird-icon-remove";
    case Types.REPLY:
      return "sendbird-icon-reply";
    case Types.SEARCH:
      return "sendbird-icon-search";
    case Types.SEND:
      return "sendbird-icon-send";
    case Types.SETTINGS_FILLED:
      return "sendbird-icon-settings-filled";
    case Types.SPINNER:
      return "sendbird-icon-spinner";
    case Types.SUPERGROUP:
      return "sendbird-icon-supergroup";
    case Types.THREAD:
      return "sendbird-icon-thread";
    case Types.THUMBNAIL_NONE:
      return "sendbird-icon-thumbnail-none";
    case Types.TOGGLE_OFF:
      return "sendbird-icon-toggle-off";
    case Types.TOGGLE_ON:
      return "sendbird-icon-toggle-on";
    case Types.USER:
      return "sendbird-icon-user";
    case Types.FEEDBACK_LIKE:
      return "sendbird-icon-feedback-like";
    case Types.FEEDBACK_DISLIKE:
      return "sendbird-icon-feedback-dislike";
    default:
      return "sendbird-icon-unknown";
  }
}
var _path$U;
function _extends$X() {
  return _extends$X = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$X.apply(null, arguments);
}
const SvgIconAdd = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$X({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$U || (_path$U = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M50.667 5.333a8 8 0 0 1 8 8v37.334a8 8 0 0 1-8 8H13.333a8 8 0 0 1-8-8V13.333a8 8 0 0 1 8-8zm0 5.334H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334a2.667 2.667 0 0 0 2.666 2.666h37.334a2.667 2.667 0 0 0 2.666-2.666V13.333a2.667 2.667 0 0 0-2.666-2.666m-18.667 8a2.667 2.667 0 0 1 2.649 2.355l.018.311v8h8a2.667 2.667 0 0 1 .311 5.316l-.311.018h-8v8a2.667 2.667 0 0 1-5.316.311l-.018-.311v-8h-8a2.667 2.667 0 0 1-.311-5.316l.311-.018h8v-8A2.667 2.667 0 0 1 32 18.667",
  className: "icon-add_svg__fill"
})));
var _path$T;
function _extends$W() {
  return _extends$W = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$W.apply(null, arguments);
}
const SvgIconArrowLeft = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$W({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$T || (_path$T = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M33.886 8.781a2.67 2.67 0 0 1 .221 3.52l-.221.251-16.78 16.781H56a2.667 2.667 0 0 1 .311 5.316l-.311.018-38.895-.001 16.78 16.782a2.666 2.666 0 0 1 .222 3.52l-.221.251a2.67 2.67 0 0 1-3.52.222l-.252-.222L8.781 33.886a2.67 2.67 0 0 1-.222-3.52l.222-.252L30.114 8.781a2.67 2.67 0 0 1 3.772 0",
  className: "icon-arrow-left_svg__fill"
})));
var _path$S;
function _extends$V() {
  return _extends$V = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$V.apply(null, arguments);
}
const SvgIconAttach = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$V({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$S || (_path$S = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m55.334 28.926-24.506 23.34c-5.222 4.973-13.74 4.973-18.962 0-5.149-4.903-5.149-12.797 0-17.7l24.506-23.34c3.138-2.988 8.278-2.988 11.416 0 3.064 2.919 3.064 7.594 0 10.513L23.255 45.077c-1.055 1.005-2.815 1.005-3.87.001-.98-.933-.98-2.39 0-3.325l22.64-21.535a2.667 2.667 0 0 0-3.676-3.864L15.709 37.89a7.58 7.58 0 0 0-.001 11.05c3.113 2.966 8.11 2.966 11.224 0l24.533-23.338c5.272-5.021 5.272-13.217 0-18.238-5.197-4.95-13.573-4.95-18.77 0L8.187 30.704c-7.356 7.005-7.356 18.419 0 25.424 7.281 6.935 19.036 6.935 26.318 0l24.506-23.34a2.666 2.666 0 1 0-3.678-3.862z",
  className: "icon-attach_svg__fill"
})));
var _g$2, _defs;
function _extends$U() {
  return _extends$U = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$U.apply(null, arguments);
}
const SvgIconAudioOnLined = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$U({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 64 64"
}, props), _g$2 || (_g$2 = /* @__PURE__ */ React__default.createElement("g", {
  clipPath: "url(#icon-audio-on-lined_svg__a)"
}, /* @__PURE__ */ React__default.createElement("path", {
  d: "M32 0C26.11 0 21.333 4.776 21.333 10.667V32c0 5.891 4.776 10.667 10.667 10.667S42.667 37.89 42.667 32V10.667C42.667 4.776 37.89 0 32 0m-5.333 10.667a5.333 5.333 0 0 1 10.666 0V32a5.333 5.333 0 0 1-10.666 0z",
  className: "icon-audio-on-lined_svg__fill",
  clipRule: "evenodd"
}), /* @__PURE__ */ React__default.createElement("path", {
  d: "M16 26.667a2.667 2.667 0 1 0-5.333 0V32c0 10.879 8.143 19.856 18.666 21.168v5.499h-8a2.667 2.667 0 0 0 0 5.333h21.334a2.667 2.667 0 1 0 0-5.333h-8v-5.499C45.19 51.856 53.333 42.88 53.333 32v-5.333a2.667 2.667 0 1 0-5.333 0V32c0 8.837-7.163 16-16 16s-16-7.163-16-16z",
  className: "icon-audio-on-lined_svg__fill"
}))), _defs || (_defs = /* @__PURE__ */ React__default.createElement("defs", null, /* @__PURE__ */ React__default.createElement("clipPath", {
  id: "icon-audio-on-lined_svg__a"
}, /* @__PURE__ */ React__default.createElement("path", {
  fill: "#fff",
  d: "M0 0h64v64H0z"
})))));
var _path$R;
function _extends$T() {
  return _extends$T = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$T.apply(null, arguments);
}
const SvgIconBan = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$T({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$R || (_path$R = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32s10.745 24 24 24 24-10.745 24-24S45.255 8 32 8m12.333 21.333a1 1 0 0 1 1 1v3.334a1 1 0 0 1-1 1H19.667a1 1 0 0 1-1-1v-3.334a1 1 0 0 1 1-1z",
  className: "icon-ban_svg__fill"
})));
var _path$Q;
function _extends$S() {
  return _extends$S = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$S.apply(null, arguments);
}
const SvgIconBroadcast = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$S({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$Q || (_path$Q = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M58.545 5.498q.121.389.122.796v46.079a2.666 2.666 0 0 1-3.462 2.546l-17.951-5.61c-.645 5.273-5.14 9.358-10.587 9.358C20.776 58.667 16 53.89 16 48v-5.334h-5.333a8 8 0 0 1-7.997-7.75l-.003-.25V24a8 8 0 0 1 8-8H16L55.205 3.749a2.665 2.665 0 0 1 3.34 1.75zM21.333 44.587V48a5.333 5.333 0 0 0 10.652.398L32 47.92zm32-34.667-32 9.997v18.83l32 9.997zM16 21.333h-5.333a2.67 2.67 0 0 0-2.65 2.356L8 24v10.667a2.667 2.667 0 0 0 2.667 2.666H16z",
  className: "icon-broadcast_svg__fill"
})));
var _path$P;
function _extends$R() {
  return _extends$R = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$R.apply(null, arguments);
}
const SvgIconCamera = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$R({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$P || (_path$P = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M40 5.333c.892 0 1.724.446 2.219 1.188l4.541 6.812H56a8 8 0 0 1 7.986 7.53l.014.47v29.334a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V21.333a8 8 0 0 1 8-8h9.237l4.544-6.812a2.67 2.67 0 0 1 1.888-1.167l.331-.02zm-1.43 5.334H25.428l-4.542 6.812a2.66 2.66 0 0 1-1.887 1.167l-.331.02H8a2.67 2.67 0 0 0-2.667 2.667v29.334A2.667 2.667 0 0 0 8 53.333h48a2.667 2.667 0 0 0 2.667-2.666V21.333A2.667 2.667 0 0 0 56 18.667H45.333a2.67 2.67 0 0 1-2.218-1.188zM32 21.333c7.364 0 13.333 5.97 13.333 13.334S39.363 48 32 48s-13.333-5.97-13.333-13.333S24.637 21.333 32 21.333m0 5.334a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-camera_svg__fill"
})));
var _path$O;
function _extends$Q() {
  return _extends$Q = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$Q.apply(null, arguments);
}
const SvgIconChannels = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$Q({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$O || (_path$O = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m42.65 5.333.311.017a2.666 2.666 0 0 1 2.373 2.633l-.017.311-1.45 13.04h9.466a2.667 2.667 0 0 1 .311 5.315l-.31.018H43.271l-1.184 10.666h11.245a2.667 2.667 0 0 1 .312 5.316l-.31.018H41.495l-1.512 13.627a2.667 2.667 0 0 1-5.318-.277l.017-.311 1.448-13.04H25.496l-1.512 13.628a2.667 2.667 0 0 1-5.318-.277l.017-.311 1.448-13.04h-9.464a2.667 2.667 0 0 1-.311-5.315l.31-.018h10.057l1.186-10.667H10.667a2.667 2.667 0 0 1-.311-5.315l.31-.018h11.835l1.515-13.627a2.67 2.67 0 0 1 2.634-2.373l.311.017a2.666 2.666 0 0 1 2.373 2.633l-.017.311-1.45 13.04H38.5l1.515-13.628a2.67 2.67 0 0 1 2.634-2.373zm-5.927 32 1.186-10.667H27.272l-1.184 10.667z",
  className: "icon-channels_svg__fill"
})));
var _path$N;
function _extends$P() {
  return _extends$P = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$P.apply(null, arguments);
}
const SvgIconChat = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$P({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$N || (_path$N = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8",
  className: "icon-chat_svg__fill"
})));
var _path$M;
function _extends$O() {
  return _extends$O = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$O.apply(null, arguments);
}
const SvgIconChatFilled = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$O({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$M || (_path$M = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667",
  className: "icon-chat-filled_svg__fill"
})));
var _path$L;
function _extends$N() {
  return _extends$N = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$N.apply(null, arguments);
}
const SvgIconChevronDown = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$N({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$L || (_path$L = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16.121 21.879a3 3 0 0 0-4.242 0 3 3 0 0 0 0 4.242l18 18a3 3 0 0 0 4.242 0l18-18a3 3 0 0 0 0-4.242 3 3 0 0 0-4.242 0L32 37.757z",
  className: "icon-chevron-down_svg__fill"
})));
var _path$K;
function _extends$M() {
  return _extends$M = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$M.apply(null, arguments);
}
const SvgIconChevronRight = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$M({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$K || (_path$K = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M22.114 46.114a2.668 2.668 0 0 0 3.772 3.772l16-16a2.67 2.67 0 0 0 0-3.772l-16-16a2.668 2.668 0 0 0-3.772 3.772L36.23 32z",
  className: "icon-chevron-right_svg__fill"
})));
var _path$J;
function _extends$L() {
  return _extends$L = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$L.apply(null, arguments);
}
const SvgIconClose = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$L({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$J || (_path$J = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M52.552 11.448a2.666 2.666 0 0 1 .222 3.52l-.222.251-16.781 16.78 16.781 16.782a2.665 2.665 0 0 1 0 3.771 2.666 2.666 0 0 1-3.52.222l-.251-.222L32 35.771 15.219 52.552a2.665 2.665 0 0 1-3.771 0 2.666 2.666 0 0 1-.222-3.52l.222-.251L28.228 32l-16.78-16.781a2.665 2.665 0 0 1 0-3.771 2.666 2.666 0 0 1 3.52-.222l.251.222 16.78 16.78 16.782-16.78a2.665 2.665 0 0 1 3.771 0",
  className: "icon-close_svg__fill"
})));
var _path$I;
function _extends$K() {
  return _extends$K = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$K.apply(null, arguments);
}
const SvgIconCollapse = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$K({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$I || (_path$I = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16 8a2.667 2.667 0 0 0-2.649 2.356l-.018.31v42.667a2.667 2.667 0 0 0 5.316.311l.018-.31V34.666h25.56l-6.113 6.114a2.67 2.67 0 0 0-.221 3.52l.221.251a2.666 2.666 0 0 0 3.52.222l.252-.222 10.666-10.666a2.666 2.666 0 0 0 .222-3.52l-.222-.252-10.666-10.666a2.666 2.666 0 0 0-3.993 3.52l.221.251 6.113 6.114h-25.56V10.667A2.667 2.667 0 0 0 16 8",
  className: "icon-collapse_svg__fill"
})));
var _path$H;
function _extends$J() {
  return _extends$J = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$J.apply(null, arguments);
}
const SvgIconCopy = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$J({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$H || (_path$H = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M53.333 21.333a8 8 0 0 1 8 8v24a8 8 0 0 1-8 8h-24a8 8 0 0 1-8-8v-24a8 8 0 0 1 8-8zm0 5.334h-24a2.667 2.667 0 0 0-2.666 2.666v24A2.667 2.667 0 0 0 29.333 56h24A2.667 2.667 0 0 0 56 53.333v-24a2.667 2.667 0 0 0-2.667-2.666m-18.666-24a8 8 0 0 1 7.986 7.53l.014.47v2.666a2.667 2.667 0 0 1-5.316.311l-.018-.31v-2.667a2.67 2.67 0 0 0-2.355-2.65L34.667 8h-24a2.67 2.67 0 0 0-2.65 2.356l-.017.31v24a2.67 2.67 0 0 0 2.356 2.65l.31.017h2.667a2.667 2.667 0 0 1 .311 5.316l-.31.018h-2.667a8 8 0 0 1-7.987-7.53l-.013-.47v-24c0-4.26 3.33-7.743 7.53-7.987l.47-.013z",
  className: "icon-copy_svg__fill"
})));
var _path$G;
function _extends$I() {
  return _extends$I = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$I.apply(null, arguments);
}
const SvgIconCreate = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$I({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$G || (_path$G = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8m2.667 16v5.333H40c3.556 0 3.556 5.334 0 5.334h-5.333V40c0 3.556-5.334 3.556-5.334 0v-5.333H24c-3.556 0-3.556-5.334 0-5.334h5.333V24c0-3.556 5.334-3.556 5.334 0",
  className: "icon-create_svg__fill"
})));
var _path$F;
function _extends$H() {
  return _extends$H = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$H.apply(null, arguments);
}
const SvgIconDelete = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$H({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$F || (_path$F = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M37.333 2.667c4.26 0 7.743 3.33 7.987 7.53l.013.47v2.666H56a2.667 2.667 0 0 1 .311 5.316l-.311.018h-2.668l.001 34.666c0 4.26-3.33 7.743-7.53 7.987l-.47.013H18.667a8 8 0 0 1-7.987-7.53l-.013-.47V18.667H8a2.667 2.667 0 0 1-.311-5.316L8 13.333h10.666v-2.666a8 8 0 0 1 7.53-7.987l.47-.013zm10.666 16H16v34.666a2.67 2.67 0 0 0 2.356 2.65l.31.017h26.667a2.67 2.67 0 0 0 2.65-2.356l.017-.31zm-21.332 8a2.667 2.667 0 0 1 2.648 2.355l.018.311v16a2.667 2.667 0 0 1-5.316.311l-.017-.31v-16a2.667 2.667 0 0 1 2.667-2.667m10.666 0a2.67 2.67 0 0 1 2.65 2.355l.017.311v16a2.667 2.667 0 0 1-5.315.311l-.018-.31v-16a2.667 2.667 0 0 1 2.666-2.667m0-18.667H26.667a2.67 2.67 0 0 0-2.65 2.356l-.017.31v2.667h16v-2.666a2.67 2.67 0 0 0-2.356-2.65L37.334 8z",
  className: "icon-delete_svg__fill"
})));
var _path$E;
function _extends$G() {
  return _extends$G = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$G.apply(null, arguments);
}
const SvgIconDisconnected = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$G({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$E || (_path$E = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m54.534 6.069-.248.217-9.736 9.735-.04.04-9.573 9.573q-.226.178-.405.404L6.286 54.286a2.423 2.423 0 0 0 3.18 3.645l.248-.217 13.374-13.373a2.42 2.42 0 0 0 1.88-.401 12.12 12.12 0 0 1 14.04 0 2.424 2.424 0 1 0 2.808-3.952 16.95 16.95 0 0 0-11.303-3.072l6.743-6.744a24.1 24.1 0 0 1 10.159 5.021 2.424 2.424 0 0 0 3.11-3.719 29 29 0 0 0-9.34-5.23l5.633-5.634a36.2 36.2 0 0 1 9.225 5.934 2.425 2.425 0 0 0 3.211-3.633 41 41 0 0 0-8.796-5.941l7.256-7.256a2.423 2.423 0 0 0-3.18-3.645m-35.04 21.474a29 29 0 0 0-6.032 3.942 2.424 2.424 0 0 0 3.137 3.697 24 24 0 0 1 5.022-3.282 2.425 2.425 0 0 0-2.127-4.357M4.748 22.909a2.424 2.424 0 0 0 3.207 3.636 36.36 36.36 0 0 1 26.978-8.977 2.424 2.424 0 0 0 .389-4.832A41.2 41.2 0 0 0 4.748 22.909",
  className: "icon-disconnected_svg__fill"
})));
var _path$D;
function _extends$F() {
  return _extends$F = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$F.apply(null, arguments);
}
const SvgIconDocument = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$F({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$D || (_path$D = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M37.333 2.667a3 3 0 0 1 .274.014l.085.01.058.008q.07.01.141.026l.029.007q.075.016.146.037l.034.01q.357.107.663.303l.034.022q.053.034.104.072l.057.043q.045.033.085.068.091.075.176.16l-.126-.117q.075.065.143.135L55.21 19.438q.07.07.134.143l.035.04q.04.047.076.096l.04.054.07.1.024.038c.16.253.279.535.347.836l.01.048q.014.064.024.13l.006.048.007.051.004.041q.014.135.014.27v32a8 8 0 0 1-8 8H16a8 8 0 0 1-8-8V10.667a8 8 0 0 1 8-8zM34.666 8H16a2.667 2.667 0 0 0-2.667 2.667v42.666A2.667 2.667 0 0 0 16 56h32a2.667 2.667 0 0 0 2.667-2.667L50.666 24H37.333a2.667 2.667 0 0 1-2.648-2.356l-.018-.31zm12.227 10.667-6.894-6.894.001 6.894z",
  className: "icon-document_svg__fill"
})));
var _path$C;
function _extends$E() {
  return _extends$E = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$E.apply(null, arguments);
}
const SvgIconDone = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$E({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$C || (_path$C = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M12.552 31.448a2.665 2.665 0 1 0-3.771 3.771l13.333 13.333a2.666 2.666 0 0 0 3.772 0L55.219 19.22a2.667 2.667 0 0 0-3.771-3.771L24 42.895z",
  className: "icon-done_svg__fill"
})));
var _path$B;
function _extends$D() {
  return _extends$D = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$D.apply(null, arguments);
}
const SvgIconDoneAll = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$D({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$B || (_path$B = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M5.886 31.448 19.219 44.78a2.667 2.667 0 0 1-3.771 3.771L2.114 35.22a2.667 2.667 0 0 1 3.772-3.771zm52.228-16a2.666 2.666 0 1 1 3.772 3.771L32.552 48.552a2.665 2.665 0 0 1-3.771 0L15.448 35.22a2.665 2.665 0 0 1 0-3.771 2.665 2.665 0 0 1 3.771 0l11.448 11.447zm-9.562 0a2.665 2.665 0 0 1 0 3.771L32.556 35.215a2.665 2.665 0 0 1-3.771 0 2.664 2.664 0 0 1 0-3.77L44.78 15.447a2.665 2.665 0 0 1 3.771 0z",
  className: "icon-done-all_svg__fill"
})));
var _path$A;
function _extends$C() {
  return _extends$C = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$C.apply(null, arguments);
}
const SvgIconDownload = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$C({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$A || (_path$A = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M56 42.667a2.667 2.667 0 0 1 2.649 2.355l.018.311v8c0 4.26-3.33 7.743-7.53 7.987l-.47.013H13.333a8 8 0 0 1-7.986-7.53l-.014-.47v-8a2.667 2.667 0 0 1 5.316-.311l.018.311v8a2.67 2.67 0 0 0 2.355 2.65l.311.017h37.334a2.667 2.667 0 0 0 2.648-2.356l.018-.31v-8A2.667 2.667 0 0 1 56 42.667m-36.552-8.781a2.666 2.666 0 0 1 3.52-3.993l.251.221 6.114 6.114V5.333a2.667 2.667 0 0 1 5.316-.311l.018.311v30.894l6.114-6.113a2.67 2.67 0 0 1 3.52-.221l.251.221a2.666 2.666 0 0 1 .222 3.52l-.222.252-10.658 10.657a2 2 0 0 1-.135.128l.127-.119a3 3 0 0 1-.195.176l-.056.045-.086.064-.056.04-.086.056-.06.036-.081.046-.079.04a3 3 0 0 1-.14.065l-.09.036q-.034.014-.067.025l-.09.03-.063.019q-.064.018-.13.034l-.013.003-.144.028-.064.01q-.045.008-.092.012l-.084.008-.103.006-.069.002h-.095q-.042 0-.082-.003l.139.003q-.126 0-.249-.011l-.061-.007-.092-.012-.09-.015-.118-.025-.04-.01a3 3 0 0 1-.34-.11l-.015-.006q-.074-.03-.145-.063l-.042-.02L30.71 45l-.067-.039q-.045-.026-.087-.054l-.062-.041q-.045-.03-.088-.063l-.04-.03-.008-.007a3 3 0 0 1-.251-.223z",
  className: "icon-download_svg__fill"
})));
var _path$z;
function _extends$B() {
  return _extends$B = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$B.apply(null, arguments);
}
const SvgIconEdit = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$B({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 65 65"
}, props), _path$z || (_path$z = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M56 56a2.667 2.667 0 0 1 .311 5.315l-.311.018H8a2.667 2.667 0 0 1-.311-5.316L8 56zM35.448 3.448a2.665 2.665 0 0 1 3.771 0l10.667 10.666a2.67 2.67 0 0 1 0 3.772L20.552 47.219c-.5.5-1.178.781-1.885.781H8a2.667 2.667 0 0 1-2.667-2.667V34.667c0-.708.281-1.386.781-1.886zm1.885 5.659L10.667 35.77v6.896h6.89L44.227 16z",
  className: "icon-edit_svg__fill"
})));
var _path$y;
function _extends$A() {
  return _extends$A = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$A.apply(null, arguments);
}
const SvgIconEmojiMore = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$A({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$y || (_path$y = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32.097 3.22c2.65 0 5.255.357 7.763 1.054a2.134 2.134 0 0 1-1.144 4.111 24.7 24.7 0 0 0-6.619-.899c-13.603 0-24.63 11.027-24.63 24.63s11.027 24.63 24.63 24.63 24.63-11.027 24.63-24.63c0-2.227-.295-4.413-.87-6.518a2.13 2.13 0 0 1 1.494-2.62 2.13 2.13 0 0 1 2.62 1.494 29 29 0 0 1 1.023 7.644c0 15.96-12.938 28.897-28.897 28.897-15.96 0-28.897-12.937-28.897-28.897S16.138 3.22 32.097 3.22m10.705 34.792a2.133 2.133 0 0 1 2.024 2.808c-1.873 5.623-6.937 9.488-12.729 9.488s-10.856-3.865-12.73-9.488a2.134 2.134 0 0 1 1.875-2.803l.15-.005zm-3.477 4.266H24.867l.294.382c1.539 1.887 3.718 3.113 6.115 3.342l.314.024.507.015c2.617 0 5.037-1.188 6.743-3.151l.193-.23zM21.392 21.954c1.087 0 1.985.814 2.116 1.866l.017.267v5.353a2.133 2.133 0 0 1-4.25.268l-.017-.268v-5.353c0-1.178.955-2.133 2.134-2.133m21.41 0c1.088 0 1.985.814 2.117 1.866l.017.267v5.353a2.133 2.133 0 0 1-4.25.268l-.017-.268v-5.353c0-1.178.955-2.133 2.133-2.133M54.853 0a.8.8 0 0 1 .8.8v7.786h7.76a.8.8 0 0 1 .8.8v2.667a.8.8 0 0 1-.8.8h-7.76v7.758a.8.8 0 0 1-.8.8h-2.666a.8.8 0 0 1-.8-.8v-7.758h-7.785a.8.8 0 0 1-.8-.8V9.387a.8.8 0 0 1 .8-.8l7.784-.001V.8a.8.8 0 0 1 .8-.8z",
  className: "icon-emoji-more_svg__fill"
})));
var _path$x;
function _extends$z() {
  return _extends$z = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$z.apply(null, arguments);
}
const SvgIconError = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$z({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$x || (_path$x = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 5.06a8 8 0 0 1 6.561 3.424l.287.439 22.608 37.744a8 8 0 0 1 .022 7.962 8 8 0 0 1-6.356 4.014l-.535.024H9.384a8 8 0 0 1-6.862-4.038 8.01 8.01 0 0 1-.226-7.493l.27-.506L25.16 8.91A8 8 0 0 1 32 5.06m0 5.333c-.816 0-1.58.372-2.076.99l-.196.28-22.565 37.67a2.67 2.67 0 0 0 1.909 3.973l.341.027h45.144a2.67 2.67 0 0 0 2.45-3.659l-.148-.304L34.28 11.676A2.67 2.67 0 0 0 32 10.393m0 32.274A2.667 2.667 0 1 1 32 48a2.667 2.667 0 0 1 0-5.333m0-21.334a2.667 2.667 0 0 1 2.649 2.356l.018.311v10.667a2.667 2.667 0 0 1-5.316.311l-.018-.311V24A2.667 2.667 0 0 1 32 21.333",
  className: "icon-error_svg__fill"
})));
var _path$w;
function _extends$y() {
  return _extends$y = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$y.apply(null, arguments);
}
const SvgIconExpand = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$y({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$w || (_path$w = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M48 8a2.667 2.667 0 0 1 2.649 2.356l.018.31V32l-.001.027v21.306a2.667 2.667 0 0 1-5.315.311l-.018-.31V34.665H19.772l6.114 6.115a2.67 2.67 0 0 1 .221 3.52l-.221.251a2.666 2.666 0 0 1-3.52.222l-.252-.222-10.666-10.666a2.666 2.666 0 0 1-.222-3.52l.222-.252 10.666-10.666a2.666 2.666 0 0 1 3.993 3.52l-.221.251-6.113 6.114h25.56V10.667A2.667 2.667 0 0 1 48 8",
  className: "icon-expand_svg__fill"
})));
var _path$v;
function _extends$x() {
  return _extends$x = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$x.apply(null, arguments);
}
const SvgIconFileAudio = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$x({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$v || (_path$v = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M30.52 12.51c1.685-1.226 4.139-.103 4.139 1.893v35.194c0 1.996-2.454 3.119-4.138 1.893l-12.45-9.909H7.898c-1.416 0-2.564-1.074-2.564-2.399V24.818c0-1.325 1.148-2.4 2.564-2.4h10.175zm20.427.163c10.293 10.667 10.293 27.987 0 38.654a2.137 2.137 0 0 1-3.156-.047c-.86-.942-.84-2.448.044-3.364 8.49-8.799 8.49-23.033 0-31.832-.884-.916-.904-2.422-.044-3.364a2.137 2.137 0 0 1 3.156-.047m-8.492 8.799c5.597 5.8 5.597 15.231 0 21.031a2.136 2.136 0 0 1-3.156-.046c-.86-.942-.84-2.448.044-3.364 3.794-3.932 3.794-10.279 0-14.211-.884-.916-.904-2.422-.044-3.363a2.136 2.136 0 0 1 3.156-.047",
  className: "icon-file-audio_svg__fill"
})));
var _path$u;
function _extends$w() {
  return _extends$w = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$w.apply(null, arguments);
}
const SvgIconFileDocument = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$w({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$u || (_path$u = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M39.414 6.4a2.4 2.4 0 0 1 1.71.701l12.642 12.75c.407.41.634.953.634 1.516v29.765c0 3.542-4.342 6.468-8 6.468H16.16c-3.658 0-6.4-2.926-6.4-6.468L9.6 12.868c0-3.542 2.902-6.468 6.56-6.468zm3.331 35.173-21.49.027-.147.005c-1.066.08-1.908 1.014-1.908 2.155 0 1.193.92 2.16 2.055 2.16l21.49-.027.147-.005c1.066-.08 1.908-1.014 1.908-2.155 0-1.193-.92-2.16-2.055-2.16m0-8.533-21.49.027-.147.005c-1.066.08-1.908 1.014-1.908 2.155 0 1.193.92 2.16 2.055 2.16l21.49-.027.147-.005c1.066-.08 1.908-1.014 1.908-2.155 0-1.193-.92-2.16-2.055-2.16m-11.807-8.507h-9.6l-.153.006a2.15 2.15 0 0 0-1.985 2.154c0 1.193.957 2.16 2.138 2.16h9.6l.152-.005a2.15 2.15 0 0 0 1.985-2.155c0-1.193-.957-2.16-2.137-2.16",
  className: "icon-file-document_svg__fill"
})));
var _path$t;
function _extends$v() {
  return _extends$v = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$v.apply(null, arguments);
}
const SvgIconFreeze = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$v({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$t || (_path$t = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m41.636 3.226.251.222a2.67 2.67 0 0 1 .222 3.52l-.222.251-7.219 7.218V27.38l11.209-6.472 2.643-9.86a2.667 2.667 0 0 1 5.218 1.051l-.067.329-2.237 8.35 8.352 2.24a2.67 2.67 0 0 1 1.952 2.938l-.067.328a2.67 2.67 0 0 1-2.937 1.952l-.329-.066-9.861-2.643L37.334 32l11.209 6.47 9.862-2.64.329-.067a2.67 2.67 0 0 1 2.937 1.952l.067.328a2.67 2.67 0 0 1-1.952 2.938l-8.353 2.237 2.238 8.353.067.329a2.666 2.666 0 0 1-5.218 1.052l-2.643-9.861-11.209-6.472v12.944l7.219 7.218a2.667 2.667 0 0 1-3.52 3.993l-.251-.222L32 54.437l-6.114 6.115a2.666 2.666 0 0 1-3.52.222l-.251-.222a2.666 2.666 0 0 1-.222-3.52l.222-.251 7.218-7.22V36.62l-11.209 6.47-2.642 9.863a2.666 2.666 0 0 1-5.218-1.052l.067-.329 2.236-8.351-8.35-2.24a2.665 2.665 0 0 1-1.953-2.937l.067-.328a2.665 2.665 0 0 1 2.937-1.952l.329.066 9.861 2.642L26.667 32l-11.209-6.472-9.86 2.643-.329.066a2.665 2.665 0 0 1-2.937-1.952l-.067-.328a2.67 2.67 0 0 1 1.952-2.938l8.35-2.239-2.235-8.351-.067-.329a2.667 2.667 0 0 1 5.218-1.052l2.642 9.862 11.209 6.47V14.439L22.116 7.22a2.665 2.665 0 0 1 0-3.771 2.666 2.666 0 0 1 3.52-.222l.251.222 6.114 6.112 6.115-6.112a2.666 2.666 0 0 1 3.52-.222z",
  className: "icon-freeze_svg__fill"
})));
var _path$s;
function _extends$u() {
  return _extends$u = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$u.apply(null, arguments);
}
const SvgIconGif = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$u({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$s || (_path$s = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16.664 45.333q3.233 0 5.89-.953 2.658-.954 4.113-2.683V31.34h-10.29v3.94h4.902v4.474q-1.292 1.284-4.327 1.283-3.017 0-4.58-2.085-1.561-2.085-1.562-6.168v-1.657q.018-4.047 1.455-6.097t4.184-2.05q2.155 0 3.385 1.034t1.59 3.262h5.243q-.486-4.206-3.107-6.408t-7.273-2.201q-3.34 0-5.827 1.506t-3.807 4.35q-1.32 2.843-1.32 6.728v1.765q.036 3.78 1.428 6.578 1.392 2.797 3.95 4.269 2.56 1.47 5.953 1.47m20.67 0V18.667H32v26.666h5.333zm10.396 0V34.436h9.721v-4.432H47.73v-6.887h10.937v-4.45h-16v26.666z",
  className: "icon-gif_svg__fill"
})));
var _path$r;
function _extends$t() {
  return _extends$t = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$t.apply(null, arguments);
}
const SvgIconInfo = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$t({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$r || (_path$r = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32s10.745 24 24 24 24-10.745 24-24S45.255 8 32 8m1.667 21.333a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3.334a1 1 0 0 1-1-1v-14a1 1 0 0 1 1-1zm-1.667-8a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334",
  className: "icon-info_svg__fill"
})));
var _path$q;
function _extends$s() {
  return _extends$s = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$s.apply(null, arguments);
}
const SvgIconLeave = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$s({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$q || (_path$q = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 5.333a2.667 2.667 0 0 1 .311 5.316l-.311.018H10.667a2.67 2.67 0 0 0-2.65 2.355L8 13.333v37.334a2.667 2.667 0 0 0 2.356 2.648l.31.018H32a2.667 2.667 0 0 1 .311 5.316l-.311.018H10.667a8 8 0 0 1-7.987-7.53l-.013-.47V13.333a8 8 0 0 1 7.53-7.986l.47-.014zm17.634 13.893.252.222 10.666 10.666a2.666 2.666 0 0 1 .222 3.52l-.222.252-10.666 10.666a2.666 2.666 0 0 1-3.993-3.52l.221-.251 4.78-4.782L20 36a2.667 2.667 0 0 1-.311-5.315l.311-.018h33.56l-7.446-7.448a2.67 2.67 0 0 1-.221-3.52l.221-.251a2.666 2.666 0 0 1 3.52-.222",
  className: "icon-leave_svg__fill"
})));
var _path$p;
function _extends$r() {
  return _extends$r = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$r.apply(null, arguments);
}
const SvgIconMembers = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$r({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$p || (_path$p = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 37.333c7.17 0 13.018 5.66 13.32 12.755l.013.579V56a2.667 2.667 0 0 1-5.315.311L42.667 56v-5.333c0-4.26-3.33-7.743-7.53-7.987l-.47-.013H13.333a8 8 0 0 0-7.986 7.53l-.014.47V56a2.667 2.667 0 0 1-5.316.311L0 56v-5.333c0-7.17 5.66-13.019 12.755-13.321l.578-.013zM54 37.765a13.33 13.33 0 0 1 9.986 12.297l.014.605V56a2.667 2.667 0 0 1-5.315.311L58.667 56v-5.331a8 8 0 0 0-6-7.74A2.667 2.667 0 1 1 54 37.765M24 5.333c7.364 0 13.333 5.97 13.333 13.334S31.363 32 24 32s-13.333-5.97-13.333-13.333S16.637 5.333 24 5.333m19.328.43a13.333 13.333 0 0 1 0 25.834 2.667 2.667 0 1 1-1.323-5.167 8 8 0 0 0 0-15.5 2.667 2.667 0 1 1 1.323-5.167M24 10.667a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-members_svg__fill"
})));
var _path$o;
function _extends$q() {
  return _extends$q = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$q.apply(null, arguments);
}
const SvgIconMessage = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$q({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$o || (_path$o = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8M18.667 29.333a2.667 2.667 0 1 1-.001 5.333 2.667 2.667 0 0 1 .001-5.333m13.333 0a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334m13.333 0a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334",
  className: "icon-message_svg__fill"
})));
var _path$n;
function _extends$p() {
  return _extends$p = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$p.apply(null, arguments);
}
const SvgIconModerations = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$p({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$n || (_path$n = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M18.667 34.667a2.667 2.667 0 0 1 .311 5.316l-.311.017h-5.334v16a2.667 2.667 0 0 1-5.316.311L8 56V40H2.667a2.667 2.667 0 0 1-.311-5.315l.31-.018h16zM32 29.333a2.667 2.667 0 0 1 2.649 2.356l.018.311v24a2.667 2.667 0 0 1-5.316.311L29.333 56V32A2.667 2.667 0 0 1 32 29.333M61.333 40a2.667 2.667 0 0 1 .311 5.315l-.31.018h-5.335L56 56a2.667 2.667 0 0 1-5.315.311L50.667 56l-.001-10.668-5.333.001a2.667 2.667 0 0 1-.311-5.316l.311-.017zm-8-34.667a2.67 2.67 0 0 1 2.65 2.356L56 8v24a2.667 2.667 0 0 1-5.315.311L50.667 32V8a2.667 2.667 0 0 1 2.666-2.667m-42.666 0a2.667 2.667 0 0 1 2.648 2.356l.018.311v18.667a2.667 2.667 0 0 1-5.316.311L8 26.667V8a2.667 2.667 0 0 1 2.667-2.667m21.333 0a2.667 2.667 0 0 1 2.649 2.356l.018.311-.001 10.666H40a2.668 2.668 0 0 1 .311 5.317L40 24H24a2.667 2.667 0 0 1-.311-5.315l.311-.018h5.333V8A2.667 2.667 0 0 1 32 5.333",
  className: "icon-moderations_svg__fill"
})));
var _path$m;
function _extends$o() {
  return _extends$o = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$o.apply(null, arguments);
}
const SvgIconMore = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$o({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$m || (_path$m = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 45.333a5.333 5.333 0 1 1 0 10.666 5.333 5.333 0 0 1 0-10.666M32 28a5.333 5.333 0 1 1 0 10.668A5.333 5.333 0 0 1 32 28m0-17.333c2.946 0 5.333 2.387 5.333 5.333S34.946 21.333 32 21.333 26.667 18.946 26.667 16s2.387-5.333 5.333-5.333",
  className: "icon-more_svg__fill"
})));
var _path$l;
function _extends$n() {
  return _extends$n = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$n.apply(null, arguments);
}
const SvgIconMute = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$n({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$l || (_path$l = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m55.62 19.616.067.123A26.55 26.55 0 0 1 58.667 32c0 4.326-1.03 8.41-2.864 12.025q-1.518 4.089-.67 6.363 1.066 2.855 2.662 4.758 2.31 2.379-1.506 3.33-3.135.782-10.879-1.646l-.488-.155-1.594-.527A26.6 26.6 0 0 1 32 58.667a26.55 26.55 0 0 1-12.326-3.014l-.059-.03 4-4A21.2 21.2 0 0 0 32 53.333c2.993 0 5.89-.614 8.562-1.786l.498-.226 1.925-.905 3.613 1.196.695.219q1.093.337 2.054.595l.472.125.485.121-.167-.42-.2-.594c-.814-2.685-.484-5.681.713-9.065l.154-.425.106-.284.528-1.084a21.2 21.2 0 0 0 1.895-8.8 21.2 21.2 0 0 0-1.71-8.385zm2.266-13.502a2.67 2.67 0 0 1 .221 3.52l-.221.252-48 48a2.668 2.668 0 0 1-3.993-3.52l.221-.252 5.238-5.237a26.56 26.56 0 0 1-6.015-16.412L5.333 32C5.333 17.272 17.273 5.333 32 5.333a26.55 26.55 0 0 1 16.877 6.02l5.237-5.239a2.67 2.67 0 0 1 3.772 0M32 10.667c-11.782 0-21.333 9.55-21.333 21.333 0 4.836 1.614 9.401 4.48 13.084l29.936-29.938A21.25 21.25 0 0 0 32 10.666z",
  className: "icon-mute_svg__fill"
})));
var _path$k;
function _extends$m() {
  return _extends$m = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$m.apply(null, arguments);
}
const SvgIconNotifications = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$m({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$k || (_path$k = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.613 53.333c2.056 0 3.338 2.227 2.307 4.005a8 8 0 0 1-13.84 0c-.98-1.689.129-3.783 2.004-3.988l.303-.017zM32 2.667c11.56 0 20.972 9.194 21.323 20.669l.01.664v13.333a5.334 5.334 0 0 0 4.936 5.319l.753.033c2.963.318 3.077 4.616.342 5.24l-.342.056-.355.019H5.333l-.355-.019c-3.082-.33-3.082-4.965 0-5.296l.753-.033a5.335 5.335 0 0 0 4.92-4.9l.016-.419V24c0-11.782 9.55-21.333 21.333-21.333M32 8c-8.636 0-15.674 6.842-15.989 15.4L16 24v13.333c0 1.562-.336 3.046-.939 4.383l-.275.564-.218.387h34.861l-.215-.387a10.6 10.6 0 0 1-1.146-3.74l-.055-.674-.013-.533V24c0-8.837-7.163-16-16-16",
  className: "icon-notifications_svg__fill"
})));
var _path$j;
function _extends$l() {
  return _extends$l = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$l.apply(null, arguments);
}
const SvgIconNotificationsOffFilled = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$l({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$j || (_path$j = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.613 53.333c2.056 0 3.338 2.227 2.307 4.005a8 8 0 0 1-13.84 0c-.98-1.689.129-3.783 2.004-3.988l.303-.017zM32 2.667c7.173 0 13.52 3.54 17.387 8.97l5.686-5.687a2.105 2.105 0 0 1 2.85-.117l.127.117a2.105 2.105 0 0 1 0 2.977L8.927 58.05c-.78.781-2.023.82-2.85.117l-.127-.117a2.105 2.105 0 0 1 0-2.977L13.023 48h-7.69l-.355-.019c-3.082-.33-3.082-4.965 0-5.296l.753-.033a5.335 5.335 0 0 0 4.92-4.9l.016-.419V24c0-11.782 9.55-21.333 21.333-21.333m20.85 16.795c.271 1.253.433 2.548.473 3.874l.01.664v13.333a5.334 5.334 0 0 0 4.936 5.319l.753.033c2.963.318 3.077 4.616.342 5.24l-.342.056-.355.019H24.31z",
  className: "icon-notifications-off-filled_svg__fill"
})));
var _path$i;
function _extends$k() {
  return _extends$k = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$k.apply(null, arguments);
}
const SvgIconOperator = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$k({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$i || (_path$i = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M29.83 6.45a2.667 2.667 0 0 1 4.34 0l11.697 16.374L57 13.918c1.88-1.504 4.573.054 4.32 2.35l-.047.29-8 37.334A2.666 2.666 0 0 1 50.666 56H13.333a2.666 2.666 0 0 1-2.607-2.108l-8-37.333c-.525-2.452 2.315-4.207 4.273-2.641l11.132 8.906zM32 12.587l-11.163 15.63a2.667 2.667 0 0 1-3.836.532l-7.497-5.997 5.984 27.915h33.021l5.984-27.915L47 28.749a2.667 2.667 0 0 1-3.632-.281l-.204-.251zM32 32a5.333 5.333 0 1 1 0 10.668A5.333 5.333 0 0 1 32 32",
  className: "icon-operator_svg__fill"
})));
var _path$h;
function _extends$j() {
  return _extends$j = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$j.apply(null, arguments);
}
const SvgIconPhoto = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$j({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$h || (_path$h = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M50.667 5.333a8 8 0 0 1 8 8v37.334a8 8 0 0 1-8 8H13.333a8 8 0 0 1-8-8V13.333a8 8 0 0 1 8-8zm-8 25.107L19.77 53.332l30.896.001a2.667 2.667 0 0 0 2.661-2.498l.005-.168v-9.564L42.666 30.44zm8-19.773H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334c0 1.143.72 2.119 1.731 2.498L40.781 24.78a2.67 2.67 0 0 1 3.52-.222l.251.222 8.78 8.78.001-20.228a2.667 2.667 0 0 0-2.498-2.661zm-28 5.333a6.666 6.666 0 1 1 0 13.333 6.666 6.666 0 0 1 0-13.333m0 5.333a1.334 1.334 0 1 0 0 2.667 1.334 1.334 0 0 0 0-2.667",
  className: "icon-photo_svg__fill"
})));
var _path$g;
function _extends$i() {
  return _extends$i = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$i.apply(null, arguments);
}
const SvgIconPlay = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$i({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$g || (_path$g = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M51.908 34.75c1.9-1.233 1.896-3.26.013-4.514L19.376 8.577c-1.893-1.26-3.404-.391-3.376 1.968l.522 42.888c.028 2.347 1.596 3.247 3.493 2.016z",
  className: "icon-play_svg__fill"
})));
var _path$f;
function _extends$h() {
  return _extends$h = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$h.apply(null, arguments);
}
const SvgIconPlus = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$h({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$f || (_path$f = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 29.333h18.666c3.556 0 3.556 5.334 0 5.334H34.667v18.666c0 3.556-5.334 3.556-5.334 0V34.667H10.667c-3.556 0-3.556-5.334 0-5.334h18.666V10.667c0-3.556 5.334-3.556 5.334 0z",
  className: "icon-plus_svg__fill"
})));
var _path$e;
function _extends$g() {
  return _extends$g = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$g.apply(null, arguments);
}
const SvgIconQuestion = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$g({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$e || (_path$e = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 61.333C15.8 61.333 2.667 48.2 2.667 32S15.8 2.667 32 2.667 61.333 15.8 61.333 32 48.2 61.333 32 61.333M32 56c13.255 0 24-10.745 24-24S45.255 8 32 8 8 18.745 8 32s10.745 24 24 24m2.213-18.63a2.667 2.667 0 1 1-5.333 0v-2.69c0-1.148.734-2.168 1.823-2.53.173-.058.532-.195 1.01-.407.809-.36 1.616-.79 2.354-1.282 1.835-1.223 2.813-2.528 2.813-3.786a5.333 5.333 0 0 0-10.364-1.777 2.667 2.667 0 0 1-5.032-1.77 10.668 10.668 0 0 1 20.729 3.551c0 3.413-2.022 6.109-5.187 8.22a21 21 0 0 1-2.813 1.578zm-5.333 7.523a2.667 2.667 0 1 1 5.333 0v.44a2.667 2.667 0 1 1-5.333 0v-.44",
  className: "icon-question_svg__fill"
})));
var _path$d;
function _extends$f() {
  return _extends$f = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$f.apply(null, arguments);
}
const SvgIconRefresh = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$f({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$d || (_path$d = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m46.14 14.43.562.537 6.631 6.167v-7.8a2.67 2.67 0 0 1 2.356-2.65l.311-.017a2.667 2.667 0 0 1 2.649 2.355l.018.311v16a2.67 2.67 0 0 1-2.356 2.65L56 32H40a2.667 2.667 0 0 1-.311-5.315l.311-.018h11.452l-8.44-7.85c-5.964-5.893-15.168-7.182-22.563-3.156-7.38 4.018-11.172 12.357-9.314 20.455 1.859 8.107 8.935 14.032 17.362 14.518 8.43.487 16.162-4.585 18.967-12.426a2.667 2.667 0 0 1 5.022 1.797C48.88 50.082 38.973 56.582 28.19 55.959c-10.785-.623-19.862-8.222-22.254-18.65C3.542 26.872 8.426 16.135 17.9 10.977c9.227-5.024 20.65-3.579 28.241 3.453z",
  className: "icon-refresh_svg__fill"
})));
var _path$c;
function _extends$e() {
  return _extends$e = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$e.apply(null, arguments);
}
const SvgIconRemove = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$e({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$c || (_path$c = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667m9.886 19.447a2.67 2.67 0 0 0-3.772 0L32 28.23l-6.114-6.115-.134-.124a2.667 2.667 0 0 0-3.638.124l-.124.134a2.667 2.667 0 0 0 .124 3.638L28.23 32l-6.115 6.114-.124.134a2.667 2.667 0 0 0 .124 3.638l.134.124a2.667 2.667 0 0 0 3.638-.124L32 35.77l6.114 6.115.134.124a2.667 2.667 0 0 0 3.638-.124l.124-.134a2.667 2.667 0 0 0-.124-3.638L35.77 32l6.115-6.114.124-.134a2.667 2.667 0 0 0-.124-3.638z",
  className: "icon-remove_svg__fill"
})));
var _path$b;
function _extends$d() {
  return _extends$d = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$d.apply(null, arguments);
}
const SvgIconReplyFilled = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$d({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 12 12"
}, props), _path$b || (_path$b = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M11.774 10.5c.062 0 .12-.025.164-.07a.22.22 0 0 0 .062-.164c-.069-1.447-.495-2.678-1.268-3.66-.618-.785-1.455-1.409-2.49-1.855a9.3 9.3 0 0 0-2.406-.655 10 10 0 0 0-.862-.078V2.225a.23.23 0 0 0-.128-.203.23.23 0 0 0-.24.028L.084 5.692A.22.22 0 0 0 0 5.865c0 .068.03.132.082.175l4.523 3.737c.067.056.16.068.24.03a.22.22 0 0 0 .13-.202v-1.95c1.134-.08 2.178.003 3.107.25a6.4 6.4 0 0 1 2.087.96c1.018.724 1.398 1.5 1.401 1.507a.23.23 0 0 0 .204.128",
  className: "icon-reply-filled_svg__fill"
})));
var _path$a;
function _extends$c() {
  return _extends$c = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$c.apply(null, arguments);
}
const SvgIconSearch = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$c({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$a || (_path$a = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M26.667 48C14.885 48 5.333 38.449 5.333 26.667S14.885 5.333 26.667 5.333 48 14.885 48 26.667c0 4.93-1.672 9.469-4.48 13.081l13.67 13.67a2.668 2.668 0 0 1-3.772 3.772l-13.67-13.67A21.24 21.24 0 0 1 26.667 48m0-5.333c8.836 0 16-7.164 16-16s-7.164-16-16-16-16 7.163-16 16 7.163 16 16 16",
  className: "icon-search_svg__fill"
})));
var _path$9;
function _extends$b() {
  return _extends$b = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$b.apply(null, arguments);
}
const SvgIconSend = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$b({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$9 || (_path$9 = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M59.795 29.43 7.329 2.979C4.691 1.802 1.76 4.153 2.932 6.798l6.925 18.609a2 2 0 0 0 1.544 1.275l32.273 5.394L11.4 37.47a2 2 0 0 0-1.544 1.275L2.932 57.353c-.879 2.645 1.76 4.997 4.397 3.527l52.466-26.453c2.051-.882 2.051-3.82 0-4.996z",
  className: "icon-send_svg__fill"
})));
var _path$8;
function _extends$a() {
  return _extends$a = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$a.apply(null, arguments);
}
const SvgIconSettingsFilled = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$a({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$8 || (_path$8 = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667A5.33 5.33 0 0 1 37.333 8v.24A4.4 4.4 0 0 0 40 12.267a4.4 4.4 0 0 0 4.853-.88l.16-.16a5.33 5.33 0 0 1 7.547 0 5.333 5.333 0 0 1 0 7.546l-.16.16a4.4 4.4 0 0 0-.88 4.854V24a4.4 4.4 0 0 0 4.027 2.667H56c2.946 0 5.333 2.387 5.333 5.333S58.946 37.333 56 37.333h-.24A4.4 4.4 0 0 0 51.733 40a4.4 4.4 0 0 0 .88 4.853l.16.16a5.33 5.33 0 0 1 0 7.547 5.333 5.333 0 0 1-7.546 0l-.16-.16a4.4 4.4 0 0 0-4.854-.88 4.4 4.4 0 0 0-2.666 4.027V56a5.333 5.333 0 0 1-10.667 0v-.24A4.4 4.4 0 0 0 24 51.733a4.4 4.4 0 0 0-4.853.88l-.16.16a5.33 5.33 0 0 1-7.547 0 5.333 5.333 0 0 1 0-7.546l.16-.16a4.4 4.4 0 0 0 .88-4.854 4.4 4.4 0 0 0-4.027-2.666H8A5.333 5.333 0 0 1 8 26.88h.24A4.4 4.4 0 0 0 12.267 24a4.4 4.4 0 0 0-.88-4.853l-.16-.16a5.33 5.33 0 0 1 0-7.547 5.333 5.333 0 0 1 7.546 0l.16.16a4.4 4.4 0 0 0 4.854.88H24a4.4 4.4 0 0 0 2.667-4.027V8A5.33 5.33 0 0 1 32 2.667M32 24a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-settings-filled_svg__fill"
})));
var _path$7;
function _extends$9() {
  return _extends$9 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$9.apply(null, arguments);
}
const SvgIconSlideLeft = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$9({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 32 32"
}, props), _path$7 || (_path$7 = /* @__PURE__ */ React__default.createElement("path", {
  d: "M21.943 24.39a1.333 1.333 0 0 1-1.886 1.886l-9.333-9.333a1.333 1.333 0 0 1 0-1.886l9.333-9.333a1.333 1.333 0 1 1 1.886 1.885L13.553 16z",
  className: "icon-slide-left_svg__fill",
  clipRule: "evenodd"
})));
var _path$6;
function _extends$8() {
  return _extends$8 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$8.apply(null, arguments);
}
const SvgIconSpinner = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$8({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$6 || (_path$6 = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 61.333C48.2 61.333 61.333 48.2 61.333 32S48.2 2.667 32 2.667 2.667 15.8 2.667 32a2.838 2.838 0 1 0 5.678 0C8.344 18.935 18.934 8.344 32 8.344c13.065 0 23.656 10.591 23.656 23.656S45.065 55.656 32 55.656a2.838 2.838 0 1 0 0 5.677",
  className: "icon-spinner_svg__fill"
})));
var _path$5;
function _extends$7() {
  return _extends$7 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$7.apply(null, arguments);
}
const SvgIconSupergroup = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$7({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$5 || (_path$5 = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.889 43.013c6.608 0 12.121 4.685 12.43 10.734l.014.537V58a2.667 2.667 0 0 1-5.316.311L44 58v-3.716c0-3.07-2.87-5.718-6.636-5.925l-.475-.013H27.11c-3.838 0-6.86 2.525-7.096 5.557l-.015.381V58a2.667 2.667 0 0 1-5.315.311L14.667 58v-3.716c0-6.126 5.324-10.986 11.864-11.26l.58-.011zm18.578-17.291q.401 0 .784.118c4.632 1.426 7.518 4.801 7.736 9.688l.013.594v12.8a2.667 2.667 0 0 1-5.315.311l-.018-.311V36.124c-.002-2.595-1.163-4.171-3.528-5.034l-.104-.037-2.502.002a2.667 2.667 0 0 1-2.648-2.356l-.018-.31a2.67 2.67 0 0 1 2.355-2.65l.311-.017zm-44 0 .31.018a2.666 2.666 0 0 1 2.356 2.648l-.018.311a2.666 2.666 0 0 1-2.648 2.356l-2.51-.002-.119.042c-2.246.85-3.503 2.574-3.505 5.147v12.68l-.018.31A2.666 2.666 0 0 1 0 48.922V36.24l.014-.591c.225-4.874 3.203-8.415 7.712-9.809q.384-.117.788-.118zM32 19.958c5.512 0 10 4.409 10 9.871s-4.488 9.872-10 9.872-10-4.41-10-9.872 4.488-9.871 10-9.871m0 5.333c-2.588 0-4.667 2.043-4.667 4.538s2.08 4.538 4.667 4.538c2.588 0 4.667-2.042 4.667-4.538 0-2.495-2.08-4.538-4.667-4.538M17.333 2.667c5.513 0 10 4.409 10 9.871s-4.487 9.871-10 9.871c-5.512 0-10-4.409-10-9.871s4.488-9.871 10-9.871m29.334 0c5.512 0 10 4.409 10 9.871s-4.488 9.871-10 9.871c-5.513 0-10-4.409-10-9.871s4.487-9.871 10-9.871M17.333 8c-2.587 0-4.666 2.042-4.666 4.538s2.079 4.538 4.666 4.538S22 15.034 22 12.538 19.921 8 17.333 8m29.334 0C44.079 8 42 10.042 42 12.538s2.079 4.538 4.667 4.538 4.666-2.042 4.666-4.538S49.254 8 46.667 8",
  className: "icon-supergroup_svg__fill"
})));
var _path$4, _path2;
function _extends$6() {
  return _extends$6 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$6.apply(null, arguments);
}
const SvgIconThread = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$6({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 64 64"
}, props), _path$4 || (_path$4 = /* @__PURE__ */ React__default.createElement("path", {
  d: "M38.824 25.895a2.95 2.95 0 0 1 4.16-.074L57.1 39.378a2.92 2.92 0 0 1 .002 4.213L42.985 57.177a2.95 2.95 0 0 1-4.158-.07 2.92 2.92 0 0 1 .07-4.14l11.928-11.48-11.926-11.451a2.92 2.92 0 0 1-.075-4.14",
  className: "icon-thread_svg__fill",
  clipRule: "evenodd"
})), _path2 || (_path2 = /* @__PURE__ */ React__default.createElement("path", {
  d: "M8.866 6c1.583 0 2.866 1.216 2.866 2.716V25.5c0 7.672 6.846 14.068 15.475 14.068h22.927c1.583 0 2.866 1.216 2.866 2.716S51.717 45 50.134 45H27.207C15.604 45 6 36.35 6 25.5V8.716C6 7.216 7.283 6 8.866 6",
  className: "icon-thread_svg__fill",
  clipRule: "evenodd"
})));
var _path$3;
function _extends$5() {
  return _extends$5 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$5.apply(null, arguments);
}
const SvgIconThumbnailNone = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$5({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$3 || (_path$3 = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 5.333a2.667 2.667 0 0 1 0 5.334H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334c0 1.143.72 2.118 1.73 2.497l28.384-28.383a2.667 2.667 0 0 1 3.771 0l8.781 8.78v-4.228a2.667 2.667 0 0 1 2.498-2.661l.169-.005a2.667 2.667 0 0 1 2.667 2.666v21.334a8 8 0 0 1-8 8H13.33a8 8 0 0 1-7.998-8V13.333a8 8 0 0 1 8-8zm8 25.105L19.77 53.333h30.897a2.667 2.667 0 0 0 2.661-2.498l.005-.168v-9.563zM22.667 16a6.666 6.666 0 1 1 0 13.333 6.666 6.666 0 0 1 0-13.333m0 5.333a1.334 1.334 0 1 0 0 2.667 1.334 1.334 0 0 0 0-2.667M56.78 3.448a2.665 2.665 0 0 1 3.771 0 2.665 2.665 0 0 1 0 3.771l-4.782 4.78 4.782 4.782c.998.998 1.04 2.59.125 3.638l-.125.133a2.665 2.665 0 0 1-3.771 0l-4.782-4.781-4.78 4.781a2.667 2.667 0 0 1-3.638.125l-.133-.125a2.665 2.665 0 0 1 0-3.771L48.228 12l-4.78-4.781a2.667 2.667 0 0 1-.125-3.638l.125-.133a2.665 2.665 0 0 1 3.771 0l4.78 4.78z",
  className: "icon-thumbnail-none_svg__fill"
})));
var _g$1;
function _extends$4() {
  return _extends$4 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$4.apply(null, arguments);
}
const SvgIconToggleoff = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$4({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 88 48"
}, props), _g$1 || (_g$1 = /* @__PURE__ */ React__default.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, /* @__PURE__ */ React__default.createElement("rect", {
  width: 80,
  height: 40,
  x: 4,
  y: 4,
  fill: "#000",
  className: "icon-toggleoff_svg__fill",
  rx: 20
}), /* @__PURE__ */ React__default.createElement("circle", {
  cx: 24,
  cy: 24,
  r: 12,
  fill: "#FFF"
}), /* @__PURE__ */ React__default.createElement("path", {
  fill: "#FFF",
  d: "M64 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4zm0 2H24C14.059 6 6 14.059 6 24c0 9.764 7.774 17.712 17.47 17.992L24 42h40c9.941 0 18-8.059 18-18 0-9.764-7.774-17.712-17.47-17.992z"
}), /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  d: "M64 0H24C10.745 0 0 10.745 0 24s10.745 24 24 24h40c13.255 0 24-10.745 24-24S77.255 0 64 0m0 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4z",
  className: "icon-toggleoff_svg__fill"
}))));
var _g;
function _extends$3() {
  return _extends$3 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$3.apply(null, arguments);
}
const SvgIconToggleon = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$3({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 88 48"
}, props), _g || (_g = /* @__PURE__ */ React__default.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, /* @__PURE__ */ React__default.createElement("rect", {
  width: 80,
  height: 40,
  x: 4,
  y: 4,
  fill: "#000",
  className: "icon-toggleon_svg__fill",
  rx: 20
}), /* @__PURE__ */ React__default.createElement("circle", {
  cx: 64,
  cy: 24,
  r: 12,
  fill: "#FFF"
}), /* @__PURE__ */ React__default.createElement("path", {
  fill: "#FFF",
  d: "M64 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4zm0 2H24C14.059 6 6 14.059 6 24c0 9.764 7.774 17.712 17.47 17.992L24 42h40c9.941 0 18-8.059 18-18 0-9.764-7.774-17.712-17.47-17.992z"
}), /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  d: "M64 0H24C10.745 0 0 10.745 0 24s10.745 24 24 24h40c13.255 0 24-10.745 24-24S77.255 0 64 0m0 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4z",
  className: "icon-toggleon_svg__fill"
}))));
var _path$2;
function _extends$2() {
  return _extends$2 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$2.apply(null, arguments);
}
const SvgIconUser = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$2({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$2 || (_path$2 = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M42.667 37.333c7.17 0 13.018 5.66 13.32 12.755l.013.579V56a2.667 2.667 0 0 1-5.315.311L50.667 56v-5.333c0-4.26-3.33-7.743-7.53-7.987l-.47-.013H21.333a8 8 0 0 0-7.986 7.53l-.014.47V56a2.667 2.667 0 0 1-5.316.311L8 56v-5.333c0-7.17 5.66-13.019 12.755-13.321l.578-.013zM32 5.333c7.364 0 13.333 5.97 13.333 13.334S39.363 32 32 32s-13.333-5.97-13.333-13.333S24.637 5.333 32 5.333m0 5.334a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-user_svg__fill"
})));
var _path$1;
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$1.apply(null, arguments);
}
const SvgIconFeedbackLike = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$1({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none"
}, props), _path$1 || (_path$1 = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M12.346 5.336v-.001c.405-.523 1.182-.524 1.58-.037.162.2.25.443.25.69v3.678c0 .518.42.938.938.938H18.6c.359 0 .7.179.911.488l.001.001.369.548.003.004c.174.256.226.583.134.895l-1.532 5.316c-.131.459-.559.782-1.044.782h-7.075c-.3 0-.593-.127-.8-.345l-1.13-1.222v-6.647zm-4.73 3.078 3.245-4.223.002-.002c1.125-1.456 3.339-1.521 4.517-.075.421.52.671 1.177.671 1.874v2.74h2.55c.99 0 1.908.496 2.462 1.31l.002.004.368.547.002.002a2.93 2.93 0 0 1 .382 2.475v.003l-1.528 5.302a2.96 2.96 0 0 1-2.847 2.142h-7.075a2.99 2.99 0 0 1-2.166-.935l-.007-.007-.066-.072a2.13 2.13 0 0 1-1.821 1.025H4.192a2.13 2.13 0 0 1-2.13-2.13v-8.3a2.13 2.13 0 0 1 2.13-2.13h2.115c.493 0 .948.168 1.31.45m-3.678 1.68c0-.141.114-.255.254-.255h2.115c.14 0 .254.114.254.255v8.3c0 .14-.114.255-.254.255H4.192a.255.255 0 0 1-.255-.255z",
  clipRule: "evenodd"
})));
var _path;
function _extends$Y() {
  return _extends$Y = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t4 = arguments[e3];
      for (var r2 in t4) ({}).hasOwnProperty.call(t4, r2) && (n2[r2] = t4[r2]);
    }
    return n2;
  }, _extends$Y.apply(null, arguments);
}
const SvgIconFeedbackDislike = (props) => /* @__PURE__ */ React__default.createElement("svg", _extends$Y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none"
}, props), _path || (_path = /* @__PURE__ */ React__default.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M11.654 18.664v.001c-.405.523-1.182.524-1.58.037-.162-.2-.25-.444-.25-.69v-3.678a.94.94 0 0 0-.938-.938H5.4c-.359 0-.7-.179-.911-.488l-.001-.001-.369-.548-.003-.004a1.05 1.05 0 0 1-.134-.895l1.532-5.316c.131-.459.559-.782 1.044-.782h7.075c.3 0 .593.127.8.345l1.13 1.222v6.647zm4.73-3.078-3.245 4.223-.002.002c-1.125 1.456-3.339 1.521-4.517.075a2.98 2.98 0 0 1-.671-1.874v-2.74h-2.55c-.99 0-1.908-.496-2.462-1.31l-.002-.004-.368-.547-.002-.002a2.93 2.93 0 0 1-.382-2.475v-.003L3.711 5.63a2.96 2.96 0 0 1 2.847-2.142h7.075c.823 0 1.608.345 2.166.935l.007.007.066.072a2.13 2.13 0 0 1 1.821-1.025h2.115a2.13 2.13 0 0 1 2.13 2.13v8.3a2.13 2.13 0 0 1-2.13 2.13h-2.115a2.12 2.12 0 0 1-1.31-.45m3.678-1.68c0 .141-.114.255-.254.255h-2.115a.255.255 0 0 1-.255-.255v-8.3c0-.14.115-.255.255-.255h2.115c.14 0 .255.114.255.255z",
  clipRule: "evenodd"
})));
function changeTypeToIconComponent(type) {
  switch (type) {
    case Types.ADD:
      return React__default__default.createElement(SvgIconAdd, null);
    case Types.ARROW_LEFT:
      return React__default__default.createElement(SvgIconArrowLeft, null);
    case Types.ATTACH:
      return React__default__default.createElement(SvgIconAttach, null);
    case Types.AUDIO_ON_LINED:
      return React__default__default.createElement(SvgIconAudioOnLined, null);
    case Types.BAN:
      return React__default__default.createElement(SvgIconBan, null);
    case Types.BROADCAST:
      return React__default__default.createElement(SvgIconBroadcast, null);
    case Types.CAMERA:
      return React__default__default.createElement(SvgIconCamera, null);
    case Types.CHANNELS:
      return React__default__default.createElement(SvgIconChannels, null);
    case Types.CHAT:
      return React__default__default.createElement(SvgIconChat, null);
    case Types.CHAT_FILLED:
      return React__default__default.createElement(SvgIconChatFilled, null);
    case Types.CHEVRON_DOWN:
      return React__default__default.createElement(SvgIconChevronDown, null);
    case Types.CHEVRON_RIGHT:
      return React__default__default.createElement(SvgIconChevronRight, null);
    case Types.CLOSE:
      return React__default__default.createElement(SvgIconClose, null);
    case Types.COLLAPSE:
      return React__default__default.createElement(SvgIconCollapse, null);
    case Types.COPY:
      return React__default__default.createElement(SvgIconCopy, null);
    case Types.CREATE:
      return React__default__default.createElement(SvgIconCreate, null);
    case Types.DELETE:
      return React__default__default.createElement(SvgIconDelete, null);
    case Types.DISCONNECTED:
      return React__default__default.createElement(SvgIconDisconnected, null);
    case Types.DOCUMENT:
      return React__default__default.createElement(SvgIconDocument, null);
    case Types.DONE:
      return React__default__default.createElement(SvgIconDone, null);
    case Types.DONE_ALL:
      return React__default__default.createElement(SvgIconDoneAll, null);
    case Types.DOWNLOAD:
      return React__default__default.createElement(SvgIconDownload, null);
    case Types.EDIT:
      return React__default__default.createElement(SvgIconEdit, null);
    case Types.EMOJI_MORE:
      return React__default__default.createElement(SvgIconEmojiMore, null);
    case Types.ERROR:
      return React__default__default.createElement(SvgIconError, null);
    case Types.EXPAND:
      return React__default__default.createElement(SvgIconExpand, null);
    case Types.FILE_AUDIO:
      return React__default__default.createElement(SvgIconFileAudio, null);
    case Types.FILE_DOCUMENT:
      return React__default__default.createElement(SvgIconFileDocument, null);
    case Types.FREEZE:
      return React__default__default.createElement(SvgIconFreeze, null);
    case Types.GIF:
      return React__default__default.createElement(SvgIconGif, null);
    case Types.INFO:
      return React__default__default.createElement(SvgIconInfo, null);
    case Types.LEAVE:
      return React__default__default.createElement(SvgIconLeave, null);
    case Types.MEMBERS:
      return React__default__default.createElement(SvgIconMembers, null);
    case Types.MESSAGE:
      return React__default__default.createElement(SvgIconMessage, null);
    case Types.MODERATIONS:
      return React__default__default.createElement(SvgIconModerations, null);
    case Types.MORE:
      return React__default__default.createElement(SvgIconMore, null);
    case Types.MUTE:
      return React__default__default.createElement(SvgIconMute, null);
    case Types.NOTIFICATIONS:
      return React__default__default.createElement(SvgIconNotifications, null);
    case Types.NOTIFICATIONS_OFF_FILLED:
      return React__default__default.createElement(SvgIconNotificationsOffFilled, null);
    case Types.OPERATOR:
      return React__default__default.createElement(SvgIconOperator, null);
    case Types.PHOTO:
      return React__default__default.createElement(SvgIconPhoto, null);
    case Types.PLAY:
      return React__default__default.createElement(SvgIconPlay, null);
    case Types.PLUS:
      return React__default__default.createElement(SvgIconPlus, null);
    case Types.QUESTION:
      return React__default__default.createElement(SvgIconQuestion, null);
    case Types.REFRESH:
      return React__default__default.createElement(SvgIconRefresh, null);
    case Types.REMOVE:
      return React__default__default.createElement(SvgIconRemove, null);
    case Types.REPLY:
      return React__default__default.createElement(SvgIconReplyFilled, null);
    case Types.SEARCH:
      return React__default__default.createElement(SvgIconSearch, null);
    case Types.SEND:
      return React__default__default.createElement(SvgIconSend, null);
    case Types.SETTINGS_FILLED:
      return React__default__default.createElement(SvgIconSettingsFilled, null);
    case Types.SLIDE_LEFT:
      return React__default__default.createElement(SvgIconSlideLeft, null);
    case Types.SPINNER:
      return React__default__default.createElement(SvgIconSpinner, null);
    case Types.SUPERGROUP:
      return React__default__default.createElement(SvgIconSupergroup, null);
    case Types.THREAD:
      return React__default__default.createElement(SvgIconThread, null);
    case Types.THUMBNAIL_NONE:
      return React__default__default.createElement(SvgIconThumbnailNone, null);
    case Types.TOGGLE_OFF:
      return React__default__default.createElement(SvgIconToggleoff, null);
    case Types.TOGGLE_ON:
      return React__default__default.createElement(SvgIconToggleon, null);
    case Types.USER:
      return React__default__default.createElement(SvgIconUser, null);
    case Types.FEEDBACK_LIKE:
      return React__default__default.createElement(SvgIconFeedbackLike, null);
    case Types.FEEDBACK_DISLIKE:
      return React__default__default.createElement(SvgIconFeedbackDislike, null);
    default:
      return "icon";
  }
}
function Icon$1(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, type = _a2.type, _c = _a2.fillColor, fillColor = _c === void 0 ? Colors$1.DEFAULT : _c, _d = _a2.width, width = _d === void 0 ? 26 : _d, _e2 = _a2.height, height = _e2 === void 0 ? 26 : _e2, _f = _a2.onClick, onClick = _f === void 0 ? noop$4 : _f, _g2 = _a2.children, children = _g2 === void 0 ? null : _g2, testID = _a2.testID;
  var iconStyle = {
    width: typeof width === "string" ? width : "".concat(width, "px"),
    minWidth: typeof width === "string" ? width : "".concat(width, "px"),
    height: typeof height === "string" ? height : "".concat(height, "px"),
    minHeight: typeof height === "string" ? height : "".concat(height, "px")
  };
  return React__default__default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-icon",
    changeTypeToIconClassName(type),
    changeColorToClassName$1(fillColor)
  ], false).join(" "), "data-testid": testID, role: "button", onClick, onKeyDown: onClick, tabIndex: 0, style: iconStyle }, children || changeTypeToIconComponent(type));
}
var IconTypes = Types;
var IconColors = Colors$1;
function ConnectionStatus() {
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-connection-status" },
    React__default__default.createElement(Label, { type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.TRYING_TO_CONNECT),
    React__default__default.createElement(Icon$1, { type: IconTypes.DISCONNECTED, fillColor: IconColors.SENT, width: "14px", height: "14px" })
  );
}
function Loader(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, _c = _a2.width, width = _c === void 0 ? "26px" : _c, _d = _a2.height, height = _d === void 0 ? "26px" : _d, children = _a2.children, testID = _a2.testID;
  return React__default__default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-loader"
  ], false).join(" "), "data-testid": testID, style: {
    width: typeof width === "string" ? width : "".concat(width, "px"),
    height: typeof height === "string" ? height : "".concat(height, "px")
  } }, children || React__default__default.createElement(Icon$1, { type: IconTypes.SPINNER, width: "26px", height: "26px" }));
}
var PlaceHolderTypes = {
  LOADING: "LOADING",
  NO_CHANNELS: "NO_CHANNELS",
  NO_MESSAGES: "NO_MESSAGES",
  WRONG: "WRONG",
  SEARCH_IN: "SEARCH_IN",
  SEARCHING: "SEARCHING",
  NO_RESULTS: "NO_RESULTS"
};
function PlaceHolder(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, type = _a2.type, iconSize = _a2.iconSize, _c = _a2.searchInString, searchInString = _c === void 0 ? "" : _c, retryToConnect = _a2.retryToConnect;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-place-holder"
    ], false).join(" ") },
    type === PlaceHolderTypes.LOADING && React__default__default.createElement(
      Loader,
      { width: iconSize || "48px", height: iconSize || "48px" },
      React__default__default.createElement(Icon$1, { type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: iconSize || "48px", height: iconSize || "48px" })
    ),
    (type === PlaceHolderTypes.NO_CHANNELS || type === PlaceHolderTypes.NO_MESSAGES || type === PlaceHolderTypes.WRONG) && React__default__default.createElement(
      "div",
      { className: "sendbird-place-holder__body" },
      type === PlaceHolderTypes.NO_CHANNELS && React__default__default.createElement(Icon$1, { className: "sendbird-place-holder__body__icon", type: IconTypes.CHAT, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      type === PlaceHolderTypes.WRONG && React__default__default.createElement(Icon$1, { className: "sendbird-place-holder__body__icon", type: IconTypes.ERROR, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      type === PlaceHolderTypes.NO_MESSAGES && React__default__default.createElement(Icon$1, { className: "sendbird-place-holder__body__icon", type: IconTypes.MESSAGE, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      React__default__default.createElement(
        Label,
        { className: "sendbird-place-holder__body__text", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 },
        type === PlaceHolderTypes.NO_CHANNELS && stringSet2.PLACE_HOLDER__NO_CHANNEL,
        type === PlaceHolderTypes.WRONG && stringSet2.PLACE_HOLDER__WRONG,
        type === PlaceHolderTypes.NO_MESSAGES && stringSet2.PLACE_HOLDER__NO_MESSAGES
      ),
      retryToConnect && React__default__default.createElement(
        "div",
        { className: "sendbird-place-holder__body__reconnect", role: "button", onClick: retryToConnect, onKeyPress: retryToConnect, tabIndex: 0 },
        React__default__default.createElement(Icon$1, { className: "sendbird-place-holder__body__reconnect__icon", type: IconTypes.REFRESH, fillColor: IconColors.PRIMARY, width: "20px", height: "20px" }),
        React__default__default.createElement(Label, { className: "sendbird-place-holder__body__reconnect__text", type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.PLACE_HOLDER__RETRY_TO_CONNECT)
      )
    ),
    (type === PlaceHolderTypes.NO_RESULTS || type === PlaceHolderTypes.SEARCH_IN || type === PlaceHolderTypes.SEARCHING) && React__default__default.createElement(
      "div",
      { className: "sendbird-place-holder__body--align-top" },
      type === PlaceHolderTypes.SEARCH_IN && React__default__default.createElement(
        "div",
        { className: "sendbird-place-holder__body--align-top__text" },
        React__default__default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__search-in", type: LabelTypography.BUTTON_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.SEARCH_IN),
        React__default__default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__channel-name", type: LabelTypography.BUTTON_2, color: LabelColors.PRIMARY }, "'".concat(searchInString)),
        React__default__default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__quote", type: LabelTypography.BUTTON_2, color: LabelColors.PRIMARY }, "'")
      ),
      type === PlaceHolderTypes.SEARCHING && React__default__default.createElement(Label, { className: "sendbird-place-hlder__body--align-top__searching", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.SEARCHING),
      type === PlaceHolderTypes.NO_RESULTS && React__default__default.createElement(Label, { className: "sendbird-place-hlder__body--align-top__no-result", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.NO_SEARCHED_MESSAGE)
    )
  );
}
var GroupChannelUIView = function(props) {
  var _a2, _b2, _c, _d;
  var isLoading = props.isLoading, isInvalid = props.isInvalid, channelUrl = props.channelUrl;
  var _e2 = deleteNullish(props), renderChannelHeader = _e2.renderChannelHeader, renderMessageList = _e2.renderMessageList, renderMessageInput = _e2.renderMessageInput, renderTypingIndicator = _e2.renderTypingIndicator, renderPlaceholderLoader = _e2.renderPlaceholderLoader, renderPlaceholderInvalid = _e2.renderPlaceholderInvalid;
  var state = useSendbird().state;
  var stores2 = state.stores, config2 = state.config;
  var sdkError = (_a2 = stores2 === null || stores2 === void 0 ? void 0 : stores2.sdkStore) === null || _a2 === void 0 ? void 0 : _a2.error;
  var logger = config2.logger, isOnline = config2.isOnline;
  if (isLoading) {
    return React__default__default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderLoader === null || renderPlaceholderLoader === void 0 ? void 0 : renderPlaceholderLoader()) || React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING }));
  }
  if (!channelUrl) {
    return React__default__default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderInvalid === null || renderPlaceholderInvalid === void 0 ? void 0 : renderPlaceholderInvalid()) || React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_CHANNELS }));
  }
  if (isInvalid) {
    return React__default__default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderInvalid === null || renderPlaceholderInvalid === void 0 ? void 0 : renderPlaceholderInvalid()) || React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG }));
  }
  if (sdkError) {
    return React__default__default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderInvalid === null || renderPlaceholderInvalid === void 0 ? void 0 : renderPlaceholderInvalid()) || React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG, retryToConnect: function() {
      logger.info("Channel: reconnecting");
    } }));
  }
  return React__default__default.createElement(
    "div",
    { className: "sendbird-conversation" },
    renderChannelHeader === null || renderChannelHeader === void 0 ? void 0 : renderChannelHeader({ className: "sendbird-conversation__channel-header" }),
    renderMessageList === null || renderMessageList === void 0 ? void 0 : renderMessageList(props),
    React__default__default.createElement(
      "div",
      { className: "sendbird-conversation__footer" },
      renderMessageInput === null || renderMessageInput === void 0 ? void 0 : renderMessageInput(),
      React__default__default.createElement(
        "div",
        { className: "sendbird-conversation__footer__typing-indicator" },
        (renderTypingIndicator === null || renderTypingIndicator === void 0 ? void 0 : renderTypingIndicator()) || ((_b2 = config2 === null || config2 === void 0 ? void 0 : config2.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.enableTypingIndicator) && ((_d = (_c = config2 === null || config2 === void 0 ? void 0 : config2.groupChannel) === null || _c === void 0 ? void 0 : _c.typingIndicatorTypes) === null || _d === void 0 ? void 0 : _d.has(TypingIndicatorType.Text)) && React__default__default.createElement(TypingIndicator, { channelUrl }),
        !isOnline && React__default__default.createElement(ConnectionStatus, null)
      )
    )
  );
};
var numberToPx = function(value) {
  if (value === null)
    return void 0;
  return typeof value === "number" ? "".concat(value, "px") : value;
};
function getDynamicMinLengthInPx(sideLength, maxSideLength, defaultMinLength) {
  var _a2;
  return "min(".concat(maxSideLength !== null && maxSideLength !== void 0 ? maxSideLength : defaultMinLength, ", ").concat((_a2 = numberToPx(sideLength)) !== null && _a2 !== void 0 ? _a2 : defaultMinLength, ")");
}
function useDynamicSideLength(_a2) {
  var width = _a2.width, height = _a2.height, maxSideLength = _a2.maxSideLength, defaultMinLength = _a2.defaultMinLength;
  var dynamicMinWidth = useMemo(function() {
    return getDynamicMinLengthInPx(width, maxSideLength, defaultMinLength);
  }, [width]);
  var dynamicMinHeight = useMemo(function() {
    return getDynamicMinLengthInPx(height, maxSideLength, defaultMinLength);
  }, [height]);
  return [dynamicMinWidth, dynamicMinHeight];
}
var useIsElementInViewport = function() {
  var _a2 = useState(false), isVisible = _a2[0], setIsVisible = _a2[1];
  var _b2 = useState(null), element = _b2[0], setElement = _b2[1];
  var ref = useCallback(function(node) {
    if (node !== null)
      setElement(node);
  }, []);
  useEffect(function() {
    if (!element)
      return;
    var observer = new IntersectionObserver(function(entries2) {
      var entry = entries2[0];
      setIsVisible(entry.isIntersecting);
    });
    observer.observe(element);
    return function() {
      observer.disconnect();
    };
  }, [element]);
  return [ref, isVisible];
};
var useLazyImageLoader = function() {
  var isLoaded = useRef(false);
  var _a2 = useIsElementInViewport(), ref = _a2[0], isVisible = _a2[1];
  if (isVisible)
    isLoaded.current = true;
  return [ref, isLoaded.current];
};
function getBorderRadiusForImageRenderer(circle, borderRadius) {
  if (circle === void 0) {
    circle = false;
  }
  if (borderRadius === void 0) {
    borderRadius = null;
  }
  return circle ? "50%" : numberToPx(borderRadius);
}
function getBorderRadiusForMultipleImageRenderer(borderRadius, index, totalCount) {
  var value = typeof borderRadius === "string" ? parseInt(borderRadius, 10) : borderRadius;
  var lastIndex = totalCount - 1;
  var topLeft = index === 0 ? value * 2 : value;
  var topRight = index === 1 ? value * 2 : value;
  var bottomRight = index === lastIndex ? value * 2 : value;
  var bottomLeft = index === lastIndex - 1 ? value * 2 : value;
  return "".concat(topLeft, "px ").concat(topRight, "px ").concat(bottomRight, "px ").concat(bottomLeft, "px");
}
var ImageRenderer = function(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, url = _a2.url, _c = _a2.alt, alt = _c === void 0 ? "" : _c, _d = _a2.width, width = _d === void 0 ? null : _d, _e2 = _a2.maxSideLength, maxSideLength = _e2 === void 0 ? null : _e2, _f = _a2.height, height = _f === void 0 ? null : _f, _g2 = _a2.circle, circle = _g2 === void 0 ? false : _g2, _h = _a2.fixedSize, fixedSize = _h === void 0 ? false : _h, _j = _a2.placeHolder, placeHolder = _j === void 0 ? null : _j, _k = _a2.defaultComponent, defaultComponent = _k === void 0 ? null : _k, _l = _a2.borderRadius, borderRadius = _l === void 0 ? null : _l, _m = _a2.onLoad, onLoad = _m === void 0 ? noop$4 : _m, _o = _a2.onError, onError2 = _o === void 0 ? noop$4 : _o, shadeOnHover = _a2.shadeOnHover, _p = _a2.isUploaded, isUploaded = _p === void 0 ? true : _p;
  var _q = useLazyImageLoader(), ref = _q[0], isVisible = _q[1];
  var internalUrl = isVisible ? url : null;
  var _r2 = useState(false), defaultComponentVisible = _r2[0], setDefaultComponentVisible = _r2[1];
  var _s2 = useState(true), placeholderVisible = _s2[0], setPlaceholderVisible = _s2[1];
  var _t2 = useDynamicSideLength({
    width,
    height,
    maxSideLength,
    defaultMinLength: "400px"
  }), dynamicMinWidth = _t2[0], dynamicMinHeight = _t2[1];
  var renderPlaceholder = function() {
    if (typeof placeHolder === "function") {
      return placeHolder({
        style: {
          width: "100%",
          minWidth: dynamicMinWidth,
          maxWidth: fixedSize ? dynamicMinWidth : "400px",
          height: dynamicMinHeight,
          position: "absolute",
          display: "flex",
          justifyContent: "center",
          alignItems: "center"
        }
      });
    }
    return placeHolder;
  };
  var renderDefault = function() {
    if (typeof defaultComponent === "function")
      return defaultComponent();
    return defaultComponent;
  };
  var renderImage = function() {
    var backgroundStyle = internalUrl ? {
      backgroundRepeat: "no-repeat",
      backgroundPosition: "center",
      backgroundSize: "cover",
      backgroundImage: "url(".concat(internalUrl, ")")
    } : {};
    return React__default__default.createElement("div", { className: "sendbird-image-renderer__image", style: __assign({ width: "100%", minWidth: dynamicMinWidth, maxWidth: fixedSize ? dynamicMinWidth : "400px", height: dynamicMinHeight, position: "absolute", borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius) }, backgroundStyle) });
  };
  return dynamicMinWidth && dynamicMinHeight && React__default__default.createElement(
    "div",
    { ref, className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), ["sendbird-image-renderer"], false).join(" "), style: {
      width: "100%",
      minWidth: dynamicMinWidth,
      maxWidth: fixedSize ? dynamicMinWidth : "400px",
      height: dynamicMinHeight
    } },
    placeholderVisible && renderPlaceholder(),
    !internalUrl || defaultComponentVisible ? renderDefault() : renderImage(),
    shadeOnHover && React__default__default.createElement("div", { className: "sendbird-multiple-files-image-renderer__image-cover", style: __assign({ borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius) }, isUploaded ? {} : { display: "inline-flex" }) }),
    internalUrl && React__default__default.createElement(HiddenImageLoader, { src: internalUrl, alt, onLoadStart: function() {
      setPlaceholderVisible(true);
      setDefaultComponentVisible(false);
    }, onLoad: function() {
      setPlaceholderVisible(false);
      setDefaultComponentVisible(false);
      onLoad();
    }, onError: function() {
      setPlaceholderVisible(false);
      setDefaultComponentVisible(true);
      onError2();
    } })
  );
};
var HiddenImageLoader = function(props) {
  var src = props.src, alt = props.alt, _a2 = props.onLoadStart, onLoadStart = _a2 === void 0 ? noop$4 : _a2, _b2 = props.onLoad, onLoad = _b2 === void 0 ? noop$4 : _b2, _c = props.onError, onError2 = _c === void 0 ? noop$4 : _c;
  var reloadCtx = useRef({
    currSrc: src,
    prevSrc: src,
    loadFailure: false
  });
  if (reloadCtx.current.currSrc !== src) {
    reloadCtx.current.prevSrc = reloadCtx.current.currSrc;
    reloadCtx.current.currSrc = src;
  }
  useLayoutEffect(function() {
    if (src) {
      var sourceChanged = reloadCtx.current.prevSrc !== reloadCtx.current.currSrc;
      var loadFailure = reloadCtx.current.loadFailure;
      if (sourceChanged || loadFailure) {
        onLoadStart();
      }
    }
  }, [src, navigator.onLine]);
  return React__default__default.createElement("img", { className: "sendbird-image-renderer__hidden-image-loader", src, alt, onLoad: function() {
    reloadCtx.current.loadFailure = false;
    onLoad();
  }, onError: function() {
    reloadCtx.current.loadFailure = true;
    onError2();
  } });
};
var pxToNumber = function(px) {
  if (typeof px === "number") {
    return px;
  }
  if (typeof px === "string") {
    var parsed = Number.parseFloat(px);
    if (!Number.isNaN(parsed)) {
      return parsed;
    }
  }
  return NaN;
};
var AvatarDefault = function(props) {
  var width = props.width, height = props.height, text2 = props.text;
  var iconWidth = pxToNumber(width);
  var iconHeight = pxToNumber(height);
  if (typeof iconWidth === "number" && !Number.isNaN(iconWidth)) {
    iconWidth *= 0.575;
  }
  if (typeof iconHeight === "number" && !Number.isNaN(iconHeight)) {
    iconHeight *= 0.575;
  }
  return React__default__default.createElement("div", { className: classnames("sendbird-avatar-img--default", text2 && "text"), style: { width, height } }, text2 ? React__default__default.createElement("div", { className: "sendbird-avatar-text" }, text2) : React__default__default.createElement(Icon$1, { type: IconTypes.USER, fillColor: IconColors.CONTENT, width: iconWidth, height: iconHeight }));
};
var imageRendererClassName = "sendbird-avatar-img";
var AvatarInner = function(_a2) {
  var _b2 = _a2.src, src = _b2 === void 0 ? "" : _b2, _c = _a2.alt, alt = _c === void 0 ? "" : _c, height = _a2.height, width = _a2.width, customDefaultComponent = _a2.customDefaultComponent;
  var defaultComponent = function() {
    return customDefaultComponent ? customDefaultComponent({ width, height }) : React__default__default.createElement(AvatarDefault, { width, height });
  };
  if (typeof src === "string") {
    return React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: src, height, width, alt, defaultComponent });
  }
  if (src && src.length) {
    if (src.length === 1) {
      return React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent });
    }
    if (src.length === 2) {
      return React__default__default.createElement(
        "div",
        { className: "sendbird-avatar--inner__two-child" },
        React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent }),
        React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[1], height, width, alt, defaultComponent })
      );
    }
    if (src.length === 3) {
      return React__default__default.createElement(
        React__default__default.Fragment,
        null,
        React__default__default.createElement(
          "div",
          { className: "sendbird-avatar--inner__three-child--upper" },
          React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent })
        ),
        React__default__default.createElement(
          "div",
          { className: "sendbird-avatar--inner__three-child--lower" },
          React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[1], height, width, alt, defaultComponent }),
          React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[2], height, width, alt, defaultComponent })
        )
      );
    }
    return React__default__default.createElement("div", { className: "sendbird-avatar--inner__four-child" }, src.slice(0, 4).map(function(url, index) {
      return React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url, height, width, alt, key: "".concat(url, "-").concat(index), defaultComponent });
    }));
  }
  return React__default__default.createElement(ImageRenderer, { className: imageRendererClassName, url: "", height, width, alt, defaultComponent });
};
function Avatar(_a2, ref) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, _c = _a2.src, src = _c === void 0 ? "" : _c, _d = _a2.alt, alt = _d === void 0 ? "" : _d, _e2 = _a2.width, width = _e2 === void 0 ? "56px" : _e2, _f = _a2.height, height = _f === void 0 ? "56px" : _f, _g2 = _a2.zIndex, zIndex = _g2 === void 0 ? 0 : _g2, _h = _a2.left, left = _h === void 0 ? "" : _h, _j = _a2.bottom, bottom = _j === void 0 ? "" : _j, onClick = _a2.onClick, customDefaultComponent = _a2.customDefaultComponent;
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-avatar"
    ], false).join(" "), role: "button", ref, style: {
      height,
      width,
      zIndex,
      left,
      bottom
    }, onClick, onKeyDown: onClick, tabIndex: 0 },
    React__default__default.createElement(AvatarInner, { src, width, height, alt, customDefaultComponent })
  );
}
var Avatar$1 = React__default__default.forwardRef(Avatar);
var DEFAULT_URL_PREFIX = "https://static.sendbird.com/sample/cover/cover_";
var getChannelAvatarSource = function(channel, currentUserId) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    if (!new RegExp("^".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {
      return channel.coverUrl;
    }
  }
  return ((channel === null || channel === void 0 ? void 0 : channel.members) || []).filter(function(member) {
    return member.userId !== currentUserId;
  }).map(function(_a2) {
    var profileUrl = _a2.profileUrl;
    return profileUrl;
  });
};
var generateDefaultAvatar = function(channel) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    if (new RegExp("^".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {
      return true;
    }
    return false;
  }
  return true;
};
function ChannelAvatar(_a2) {
  var channel = _a2.channel, userId = _a2.userId, theme = _a2.theme, _b2 = _a2.width, width = _b2 === void 0 ? 56 : _b2, _c = _a2.height, height = _c === void 0 ? 56 : _c;
  var isBroadcast = channel === null || channel === void 0 ? void 0 : channel.isBroadcast;
  var memoizedAvatar = useMemo(function() {
    return isBroadcast ? generateDefaultAvatar(channel) ? React__default__default.createElement(
      "div",
      { className: "sendbird-chat-header--default-avatar", style: {
        width,
        height,
        display: "flex",
        justifyContent: "center",
        alignItems: "center"
      } },
      React__default__default.createElement(Icon$1, { type: IconTypes.BROADCAST, fillColor: IconColors.CONTENT, width: width * 0.575, height: height * 0.575 })
    ) : React__default__default.createElement(Avatar$1, { className: "sendbird-chat-header--avatar--broadcast-channel", src: getChannelAvatarSource(channel, userId), width, height, alt: channel === null || channel === void 0 ? void 0 : channel.name }) : React__default__default.createElement(Avatar$1, { className: "sendbird-chat-header--avatar--group-channel", src: getChannelAvatarSource(channel, userId), width: "".concat(width, "px"), height: "".concat(height, "px"), alt: channel === null || channel === void 0 ? void 0 : channel.name });
  }, [getChannelAvatarSource(channel, userId), theme]);
  return React__default__default.createElement(React__default__default.Fragment, null, memoizedAvatar);
}
var OutgoingMessageStates;
(function(OutgoingMessageStates2) {
  OutgoingMessageStates2["NONE"] = "NONE";
  OutgoingMessageStates2["PENDING"] = "PENDING";
  OutgoingMessageStates2["SENT"] = "SENT";
  OutgoingMessageStates2["FAILED"] = "FAILED";
  OutgoingMessageStates2["DELIVERED"] = "DELIVERED";
  OutgoingMessageStates2["READ"] = "READ";
})(OutgoingMessageStates || (OutgoingMessageStates = {}));
var getOutgoingMessageState = function(channel, message) {
  var _a2, _b2, _c, _d, _e2;
  if (!message || !("sendingStatus" in message))
    return OutgoingMessageStates.NONE;
  if (message.sendingStatus === "pending") {
    return OutgoingMessageStates.PENDING;
  }
  if (message.sendingStatus === "failed") {
    return OutgoingMessageStates.FAILED;
  }
  if ((_a2 = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _a2 === void 0 ? void 0 : _a2.call(channel)) {
    if (((_c = (_b2 = channel).getUnreadMemberCount) === null || _c === void 0 ? void 0 : _c.call(_b2, message)) === 0) {
      return OutgoingMessageStates.READ;
    } else if (((_e2 = (_d = channel).getUndeliveredMemberCount) === null || _e2 === void 0 ? void 0 : _e2.call(_d, message)) === 0) {
      return OutgoingMessageStates.DELIVERED;
    }
  }
  if (message.sendingStatus === "succeeded") {
    return OutgoingMessageStates.SENT;
  }
  return OutgoingMessageStates.NONE;
};
var isIOS = function(userAgent) {
  return /iPhone|iPad|iPod/i.test(userAgent);
};
var isWebkit = function(userAgent) {
  return /WebKit/i.test(userAgent);
};
var isChrome = function(userAgent) {
  return /Chrome/i.test(userAgent);
};
var isSafari = function(userAgent) {
  return !isChrome(userAgent) && /Safari/i.test(userAgent);
};
var isMobileIOS = function(userAgent) {
  return isIOS(userAgent) && (isWebkit(userAgent) || isSafari(userAgent));
};
function _typeof(o2) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof(o2);
}
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return /* @__PURE__ */ new Date(NaN);
  }
}
var _a$1;
var SUPPORTED_MIMES$1 = {
  IMAGE: [
    "image/jpeg",
    "image/jpg",
    "image/png",
    "image/gif",
    "image/svg+xml",
    "image/webp",
    // not supported in IE
    "image/bmp"
  ],
  VIDEO: [
    "video/mpeg",
    "video/ogg",
    "video/webm",
    "video/mp4"
    // 'video/quicktime', // NOTE: Do not support ThumbnailMessage for the .mov video
  ],
  AUDIO: [
    "audio/aac",
    "audio/midi",
    "audio/x-midi",
    "audio/mpeg",
    "audio/ogg",
    "audio/opus",
    "audio/wav",
    "audio/webm",
    "audio/3gpp",
    "audio/3gpp2",
    "audio/mp3"
  ],
  DOCUMENT: [
    "text/plain",
    "text/css",
    "text/csv",
    "text/html",
    "text/calendar",
    "text/javascript",
    "text/xml",
    "text/x-log",
    "video/quicktime"
    // NOTE: Assume this video is a normal file, not video
  ],
  APPLICATION: [
    "application/x-abiword",
    "application/x-freearc",
    "application/vnd.amazon.ebook",
    "application/octet-stream",
    "application/x-bzip",
    "application/x-bzip2",
    "application/x-cdf",
    "application/x-csh",
    "application/msword",
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "application/vnd.ms-fontobject",
    "application/epub+zip",
    "application/gzip",
    "application/java-archive",
    "application/json",
    "application/ld+json",
    "application/vnd.apple.installer+xml",
    "application/vnd.oasis.opendocument.presentation",
    "application/vnd.oasis.opendocument.spreadsheet",
    "application/vnd.oasis.opendocument.text",
    "application/ogg",
    "application/pdf",
    "application/x-httpd-php",
    "application/vnd.ms-powerpoint",
    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
    "application/vnd.rar",
    "application/rtf",
    "application/x-sh",
    "application/x-tar",
    "application/vnd.visio",
    "application/xhtml+xml",
    "application/vnd.ms-excel",
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "application/xml",
    "application/vnd.mozilla.xul+xml",
    "application/zip",
    "application/x-7z-compressed"
  ],
  ARCHIVE: [
    "application/zip",
    "application/x-rar-compressed",
    "application/x-7z-compressed",
    "application/x-tar",
    "application/gzip",
    "application/x-bzip",
    "application/x-bzip2",
    "application/x-xz",
    "application/x-iso9660-image"
  ]
};
var SUPPORTED_FILE_EXTENSIONS = {
  IMAGE: [".apng", ".avif", ".gif", ".jpg", ".jpeg", ".jfif", ".pjpeg", ".pjp", ".png", ".svg", ".webp", ".bmp", ".ico", ".cur", ".tif", ".tiff", ".heic", ".heif"],
  VIDEO: [".mp4", ".webm", ".ogv", ".3gp", ".3g2", ".avi", ".mov", ".wmv", ".mpg", ".mpeg", ".m4v", ".mkv"],
  AUDIO: [".aac", ".midi", ".mp3", ".oga", ".opus", ".wav", ".weba", ".3gp", ".3g2"],
  DOCUMENT: [".txt", ".log", ".csv", ".rtf", ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx"],
  ARCHIVE: [".zip", ".rar", ".7z", ".tar", ".gz", ".bz2", ".xz", ".iso"]
};
var getMimeTypesUIKitAccepts = function(acceptableTypes) {
  if (Array.isArray(acceptableTypes) && acceptableTypes.length > 0) {
    var uniqueTypes = acceptableTypes.reduce(function(prev, curr) {
      var lowerCurr = curr.toLowerCase();
      switch (lowerCurr) {
        case "image": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES$1.IMAGE, false), SUPPORTED_FILE_EXTENSIONS.IMAGE, false));
          break;
        }
        case "video": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES$1.VIDEO, false), SUPPORTED_FILE_EXTENSIONS.VIDEO, false));
          break;
        }
        case "audio": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES$1.AUDIO, false), SUPPORTED_FILE_EXTENSIONS.AUDIO, false));
          break;
        }
        case "archive": {
          prev.push.apply(prev, __spreadArray(__spreadArray([], SUPPORTED_MIMES$1.ARCHIVE, false), SUPPORTED_FILE_EXTENSIONS.ARCHIVE, false));
          break;
        }
        default: {
          prev.push(curr);
          break;
        }
      }
      return prev;
    }, []);
    return Array.from(new Set(uniqueTypes)).join(",");
  }
  return __spreadArray(__spreadArray([], Object.values(SUPPORTED_MIMES$1).flat(), true), Object.values(SUPPORTED_FILE_EXTENSIONS).flat(), true).join(",");
};
var UIKitMessageTypes = {
  ADMIN: "ADMIN",
  TEXT: "TEXT",
  FILE: "FILE",
  MULTIPLE_FILES: "MULTIPLE_FILES",
  THUMBNAIL: "THUMBNAIL",
  OG: "OG",
  UNKNOWN: "UNKNOWN"
};
var UIKitFileTypes = {
  IMAGE: "IMAGE",
  AUDIO: "AUDIO",
  VIDEO: "VIDEO",
  GIF: "GIF",
  VOICE: "VOICE",
  OTHERS: "OTHERS"
};
var isMOVType = function(type) {
  return type === "video/quicktime";
};
var isSupportedVideoFileTypeInSafari = function(type) {
  return isSafari(navigator.userAgent) && isMOVType(type);
};
var isImage = function(type) {
  return SUPPORTED_MIMES$1.IMAGE.indexOf(type) >= 0;
};
var isVideo = function(type) {
  return SUPPORTED_MIMES$1.VIDEO.indexOf(type) >= 0 || isSupportedVideoFileTypeInSafari(type);
};
var isGif$1 = function(type) {
  return type === "image/gif";
};
var isSupportedFileView = function(type) {
  return isImage(type) || isVideo(type);
};
var isAudio = function(type) {
  return SUPPORTED_MIMES$1.AUDIO.indexOf(type) >= 0;
};
var getUIKitFileTypes = function() {
  return __assign({}, UIKitFileTypes);
};
var getUIKitFileType = function(type) {
  if (isGif$1(type))
    return UIKitFileTypes.GIF;
  if (isImage(type))
    return UIKitFileTypes.IMAGE;
  if (isVideo(type))
    return UIKitFileTypes.VIDEO;
  if (isAudio(type))
    return UIKitFileTypes.AUDIO;
  return UIKitFileTypes.OTHERS;
};
var isSentMessage = function(message) {
  return message.sendingStatus === "succeeded";
};
var isReadMessage = function(channel, message) {
  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;
};
var isFailedMessage = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === "failed";
};
var isPendingMessage = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === "pending";
};
var isSentStatus = function(state) {
  return state === OutgoingMessageStates.SENT || state === OutgoingMessageStates.DELIVERED || state === OutgoingMessageStates.READ;
};
var isAdminMessage = function(message) {
  return message && (message["isAdminMessage"] && typeof message.isAdminMessage === "function" ? message.isAdminMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "admin");
};
var isUserMessage = function(message) {
  return message && (message["isUserMessage"] && typeof message.isUserMessage === "function" ? message.isUserMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "user");
};
var isFileMessage = function(message) {
  return !!message && (message["isFileMessage"] && typeof message.isFileMessage === "function" ? message.isFileMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "file");
};
var isMultipleFilesMessage = function(message) {
  return message && (message["isMultipleFilesMessage"] && typeof message.isMultipleFilesMessage === "function" ? message.isMultipleFilesMessage() : message.messageType === "file" && Object.prototype.hasOwnProperty.call(message, "fileInfoList"));
};
var isThreadMessage = function(message) {
  return !!message.parentMessageId && !!message.parentMessage;
};
var isFormMessage = function(message) {
  return !!message.messageForm;
};
var isTemplateMessage = function(message) {
  var _a2;
  return !!(message && ((_a2 = message.extendedMessagePayload) === null || _a2 === void 0 ? void 0 : _a2[MESSAGE_TEMPLATE_KEY]));
};
var isValidTemplateMessageType = function(templatePayload) {
  var type = templatePayload["type"];
  return !(type && !MessageTemplateTypes[type]);
};
var MessageTemplateTypes = {
  default: "default"
};
var uiContainerType = (_a$1 = {}, _a$1[MessageTemplateTypes.default] = "ui_container_type__default", _a$1);
var isOGMessage = function(message) {
  if (!message || !isUserMessage(message))
    return false;
  return !!message.ogMetaData && !!(message.ogMetaData.url || message.ogMetaData.title || message.ogMetaData.description || message.ogMetaData.defaultImage);
};
var isTextMessage = function(message) {
  return isUserMessage(message);
};
var isThumbnailMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isSupportedFileView(message.type);
};
var isImageMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isImage(message.type);
};
var isVideoMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isVideo(message.type);
};
var isGifMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isGif$1(message.type);
};
var isAudioMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isAudio(message.type);
};
var isImageFileInfo = function(fileInfo) {
  if (!fileInfo)
    return false;
  return !!fileInfo.mimeType && (isImage(fileInfo.mimeType) || isGif$1(fileInfo.mimeType));
};
var isAudioMessageMimeType = function(type) {
  return /^audio\//.test(type);
};
var isVoiceMessageMimeType = function(type) {
  return /^voice\//.test(type);
};
var isVoiceMessage = function(message) {
  var _a2, _b2, _c, _d;
  if (!message || !isFileMessage(message) || !message.type)
    return false;
  var _e2 = message.type.split(";"), mimeType = _e2[0], typeParameter = _e2[1];
  if (!isAudioMessageMimeType(mimeType)) {
    return false;
  }
  if (typeParameter) {
    var _f = typeParameter.split("="), key = _f[0], value = _f[1];
    return key === "sbu_type" && value === "voice";
  }
  return isVoiceMessageMimeType((_d = (_c = (_b2 = (_a2 = message === null || message === void 0 ? void 0 : message.metaArrays) === null || _a2 === void 0 ? void 0 : _a2.find(function(metaArray) {
    return metaArray.key === "KEY_INTERNAL_MESSAGE_TYPE";
  })) === null || _b2 === void 0 ? void 0 : _b2.value) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : "");
};
var isEditedMessage = function(message) {
  return isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.updatedAt) > 0;
};
var getUIKitMessageTypes = function() {
  return __assign({}, UIKitMessageTypes);
};
var getUIKitMessageType = function(message) {
  if (isAdminMessage(message))
    return UIKitMessageTypes.ADMIN;
  if (isUserMessage(message)) {
    return isOGMessage(message) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;
  }
  if (isMultipleFilesMessage(message)) {
    return UIKitMessageTypes.MULTIPLE_FILES;
  }
  if (isFileMessage(message)) {
    if (isThumbnailMessage(message)) {
      return UIKitMessageTypes.THUMBNAIL;
    }
    if (isVoiceMessage(message)) {
      return UIKitFileTypes.VOICE;
    }
    return UIKitMessageTypes.FILE;
  }
  return UIKitMessageTypes.UNKNOWN;
};
var reducer = function(accumulator, currentValue) {
  if (Array.isArray(currentValue)) {
    return __spreadArray(__spreadArray([], accumulator, true), currentValue, true);
  } else {
    accumulator.push(currentValue);
    return accumulator;
  }
};
var getClassName = function(classNames) {
  return Array.isArray(classNames) ? classNames.reduce(reducer, []).join(" ") : classNames;
};
var isReactedBy = function(userId, reaction) {
  return reaction.userIds.some(function(reactorUserId) {
    return reactorUserId === userId;
  });
};
var getEmojiTooltipString = function(reaction, userId, memberNicknamesMap, stringSet2) {
  var you = "";
  if (isReactedBy(userId, reaction)) {
    you = reaction.userIds.length === 1 ? stringSet2.TOOLTIP__YOU : stringSet2.TOOLTIP__AND_YOU;
  }
  return "".concat(reaction.userIds.filter(function(reactorUserId) {
    return reactorUserId !== userId;
  }).map(function(reactorUserId) {
    return memberNicknamesMap.get(reactorUserId) || stringSet2.TOOLTIP__UNKNOWN_USER;
  }).join(", ")).concat(you);
};
function getSuggestedReplies(message) {
  var _a2;
  if ((message === null || message === void 0 ? void 0 : message.extendedMessagePayload) && Array.isArray((_a2 = message === null || message === void 0 ? void 0 : message.extendedMessagePayload) === null || _a2 === void 0 ? void 0 : _a2.suggested_replies)) {
    return message.extendedMessagePayload.suggested_replies;
  } else {
    return [];
  }
}
var truncateString = function(fullStr, strLen) {
  if (!strLen)
    strLen = 40;
  if (fullStr === null || fullStr === void 0)
    return "";
  if (fullStr.length <= strLen)
    return fullStr;
  var separator = "...";
  var sepLen = separator.length;
  var charsToShow = strLen - sepLen;
  var frontChars = Math.ceil(charsToShow / 2);
  var backChars = Math.floor(charsToShow / 2);
  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);
};
var copyToClipboard$1 = function(text2) {
  if (window.clipboardData && window.clipboardData.setData) {
    return window.clipboardData.setData("Text", text2);
  }
  if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
    var textarea = document.createElement("textarea");
    textarea.textContent = text2;
    textarea.style.position = "fixed";
    document.body.appendChild(textarea);
    textarea.select();
    try {
      return document.execCommand("copy");
    } catch (ex) {
      return false;
    } finally {
      document.body.removeChild(textarea);
    }
  }
  return false;
};
var getEmojiListAll = function(emojiContainer) {
  var _a2;
  return (_a2 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a2 === void 0 ? void 0 : _a2.map(function(emojiCategory) {
    return emojiCategory.emojis;
  }).reduce(function(prevArr, currArr) {
    return prevArr.concat(currArr);
  }, []);
};
var getEmojiMapAll = function(emojiContainer) {
  var _a2;
  var emojiMap = /* @__PURE__ */ new Map();
  (_a2 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a2 === void 0 ? void 0 : _a2.forEach(function(category) {
    var _a3;
    (_a3 = category === null || category === void 0 ? void 0 : category.emojis) === null || _a3 === void 0 ? void 0 : _a3.forEach(function(emoji) {
      if (emoji && emoji.key) {
        emojiMap.set(emoji.key, emoji);
      }
    });
  });
  return emojiMap;
};
var getEmojiListByCategoryIds = function(emojiContainer, categoryIds) {
  var _a2;
  if (!categoryIds)
    return getEmojiListAll(emojiContainer);
  return ((_a2 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a2 === void 0 ? void 0 : _a2.filter(function(emojiCategory) {
    return categoryIds.includes(emojiCategory.id);
  }).flatMap(function(emojiCategory) {
    return emojiCategory.emojis;
  })) || [];
};
var findEmojiUrl = function(targetKey) {
  return function(_a2) {
    var key = _a2.key;
    return key === targetKey;
  };
};
var getEmojiUrl = function(emojiContainer, emojiKey) {
  var _a2, _b2;
  var isFindingKey = findEmojiUrl(emojiKey !== null && emojiKey !== void 0 ? emojiKey : "");
  return ((_b2 = (_a2 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories.find(function(category) {
    return category.emojis.some(isFindingKey);
  })) === null || _a2 === void 0 ? void 0 : _a2.emojis.find(isFindingKey)) === null || _b2 === void 0 ? void 0 : _b2.url) || "";
};
var getUserName = function(user) {
  return (user === null || user === void 0 ? void 0 : user.friendName) || (user === null || user === void 0 ? void 0 : user.nickname) || (user === null || user === void 0 ? void 0 : user.userId);
};
var getSenderName = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sender) && getUserName(message === null || message === void 0 ? void 0 : message.sender);
};
var StringObjType;
(function(StringObjType2) {
  StringObjType2["normal"] = "normal";
  StringObjType2["mention"] = "mention";
  StringObjType2["url"] = "url";
})(StringObjType || (StringObjType = {}));
var arrayEqual = function(array1, array2) {
  if (Array.isArray(array1) && Array.isArray(array2) && array1.length === array2.length) {
    for (var i3 = 0; i3 < array1.length; i3++) {
      if (array1[i3] !== array2[i3]) {
        return false;
      }
    }
    return true;
  }
  return false;
};
var isSendableMessage = function(message) {
  return Boolean(message) && "sender" in message;
};
var getHTMLTextDirection = function(direction, forceLeftToRightMessageLayout) {
  return forceLeftToRightMessageLayout ? "ltr" : direction;
};
var DEFAULT_GROUP_CHANNEL_NAME = "Group Channel";
var DEFAULT_AI_CHATBOT_CHANNEL_NAME = "AI Chatbot Widget Channel";
var isDefaultChannelName = function(channel) {
  return !(channel === null || channel === void 0 ? void 0 : channel.name) || channel.name === DEFAULT_GROUP_CHANNEL_NAME || channel.name === DEFAULT_AI_CHATBOT_CHANNEL_NAME;
};
var getChannelTitle$1 = function(channel, currentUserId, stringSet2) {
  var _a2;
  var LABEL_STRING_SET = stringSet2 || LabelStringSet;
  if (!(channel === null || channel === void 0 ? void 0 : channel.name) && !(channel === null || channel === void 0 ? void 0 : channel.members)) {
    return LABEL_STRING_SET.NO_TITLE;
  }
  if (!isDefaultChannelName(channel)) {
    return channel.name;
  }
  if (((_a2 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a2 === void 0 ? void 0 : _a2.length) === 1) {
    return LABEL_STRING_SET.NO_MEMBERS;
  }
  return channel === null || channel === void 0 ? void 0 : channel.members.filter(function(_a3) {
    var userId = _a3.userId;
    return userId !== currentUserId;
  }).map(function(_a3) {
    var nickname = _a3.nickname;
    return nickname || LABEL_STRING_SET.NO_NAME;
  }).join(", ");
};
var DEFAULT_MOBILE = false;
var MOBILE_CLASSNAME = "sendbird--mobile-mode";
var MediaQueryContext = React__default__default.createContext({
  breakpoint: DEFAULT_MOBILE,
  isMobile: false
});
var addClassNameToBody = function() {
  try {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.add(MOBILE_CLASSNAME);
  } catch (_a2) {
  }
};
var removeClassNameFromBody = function() {
  try {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.remove(MOBILE_CLASSNAME);
  } catch (_a2) {
  }
};
var MediaQueryProvider = function(props) {
  var children = props.children, logger = props.logger;
  var breakpoint = (props === null || props === void 0 ? void 0 : props.breakpoint) || false;
  var _a2 = useState(false), isMobile = _a2[0], setIsMobile = _a2[1];
  useEffect(function() {
    var _a3;
    var updateSize = function() {
      var _a4;
      if (typeof breakpoint === "boolean") {
        setIsMobile(breakpoint);
        if (breakpoint) {
          addClassNameToBody();
        } else {
          removeClassNameFromBody();
        }
      } else {
        var mq = window.matchMedia("(max-width: ".concat(breakpoint, ")"));
        (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "MediaQueryProvider: Screensize updated to ".concat(breakpoint));
        if (mq.matches) {
          setIsMobile(true);
          addClassNameToBody();
        } else {
          setIsMobile(false);
          removeClassNameFromBody();
        }
      }
    };
    updateSize();
    window.addEventListener("resize", updateSize);
    (_a3 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "MediaQueryProvider: addEventListener", { updateSize });
    return function() {
      var _a4;
      window.removeEventListener("resize", updateSize);
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "MediaQueryProvider: removeEventListener", { updateSize });
    };
  }, [breakpoint]);
  return React__default__default.createElement(MediaQueryContext.Provider, { value: { breakpoint, isMobile } }, children);
};
var useMediaQueryContext = function() {
  return React__default__default.useContext(MediaQueryContext);
};
var Colors;
(function(Colors2) {
  Colors2["ONBACKGROUND_1"] = "ONBACKGROUND_1";
  Colors2["ONBACKGROUND_2"] = "ONBACKGROUND_2";
  Colors2["ONBACKGROUND_3"] = "ONBACKGROUND_3";
  Colors2["ONBACKGROUND_4"] = "ONBACKGROUND_4";
  Colors2["ONCONTENT_1"] = "ONCONTENT_1";
  Colors2["PRIMARY"] = "PRIMARY";
  Colors2["ERROR"] = "ERROR";
})(Colors || (Colors = {}));
var changeColorToClassName = function(color) {
  switch (color) {
    case Colors.ONBACKGROUND_1:
      return "sendbird-color--onbackground-1";
    case Colors.ONBACKGROUND_2:
      return "sendbird-color--onbackground-2";
    case Colors.ONBACKGROUND_3:
      return "sendbird-color--onbackground-3";
    case Colors.ONBACKGROUND_4:
      return "sendbird-color--onbackground-4";
    case Colors.ONCONTENT_1:
      return "sendbird-color--oncontent-1";
    case Colors.PRIMARY:
      return "sendbird-color--primary";
    case Colors.ERROR:
      return "sendbird-color--error";
    default:
      return "";
  }
};
var TextButton = function(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, _c = _a2.color, color = _c === void 0 ? Colors.ONBACKGROUND_1 : _c, _d = _a2.disabled, disabled = _d === void 0 ? false : _d, _e2 = _a2.disableUnderline, disableUnderline = _e2 === void 0 ? false : _e2, _f = _a2.onClick, onClick = _f === void 0 ? function() {
  } : _f, children = _a2.children;
  return React__default__default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    changeColorToClassName(color),
    disableUnderline ? "sendbird-textbutton--not-underline" : "sendbird-textbutton",
    disabled ? "sendbird-textbutton--disabled" : ""
  ], false).join(" "), role: "button", tabIndex: 0, onClick: function(e3) {
    return onClick(e3);
  }, onKeyPress: function(e3) {
    return onClick(e3);
  } }, children);
};
var IconButton$1 = React__default__default.forwardRef(function(props, ref) {
  var _a2 = props.className, className = _a2 === void 0 ? "" : _a2, children = props.children, _b2 = props.disabled, disabled = _b2 === void 0 ? false : _b2, _c = props.width, width = _c === void 0 ? "56px" : _c, _d = props.height, height = _d === void 0 ? "56px" : _d, _e2 = props.type, type = _e2 === void 0 ? "button" : _e2, _f = props.style, style = _f === void 0 ? {} : _f, _g2 = props.onBlur, onBlur = _g2 === void 0 ? function() {
  } : _g2, _h = props.onClick, onClick = _h === void 0 ? function() {
  } : _h, testID = props.testID;
  var _j = useState(false), isPressed = _j[0], setIsPressed = _j[1];
  return React__default__default.createElement(
    "button",
    { "data-testid": testID, className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-iconbutton",
      isPressed ? "sendbird-iconbutton--pressed" : ""
    ], false).join(" "), disabled, ref, type, style: __assign(__assign({}, style), { height, width }), onClick: function(e3) {
      if (disabled) {
        return;
      }
      setIsPressed(true);
      onClick === null || onClick === void 0 ? void 0 : onClick(e3);
    }, onBlur: function(e3) {
      setIsPressed(false);
      onBlur === null || onBlur === void 0 ? void 0 : onBlur(e3);
    } },
    React__default__default.createElement("span", { className: "sendbird-iconbutton__inner" }, children)
  );
});
var Header = function(_a2) {
  var _b2;
  var className = _a2.className, renderLeft = _a2.renderLeft, renderRight = _a2.renderRight, renderMiddle = _a2.renderMiddle;
  var isMobile = false;
  try {
    isMobile = (_b2 = useMediaQueryContext === null || useMediaQueryContext === void 0 ? void 0 : useMediaQueryContext()) === null || _b2 === void 0 ? void 0 : _b2.isMobile;
  } catch (err) {
  }
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-ui-header", className), "data-testid": "sendbird-ui-header" },
    renderLeft ? React__default__default.createElement("div", { className: classnames("sendbird-ui-header__left", isMobile ? "sendbird-ui-header--is-mobile" : "sendbird-ui-header--is-desktop") }, renderLeft === null || renderLeft === void 0 ? void 0 : renderLeft()) : null,
    React__default__default.createElement("div", { className: "sendbird-ui-header__middle" }, renderMiddle === null || renderMiddle === void 0 ? void 0 : renderMiddle()),
    renderRight ? React__default__default.createElement("div", { className: classnames("sendbird-ui-header__right", isMobile ? "sendbird-ui-header--is-mobile" : "sendbird-ui-header--is-desktop") }, renderRight === null || renderRight === void 0 ? void 0 : renderRight()) : null
  );
};
var Title = function(_a2) {
  var title2 = _a2.title, subtitle = _a2.subtitle, onClickSubtitle = _a2.onClickSubtitle;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-ui-header__middle" },
    title2 && React__default__default.createElement(Label, { className: "sendbird-ui-header__middle__title", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, title2),
    subtitle && (onClickSubtitle ? React__default__default.createElement(
      TextButton,
      { className: "sendbird-ui-header__middle__subtitle__container", onClick: onClickSubtitle, disableUnderline: true },
      React__default__default.createElement(Label, { className: "sendbird-ui-header__middle__subtitle", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, subtitle)
    ) : React__default__default.createElement(Label, { className: "sendbird-ui-header__middle__subtitle", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, subtitle))
  );
};
var IconButton = function(_a2) {
  var className = _a2.className, onClick = _a2.onClick, type = _a2.type, color = _a2.color, _b2 = _a2.width, width = _b2 === void 0 ? "32px" : _b2, _c = _a2.height, height = _c === void 0 ? "32px" : _c, _d = _a2.renderIcon, renderIcon = _d === void 0 ? function(props) {
    return React__default__default.createElement(Icon, __assign({}, props));
  } : _d;
  return React__default__default.createElement(IconButton$1, { className, width, height, onClick }, renderIcon({ type, color }));
};
var Icon = function(_a2) {
  var className = _a2.className, type = _a2.type, color = _a2.color, _b2 = _a2.width, width = _b2 === void 0 ? "22px" : _b2, _c = _a2.height, height = _c === void 0 ? "22px" : _c, _d = _a2.onClick, onClick = _d === void 0 ? noop$4 : _d;
  return React__default__default.createElement(Icon$1, { className, type, fillColor: color, width, height, onClick: function(e3) {
    return onClick === null || onClick === void 0 ? void 0 : onClick(e3);
  } });
};
var Header$1 = Object.assign(Header, { Title, IconButton, Icon });
var GroupChannelHeaderView = function(_a2) {
  var className = _a2.className, currentChannel = _a2.currentChannel, showSearchIcon = _a2.showSearchIcon, onBackClick = _a2.onBackClick, onSearchClick = _a2.onSearchClick, onChatHeaderActionClick = _a2.onChatHeaderActionClick, renderLeft = _a2.renderLeft, renderMiddle = _a2.renderMiddle, renderRight = _a2.renderRight;
  var state = useSendbird().state;
  var config2 = state.config;
  var userId = config2.userId, theme = config2.theme;
  var isMobile = useMediaQueryContext().isMobile;
  var stringSet2 = useLocalization().stringSet;
  var isMuted = (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myMutedState) === "muted";
  var channelTitle = getChannelTitle$1(currentChannel, userId, stringSet2);
  return React__default__default.createElement(Header$1, { className: classnames("sendbird-chat-header", className), renderLeft: renderLeft !== null && renderLeft !== void 0 ? renderLeft : function() {
    return React__default__default.createElement(
      React__default__default.Fragment,
      null,
      isMobile && React__default__default.createElement(Header$1.Icon, { className: "sendbird-chat-header__icon_back", onClick: onBackClick, type: IconTypes.ARROW_LEFT, color: IconColors.PRIMARY, width: "24px", height: "24px" }),
      React__default__default.createElement(ChannelAvatar, { theme, channel: currentChannel, userId, height: 32, width: 32 })
    );
  }, renderMiddle: renderMiddle !== null && renderMiddle !== void 0 ? renderMiddle : function() {
    return React__default__default.createElement(Header$1.Title, { title: channelTitle });
  }, renderRight: renderRight !== null && renderRight !== void 0 ? renderRight : function() {
    return React__default__default.createElement(
      React__default__default.Fragment,
      null,
      isMuted && React__default__default.createElement(Header$1.Icon, { className: "sendbird-chat-header__right__mute", type: IconTypes.NOTIFICATIONS_OFF_FILLED, color: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px" }),
      showSearchIcon && !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isEphemeral) && React__default__default.createElement(Header$1.IconButton, { className: "sendbird-chat-header__right__search", onClick: onSearchClick, type: IconTypes.SEARCH, color: IconColors.PRIMARY, renderIcon: function(props) {
        return React__default__default.createElement(Header$1.Icon, __assign({}, props, { width: "24px", height: "24px" }));
      } }),
      React__default__default.createElement(Header$1.IconButton, { className: "sendbird-chat-header__right__info", onClick: onChatHeaderActionClick, type: IconTypes.INFO, color: IconColors.PRIMARY, renderIcon: function(props) {
        return React__default__default.createElement(Header$1.Icon, __assign({}, props, { width: "24px", height: "24px" }));
      } })
    );
  } });
};
var GroupChannelHeader = function(props) {
  var context = useGroupChannelContext();
  return React__default__default.createElement(GroupChannelHeaderView, __assign({}, props, context, { currentChannel: context.currentChannel }));
};
function isDate(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || _typeof(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
}
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}
var MILLISECONDS_IN_DAY = 864e5;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = /* @__PURE__ */ new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}
var MILLISECONDS_IN_WEEK$1 = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;
}
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}
var MILLISECONDS_IN_WEEK = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? "-" : "";
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign + output;
}
var formatters$1 = {
  // Year
  y: function y2(date, token) {
    var signedYear = date.getUTCFullYear();
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  // Month
  M: function M2(date, token) {
    var month = date.getUTCMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function d2(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function a2(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  // Hour [1-12]
  h: function h2(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function H2(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function m2(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function s2(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function S2(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
var dayPeriodEnum = {
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
};
var formatters = {
  // Era
  G: function G2(date, token, localize2) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, {
          width: "abbreviated"
        });
      case "GGGGG":
        return localize2.era(era, {
          width: "narrow"
        });
      case "GGGG":
      default:
        return localize2.era(era, {
          width: "wide"
        });
    }
  },
  // Year
  y: function y3(date, token, localize2) {
    if (token === "yo") {
      var signedYear = date.getUTCFullYear();
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year, {
        unit: "year"
      });
    }
    return formatters$1.y(date, token);
  },
  // Local week-numbering year
  Y: function Y2(date, token, localize2, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize2.ordinalNumber(weekYear, {
        unit: "year"
      });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function R2(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function u2(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function Q2(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "QQQ":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      case "QQQQQ":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      case "QQQQ":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone quarter
  q: function q2(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "qqq":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      case "qqqqq":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      case "qqqq":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Month
  M: function M3(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return formatters$1.M(date, token);
      case "Mo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "MMM":
        return localize2.month(month, {
          width: "abbreviated",
          context: "formatting"
        });
      case "MMMMM":
        return localize2.month(month, {
          width: "narrow",
          context: "formatting"
        });
      case "MMMM":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone month
  L: function L2(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "L":
        return String(month + 1);
      case "LL":
        return addLeadingZeros(month + 1, 2);
      case "Lo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "LLL":
        return localize2.month(month, {
          width: "abbreviated",
          context: "standalone"
        });
      case "LLLLL":
        return localize2.month(month, {
          width: "narrow",
          context: "standalone"
        });
      case "LLLL":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Local week of year
  w: function w2(date, token, localize2, options) {
    var week = getUTCWeek(date, options);
    if (token === "wo") {
      return localize2.ordinalNumber(week, {
        unit: "week"
      });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function I2(date, token, localize2) {
    var isoWeek = getUTCISOWeek(date);
    if (token === "Io") {
      return localize2.ordinalNumber(isoWeek, {
        unit: "week"
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function d3(date, token, localize2) {
    if (token === "do") {
      return localize2.ordinalNumber(date.getUTCDate(), {
        unit: "date"
      });
    }
    return formatters$1.d(date, token);
  },
  // Day of year
  D: function D2(date, token, localize2) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === "Do") {
      return localize2.ordinalNumber(dayOfYear, {
        unit: "dayOfYear"
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function E2(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "EEEEE":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "EEEEEE":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Local day of week
  e: function e2(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "eee":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "eeeee":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "eeeeee":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "eeee":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone local day of week
  c: function c2(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "ccc":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      case "ccccc":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      case "cccccc":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      case "cccc":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // ISO day of week
  i: function i2(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, {
          unit: "day"
        });
      case "iii":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "iiiii":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "iiiiii":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "iiii":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM or PM
  a: function a3(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM, PM, midnight, noon
  b: function b2(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function B2(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Hour [1-12]
  h: function h3(date, token, localize2) {
    if (token === "ho") {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return formatters$1.h(date, token);
  },
  // Hour [0-23]
  H: function H3(date, token, localize2) {
    if (token === "Ho") {
      return localize2.ordinalNumber(date.getUTCHours(), {
        unit: "hour"
      });
    }
    return formatters$1.H(date, token);
  },
  // Hour [0-11]
  K: function K2(date, token, localize2) {
    var hours = date.getUTCHours() % 12;
    if (token === "Ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function k2(date, token, localize2) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;
    if (token === "ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function m3(date, token, localize2) {
    if (token === "mo") {
      return localize2.ordinalNumber(date.getUTCMinutes(), {
        unit: "minute"
      });
    }
    return formatters$1.m(date, token);
  },
  // Second
  s: function s3(date, token, localize2) {
    if (token === "so") {
      return localize2.ordinalNumber(date.getUTCSeconds(), {
        unit: "second"
      });
    }
    return formatters$1.s(date, token);
  },
  // Fraction of second
  S: function S3(date, token) {
    return formatters$1.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function X2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function x2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (GMT)
  O: function O2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (specific non-location)
  z: function z2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Seconds timestamp
  t: function t3(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function T2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter;
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var dateLongFormatter = function dateLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({
        width: "short"
      });
    case "PP":
      return formatLong2.date({
        width: "medium"
      });
    case "PPP":
      return formatLong2.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong2.date({
        width: "full"
      });
  }
};
var timeLongFormatter = function timeLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({
        width: "short"
      });
    case "pp":
      return formatLong2.time({
        width: "medium"
      });
    case "ppp":
      return formatLong2.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong2.time({
        width: "full"
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}
var protectedDayOfYearTokens = ["D", "DD"];
var protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format2, input) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions2 = getDefaultOptions();
  var locale$1 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions2.locale) !== null && _ref !== void 0 ? _ref : locale;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions2.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions2.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions2.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale$1.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale$1.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale$1,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters[firstCharacter];
      return longFormatter(substring, locale$1.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale$1.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}
function getMentionNodes(root2) {
  if (root2) {
    var mentions = root2.querySelectorAll("[data-sb-mention='true']");
    var mentionsArray = Array.from(mentions);
    return mentionsArray;
  }
  return [];
}
function useDirtyGetMentions(_a2, _b2) {
  var ref = _a2.ref;
  var logger = _b2.logger;
  var targetNode = ref.current;
  var _c = useState([]), mentionNodes = _c[0], setMentionNodes = _c[1];
  useLayoutEffect(function() {
    if (targetNode) {
      var mentions = getMentionNodes(targetNode);
      setMentionNodes(mentions);
    }
  }, [targetNode]);
  useEffect(function() {
    var config2 = { childList: true, subtree: true };
    var callback = function(mutationList) {
      var hasMutation = mutationList.length > 0;
      if (hasMutation) {
        setMentionNodes(getMentionNodes(targetNode));
      }
    };
    var observer = new MutationObserver(callback);
    if (targetNode) {
      observer.observe(targetNode, config2);
    }
    return function() {
      try {
        observer.disconnect();
      } catch (error) {
        logger.error("useDirtyGetMentions: observer disconnect failed", { observer });
      }
    };
  }, [targetNode]);
  return mentionNodes;
}
var DateSeparator = function(_a2) {
  var _b2 = _a2.children, children = _b2 === void 0 ? void 0 : _b2, _c = _a2.className, className = _c === void 0 ? "" : _c, _d = _a2.separatorColor, separatorColor = _d === void 0 ? Colors.ONBACKGROUND_4 : _d;
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-separator"
    ], false).join(" ") },
    React__default__default.createElement("div", { className: ["sendbird-separator__left", "".concat(changeColorToClassName(separatorColor), "--background-color")].join(" ") }),
    React__default__default.createElement("div", { className: "sendbird-separator__text" }, children || React__default__default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, "Date Separator")),
    React__default__default.createElement("div", { className: ["sendbird-separator__right", "".concat(changeColorToClassName(separatorColor), "--background-color")].join(" ") })
  );
};
var MessageInputKeys = {
  Enter: "Enter",
  ArrowUp: "ArrowUp",
  ArrowDown: "ArrowDown",
  Backspace: "Backspace"
};
var NodeTypes = {
  ElementNode: 1,
  TextNode: 3
};
var NodeNames = {
  Span: "SPAN",
  Br: "BR",
  Div: "DIV"
};
var ButtonTypes;
(function(ButtonTypes2) {
  ButtonTypes2["PRIMARY"] = "PRIMARY";
  ButtonTypes2["SECONDARY"] = "SECONDARY";
  ButtonTypes2["DANGER"] = "DANGER";
  ButtonTypes2["DISABLED"] = "DISABLED";
  ButtonTypes2["WARNING"] = "WARNING";
})(ButtonTypes || (ButtonTypes = {}));
var ButtonSizes;
(function(ButtonSizes2) {
  ButtonSizes2["BIG"] = "BIG";
  ButtonSizes2["SMALL"] = "SMALL";
})(ButtonSizes || (ButtonSizes = {}));
function changeTypeToClassName(type) {
  switch (type) {
    case ButtonTypes.PRIMARY:
      return "sendbird-button--primary";
    case ButtonTypes.SECONDARY:
      return "sendbird-button--secondary";
    case ButtonTypes.DANGER:
      return "sendbird-button--danger";
    case ButtonTypes.DISABLED:
      return "sendbird-button--disabled";
    case ButtonTypes.WARNING:
      return "sendbird-button--warning";
    default:
      return "";
  }
}
function changeSizeToClassName(size) {
  switch (size) {
    case ButtonSizes.BIG:
      return "sendbird-button--big";
    case ButtonSizes.SMALL:
      return "sendbird-button--small";
    default:
      return "";
  }
}
function Button(_a2) {
  var className = _a2.className, _b2 = _a2.type, type = _b2 === void 0 ? ButtonTypes.PRIMARY : _b2, _c = _a2.size, size = _c === void 0 ? ButtonSizes.BIG : _c, _d = _a2.children, children = _d === void 0 ? "Button" : _d, _e2 = _a2.disabled, disabled = _e2 === void 0 ? false : _e2, _f = _a2.onClick, onClick = _f === void 0 ? function() {
  } : _f, _g2 = _a2.labelType, labelType = _g2 === void 0 ? LabelTypography.BUTTON_1 : _g2, _h = _a2.labelColor, labelColor = _h === void 0 ? LabelColors.ONCONTENT_1 : _h;
  var injectingClassNames = __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-button",
    disabled ? "sendbird-button__disabled" : "",
    changeTypeToClassName(type),
    changeSizeToClassName(size)
  ], false).join(" ");
  return React__default__default.createElement(
    "button",
    { className: injectingClassNames, type: "button", onClick, disabled },
    React__default__default.createElement(Label, { className: "sendbird-button__text", type: labelType, color: labelColor }, children)
  );
}
/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */
const {
  entries,
  setPrototypeOf,
  isFrozen,
  getPrototypeOf,
  getOwnPropertyDescriptor
} = Object;
let {
  freeze,
  seal,
  create
} = Object;
let {
  apply,
  construct
} = typeof Reflect !== "undefined" && Reflect;
if (!freeze) {
  freeze = function freeze2(x3) {
    return x3;
  };
}
if (!seal) {
  seal = function seal2(x3) {
    return x3;
  };
}
if (!apply) {
  apply = function apply2(fun, thisValue, args) {
    return fun.apply(thisValue, args);
  };
}
if (!construct) {
  construct = function construct2(Func, args) {
    return new Func(...args);
  };
}
const arrayForEach = unapply(Array.prototype.forEach);
const arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);
const arrayPop = unapply(Array.prototype.pop);
const arrayPush = unapply(Array.prototype.push);
const arraySplice = unapply(Array.prototype.splice);
const stringToLowerCase = unapply(String.prototype.toLowerCase);
const stringToString = unapply(String.prototype.toString);
const stringMatch = unapply(String.prototype.match);
const stringReplace = unapply(String.prototype.replace);
const stringIndexOf = unapply(String.prototype.indexOf);
const stringTrim = unapply(String.prototype.trim);
const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);
const regExpTest = unapply(RegExp.prototype.test);
const typeErrorCreate = unconstruct(TypeError);
function unapply(func) {
  return function(thisArg) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return apply(func, thisArg, args);
  };
}
function unconstruct(func) {
  return function() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return construct(func, args);
  };
}
function addToSet(set, array) {
  let transformCaseFunc = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : stringToLowerCase;
  if (setPrototypeOf) {
    setPrototypeOf(set, null);
  }
  let l2 = array.length;
  while (l2--) {
    let element = array[l2];
    if (typeof element === "string") {
      const lcElement = transformCaseFunc(element);
      if (lcElement !== element) {
        if (!isFrozen(array)) {
          array[l2] = lcElement;
        }
        element = lcElement;
      }
    }
    set[element] = true;
  }
  return set;
}
function cleanArray(array) {
  for (let index = 0; index < array.length; index++) {
    const isPropertyExist = objectHasOwnProperty(array, index);
    if (!isPropertyExist) {
      array[index] = null;
    }
  }
  return array;
}
function clone(object) {
  const newObject = create(null);
  for (const [property, value] of entries(object)) {
    const isPropertyExist = objectHasOwnProperty(object, property);
    if (isPropertyExist) {
      if (Array.isArray(value)) {
        newObject[property] = cleanArray(value);
      } else if (value && typeof value === "object" && value.constructor === Object) {
        newObject[property] = clone(value);
      } else {
        newObject[property] = value;
      }
    }
  }
  return newObject;
}
function lookupGetter(object, prop) {
  while (object !== null) {
    const desc = getOwnPropertyDescriptor(object, prop);
    if (desc) {
      if (desc.get) {
        return unapply(desc.get);
      }
      if (typeof desc.value === "function") {
        return unapply(desc.value);
      }
    }
    object = getPrototypeOf(object);
  }
  function fallbackValue() {
    return null;
  }
  return fallbackValue;
}
const html$1 = freeze(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]);
const svg$1 = freeze(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]);
const svgFilters = freeze(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]);
const svgDisallowed = freeze(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]);
const mathMl$1 = freeze(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]);
const mathMlDisallowed = freeze(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]);
const text = freeze(["#text"]);
const html = freeze(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]);
const svg = freeze(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]);
const mathMl = freeze(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]);
const xml = freeze(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]);
const MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm);
const ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
const TMPLIT_EXPR = seal(/\$\{[\w\W]*/gm);
const DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]+$/);
const ARIA_ATTR = seal(/^aria-[\-\w]+$/);
const IS_ALLOWED_URI = seal(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
);
const IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
const ATTR_WHITESPACE = seal(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
);
const DOCTYPE_NAME = seal(/^html$/i);
const CUSTOM_ELEMENT = seal(/^[a-z][.\w]*(-[.\w]+)+$/i);
var EXPRESSIONS = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR,
  ATTR_WHITESPACE,
  CUSTOM_ELEMENT,
  DATA_ATTR,
  DOCTYPE_NAME,
  ERB_EXPR,
  IS_ALLOWED_URI,
  IS_SCRIPT_OR_DATA,
  MUSTACHE_EXPR,
  TMPLIT_EXPR
});
const NODE_TYPE = {
  element: 1,
  text: 3,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9
};
const getGlobal = function getGlobal2() {
  return typeof window === "undefined" ? null : window;
};
const _createTrustedTypesPolicy = function _createTrustedTypesPolicy2(trustedTypes, purifyHostElement) {
  if (typeof trustedTypes !== "object" || typeof trustedTypes.createPolicy !== "function") {
    return null;
  }
  let suffix = null;
  const ATTR_NAME = "data-tt-policy-suffix";
  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {
    suffix = purifyHostElement.getAttribute(ATTR_NAME);
  }
  const policyName = "dompurify" + (suffix ? "#" + suffix : "");
  try {
    return trustedTypes.createPolicy(policyName, {
      createHTML(html2) {
        return html2;
      },
      createScriptURL(scriptUrl) {
        return scriptUrl;
      }
    });
  } catch (_2) {
    console.warn("TrustedTypes policy " + policyName + " could not be created.");
    return null;
  }
};
const _createHooksMap = function _createHooksMap2() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function createDOMPurify() {
  let window2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getGlobal();
  const DOMPurify = (root2) => createDOMPurify(root2);
  DOMPurify.version = "3.2.4";
  DOMPurify.removed = [];
  if (!window2 || !window2.document || window2.document.nodeType !== NODE_TYPE.document || !window2.Element) {
    DOMPurify.isSupported = false;
    return DOMPurify;
  }
  let {
    document: document2
  } = window2;
  const originalDocument = document2;
  const currentScript = originalDocument.currentScript;
  const {
    DocumentFragment,
    HTMLTemplateElement,
    Node: Node2,
    Element,
    NodeFilter,
    NamedNodeMap = window2.NamedNodeMap || window2.MozNamedAttrMap,
    HTMLFormElement,
    DOMParser,
    trustedTypes
  } = window2;
  const ElementPrototype = Element.prototype;
  const cloneNode = lookupGetter(ElementPrototype, "cloneNode");
  const remove2 = lookupGetter(ElementPrototype, "remove");
  const getNextSibling = lookupGetter(ElementPrototype, "nextSibling");
  const getChildNodes = lookupGetter(ElementPrototype, "childNodes");
  const getParentNode = lookupGetter(ElementPrototype, "parentNode");
  if (typeof HTMLTemplateElement === "function") {
    const template = document2.createElement("template");
    if (template.content && template.content.ownerDocument) {
      document2 = template.content.ownerDocument;
    }
  }
  let trustedTypesPolicy;
  let emptyHTML = "";
  const {
    implementation,
    createNodeIterator,
    createDocumentFragment,
    getElementsByTagName
  } = document2;
  const {
    importNode
  } = originalDocument;
  let hooks = _createHooksMap();
  DOMPurify.isSupported = typeof entries === "function" && typeof getParentNode === "function" && implementation && implementation.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: MUSTACHE_EXPR2,
    ERB_EXPR: ERB_EXPR2,
    TMPLIT_EXPR: TMPLIT_EXPR2,
    DATA_ATTR: DATA_ATTR2,
    ARIA_ATTR: ARIA_ATTR2,
    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA2,
    ATTR_WHITESPACE: ATTR_WHITESPACE2,
    CUSTOM_ELEMENT: CUSTOM_ELEMENT2
  } = EXPRESSIONS;
  let {
    IS_ALLOWED_URI: IS_ALLOWED_URI$1
  } = EXPRESSIONS;
  let ALLOWED_TAGS = null;
  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);
  let ALLOWED_ATTR = null;
  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);
  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {
    tagNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    attributeNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: false
    }
  }));
  let FORBID_TAGS = null;
  let FORBID_ATTR = null;
  let ALLOW_ARIA_ATTR = true;
  let ALLOW_DATA_ATTR = true;
  let ALLOW_UNKNOWN_PROTOCOLS = false;
  let ALLOW_SELF_CLOSE_IN_ATTR = true;
  let SAFE_FOR_TEMPLATES = false;
  let SAFE_FOR_XML = true;
  let WHOLE_DOCUMENT = false;
  let SET_CONFIG = false;
  let FORCE_BODY = false;
  let RETURN_DOM = false;
  let RETURN_DOM_FRAGMENT = false;
  let RETURN_TRUSTED_TYPE = false;
  let SANITIZE_DOM = true;
  let SANITIZE_NAMED_PROPS = false;
  const SANITIZE_NAMED_PROPS_PREFIX = "user-content-";
  let KEEP_CONTENT = true;
  let IN_PLACE = false;
  let USE_PROFILES = {};
  let FORBID_CONTENTS = null;
  const DEFAULT_FORBID_CONTENTS = addToSet({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let DATA_URI_TAGS = null;
  const DEFAULT_DATA_URI_TAGS = addToSet({}, ["audio", "video", "img", "source", "image", "track"]);
  let URI_SAFE_ATTRIBUTES = null;
  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]);
  const MATHML_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
  const SVG_NAMESPACE = "http://www.w3.org/2000/svg";
  const HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
  let NAMESPACE = HTML_NAMESPACE;
  let IS_EMPTY_INPUT = false;
  let ALLOWED_NAMESPACES = null;
  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);
  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ["mi", "mo", "mn", "ms", "mtext"]);
  let HTML_INTEGRATION_POINTS = addToSet({}, ["annotation-xml"]);
  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ["title", "style", "font", "a", "script"]);
  let PARSER_MEDIA_TYPE = null;
  const SUPPORTED_PARSER_MEDIA_TYPES = ["application/xhtml+xml", "text/html"];
  const DEFAULT_PARSER_MEDIA_TYPE = "text/html";
  let transformCaseFunc = null;
  let CONFIG = null;
  const formElement = document2.createElement("form");
  const isRegexOrFunction = function isRegexOrFunction2(testValue) {
    return testValue instanceof RegExp || testValue instanceof Function;
  };
  const _parseConfig = function _parseConfig2() {
    let cfg = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (CONFIG && CONFIG === cfg) {
      return;
    }
    if (!cfg || typeof cfg !== "object") {
      cfg = {};
    }
    cfg = clone(cfg);
    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes
    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;
    transformCaseFunc = PARSER_MEDIA_TYPE === "application/xhtml+xml" ? stringToString : stringToLowerCase;
    ALLOWED_TAGS = objectHasOwnProperty(cfg, "ALLOWED_TAGS") ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
    ALLOWED_ATTR = objectHasOwnProperty(cfg, "ALLOWED_ATTR") ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, "ALLOWED_NAMESPACES") ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, "ADD_URI_SAFE_ATTR") ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;
    DATA_URI_TAGS = objectHasOwnProperty(cfg, "ADD_DATA_URI_TAGS") ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;
    FORBID_CONTENTS = objectHasOwnProperty(cfg, "FORBID_CONTENTS") ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
    FORBID_TAGS = objectHasOwnProperty(cfg, "FORBID_TAGS") ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
    FORBID_ATTR = objectHasOwnProperty(cfg, "FORBID_ATTR") ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
    USE_PROFILES = objectHasOwnProperty(cfg, "USE_PROFILES") ? cfg.USE_PROFILES : false;
    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;
    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;
    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;
    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false;
    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;
    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false;
    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;
    RETURN_DOM = cfg.RETURN_DOM || false;
    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;
    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;
    FORCE_BODY = cfg.FORCE_BODY || false;
    SANITIZE_DOM = cfg.SANITIZE_DOM !== false;
    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;
    KEEP_CONTENT = cfg.KEEP_CONTENT !== false;
    IN_PLACE = cfg.IN_PLACE || false;
    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;
    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;
    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;
    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === "boolean") {
      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
    }
    if (SAFE_FOR_TEMPLATES) {
      ALLOW_DATA_ATTR = false;
    }
    if (RETURN_DOM_FRAGMENT) {
      RETURN_DOM = true;
    }
    if (USE_PROFILES) {
      ALLOWED_TAGS = addToSet({}, text);
      ALLOWED_ATTR = [];
      if (USE_PROFILES.html === true) {
        addToSet(ALLOWED_TAGS, html$1);
        addToSet(ALLOWED_ATTR, html);
      }
      if (USE_PROFILES.svg === true) {
        addToSet(ALLOWED_TAGS, svg$1);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.svgFilters === true) {
        addToSet(ALLOWED_TAGS, svgFilters);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.mathMl === true) {
        addToSet(ALLOWED_TAGS, mathMl$1);
        addToSet(ALLOWED_ATTR, mathMl);
        addToSet(ALLOWED_ATTR, xml);
      }
    }
    if (cfg.ADD_TAGS) {
      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
        ALLOWED_TAGS = clone(ALLOWED_TAGS);
      }
      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
    }
    if (cfg.ADD_ATTR) {
      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
        ALLOWED_ATTR = clone(ALLOWED_ATTR);
      }
      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
    }
    if (cfg.ADD_URI_SAFE_ATTR) {
      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
    }
    if (cfg.FORBID_CONTENTS) {
      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
        FORBID_CONTENTS = clone(FORBID_CONTENTS);
      }
      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
    }
    if (KEEP_CONTENT) {
      ALLOWED_TAGS["#text"] = true;
    }
    if (WHOLE_DOCUMENT) {
      addToSet(ALLOWED_TAGS, ["html", "head", "body"]);
    }
    if (ALLOWED_TAGS.table) {
      addToSet(ALLOWED_TAGS, ["tbody"]);
      delete FORBID_TAGS.tbody;
    }
    if (cfg.TRUSTED_TYPES_POLICY) {
      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== "function") {
        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
      }
      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== "function") {
        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
      }
      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;
      emptyHTML = trustedTypesPolicy.createHTML("");
    } else {
      if (trustedTypesPolicy === void 0) {
        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);
      }
      if (trustedTypesPolicy !== null && typeof emptyHTML === "string") {
        emptyHTML = trustedTypesPolicy.createHTML("");
      }
    }
    if (freeze) {
      freeze(cfg);
    }
    CONFIG = cfg;
  };
  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);
  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);
  const _checkValidNamespace = function _checkValidNamespace2(element) {
    let parent = getParentNode(element);
    if (!parent || !parent.tagName) {
      parent = {
        namespaceURI: NAMESPACE,
        tagName: "template"
      };
    }
    const tagName = stringToLowerCase(element.tagName);
    const parentTagName = stringToLowerCase(parent.tagName);
    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
      return false;
    }
    if (element.namespaceURI === SVG_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "svg";
      }
      if (parent.namespaceURI === MATHML_NAMESPACE) {
        return tagName === "svg" && (parentTagName === "annotation-xml" || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
      }
      return Boolean(ALL_SVG_TAGS[tagName]);
    }
    if (element.namespaceURI === MATHML_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "math";
      }
      if (parent.namespaceURI === SVG_NAMESPACE) {
        return tagName === "math" && HTML_INTEGRATION_POINTS[parentTagName];
      }
      return Boolean(ALL_MATHML_TAGS[tagName]);
    }
    if (element.namespaceURI === HTML_NAMESPACE) {
      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && ALLOWED_NAMESPACES[element.namespaceURI]) {
      return true;
    }
    return false;
  };
  const _forceRemove = function _forceRemove2(node) {
    arrayPush(DOMPurify.removed, {
      element: node
    });
    try {
      getParentNode(node).removeChild(node);
    } catch (_2) {
      remove2(node);
    }
  };
  const _removeAttribute = function _removeAttribute2(name, element) {
    try {
      arrayPush(DOMPurify.removed, {
        attribute: element.getAttributeNode(name),
        from: element
      });
    } catch (_2) {
      arrayPush(DOMPurify.removed, {
        attribute: null,
        from: element
      });
    }
    element.removeAttribute(name);
    if (name === "is") {
      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
        try {
          _forceRemove(element);
        } catch (_2) {
        }
      } else {
        try {
          element.setAttribute(name, "");
        } catch (_2) {
        }
      }
    }
  };
  const _initDocument = function _initDocument2(dirty) {
    let doc = null;
    let leadingWhitespace = null;
    if (FORCE_BODY) {
      dirty = "<remove></remove>" + dirty;
    } else {
      const matches = stringMatch(dirty, /^[\r\n\t ]+/);
      leadingWhitespace = matches && matches[0];
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && NAMESPACE === HTML_NAMESPACE) {
      dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + "</body></html>";
    }
    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
    if (NAMESPACE === HTML_NAMESPACE) {
      try {
        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
      } catch (_2) {
      }
    }
    if (!doc || !doc.documentElement) {
      doc = implementation.createDocument(NAMESPACE, "template", null);
      try {
        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
      } catch (_2) {
      }
    }
    const body = doc.body || doc.documentElement;
    if (dirty && leadingWhitespace) {
      body.insertBefore(document2.createTextNode(leadingWhitespace), body.childNodes[0] || null);
    }
    if (NAMESPACE === HTML_NAMESPACE) {
      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? "html" : "body")[0];
    }
    return WHOLE_DOCUMENT ? doc.documentElement : body;
  };
  const _createNodeIterator = function _createNodeIterator2(root2) {
    return createNodeIterator.call(
      root2.ownerDocument || root2,
      root2,
      // eslint-disable-next-line no-bitwise
      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION,
      null
    );
  };
  const _isClobbered = function _isClobbered2(element) {
    return element instanceof HTMLFormElement && (typeof element.nodeName !== "string" || typeof element.textContent !== "string" || typeof element.removeChild !== "function" || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== "function" || typeof element.setAttribute !== "function" || typeof element.namespaceURI !== "string" || typeof element.insertBefore !== "function" || typeof element.hasChildNodes !== "function");
  };
  const _isNode = function _isNode2(value) {
    return typeof Node2 === "function" && value instanceof Node2;
  };
  function _executeHooks(hooks2, currentNode, data) {
    arrayForEach(hooks2, (hook) => {
      hook.call(DOMPurify, currentNode, data, CONFIG);
    });
  }
  const _sanitizeElements = function _sanitizeElements2(currentNode) {
    let content = null;
    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);
    if (_isClobbered(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    const tagName = transformCaseFunc(currentNode.nodeName);
    _executeHooks(hooks.uponSanitizeElement, currentNode, {
      tagName,
      allowedTags: ALLOWED_TAGS
    });
    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
      _forceRemove(currentNode);
      return true;
    }
    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {
      _forceRemove(currentNode);
      return true;
    }
    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\w]/g, currentNode.data)) {
      _forceRemove(currentNode);
      return true;
    }
    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {
          return false;
        }
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {
          return false;
        }
      }
      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
        const parentNode = getParentNode(currentNode) || currentNode.parentNode;
        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;
        if (childNodes && parentNode) {
          const childCount = childNodes.length;
          for (let i3 = childCount - 1; i3 >= 0; --i3) {
            const childClone = cloneNode(childNodes[i3], true);
            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;
            parentNode.insertBefore(childClone, getNextSibling(currentNode));
          }
        }
      }
      _forceRemove(currentNode);
      return true;
    }
    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    if ((tagName === "noscript" || tagName === "noembed" || tagName === "noframes") && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }
    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {
      content = currentNode.textContent;
      arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {
        content = stringReplace(content, expr, " ");
      });
      if (currentNode.textContent !== content) {
        arrayPush(DOMPurify.removed, {
          element: currentNode.cloneNode()
        });
        currentNode.textContent = content;
      }
    }
    _executeHooks(hooks.afterSanitizeElements, currentNode, null);
    return false;
  };
  const _isValidAttribute = function _isValidAttribute2(lcTag, lcName, value) {
    if (SANITIZE_DOM && (lcName === "id" || lcName === "name") && (value in document2 || value in formElement)) {
      return false;
    }
    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR2, lcName)) ;
    else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR2, lcName)) ;
    else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
      if (
        // First condition does a very basic check if a) it's basically a valid custom element tagname AND
        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND
        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        lcName === "is" && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))
      ) ;
      else {
        return false;
      }
    } else if (URI_SAFE_ATTRIBUTES[lcName]) ;
    else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE2, ""))) ;
    else if ((lcName === "src" || lcName === "xlink:href" || lcName === "href") && lcTag !== "script" && stringIndexOf(value, "data:") === 0 && DATA_URI_TAGS[lcTag]) ;
    else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA2, stringReplace(value, ATTR_WHITESPACE2, ""))) ;
    else if (value) {
      return false;
    } else ;
    return true;
  };
  const _isBasicCustomElement = function _isBasicCustomElement2(tagName) {
    return tagName !== "annotation-xml" && stringMatch(tagName, CUSTOM_ELEMENT2);
  };
  const _sanitizeAttributes = function _sanitizeAttributes2(currentNode) {
    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);
    const {
      attributes
    } = currentNode;
    if (!attributes || _isClobbered(currentNode)) {
      return;
    }
    const hookEvent = {
      attrName: "",
      attrValue: "",
      keepAttr: true,
      allowedAttributes: ALLOWED_ATTR,
      forceKeepAttr: void 0
    };
    let l2 = attributes.length;
    while (l2--) {
      const attr = attributes[l2];
      const {
        name,
        namespaceURI,
        value: attrValue
      } = attr;
      const lcName = transformCaseFunc(name);
      let value = name === "value" ? attrValue : stringTrim(attrValue);
      hookEvent.attrName = lcName;
      hookEvent.attrValue = value;
      hookEvent.keepAttr = true;
      hookEvent.forceKeepAttr = void 0;
      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);
      value = hookEvent.attrValue;
      if (SANITIZE_NAMED_PROPS && (lcName === "id" || lcName === "name")) {
        _removeAttribute(name, currentNode);
        value = SANITIZE_NAMED_PROPS_PREFIX + value;
      }
      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\/(style|title)/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }
      if (hookEvent.forceKeepAttr) {
        continue;
      }
      _removeAttribute(name, currentNode);
      if (!hookEvent.keepAttr) {
        continue;
      }
      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }
      if (SAFE_FOR_TEMPLATES) {
        arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {
          value = stringReplace(value, expr, " ");
        });
      }
      const lcTag = transformCaseFunc(currentNode.nodeName);
      if (!_isValidAttribute(lcTag, lcName, value)) {
        continue;
      }
      if (trustedTypesPolicy && typeof trustedTypes === "object" && typeof trustedTypes.getAttributeType === "function") {
        if (namespaceURI) ;
        else {
          switch (trustedTypes.getAttributeType(lcTag, lcName)) {
            case "TrustedHTML": {
              value = trustedTypesPolicy.createHTML(value);
              break;
            }
            case "TrustedScriptURL": {
              value = trustedTypesPolicy.createScriptURL(value);
              break;
            }
          }
        }
      }
      try {
        if (namespaceURI) {
          currentNode.setAttributeNS(namespaceURI, name, value);
        } else {
          currentNode.setAttribute(name, value);
        }
        if (_isClobbered(currentNode)) {
          _forceRemove(currentNode);
        } else {
          arrayPop(DOMPurify.removed);
        }
      } catch (_2) {
      }
    }
    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);
  };
  const _sanitizeShadowDOM = function _sanitizeShadowDOM2(fragment) {
    let shadowNode = null;
    const shadowIterator = _createNodeIterator(fragment);
    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);
    while (shadowNode = shadowIterator.nextNode()) {
      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);
      _sanitizeElements(shadowNode);
      _sanitizeAttributes(shadowNode);
      if (shadowNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM2(shadowNode.content);
      }
    }
    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);
  };
  DOMPurify.sanitize = function(dirty) {
    let cfg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let body = null;
    let importedNode = null;
    let currentNode = null;
    let returnNode = null;
    IS_EMPTY_INPUT = !dirty;
    if (IS_EMPTY_INPUT) {
      dirty = "<!-->";
    }
    if (typeof dirty !== "string" && !_isNode(dirty)) {
      if (typeof dirty.toString === "function") {
        dirty = dirty.toString();
        if (typeof dirty !== "string") {
          throw typeErrorCreate("dirty is not a string, aborting");
        }
      } else {
        throw typeErrorCreate("toString is not a function");
      }
    }
    if (!DOMPurify.isSupported) {
      return dirty;
    }
    if (!SET_CONFIG) {
      _parseConfig(cfg);
    }
    DOMPurify.removed = [];
    if (typeof dirty === "string") {
      IN_PLACE = false;
    }
    if (IN_PLACE) {
      if (dirty.nodeName) {
        const tagName = transformCaseFunc(dirty.nodeName);
        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
          throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place");
        }
      }
    } else if (dirty instanceof Node2) {
      body = _initDocument("<!---->");
      importedNode = body.ownerDocument.importNode(dirty, true);
      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === "BODY") {
        body = importedNode;
      } else if (importedNode.nodeName === "HTML") {
        body = importedNode;
      } else {
        body.appendChild(importedNode);
      }
    } else {
      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes
      dirty.indexOf("<") === -1) {
        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
      }
      body = _initDocument(dirty);
      if (!body) {
        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : "";
      }
    }
    if (body && FORCE_BODY) {
      _forceRemove(body.firstChild);
    }
    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);
    while (currentNode = nodeIterator.nextNode()) {
      _sanitizeElements(currentNode);
      _sanitizeAttributes(currentNode);
      if (currentNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(currentNode.content);
      }
    }
    if (IN_PLACE) {
      return dirty;
    }
    if (RETURN_DOM) {
      if (RETURN_DOM_FRAGMENT) {
        returnNode = createDocumentFragment.call(body.ownerDocument);
        while (body.firstChild) {
          returnNode.appendChild(body.firstChild);
        }
      } else {
        returnNode = body;
      }
      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {
        returnNode = importNode.call(originalDocument, returnNode, true);
      }
      return returnNode;
    }
    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
    if (WHOLE_DOCUMENT && ALLOWED_TAGS["!doctype"] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
      serializedHTML = "<!DOCTYPE " + body.ownerDocument.doctype.name + ">\n" + serializedHTML;
    }
    if (SAFE_FOR_TEMPLATES) {
      arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {
        serializedHTML = stringReplace(serializedHTML, expr, " ");
      });
    }
    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
  };
  DOMPurify.setConfig = function() {
    let cfg = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    _parseConfig(cfg);
    SET_CONFIG = true;
  };
  DOMPurify.clearConfig = function() {
    CONFIG = null;
    SET_CONFIG = false;
  };
  DOMPurify.isValidAttribute = function(tag, attr, value) {
    if (!CONFIG) {
      _parseConfig({});
    }
    const lcTag = transformCaseFunc(tag);
    const lcName = transformCaseFunc(attr);
    return _isValidAttribute(lcTag, lcName, value);
  };
  DOMPurify.addHook = function(entryPoint, hookFunction) {
    if (typeof hookFunction !== "function") {
      return;
    }
    arrayPush(hooks[entryPoint], hookFunction);
  };
  DOMPurify.removeHook = function(entryPoint, hookFunction) {
    if (hookFunction !== void 0) {
      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);
      return index === -1 ? void 0 : arraySplice(hooks[entryPoint], index, 1)[0];
    }
    return arrayPop(hooks[entryPoint]);
  };
  DOMPurify.removeHooks = function(entryPoint) {
    hooks[entryPoint] = [];
  };
  DOMPurify.removeAllHooks = function() {
    hooks = _createHooksMap();
  };
  return DOMPurify;
}
var purify = createDOMPurify();
var MENTION_USER_LABEL_CLASSNAME = "sendbird-mention-user-label";
var TEXT_MESSAGE_BODY_CLASSNAME = "sendbird-text-message-item-body";
var OG_MESSAGE_BODY_CLASSNAME = "sendbird-og-message-item-body__text-bubble";
function renderToString(_a2) {
  var userId = _a2.userId, nickname = _a2.nickname;
  var el = '<span data-userid="'.concat(userId, '" data-sb-mention="true" class="').concat(MENTION_USER_LABEL_CLASSNAME, '">').concat(nickname, "</span>");
  var purifier = purify(window);
  var sanitized_ = purifier.sanitize(el);
  var token = sanitized_.split(" ");
  var spanTag = token[0], rest = token.slice(1);
  var sanitized = __spreadArray([spanTag, 'contenteditable="false"'], rest, true).join(" ");
  return sanitized;
}
var sanitizeString = function(str) {
  if (str === void 0) {
    str = "";
  }
  if (!str)
    return "";
  return str.replace(/[<>]/g, function(char) {
    return char === "<" ? "&#60;" : "&#62;";
  });
};
var nodeListToArray = function(childNodes) {
  return childNodes ? Array.from(childNodes) : [];
};
function isChannelTypeSupportsMultipleFilesMessage(channel) {
  var _a2;
  return channel && ((_a2 = channel.isGroupChannel) === null || _a2 === void 0 ? void 0 : _a2.call(channel)) && !channel.isBroadcast && !channel.isSuper;
}
function isHTMLElement(node) {
  return node.nodeType === NodeTypes.ElementNode;
}
function extractTextAndMentions(childNodes) {
  var messageText = "";
  var mentionTemplate = "";
  childNodes.forEach(function(node) {
    if (isHTMLElement(node) && node.nodeName === NodeNames.Span) {
      var innerText = node.innerText, _a2 = node.dataset, dataset = _a2 === void 0 ? {} : _a2;
      var _b2 = dataset.userid, userid = _b2 === void 0 ? "" : _b2;
      messageText += innerText;
      mentionTemplate += "".concat(USER_MENTION_TEMP_CHAR, "{").concat(userid, "}");
    } else if (isHTMLElement(node) && node.nodeName === NodeNames.Br) {
      messageText += "\n";
      mentionTemplate += "\n";
    } else if (isHTMLElement(node) && node.nodeName === NodeNames.Div) {
      var _c = node.textContent, textContent = _c === void 0 ? "" : _c;
      messageText += "\n".concat(textContent);
      mentionTemplate += "\n".concat(textContent);
    } else {
      var _d = node.textContent, textContent = _d === void 0 ? "" : _d;
      messageText += textContent;
      mentionTemplate += textContent;
    }
  });
  return { messageText, mentionTemplate };
}
function insertTemplateToDOM(templateList) {
  var nodes = templateList.map(function(template) {
    var text2 = template.text, userId = template.userId;
    if (userId) {
      return renderToString({ userId, nickname: text2 });
    }
    return sanitizeString(text2);
  }).join(" ").concat(" ");
  document.execCommand("insertHTML", false, nodes);
}
var MENTION_CLASS = "sendbird-word__mention";
var MENTION_CLASS_IN_INPUT = "sendbird-mention-user-label";
var MENTION_CLASS_COMBINED_QUERY = ".".concat(MENTION_CLASS, ", .").concat(MENTION_CLASS_IN_INPUT);
function querySelectorIncludingSelf(master, selector) {
  var result = __spreadArray([
    master
  ], Array.from(master.querySelectorAll(selector)), true).find(function(el) {
    return el.matches(selector);
  });
  return result;
}
function getLeafNodes(master) {
  var ogMessage = querySelectorIncludingSelf(master, ".".concat(OG_MESSAGE_BODY_CLASSNAME));
  if (ogMessage) {
    return nodeListToArray(ogMessage.childNodes);
  }
  var textMessageBody = querySelectorIncludingSelf(master, ".".concat(TEXT_MESSAGE_BODY_CLASSNAME));
  if (textMessageBody) {
    return nodeListToArray(textMessageBody.childNodes);
  }
  return nodeListToArray(master.childNodes);
}
function hasMention(parent) {
  return (parent === null || parent === void 0 ? void 0 : parent.querySelector(MENTION_CLASS_COMBINED_QUERY)) ? true : false;
}
function domToMessageTemplate(nodeArray) {
  var templates = nodeArray === null || nodeArray === void 0 ? void 0 : nodeArray.reduce(function(accumulator, currentValue) {
    var _a2, _b2;
    var mentionNode;
    var text2 = currentValue === null || currentValue === void 0 ? void 0 : currentValue.innerText;
    if (currentValue instanceof Text) {
      mentionNode = false;
      text2 = (_a2 = currentValue.textContent) !== null && _a2 !== void 0 ? _a2 : "";
    }
    if (currentValue instanceof HTMLElement) {
      mentionNode = currentValue.classList.contains(MENTION_CLASS) || currentValue.classList.contains(MENTION_CLASS_IN_INPUT) ? currentValue : currentValue.querySelector(MENTION_CLASS_COMBINED_QUERY);
    }
    if (mentionNode) {
      var text_1 = currentValue === null || currentValue === void 0 ? void 0 : currentValue.innerText;
      var userId = (_b2 = mentionNode.dataset) === null || _b2 === void 0 ? void 0 : _b2.userid;
      return __spreadArray(__spreadArray([], accumulator, true), [
        {
          text: text_1,
          userId
        }
      ], false);
    }
    return __spreadArray(__spreadArray([], accumulator, true), [
      {
        text: text2
      }
    ], false);
  }, []);
  return templates;
}
function getUsersFromWords(templates, channel) {
  var userMap = {};
  var users = channel.members;
  templates.forEach(function(template) {
    if (template.userId) {
      var mentionedMember = users.find(function(user) {
        return user.userId === template.userId;
      });
      if (mentionedMember) {
        userMap[template.userId] = mentionedMember;
      }
    }
  });
  return Object.values(userMap);
}
function pasteContentAtCaret(content) {
  var selection = window.getSelection();
  if (selection && selection.rangeCount > 0) {
    var range2 = selection.getRangeAt(selection.rangeCount - 1);
    range2.deleteContents();
    var textNode = document.createTextNode(content + "​");
    range2.insertNode(textNode);
    range2.setStart(textNode, textNode.length);
    range2.collapse(true);
    selection.removeAllRanges();
    selection.addRange(range2);
  }
}
function createPasteNodeWithContent(html2) {
  var pasteNode = document.createElement("div");
  pasteNode.innerHTML = html2;
  return pasteNode;
}
function usePaste(_a2) {
  var ref = _a2.ref, setIsInput = _a2.setIsInput, channel = _a2.channel, setMentionedUsers = _a2.setMentionedUsers;
  return useCallback(function(e3) {
    e3.preventDefault();
    var html2 = e3.clipboardData.getData("text/html");
    var text2 = e3.clipboardData.getData("text") || getURIListText(e3);
    if (!html2) {
      pasteContentAtCaret(sanitizeString(text2));
      setIsInput(true);
      return;
    }
    var purifier = purify(window);
    var cleanHtml = purifier.sanitize(html2);
    var pasteNode = createPasteNodeWithContent(cleanHtml);
    if (!hasMention(pasteNode)) {
      pasteContentAtCaret(sanitizeString(text2));
      pasteNode.remove();
      setIsInput(true);
      return;
    }
    var leafNodes = getLeafNodes(pasteNode);
    var words = domToMessageTemplate(leafNodes);
    var mentionedUsers = channel.isGroupChannel() ? getUsersFromWords(words, channel) : [];
    setMentionedUsers(mentionedUsers);
    insertTemplateToDOM(words);
    pasteNode.remove();
    setIsInput(true);
  }, [ref, setIsInput, channel, setMentionedUsers]);
}
function getURIListText(e3) {
  var pasteData = e3.clipboardData.getData("text/uri-list");
  if (pasteData.length === 0)
    return "";
  return pasteData.split("\n").reduce(function(accumulator, line) {
    var txt = line.trim();
    if (txt !== "" && !txt.startsWith("#")) {
      accumulator += txt + "\n";
    }
    return accumulator;
  }, "");
}
var USER_MENTION_PREFIX = "@";
var TOKEN_TYPES = {
  string: "string",
  mention: "mention",
  url: "url",
  undetermined: "undetermined",
  markdown: "markdown"
};
var MarkdownRegex = /\[(.*?)\]\((.*?)\)|\*\*(.*?)\*\*/g;
function getUserMentionRegex(mentionedUsers, templatePrefix_) {
  var templatePrefix = templatePrefix_ || USER_MENTION_PREFIX;
  return RegExp("(".concat(mentionedUsers.map(function(u3) {
    var userId = u3.userId.replace(
      // If user.id includes these patterns, need to convert it into an escaped one
      /([.*+?^${}()|[\]\\])/g,
      "\\$1"
    );
    return "".concat(templatePrefix, "\\{").concat(userId, "\\}");
  }).join("|"), ")"), "g");
}
function identifyMentions(_a2) {
  var tokens = _a2.tokens, _b2 = _a2.mentionedUsers, mentionedUsers = _b2 === void 0 ? [] : _b2, _c = _a2.templatePrefix, templatePrefix = _c === void 0 ? USER_MENTION_PREFIX : _c;
  if (!(mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length)) {
    return tokens;
  }
  var userMentionRegex = getUserMentionRegex(mentionedUsers, templatePrefix);
  var results = tokens.map(function(token) {
    if (token.type !== TOKEN_TYPES.undetermined) {
      return token;
    }
    var value = token.value;
    var parts = value.split(userMentionRegex);
    var tokens2 = parts.map(function(part) {
      if (part.match(userMentionRegex)) {
        var matchedUser = mentionedUsers.find(function(user) {
          return "@{".concat(user === null || user === void 0 ? void 0 : user.userId, "}") === part;
        });
        var nickname = (matchedUser === null || matchedUser === void 0 ? void 0 : matchedUser.nickname) || "(No name)";
        return { value: nickname, type: TOKEN_TYPES.mention, userId: matchedUser === null || matchedUser === void 0 ? void 0 : matchedUser.userId };
      } else {
        return { value: part, type: TOKEN_TYPES.undetermined };
      }
    });
    return tokens2;
  }).flat();
  return results;
}
function identifyUrlsAndStrings(token) {
  var URL_REG = /(?:https?:\/\/|www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.(xn--)?[a-z]{2,20}\b([-a-zA-Z0-9@:%_+[\],.~#?&/=]*[-a-zA-Z0-9@:%_+~#?&/=])*/g;
  var results = token.map(function(token2) {
    if (token2.type !== TOKEN_TYPES.undetermined) {
      return token2;
    }
    var _a2 = token2.value, value = _a2 === void 0 ? "" : _a2;
    var matches = Array.from(value.matchAll(URL_REG));
    var founds = matches.map(function(value2) {
      var _a3;
      var text2 = value2[0];
      var start = (_a3 = value2.index) !== null && _a3 !== void 0 ? _a3 : 0;
      var end = start + text2.length;
      return { text: text2, start, end };
    });
    var items = [{ value, type: TOKEN_TYPES.string }];
    var cursor = 0;
    founds.forEach(function(_a3) {
      var text2 = _a3.text, start = _a3.start, end = _a3.end;
      var restText = items.pop().value;
      var head = restText.slice(0, start - cursor);
      var mid = text2;
      var tail = restText.slice(end - cursor);
      if (head.length > 0)
        items.push({ value: head, type: TOKEN_TYPES.string });
      items.push({ value: mid, type: TOKEN_TYPES.url });
      if (tail.length > 0)
        items.push({ value: tail, type: TOKEN_TYPES.string });
      cursor = end;
    });
    return items;
  }).flat();
  return results;
}
function splitTokensWithMarkdowns(tokens) {
  var prevTokens = tokens;
  var newTokens = [];
  prevTokens.forEach(function(token) {
    if (token.type === TOKEN_TYPES.mention || token.type === TOKEN_TYPES.markdown) {
      newTokens.push(token);
      return;
    }
    var rawStr = token.value;
    var matches = Array.from(rawStr.matchAll(MarkdownRegex));
    var allMatches = matches.map(function(value) {
      var _a2;
      var text2 = value[0];
      var start = (_a2 = value.index) !== null && _a2 !== void 0 ? _a2 : 0;
      var end = start + text2.length;
      return { text: text2, start, end, groups: value.filter(function(val) {
        return typeof val === "string";
      }) };
    });
    var restText = rawStr;
    var cursor = 0;
    allMatches.forEach(function(_a2) {
      var text2 = _a2.text, start = _a2.start, end = _a2.end, groups = _a2.groups;
      var left = {
        type: TOKEN_TYPES.undetermined,
        value: restText.slice(0, start - cursor)
      };
      newTokens.push(left);
      var markdownType;
      if (text2.startsWith("[")) {
        markdownType = "url";
      } else if (text2.startsWith("**")) {
        markdownType = "bold";
      }
      var mid = {
        type: TOKEN_TYPES.markdown,
        markdownType,
        value: text2,
        groups
      };
      newTokens.push(mid);
      restText = rawStr.slice(end);
      cursor = end;
    });
    if (restText) {
      var right = {
        type: TOKEN_TYPES.undetermined,
        value: restText
      };
      newTokens.push(right);
    }
  });
  return newTokens;
}
function combineNearbyStrings(tokens) {
  var results = tokens.reduce(function(acc, token) {
    var lastToken = acc[acc.length - 1];
    if ((lastToken === null || lastToken === void 0 ? void 0 : lastToken.type) === TOKEN_TYPES.string && token.type === TOKEN_TYPES.string) {
      lastToken.value = "".concat(lastToken.value).concat(token.value);
      return acc;
    }
    return __spreadArray(__spreadArray([], acc, true), [token], false);
  }, []);
  return results;
}
function tokenizeMessage(_a2) {
  var messageText = _a2.messageText, _b2 = _a2.mentionedUsers, mentionedUsers = _b2 === void 0 ? [] : _b2, _c = _a2.templatePrefix, templatePrefix = _c === void 0 ? USER_MENTION_PREFIX : _c, _d = _a2.includeMarkdown, includeMarkdown = _d === void 0 ? false : _d;
  var partialResult = [{
    type: TOKEN_TYPES.undetermined,
    value: messageText
  }];
  var partialWithMentions = identifyMentions({
    tokens: partialResult,
    mentionedUsers,
    templatePrefix
  });
  var partialsWithUrlsAndMentions = identifyUrlsAndStrings(includeMarkdown ? splitTokensWithMarkdowns(partialWithMentions) : partialWithMentions);
  var result = combineNearbyStrings(partialsWithUrlsAndMentions);
  return result;
}
function getChannelPreviewMessage(messageText) {
  var partialResult = [{
    type: TOKEN_TYPES.undetermined,
    value: messageText
  }];
  var tokens = splitTokensWithMarkdowns(partialResult);
  return markDownTokenResolver(tokens);
}
function markDownTokenResolver(tokens) {
  var result = tokens.map(function(token) {
    if (token.type === TOKEN_TYPES.markdown) {
      return markDownTokenResolver(tokenizeMarkdown({ messageText: token.groups[1] }));
    }
    return token.value;
  });
  return result.join("");
}
function tokenizeMarkdown(_a2) {
  var messageText = _a2.messageText;
  var partialResult = [{
    type: TOKEN_TYPES.undetermined,
    value: messageText
  }];
  var result = combineNearbyStrings(splitTokensWithMarkdowns(partialResult));
  return result;
}
function getWhiteSpacePreservedText(text2) {
  var NON_BREAKING_SPACE = " ";
  var lines = text2.split("\n");
  var processedLines = lines.map(function(line) {
    var _a2, _b2;
    var leadingWhitespace = ((_a2 = line.match(/^\s*/)) === null || _a2 === void 0 ? void 0 : _a2[0]) || "";
    var trailingWhitespace = ((_b2 = line.match(/\s*$/)) === null || _b2 === void 0 ? void 0 : _b2[0]) || "";
    var convertedLeadingWhitespace = leadingWhitespace.replace(/ /g, NON_BREAKING_SPACE);
    var convertedTrailingWhitespace = trailingWhitespace.replace(/ /g, NON_BREAKING_SPACE);
    return convertedLeadingWhitespace + line.trim() + convertedTrailingWhitespace;
  });
  var result = processedLines.join("\n");
  return result;
}
var ChannelType;
(function(ChannelType2) {
  ChannelType2["BASE"] = "base";
  ChannelType2["GROUP"] = "group";
  ChannelType2["OPEN"] = "open";
})(ChannelType || (ChannelType = {}));
var checkIfFileUploadEnabled = function(_a2) {
  var channel = _a2.channel, config2 = _a2.config;
  var isEnabled = K(channel === null || channel === void 0 ? void 0 : channel.channelType).with(ChannelType.GROUP, function() {
    var _a3;
    return (_a3 = config2 === null || config2 === void 0 ? void 0 : config2.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.enableDocument;
  }).with(ChannelType.OPEN, function() {
    var _a3;
    return (_a3 = config2 === null || config2 === void 0 ? void 0 : config2.openChannel) === null || _a3 === void 0 ? void 0 : _a3.enableDocument;
  }).otherwise(function() {
    return true;
  });
  return isEnabled;
};
var TEXT_FIELD_ID = "sendbird-message-input-text-field";
var noop$3 = function() {
  return null;
};
var resetInput = function(ref) {
  if (ref && ref.current) {
    ref.current.innerHTML = "";
  }
};
var initialTargetStringInfo = {
  targetString: "",
  startNodeIndex: null,
  startOffsetIndex: null,
  endNodeIndex: null,
  endOffsetIndex: null
};
var MessageInput = React__default__default.forwardRef(function(props, externalRef) {
  var _a2, _b2, _c, _d, _e2;
  var channel = props.channel, _f = props.className, className = _f === void 0 ? "" : _f, _g2 = props.messageFieldId, messageFieldId = _g2 === void 0 ? "" : _g2, _h = props.isEdit, isEdit = _h === void 0 ? false : _h, _j = props.isMobile, isMobile = _j === void 0 ? false : _j, _k = props.isMentionEnabled, isMentionEnabled = _k === void 0 ? false : _k, _l = props.isVoiceMessageEnabled, isVoiceMessageEnabled = _l === void 0 ? true : _l, _m = props.isSelectingMultipleFilesEnabled, isSelectingMultipleFilesEnabled = _m === void 0 ? false : _m, _o = props.disabled, disabled = _o === void 0 ? false : _o, _p = props.message, message = _p === void 0 ? null : _p, _q = props.placeholder, placeholder = _q === void 0 ? "" : _q, _r2 = props.maxLength, maxLength = _r2 === void 0 ? 5e3 : _r2, _s2 = props.onFileUpload, onFileUpload = _s2 === void 0 ? noop$3 : _s2, _t2 = props.onSendMessage, onSendMessage = _t2 === void 0 ? noop$3 : _t2, _u = props.onUpdateMessage, onUpdateMessage = _u === void 0 ? noop$3 : _u, _v = props.onCancelEdit, onCancelEdit = _v === void 0 ? noop$3 : _v, _w = props.onStartTyping, onStartTyping = _w === void 0 ? noop$3 : _w, _x = props.channelUrl, channelUrl = _x === void 0 ? "" : _x, _y = props.mentionSelectedUser, mentionSelectedUser = _y === void 0 ? null : _y, _z = props.onUserMentioned, onUserMentioned = _z === void 0 ? noop$3 : _z, _0 = props.onMentionStringChange, onMentionStringChange = _0 === void 0 ? noop$3 : _0, _1 = props.onMentionedUserIdsUpdated, onMentionedUserIdsUpdated = _1 === void 0 ? noop$3 : _1, _2 = props.onVoiceMessageIconClick, onVoiceMessageIconClick = _2 === void 0 ? noop$3 : _2, _3 = props.onKeyUp, onKeyUp = _3 === void 0 ? noop$3 : _3, _4 = props.onKeyDown, onKeyDown = _4 === void 0 ? noop$3 : _4, _5 = props.renderFileUploadIcon, renderFileUploadIcon = _5 === void 0 ? noop$3 : _5, _6 = props.renderVoiceMessageIcon, renderVoiceMessageIcon = _6 === void 0 ? noop$3 : _6, _7 = props.renderSendMessageIcon, renderSendMessageIcon = _7 === void 0 ? noop$3 : _7, _8 = props.setMentionedUsers, setMentionedUsers = _8 === void 0 ? noop$3 : _8, acceptableMimeTypes = props.acceptableMimeTypes;
  var internalRef = externalRef && "current" in externalRef ? externalRef : useRef(null);
  var ghostInputRef = useRef(null);
  var textFieldId = messageFieldId || TEXT_FIELD_ID;
  var stringSet2 = useLocalization().stringSet;
  var _9 = useSendbird().state, config2 = _9.config, eventHandlers = _9.eventHandlers;
  var isFileUploadEnabled = checkIfFileUploadEnabled({
    channel,
    config: config2
  });
  var fileInputRef = useRef();
  var _10 = useState(false), isInput = _10[0], setIsInput = _10[1];
  var _11 = useState([]), mentionedUserIds = _11[0], setMentionedUserIds = _11[1];
  var _12 = useState(__assign({}, initialTargetStringInfo)), targetStringInfo = _12[0], setTargetStringInfo = _12[1];
  var initialValue = props === null || props === void 0 ? void 0 : props.value;
  useEffect(function() {
    var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
    setMentionedUserIds([]);
    setIsInput((textField === null || textField === void 0 ? void 0 : textField.textContent) ? textField.textContent.trim().length > 0 : false);
  }, [initialValue]);
  useEffect(function() {
    if (!isEdit) {
      setIsInput(false);
      resetInput(internalRef);
    }
  }, [channelUrl]);
  useEffect(function() {
    var _a3, _b3;
    if (isEdit && (message === null || message === void 0 ? void 0 : message.messageId)) {
      var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      if (isMentionEnabled && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && message.mentionedUsers.length > 0 && (message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) && message.mentionedMessageTemplate.length > 0) {
        var _c2 = message.mentionedUsers, mentionedUsers_1 = _c2 === void 0 ? [] : _c2;
        var tokens = tokenizeMessage({
          messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,
          mentionedUsers: mentionedUsers_1,
          includeMarkdown: channel.isGroupChannel() && config2.groupChannel.enableMarkdownForUserMessage
        });
        if (textField) {
          textField.innerHTML = tokens.map(function(token) {
            if (token.type === TOKEN_TYPES.mention) {
              var mentionedUser = mentionedUsers_1.find(function(user) {
                return user.userId === token.userId;
              });
              var nickname = "".concat(USER_MENTION_PREFIX).concat((mentionedUser === null || mentionedUser === void 0 ? void 0 : mentionedUser.nickname) || token.value || stringSet2.MENTION_NAME__NO_NAME);
              return renderToString({
                userId: token.userId,
                nickname
              });
            }
            return sanitizeString(token.value);
          }).join("");
        }
      } else {
        try {
          if (textField) {
            textField.innerHTML = (_a3 = sanitizeString(message === null || message === void 0 ? void 0 : message.message)) !== null && _a3 !== void 0 ? _a3 : "";
          }
        } catch (_d2) {
        }
        setMentionedUserIds([]);
      }
      setIsInput((textField === null || textField === void 0 ? void 0 : textField.textContent) ? ((_b3 = textField === null || textField === void 0 ? void 0 : textField.textContent) === null || _b3 === void 0 ? void 0 : _b3.trim().length) > 0 : false);
    }
  }, [isEdit, message]);
  var useMentionedLabelDetection = useCallback(function() {
    var _a3;
    var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
    if (isMentionEnabled && textField) {
      var newMentionedUserIds = Array.from(textField.getElementsByClassName("sendbird-mention-user-label")).map(
        // @ts-ignore
        function(node) {
          var _a4;
          return (_a4 = node === null || node === void 0 ? void 0 : node.dataset) === null || _a4 === void 0 ? void 0 : _a4.userid;
        }
      );
      if (!arrayEqual(mentionedUserIds, newMentionedUserIds) || newMentionedUserIds.length === 0) {
        onMentionedUserIdsUpdated(newMentionedUserIds);
        setMentionedUserIds(newMentionedUserIds);
      }
    }
    setIsInput((textField === null || textField === void 0 ? void 0 : textField.textContent) ? ((_a3 = textField.textContent) === null || _a3 === void 0 ? void 0 : _a3.trim().length) > 0 : false);
  }, [targetStringInfo, isMentionEnabled]);
  useEffect(function() {
    var _a3, _b3, _c2, _d2;
    if (isMentionEnabled && mentionSelectedUser) {
      var targetString = targetStringInfo.targetString, startNodeIndex = targetStringInfo.startNodeIndex, startOffsetIndex = targetStringInfo.startOffsetIndex, endNodeIndex = targetStringInfo.endNodeIndex, endOffsetIndex = targetStringInfo.endOffsetIndex;
      var textField_1 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      if (targetString && startNodeIndex !== null && startOffsetIndex !== null && endOffsetIndex !== null && endNodeIndex !== null && textField_1) {
        var childNodes = nodeListToArray(textField_1 === null || textField_1 === void 0 ? void 0 : textField_1.childNodes);
        var startNodeTextContent = (_b3 = (_a3 = childNodes[startNodeIndex]) === null || _a3 === void 0 ? void 0 : _a3.textContent) !== null && _b3 !== void 0 ? _b3 : "";
        var frontTextNode = document.createTextNode(startNodeTextContent.slice(0, startOffsetIndex));
        var endNodeTextContent = (_d2 = (_c2 = childNodes[endNodeIndex]) === null || _c2 === void 0 ? void 0 : _c2.textContent) !== null && _d2 !== void 0 ? _d2 : "";
        var backTextNode = endOffsetIndex && document.createTextNode(" ".concat(endNodeTextContent.slice(endOffsetIndex)));
        var mentionLabel = renderToString({
          userId: mentionSelectedUser === null || mentionSelectedUser === void 0 ? void 0 : mentionSelectedUser.userId,
          nickname: "".concat(USER_MENTION_TEMP_CHAR).concat((mentionSelectedUser === null || mentionSelectedUser === void 0 ? void 0 : mentionSelectedUser.nickname) || stringSet2.MENTION_NAME__NO_NAME)
        });
        var div = document.createElement("div");
        div.innerHTML = mentionLabel;
        var newNodes = __spreadArray(__spreadArray(__spreadArray([], childNodes.slice(0, startNodeIndex), true), [
          frontTextNode,
          div.childNodes[0],
          backTextNode
        ], false), childNodes.slice(endNodeIndex + 1), true);
        if (textField_1) {
          textField_1.innerHTML = "";
          newNodes.forEach(function(newNode) {
            if (newNode) {
              textField_1.appendChild(newNode);
            }
          });
        }
        onUserMentioned(mentionSelectedUser);
        if (window.getSelection || document.getSelection) {
          var selection = window.getSelection() || document.getSelection();
          selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();
          var range2 = new Range();
          range2.selectNodeContents(textField_1);
          range2.setStart(textField_1.childNodes[startNodeIndex + 2], 1);
          range2.setEnd(textField_1.childNodes[startNodeIndex + 2], 1);
          range2.collapse(false);
          selection === null || selection === void 0 ? void 0 : selection.addRange(range2);
          textField_1.focus();
        }
        setTargetStringInfo(__assign({}, initialTargetStringInfo));
        useMentionedLabelDetection();
      }
    }
  }, [mentionSelectedUser, isMentionEnabled]);
  var useMentionInputDetection = useCallback(function() {
    var _a3, _b3;
    var selection = ((_a3 = window === null || window === void 0 ? void 0 : window.getSelection) === null || _a3 === void 0 ? void 0 : _a3.call(window)) || ((_b3 = document === null || document === void 0 ? void 0 : document.getSelection) === null || _b3 === void 0 ? void 0 : _b3.call(document));
    var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
    if ((selection === null || selection === void 0 ? void 0 : selection.anchorNode) === textField) {
      onMentionStringChange("");
    }
    if (isMentionEnabled && textField && selection && selection.anchorNode === selection.focusNode && selection.anchorOffset === selection.focusOffset) {
      var textStack = "";
      var startNodeIndex = null;
      var startOffsetIndex = null;
      var _loop_1 = function(index2) {
        var currentNode = textField.childNodes[index2];
        if (currentNode.nodeType === NodeTypes.TextNode) {
          var textContent = function() {
            var _a4;
            if (currentNode === selection.anchorNode) {
              return (currentNode === null || currentNode === void 0 ? void 0 : currentNode.textContent) ? currentNode === null || currentNode === void 0 ? void 0 : currentNode.textContent.slice(0, selection.anchorOffset) : "";
            }
            return (_a4 = currentNode === null || currentNode === void 0 ? void 0 : currentNode.textContent) !== null && _a4 !== void 0 ? _a4 : "";
          }();
          if (textStack.length > 0) {
            textStack += textContent;
          } else {
            var charLastIndex = textContent.lastIndexOf(USER_MENTION_TEMP_CHAR);
            for (var i3 = charLastIndex - 1; i3 > -1; i3 -= 1) {
              if (textContent[i3] === USER_MENTION_TEMP_CHAR) {
                charLastIndex = i3;
              } else {
                break;
              }
            }
            if (charLastIndex > -1) {
              textStack = textContent;
              startNodeIndex = index2;
              startOffsetIndex = charLastIndex;
            }
          }
        } else {
          textStack = "";
          startNodeIndex = null;
          startOffsetIndex = null;
        }
        if (currentNode === selection.anchorNode) {
          var targetString = textStack && startOffsetIndex !== null ? textStack.slice(startOffsetIndex) : "";
          setTargetStringInfo({
            targetString,
            startNodeIndex,
            startOffsetIndex,
            endNodeIndex: index2,
            endOffsetIndex: selection.anchorOffset
          });
          onMentionStringChange(targetString);
          return { value: void 0 };
        }
      };
      for (var index = 0; index < textField.childNodes.length; index += 1) {
        var state_1 = _loop_1(index);
        if (typeof state_1 === "object")
          return state_1.value;
      }
    }
  }, [isMentionEnabled]);
  var sendMessage = function() {
    var _a3, _b3;
    try {
      var textField_2 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      if (!isEdit && (textField_2 === null || textField_2 === void 0 ? void 0 : textField_2.textContent)) {
        var _c2 = extractTextAndMentions(textField_2.childNodes), messageText = _c2.messageText, mentionTemplate = _c2.mentionTemplate;
        var params = { message: messageText, mentionTemplate };
        onSendMessage(params);
        resetInput(internalRef);
        if (isMobileIOS(navigator.userAgent)) {
          if (ghostInputRef.current)
            ghostInputRef.current.focus();
          requestAnimationFrame(function() {
            return textField_2.focus();
          });
        } else {
          textField_2.focus();
        }
        setIsInput(false);
      }
    } catch (error) {
      (_b3 = (_a3 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.message) === null || _a3 === void 0 ? void 0 : _a3.onSendMessageFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, message, error);
    }
  };
  var isEditDisabled = !((_b2 = (_a2 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _a2 === void 0 ? void 0 : _a2.textContent) === null || _b2 === void 0 ? void 0 : _b2.trim());
  var editMessage = function() {
    var _a3, _b3;
    try {
      var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      var messageId = message === null || message === void 0 ? void 0 : message.messageId;
      if (isEdit && messageId && textField) {
        var _c2 = extractTextAndMentions(textField.childNodes), messageText = _c2.messageText, mentionTemplate = _c2.mentionTemplate;
        var params = { messageId, message: messageText, mentionTemplate };
        onUpdateMessage(params);
        resetInput(internalRef);
      }
    } catch (error) {
      (_b3 = (_a3 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.message) === null || _a3 === void 0 ? void 0 : _a3.onUpdateMessageFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, message, error);
    }
  };
  var onPaste = usePaste({
    ref: internalRef,
    setMentionedUsers,
    channel,
    setIsInput
  });
  var uploadFile = function(event) {
    var _a3, _b3;
    var files = event.currentTarget.files;
    try {
      if (files) {
        onFileUpload(Array.from(files));
      }
    } catch (error) {
      (_b3 = (_a3 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.message) === null || _a3 === void 0 ? void 0 : _a3.onFileUploadFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, error);
    } finally {
      event.target.value = "";
    }
  };
  var adjustScrollToCaret = function() {
    var _a3;
    var inputRef = internalRef;
    var selection = window.getSelection();
    if (!selection || selection.rangeCount === 0)
      return;
    var range2 = selection.getRangeAt(selection.rangeCount - 1);
    var rect = range2.getBoundingClientRect();
    var container = (_a3 = inputRef.current) === null || _a3 === void 0 ? void 0 : _a3.getBoundingClientRect();
    if (!container || !inputRef.current)
      return;
    if (rect.bottom > container.bottom) {
      var scrollAmount = Math.min(
        rect.bottom - container.bottom,
        // Calculate how much we need to scroll
        inputRef.current.scrollHeight - inputRef.current.clientHeight
      );
      inputRef.current.scrollTop += scrollAmount;
    } else if (rect.top < container.top) {
      var scrollAmount = Math.min(
        container.top - rect.top,
        // Calculate how much we need to scroll
        inputRef.current.scrollTop
      );
      inputRef.current.scrollTop -= scrollAmount;
    }
  };
  return React__default__default.createElement(
    "form",
    { className: classnames.apply(void 0, __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], false), [
      isEdit && "sendbird-message-input__edit",
      disabled && "sendbird-message-input-form__disabled"
    ], false)) },
    React__default__default.createElement(
      "div",
      { className: classnames("sendbird-message-input", disabled && "sendbird-message-input__disabled"), "data-testid": "sendbird-message-input" },
      isMobileIOS(navigator.userAgent) && React__default__default.createElement("input", { id: "ghost-input-reset-ime-cjk", ref: ghostInputRef, style: { opacity: 0, padding: 0, margin: 0, height: 0, border: "none", position: "absolute", top: -9999 }, defaultValue: "_" }),
      React__default__default.createElement("div", {
        id: "".concat(textFieldId).concat(isEdit ? message === null || message === void 0 ? void 0 : message.messageId : ""),
        className: "sendbird-message-input--textarea ".concat(textFieldId),
        contentEditable: !disabled,
        role: "textbox",
        "aria-label": "Text Input",
        ref: internalRef,
        // @ts-ignore
        disabled,
        maxLength,
        onKeyDown: function(e3) {
          var _a3, _b3, _c2, _d2;
          var preventEvent = onKeyDown(e3);
          if (preventEvent) {
            e3.preventDefault();
          } else {
            if (!e3.shiftKey && e3.key === MessageInputKeys.Enter && !isMobile && ((_a3 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _a3 === void 0 ? void 0 : _a3.textContent) && internalRef.current.textContent.trim().length > 0 && ((_b3 = e3 === null || e3 === void 0 ? void 0 : e3.nativeEvent) === null || _b3 === void 0 ? void 0 : _b3.isComposing) !== true) {
              e3.preventDefault();
              sendMessage();
            }
            if (e3.key === MessageInputKeys.Backspace && ((_d2 = (_c2 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _c2 === void 0 ? void 0 : _c2.childNodes) === null || _d2 === void 0 ? void 0 : _d2.length) === 2 && !internalRef.current.childNodes[0].textContent && internalRef.current.childNodes[1].nodeType === NodeTypes.ElementNode) {
              internalRef.current.removeChild(internalRef.current.childNodes[1]);
            }
          }
        },
        onKeyUp: function(e3) {
          var preventEvent = onKeyUp(e3);
          if (preventEvent) {
            e3.preventDefault();
          } else {
            useMentionInputDetection();
          }
        },
        onClick: function() {
          useMentionInputDetection();
        },
        onInput: function() {
          var _a3;
          onStartTyping();
          setIsInput(((_a3 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _a3 === void 0 ? void 0 : _a3.textContent) ? internalRef.current.textContent.trim().length > 0 : false);
          useMentionedLabelDetection();
        },
        onPaste: function(e3) {
          onPaste(e3);
          setTimeout(adjustScrollToCaret);
        }
      }),
      ((_e2 = (_d = (_c = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _c === void 0 ? void 0 : _c.textContent) === null || _d === void 0 ? void 0 : _d.length) !== null && _e2 !== void 0 ? _e2 : 0) === 0 && React__default__default.createElement(Label, { className: "sendbird-message-input--placeholder", type: LabelTypography.BODY_1, color: disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_3 }, placeholder || stringSet2.MESSAGE_INPUT__PLACE_HOLDER),
      !isEdit && isInput && React__default__default.createElement(IconButton$1, { className: "sendbird-message-input--send", height: "32px", width: "32px", onClick: function() {
        return sendMessage();
      }, testID: "sendbird-message-input-send-button" }, (renderSendMessageIcon === null || renderSendMessageIcon === void 0 ? void 0 : renderSendMessageIcon()) || React__default__default.createElement(Icon$1, { type: IconTypes.SEND, fillColor: disabled ? IconColors.ON_BACKGROUND_4 : IconColors.PRIMARY, width: "20px", height: "20px" })),
      !isEdit && !isInput && ((renderFileUploadIcon === null || renderFileUploadIcon === void 0 ? void 0 : renderFileUploadIcon()) || isFileUploadEnabled && React__default__default.createElement(
        IconButton$1,
        { className: classnames("sendbird-message-input--attach", isVoiceMessageEnabled && "is-voice-message-enabled"), height: "32px", width: "32px", onClick: function() {
          var _a3, _b3;
          (_b3 = (_a3 = fileInputRef === null || fileInputRef === void 0 ? void 0 : fileInputRef.current) === null || _a3 === void 0 ? void 0 : _a3.click) === null || _b3 === void 0 ? void 0 : _b3.call(_a3);
        } },
        React__default__default.createElement(Icon$1, { type: IconTypes.ATTACH, fillColor: disabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT_INVERSE, width: "20px", height: "20px" }),
        React__default__default.createElement("input", {
          className: "sendbird-message-input--attach-input",
          type: "file",
          ref: fileInputRef,
          // It will affect to <Channel /> and <Thread />
          onChange: function(event) {
            return uploadFile(event);
          },
          accept: getMimeTypesUIKitAccepts(acceptableMimeTypes),
          multiple: isSelectingMultipleFilesEnabled && isChannelTypeSupportsMultipleFilesMessage(channel)
        })
      )),
      isVoiceMessageEnabled && !isEdit && !isInput && React__default__default.createElement(IconButton$1, { className: "sendbird-message-input--voice-message", width: "32px", height: "32px", onClick: onVoiceMessageIconClick }, (renderVoiceMessageIcon === null || renderVoiceMessageIcon === void 0 ? void 0 : renderVoiceMessageIcon()) || React__default__default.createElement(Icon$1, { type: IconTypes.AUDIO_ON_LINED, fillColor: disabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT_INVERSE, width: "20px", height: "20px" }))
    ),
    isEdit && React__default__default.createElement(
      "div",
      { className: "sendbird-message-input--edit-action", "data-testid": "sendbird-message-input--edit-action" },
      React__default__default.createElement(Button, { className: "sendbird-message-input--edit-action__cancel", type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: onCancelEdit }, stringSet2.BUTTON__CANCEL),
      React__default__default.createElement(Button, { className: "sendbird-message-input--edit-action__save", type: ButtonTypes.PRIMARY, size: ButtonSizes.SMALL, disabled: isEditDisabled, onClick: function() {
        return editMessage();
      } }, stringSet2.BUTTON__SAVE)
    )
  );
});
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}
function isToday(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameDay(dirtyDate, Date.now());
}
function isSameYear(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}
function isThisYear(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameYear(dirtyDate, Date.now());
}
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return /* @__PURE__ */ new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}
function subDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}
function isYesterday(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameDay(dirtyDate, subDays(Date.now(), 1));
}
var getChannelTitle = function(channel, currentUserId, stringSet2) {
  var _a2;
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  if (!(channel === null || channel === void 0 ? void 0 : channel.name) && !(channel === null || channel === void 0 ? void 0 : channel.members)) {
    return stringSet2.NO_TITLE;
  }
  if (!isDefaultChannelName(channel)) {
    return channel.name;
  }
  if (((_a2 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a2 === void 0 ? void 0 : _a2.length) === 1) {
    return stringSet2.NO_MEMBERS;
  }
  return ((channel === null || channel === void 0 ? void 0 : channel.members) || []).filter(function(_a3) {
    var userId = _a3.userId;
    return userId !== currentUserId;
  }).map(function(_a3) {
    var nickname = _a3.nickname;
    return nickname || stringSet2.NO_NAME;
  }).join(", ");
};
var getLastMessageCreatedAt = function(_a2) {
  var _b2;
  var channel = _a2.channel, locale2 = _a2.locale, _c = _a2.stringSet, stringSet2 = _c === void 0 ? LabelStringSet : _c;
  var createdAt = (_b2 = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b2 === void 0 ? void 0 : _b2.createdAt;
  var optionalParam = locale2 ? { locale: locale2 } : null;
  if (!createdAt) {
    return "";
  }
  if (isToday(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__TODAY, optionalParam);
  }
  if (isYesterday(createdAt)) {
    return stringSet2.MESSAGE_STATUS__YESTERDAY || "Yesterday";
  }
  if (isThisYear(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__THIS_YEAR, optionalParam);
  }
  return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__PREVIOUS_YEAR, optionalParam);
};
var getTotalMembers = function(channel) {
  return (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? channel.memberCount : 0;
};
var getChannelPreviewFileDisplayString = function(mimeType, stringSet2) {
  var _a2, _b2, _c, _d, _e2, _f;
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  if (isGif$1(mimeType)) {
    return (_a2 = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GIF) !== null && _a2 !== void 0 ? _a2 : "";
  }
  if (isImage(mimeType)) {
    return (_b2 = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO) !== null && _b2 !== void 0 ? _b2 : "";
  }
  if (isVideo(mimeType)) {
    return (_c = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VIDEO) !== null && _c !== void 0 ? _c : "";
  }
  if (isAudio(mimeType)) {
    return (_d = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_AUDIO) !== null && _d !== void 0 ? _d : "";
  }
  if (isVoiceMessageMimeType(mimeType)) {
    return (_e2 = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VOICE_MESSAGE) !== null && _e2 !== void 0 ? _e2 : "";
  }
  return (_f = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GENERAL) !== null && _f !== void 0 ? _f : "";
};
var getPrettyLastMessage = function(message, stringSet2) {
  var _a2, _b2, _c, _d;
  if (message === void 0) {
    message = null;
  }
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  if (!message)
    return "";
  if (isTemplateMessage(message)) {
    return stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_TEMPLATE_MESSAGE;
  }
  if (message.isFileMessage()) {
    return getChannelPreviewFileDisplayString(message.type, stringSet2);
  }
  if (message.isMultipleFilesMessage()) {
    var mimeType = (_b2 = (_a2 = message.fileInfoList) === null || _a2 === void 0 ? void 0 : _a2[0]) === null || _b2 === void 0 ? void 0 : _b2.mimeType;
    if (isImage(mimeType) || isGif$1(mimeType)) {
      return (_c = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO) !== null && _c !== void 0 ? _c : "";
    }
    return getChannelPreviewFileDisplayString(mimeType, stringSet2);
  }
  return (_d = message.message) !== null && _d !== void 0 ? _d : "";
};
var getLastMessageText = function(channel, stringSet2) {
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  return (channel === null || channel === void 0 ? void 0 : channel.lastMessage) ? getPrettyLastMessage(channel === null || channel === void 0 ? void 0 : channel.lastMessage, stringSet2) : "";
};
var getChannelUnreadMessageCount = function(channel) {
  return (channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) ? channel.unreadMessageCount : 0;
};
var _a, _b;
var iconType = (_a = {}, _a[OutgoingMessageStates.SENT] = IconTypes.DONE, _a[OutgoingMessageStates.DELIVERED] = IconTypes.DONE_ALL, _a[OutgoingMessageStates.READ] = IconTypes.DONE_ALL, _a[OutgoingMessageStates.FAILED] = IconTypes.ERROR, _a[OutgoingMessageStates.PENDING] = void 0, _a[OutgoingMessageStates.NONE] = void 0, _a);
var iconColor = (_b = {}, _b[OutgoingMessageStates.SENT] = IconColors.SENT, _b[OutgoingMessageStates.DELIVERED] = IconColors.SENT, _b[OutgoingMessageStates.READ] = IconColors.READ, _b[OutgoingMessageStates.FAILED] = IconColors.ERROR, _b[OutgoingMessageStates.PENDING] = void 0, _b[OutgoingMessageStates.NONE] = void 0, _b);
function MessageStatus(_a2) {
  var _b2;
  var className = _a2.className, message = _a2.message, channel = _a2.channel, _c = _a2.isDateSeparatorConsidered, isDateSeparatorConsidered = _c === void 0 ? true : _c;
  var _d = useLocalization(), stringSet2 = _d.stringSet, dateLocale = _d.dateLocale;
  var status = getOutgoingMessageState(channel, message);
  var hideMessageStatusIcon = ((_b2 = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _b2 === void 0 ? void 0 : _b2.call(channel)) && ((channel.isSuper || channel.isPublic || channel.isBroadcast) && !(status === OutgoingMessageStates.PENDING || status === OutgoingMessageStates.FAILED));
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-message-status"
    ], false).join(" ") },
    status === OutgoingMessageStates.PENDING ? React__default__default.createElement(
      Loader,
      { className: "sendbird-message-status__icon", testID: "sendbird-message-status-icon", width: "16px", height: "16px" },
      React__default__default.createElement(Icon$1, { type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
    ) : React__default__default.createElement(Icon$1, { className: classnames("sendbird-message-status__icon", hideMessageStatusIcon && "hide-icon", status !== OutgoingMessageStates.FAILED && "sendbird-message-status--sent"), testID: "sendbird-message-status-icon", type: iconType[status] || IconTypes.ERROR, fillColor: iconColor[status], width: "16px", height: "16px" }),
    isSentStatus(status) && React__default__default.createElement(Label, { className: "sendbird-message-status__text", testID: "sendbird-message-status-text", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, isDateSeparatorConsidered ? format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, { locale: dateLocale }) : getLastMessageCreatedAt({ channel, locale: dateLocale, stringSet: stringSet2 }))
  );
}
var componentClassName = "sendbird-sort-by-row";
function SortByRow(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, maxItemCount = _a2.maxItemCount, itemWidth = _a2.itemWidth, itemHeight = _a2.itemHeight, children = _a2.children;
  if (Array.isArray(children) && children.length > maxItemCount) {
    var result = [];
    for (var i3 = 0; i3 < children.length; i3 += maxItemCount) {
      result.push(React__default__default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        componentClassName
      ], false).join(" "), key: uuidv4(), style: {
        width: itemWidth * maxItemCount,
        height: itemHeight
      } }, children.slice(i3, i3 + maxItemCount)));
    }
    return React__default__default.createElement(React__default__default.Fragment, null, result);
  }
  return React__default__default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    componentClassName
  ], false).join(" "), style: {
    width: itemWidth * (Array.isArray(children) ? children.length : 1),
    height: itemHeight
  } }, children);
}
var APP_LAYOUT_ROOT = "sendbird-app__layout";
var HEIGHT_PADDING = 60;
var MenuItems$1 = (
  /** @class */
  function(_super) {
    __extends(MenuItems2, _super);
    function MenuItems2(props) {
      var _this = _super.call(this, props) || this;
      _this.menuRef = React__default__default.createRef();
      _this.setupEvents = function() {
        var closeDropdown = _this.props.closeDropdown;
        var menuRef = _this.menuRef;
        var handleClickOutside = function(event) {
          var _a2, _b2;
          if ((menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) && !((_b2 = (_a2 = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, event.target))) {
            closeDropdown === null || closeDropdown === void 0 ? void 0 : closeDropdown();
          }
        };
        _this.setState({
          handleClickOutside
        });
        document.addEventListener("mousedown", handleClickOutside);
      };
      _this.cleanUpEvents = function() {
        var handleClickOutside = _this.state.handleClickOutside;
        document.removeEventListener("mousedown", handleClickOutside);
      };
      _this.getMenuPosition = function() {
        var _a2, _b2, _c;
        var _d = _this.props, parentRef = _d.parentRef, openLeft = _d.openLeft;
        var portalElement = document.getElementById(APP_LAYOUT_ROOT);
        var portalRect = ((_a2 = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a2 === void 0 ? void 0 : _a2.call(portalElement)) || {
          top: 0,
          left: 0,
          width: window.innerWidth,
          height: window.innerHeight
        };
        var parentRect = (_c = (_b2 = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b2 === void 0 ? void 0 : _b2.getBoundingClientRect) === null || _c === void 0 ? void 0 : _c.call(_b2);
        var x3 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;
        var y4 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;
        var menuStyle = {
          top: y4,
          left: x3
        };
        if (!_this.menuRef.current)
          return menuStyle;
        var rect = _this.menuRef.current.getBoundingClientRect();
        if (y4 + rect.height + HEIGHT_PADDING > portalRect.height) {
          menuStyle.top -= rect.height;
        }
        if (x3 + rect.width > portalRect.width && !openLeft) {
          menuStyle.left -= rect.width;
        }
        if (menuStyle.top < 0) {
          menuStyle.top = rect.height < portalRect.height ? (portalRect.height - rect.height) / 2 : 0;
        }
        menuStyle.top += 32;
        if (openLeft) {
          var padding = Number.isNaN(rect.width - 30) ? 108 : rect.width - 30;
          menuStyle.left -= padding;
        }
        if (menuStyle.left < 0) {
          menuStyle.left = rect.width < portalRect.width ? (portalRect.width - rect.width) / 2 : 0;
        }
        _this.setState({ menuStyle });
        return menuStyle;
      };
      _this.state = {
        menuStyle: { top: 0, left: 0 },
        handleClickOutside: function() {
        }
      };
      return _this;
    }
    MenuItems2.prototype.componentDidMount = function() {
      this.setupEvents();
      this.getMenuPosition();
    };
    MenuItems2.prototype.componentWillUnmount = function() {
      this.cleanUpEvents();
    };
    MenuItems2.prototype.render = function() {
      var portalElement = document.getElementById(MENU_ROOT_ID);
      if (!portalElement)
        return React__default__default.createElement(React__default__default.Fragment, null);
      var menuStyle = this.state.menuStyle;
      var _a2 = this.props, children = _a2.children, style = _a2.style, _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, testID = _a2.testID, id2 = _a2.id;
      return createPortal(React__default__default.createElement(
        "div",
        { className: classnames(MENU_OBSERVING_CLASS_NAME, className), "data-testid": testID, id: id2 },
        React__default__default.createElement("div", { className: "sendbird-dropdown__menu-backdrop" }),
        React__default__default.createElement("ul", { className: "".concat(className, " sendbird-dropdown__menu"), ref: this.menuRef, style: __assign({ display: "inline-block", position: "fixed", left: "".concat(Math.round(menuStyle.left), "px"), top: "".concat(Math.round(menuStyle.top), "px") }, style), "data-testid": "sendbird-dropdown-menu" }, children)
      ), portalElement);
    };
    return MenuItems2;
  }(React__default__default.Component)
);
var defaultParentRect = { x: 0, y: 0, left: 0, top: 0, height: 0 };
var EmojiListItems$1 = function(_a2) {
  var id2 = _a2.id, children = _a2.children, parentRef = _a2.parentRef, parentContainRef = _a2.parentContainRef, _b2 = _a2.spaceFromTrigger, spaceFromTrigger = _b2 === void 0 ? { x: 0, y: 0 } : _b2, closeDropdown = _a2.closeDropdown;
  var _c = useState({ left: 0, top: 0 }), reactionStyle = _c[0], setReactionStyle = _c[1];
  var reactionRef = useRef(null);
  useEffect(function() {
    if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {
      parentContainRef.current.classList.add("sendbird-reactions--pressed");
    }
    return function() {
      if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {
        parentContainRef.current.classList.remove("sendbird-reactions--pressed");
      }
    };
  }, []);
  useEffect(function() {
    var handleClickOutSide = function(event) {
      var _a3, _b3;
      if ((reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) && !((_b3 = (_a3 = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _a3 === void 0 ? void 0 : _a3.contains) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, event.target))) {
        closeDropdown();
      }
    };
    document.addEventListener("mousedown", handleClickOutSide);
    return function() {
      document.removeEventListener("mousedown", handleClickOutSide);
    };
  }, []);
  useEffect(function() {
    var _a3, _b3, _c2, _d;
    var spaceFromTriggerX = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.x) || 0;
    var spaceFromTriggerY = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.y) || 0;
    var portalElement = document.getElementById(APP_LAYOUT_ROOT);
    var portalRect = ((_a3 = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a3 === void 0 ? void 0 : _a3.call(portalElement)) || {
      top: 0,
      left: 0,
      width: window.innerWidth
    };
    var parentRect = (_c2 = (_b3 = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b3 === void 0 ? void 0 : _b3.getBoundingClientRect()) !== null && _c2 !== void 0 ? _c2 : defaultParentRect;
    var x3 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;
    var y4 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;
    var reactionStyle2 = {
      top: y4,
      left: x3
    };
    if (!(reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current)) {
      setReactionStyle(reactionStyle2);
    } else {
      var rect = (_d = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _d === void 0 ? void 0 : _d.getBoundingClientRect();
      if (reactionStyle2.top < rect.height) {
        reactionStyle2.top += parentRect.height;
        reactionStyle2.top += spaceFromTriggerY;
      } else {
        reactionStyle2.top -= rect.height;
        reactionStyle2.top -= spaceFromTriggerY;
      }
      reactionStyle2.left -= rect.width / 2;
      reactionStyle2.left += parentRect.height / 2 - 2;
      reactionStyle2.left += spaceFromTriggerX;
      var maximumLeft = portalRect.width - rect.width;
      if (maximumLeft < reactionStyle2.left) {
        reactionStyle2.left = maximumLeft;
      }
      if (reactionStyle2.left < 0) {
        reactionStyle2.left = 0;
      }
      setReactionStyle(reactionStyle2);
    }
  }, []);
  var rootElement = document.getElementById(EMOJI_MENU_ROOT_ID);
  if (rootElement) {
    return createPortal(React__default__default.createElement(
      "div",
      { className: MENU_OBSERVING_CLASS_NAME, id: id2 },
      React__default__default.createElement("div", { className: "sendbird-dropdown__menu-backdrop" }),
      React__default__default.createElement(
        "ul",
        { className: "sendbird-dropdown__reaction-bar", "data-testid": "sendbird-dropdown__reaction-bar", ref: reactionRef, style: {
          display: "inline-block",
          position: "fixed",
          left: "".concat(Math.round(reactionStyle.left), "px"),
          top: "".concat(Math.round(reactionStyle.top), "px")
        } },
        React__default__default.createElement(SortByRow, { className: "sendbird-dropdown__reaction-bar__row", maxItemCount: 8, itemWidth: 44, itemHeight: 40 }, children)
      )
    ), rootElement);
  }
  return null;
};
var MessageMenuContext = createContext(void 0);
var MessageMenuProvider = function(_a2) {
  var children = _a2.children, value = _a2.value;
  return React__default__default.createElement(MessageMenuContext.Provider, { value }, children);
};
var useMessageMenuContext = function() {
  var context = useContext(MessageMenuContext);
  if (!context) {
    throw new Error("useMessageMenuContext must be used within a MessageMenuProvider.");
  }
  return context;
};
var MenuItem$1 = function(_a2) {
  var className = _a2.className, disabled = _a2.disabled, _b2 = _a2.tabIndex, tabIndex = _b2 === void 0 ? 0 : _b2, testID = _a2.testID, onClick = _a2.onClick, children = _a2.children;
  var handleClickEvent = function(e3) {
    if (!disabled && onClick) {
      onClick(e3);
    }
  };
  return React__default__default.createElement(
    "li",
    { className: classnames("sendbird-menu-item", className), role: "menuitem", "aria-disabled": disabled, "data-testid": testID, tabIndex, onClick: handleClickEvent, onKeyDown: function(e3) {
      if (e3.code === "Enter")
        handleClickEvent(e3);
    } },
    React__default__default.createElement(Label, { className: "sendbird-menu-item__text", type: LabelTypography.SUBTITLE_2, color: disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, children)
  );
};
var BottomSheetMenuItem = function(_a2) {
  var className = _a2.className, _b2 = _a2.disabled, disabled = _b2 === void 0 ? false : _b2, _c = _a2.tabIndex, tabIndex = _c === void 0 ? 0 : _c, testID = _a2.testID, onClick = _a2.onClick, children = _a2.children;
  return React__default__default.createElement("div", { className: classnames("sendbird-message__bottomsheet--action", className), role: "menuitem", tabIndex, "aria-disabled": disabled, onClick, "data-testid": testID }, children);
};
var MENU_OBSERVING_CLASS_NAME = "sendbird-observing-message-menu";
var getObservingId = function(txt) {
  return "m_".concat(txt);
};
var MenuItems = MenuItems$1;
var EmojiListItems = EmojiListItems$1;
var MenuItem = function(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, children = _a2.children, onClick = _a2.onClick, _c = _a2.disable, disable = _c === void 0 ? false : _c, _d = _a2.dataSbId, dataSbId = _d === void 0 ? "" : _d, testID = _a2.testID;
  return React__default__default.createElement(MenuItem$1, { className: classnames.apply(void 0, __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], false), [
    "sendbird-dropdown__menu-item",
    disable ? "disable" : ""
  ], false)), disabled: disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick }, children);
};
var MENU_ROOT_ID = "sendbird-dropdown-portal";
var MenuRoot = function() {
  return React__default__default.createElement("div", { id: MENU_ROOT_ID, className: MENU_ROOT_ID });
};
var EMOJI_MENU_ROOT_ID = "sendbird-emoji-list-portal";
var EmojiReactionListRoot = function() {
  return React__default__default.createElement("div", { id: EMOJI_MENU_ROOT_ID });
};
function ContextMenu(_a2) {
  var menuTrigger = _a2.menuTrigger, menuItems = _a2.menuItems, isOpen = _a2.isOpen, onClick = _a2.onClick;
  var _b2 = useState(false), showMenu = _b2[0], setShowMenu = _b2[1];
  return React__default__default.createElement(
    "div",
    { className: "sendbird-context-menu", onClick },
    menuTrigger === null || menuTrigger === void 0 ? void 0 : menuTrigger(function() {
      return setShowMenu(!showMenu);
    }),
    (showMenu || isOpen) && menuItems(function() {
      return setShowMenu(false);
    })
  );
}
var TriggerIcon = function(_a2) {
  var ref = _a2.ref, _b2 = _a2.onClick, onClick = _b2 === void 0 ? noop$4 : _b2, _c = _a2.onBlur, onBlur = _c === void 0 ? noop$4 : _c, _d = _a2.renderIcon, renderIcon = _d === void 0 ? function(props) {
    return React__default__default.createElement(Icon$1, __assign({}, props));
  } : _d;
  return React__default__default.createElement(IconButton$1, { ref, width: "32px", height: "32px", onClick, onBlur }, renderIcon({
    type: IconTypes.MORE,
    fillColor: IconColors.CONTENT_INVERSE,
    width: "24px",
    height: "24px"
  }));
};
var CopyMenuItem$2 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isUserMessage(message))
      copyToClipboard$1(message.message);
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : stringSet2.MESSAGE_MENU__COPY);
};
var ReplyMenuItem$2 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, setQuoteMessage = _b2.setQuoteMessage;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { disabled: message.parentMessageId > 0, onClick: function(e3) {
    var _a3;
    setQuoteMessage(message);
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : stringSet2.MESSAGE_MENU__REPLY);
};
var ThreadMenuItem$2 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, onReplyInThread = _b2.onReplyInThread;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    onReplyInThread({ message });
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : stringSet2.MESSAGE_MENU__THREAD);
};
var OpenInChannelMenuItem = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, onMoveToParentMessage = _b2.onMoveToParentMessage;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    onMoveToParentMessage();
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : stringSet2.MESSAGE_MENU__OPEN_IN_CHANNEL);
};
var EditMenuItem$2 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, showEdit = _b2.showEdit, isOnline = _b2.isOnline;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isOnline) {
      showEdit(true);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : stringSet2.MESSAGE_MENU__EDIT);
};
var ResendMenuItem$2 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, resendMessage = _b2.resendMessage, isOnline = _b2.isOnline;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isOnline) {
      resendMessage(message);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : stringSet2.MESSAGE_MENU__RESEND);
};
var DeleteMenuItem$2 = function(props) {
  var _a2, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, deleteMessage = _d.deleteMessage, showRemove = _d.showRemove, isOnline = _d.isOnline, disableDeleteMessage = _d.disableDeleteMessage;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { disabled: typeof disableDeleteMessage === "boolean" ? disableDeleteMessage : ((_b2 = (_a2 = message.threadInfo) === null || _a2 === void 0 ? void 0 : _a2.replyCount) !== null && _b2 !== void 0 ? _b2 : 0) > 0, onClick: function(e3) {
    var _a3;
    if (isFailedMessage(message)) {
      deleteMessage(message);
    } else if (isOnline) {
      showRemove(true);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_c = props.children) !== null && _c !== void 0 ? _c : stringSet2.MESSAGE_MENU__DELETE);
};
var isReplyTypeMessageEnabled = function(_a2) {
  var _b2;
  var channel = _a2.channel, message = _a2.message;
  if (isFailedMessage(message) || isPendingMessage(message)) {
    return false;
  }
  if (!((_b2 = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _b2 === void 0 ? void 0 : _b2.call(channel)) || (channel === null || channel === void 0 ? void 0 : channel.isEphemeral)) {
    return false;
  }
  var isBroadcast = channel === null || channel === void 0 ? void 0 : channel.isBroadcast;
  var isOperator2 = (channel === null || channel === void 0 ? void 0 : channel.myRole) === V.OPERATOR;
  if (isBroadcast)
    return isOperator2;
  return true;
};
var showMenuItemCopy = function(_a2) {
  var message = _a2.message;
  return isUserMessage(message);
};
var showMenuItemEdit = function(_a2) {
  var message = _a2.message, channel = _a2.channel, isByMe = _a2.isByMe;
  return !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral) && isUserMessage(message) && isSentMessage(message) && isByMe;
};
var showMenuItemResend = function(_a2) {
  var message = _a2.message, isByMe = _a2.isByMe;
  return isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
};
var showMenuItemDelete = function(_a2) {
  var message = _a2.message, channel = _a2.channel, isByMe = _a2.isByMe;
  return !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral) && !isPendingMessage(message) && isByMe;
};
var showMenuItemOpenInChannel = function(_a2) {
  var _b2 = _a2.onMoveToParentMessage, onMoveToParentMessage = _b2 === void 0 ? void 0 : _b2;
  return !!onMoveToParentMessage;
};
var showMenuItemReply = function(_a2) {
  var channel = _a2.channel, message = _a2.message, replyType = _a2.replyType;
  return isReplyTypeMessageEnabled({ channel, message }) && replyType === "QUOTE_REPLY";
};
var showMenuItemThread = function(_a2) {
  var channel = _a2.channel, message = _a2.message, replyType = _a2.replyType, onReplyInThread = _a2.onReplyInThread;
  return isReplyTypeMessageEnabled({ channel, message }) && replyType === "THREAD" && !(message === null || message === void 0 ? void 0 : message.parentMessageId) && typeof onReplyInThread === "function";
};
var MessageMenu = function(_a2) {
  var _b2;
  var className = _a2.className, message = _a2.message, channel = _a2.channel, isByMe = _a2.isByMe, replyType = _a2.replyType, _c = _a2.renderTrigger, renderTrigger = _c === void 0 ? TriggerIcon : _c, renderMenuItems = _a2.renderMenuItems, _d = _a2.disableDeleteMessage, disableDeleteMessage = _d === void 0 ? null : _d, _e2 = _a2.showEdit, showEdit = _e2 === void 0 ? noop$4 : _e2, _f = _a2.showRemove, showRemove = _f === void 0 ? noop$4 : _f, deleteMessage = _a2.deleteMessage, resendMessage = _a2.resendMessage, setQuoteMessage = _a2.setQuoteMessage, onReplyInThread = _a2.onReplyInThread, onMoveToParentMessage = _a2.onMoveToParentMessage;
  var isOnline = useSendbird().state.config.isOnline;
  var triggerRef = useRef(null);
  var containerRef = useRef(null);
  var _g2 = useState(false), isMenuVisible = _g2[0], setMenuVisibility = _g2[1];
  var hideMenu = function() {
    return setMenuVisibility(false);
  };
  var showMenu = function() {
    return setMenuVisibility(true);
  };
  var toggleMenu = function() {
    return setMenuVisibility(function(visible) {
      return !visible;
    });
  };
  var params = {
    message,
    channel,
    isByMe,
    replyType,
    onReplyInThread,
    onMoveToParentMessage
  };
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-message-menu", className), ref: containerRef },
    React__default__default.createElement(
      MessageMenuProvider,
      { value: {
        message,
        hideMenu,
        showMenu,
        toggleMenu,
        setQuoteMessage,
        onReplyInThread,
        onMoveToParentMessage,
        showEdit,
        showRemove,
        deleteMessage,
        resendMessage,
        isOnline,
        disableDeleteMessage,
        triggerRef,
        containerRef
      } },
      renderTrigger({ ref: triggerRef, onClick: toggleMenu }),
      isMenuVisible && React__default__default.createElement(MenuItems, { id: getObservingId(message.messageId), parentRef: triggerRef, parentContainRef: containerRef, closeDropdown: hideMenu, openLeft: isByMe }, (_b2 = renderMenuItems === null || renderMenuItems === void 0 ? void 0 : renderMenuItems({
        items: {
          CopyMenuItem: CopyMenuItem$2,
          ReplyMenuItem: ReplyMenuItem$2,
          ThreadMenuItem: ThreadMenuItem$2,
          OpenInChannelMenuItem,
          EditMenuItem: EditMenuItem$2,
          ResendMenuItem: ResendMenuItem$2,
          DeleteMenuItem: DeleteMenuItem$2
        }
      })) !== null && _b2 !== void 0 ? _b2 : React__default__default.createElement(
        React__default__default.Fragment,
        null,
        showMenuItemCopy(params) && React__default__default.createElement(CopyMenuItem$2, null),
        showMenuItemReply(params) && React__default__default.createElement(ReplyMenuItem$2, null),
        showMenuItemThread(params) && React__default__default.createElement(ThreadMenuItem$2, null),
        showMenuItemOpenInChannel(params) && React__default__default.createElement(OpenInChannelMenuItem, null),
        showMenuItemEdit(params) && React__default__default.createElement(EditMenuItem$2, null),
        showMenuItemResend(params) && React__default__default.createElement(ResendMenuItem$2, null),
        showMenuItemDelete(params) && React__default__default.createElement(DeleteMenuItem$2, null)
      ))
    )
  );
};
var DEFAULT_DURATION = 300;
function preventDefault(e3) {
  if (!isTouchEvent(e3)) {
    return;
  }
  if (e3.touches.length < 2 && e3.preventDefault) {
    e3.preventDefault();
  }
}
function isTouchEvent(e3) {
  return e3 && "touches" in e3;
}
function useLongPress(_a2, _b2) {
  var onLongPress = _a2.onLongPress, onClick = _a2.onClick;
  var _c = _b2 === void 0 ? {} : _b2, _d = _c.delay, delay2 = _d === void 0 ? DEFAULT_DURATION : _d, _e2 = _c.shouldPreventDefault, shouldPreventDefault = _e2 === void 0 ? true : _e2, _f = _c.shouldStopPropagation, shouldStopPropagation = _f === void 0 ? false : _f;
  var isMobile = useMediaQueryContext().isMobile;
  var _g2 = useState(false), longPressTriggered = _g2[0], setLongPressTriggered = _g2[1];
  var _h = useState(false), dragTriggered = _h[0], setDragTriggered = _h[1];
  var timeout = useRef();
  var target = useRef();
  var start = useCallback(function(e3) {
    e3.persist();
    var clonedEvent = __assign({}, e3);
    setDragTriggered(false);
    if (shouldStopPropagation) {
      e3.stopPropagation();
    }
    if (shouldPreventDefault && e3.target) {
      e3.target.addEventListener("touchend", preventDefault, {
        passive: false
      });
      target.current = e3.target;
    }
    timeout.current = setTimeout(function() {
      onLongPress(clonedEvent);
      setLongPressTriggered(true);
    }, delay2);
  }, [onLongPress, delay2, shouldPreventDefault, shouldStopPropagation, isMobile]);
  var clear = useCallback(function(e3, shouldTriggerClick, onDrag) {
    if (shouldTriggerClick === void 0) {
      shouldTriggerClick = true;
    }
    if (onDrag === void 0) {
      onDrag = false;
    }
    if (onDrag) {
      setDragTriggered(true);
    } else {
      setDragTriggered(false);
    }
    if (timeout === null || timeout === void 0 ? void 0 : timeout.current) {
      clearTimeout(timeout.current);
    }
    if (shouldTriggerClick && !longPressTriggered && !dragTriggered) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e3);
    }
    setLongPressTriggered(false);
    if (shouldPreventDefault && target.current) {
      target.current.removeEventListener("touchend", preventDefault);
    }
  }, [shouldPreventDefault, onClick, longPressTriggered, dragTriggered]);
  return {
    onMouseDown: function(e3) {
      return start(e3);
    },
    onMouseUp: function(e3) {
      return clear(e3);
    },
    onMouseLeave: function(e3) {
      return clear(e3, false);
    },
    onTouchStart: function(e3) {
      return start(e3);
    },
    // setDragTriggered as true on touchmove, so that next onTouchEnd is ignored
    // if we dont do it, onClick?.(e) will be triggred, see inside clear()
    onTouchMove: function(e3) {
      return clear(e3, false, true);
    },
    onTouchEnd: function(e3) {
      return clear(e3);
    }
  };
}
var ReactionButton = React__default__default.forwardRef(function(props, ref) {
  var className = props.className, width = props.width, height = props.height, selected = props.selected, _a2 = props.dataSbId, dataSbId = _a2 === void 0 ? "" : _a2, testID = props.testID, onClick = props.onClick, children = props.children;
  var onClickHandler = useLongPress({
    onLongPress: noop$4,
    onClick
  }, {
    shouldPreventDefault: true,
    shouldStopPropagation: true
  });
  return React__default__default.createElement(
    "div",
    __assign({ className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-reaction-button".concat(selected ? "--selected" : "")
    ], false).join(" "), ref, role: "button", style: { width, height } }, onClickHandler, { tabIndex: 0, "data-sb-id": testID !== null && testID !== void 0 ? testID : dataSbId, "data-testid": testID !== null && testID !== void 0 ? testID : dataSbId }),
    React__default__default.createElement("div", { className: "sendbird-reaction-button__inner" }, children)
  );
});
function MessageEmojiMenu(_a2) {
  var className = _a2.className, message = _a2.message, userId = _a2.userId, _b2 = _a2.spaceFromTrigger, spaceFromTrigger = _b2 === void 0 ? { x: 0, y: 0 } : _b2, emojiContainer = _a2.emojiContainer, filterEmojiCategoryIds = _a2.filterEmojiCategoryIds, toggleReaction = _a2.toggleReaction;
  var triggerRef = useRef(null);
  var containerRef = useRef(null);
  var filteredEmojis = useMemo(function() {
    return getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message));
  }, [emojiContainer, filterEmojiCategoryIds]);
  if (isPendingMessage(message) || isFailedMessage(message)) {
    return null;
  }
  return React__default__default.createElement(
    "div",
    { className: getClassName([className !== null && className !== void 0 ? className : "", "sendbird-message-item-reaction-menu"]), ref: containerRef },
    React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return React__default__default.createElement(
        IconButton$1,
        { className: "sendbird-message-item-reaction-menu__trigger", ref: triggerRef, width: "32px", height: "32px", onClick: function() {
          toggleDropdown();
        } },
        React__default__default.createElement(Icon$1, { className: "sendbird-message-item-reaction-menu__trigger__icon", testID: "sendbird-message-item-reaction-menu__trigger__icon", type: IconTypes.EMOJI_MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
      );
    }, menuItems: function(closeDropdown) {
      if (filteredEmojis.length === 0)
        return null;
      return React__default__default.createElement(EmojiListItems, { id: getObservingId(message.messageId), parentRef: triggerRef, parentContainRef: containerRef, closeDropdown, spaceFromTrigger }, filteredEmojis.map(function(emoji) {
        var _a3, _b3, _c;
        var isReacted = ((_c = (_b3 = (_a3 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a3 === void 0 ? void 0 : _a3.find(function(reaction) {
          return reaction.key === emoji.key;
        })) === null || _b3 === void 0 ? void 0 : _b3.userIds) === null || _c === void 0 ? void 0 : _c.some(function(reactorId) {
          return reactorId === userId;
        })) || false;
        return React__default__default.createElement(
          ReactionButton,
          { key: emoji.key, width: "36px", height: "36px", selected: isReacted, onClick: function() {
            closeDropdown();
            toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
          }, testID: "ui_emoji_reactions_menu_".concat(emoji.key) },
          React__default__default.createElement(ImageRenderer, { url: emoji.url, width: "28px", height: "28px", placeHolder: function(_a4) {
            var style = _a4.style;
            return React__default__default.createElement(
              "div",
              { style },
              React__default__default.createElement(Icon$1, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
            );
          } })
        );
      }));
    } })
  );
}
var ReactionBadge = React__default__default.forwardRef(function(props, ref) {
  var _a2 = props.className, className = _a2 === void 0 ? "" : _a2, testID = props.testID, children = props.children, _b2 = props.count, count = _b2 === void 0 ? "" : _b2, _c = props.isAdd, isAdd = _c === void 0 ? false : _c, _d = props.selected, selected = _d === void 0 ? false : _d, _e2 = props.onClick, onClick = _e2 === void 0 ? function() {
  } : _e2;
  var getClassNameTail = function() {
    if (selected && !isAdd) {
      return "--selected";
    }
    if (isAdd) {
      return "--is-add";
    }
    return "";
  };
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-reaction-badge".concat(getClassNameTail())
    ], false).join(" "), "data-testid": testID, role: "button", ref, onClick, onKeyDown: onClick, onTouchEnd: onClick, tabIndex: 0 },
    React__default__default.createElement(
      "div",
      { className: "sendbird-reaction-badge__inner" },
      React__default__default.createElement("div", { className: "sendbird-reaction-badge__inner__icon" }, children),
      React__default__default.createElement(Label, { className: children && count ? "sendbird-reaction-badge__inner__count" : "", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_1 }, count)
    )
  );
});
var MODAL_ROOT = "sendbird-modal-root";
var ModalRoot = function() {
  return React__default__default.createElement("div", { id: MODAL_ROOT, className: MODAL_ROOT });
};
var ModalHeader = function(_a2) {
  var titleText = _a2.titleText, onCloseClick = _a2.onCloseClick;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-modal__header" },
    React__default__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, titleText),
    React__default__default.createElement(
      "div",
      { className: "sendbird-modal__close" },
      React__default__default.createElement(
        IconButton$1,
        { width: "32px", height: "32px", onClick: onCloseClick },
        React__default__default.createElement(Icon$1, { type: IconTypes.CLOSE, fillColor: IconColors.DEFAULT, width: "24px", height: "24px" })
      )
    )
  );
};
var ModalBody = function(_a2) {
  var children = _a2.children;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-modal__body" },
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_2 }, children)
  );
};
var ModalFooter = function(_a2) {
  var submitText = _a2.submitText, _b2 = _a2.disabled, disabled = _b2 === void 0 ? false : _b2, _c = _a2.hideCancelButton, hideCancelButton = _c === void 0 ? false : _c, _d = _a2.type, type = _d === void 0 ? ButtonTypes.DANGER : _d, onSubmit = _a2.onSubmit, onCancel = _a2.onCancel;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-modal__footer" },
    !hideCancelButton && React__default__default.createElement(
      Button,
      { type: ButtonTypes.SECONDARY, onClick: onCancel },
      React__default__default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.BUTTON__CANCEL)
    ),
    React__default__default.createElement(Button, { type, disabled, onClick: onSubmit }, submitText)
  );
};
function Modal(props) {
  var _a2;
  var _b2 = props.children, children = _b2 === void 0 ? null : _b2, _c = props.className, className = _c === void 0 ? "" : _c, _d = props.contentClassName, contentClassName = _d === void 0 ? "" : _d, _e2 = props.isCloseOnClickOutside, isCloseOnClickOutside = _e2 === void 0 ? false : _e2, _f = props.isFullScreenOnMobile, isFullScreenOnMobile = _f === void 0 ? false : _f, titleText = props.titleText, submitText = props.submitText, _g2 = props.disabled, disabled = _g2 === void 0 ? false : _g2, _h = props.hideFooter, hideFooter = _h === void 0 ? false : _h, _j = props.type, type = _j === void 0 ? ButtonTypes.DANGER : _j, renderHeader = props.renderHeader, _k = props.onSubmit, onSubmit = _k === void 0 ? noop$4 : _k, onClose = props.onClose, onCancel = props.onCancel, customFooter = props.customFooter;
  var handleClose = (_a2 = onClose !== null && onClose !== void 0 ? onClose : onCancel) !== null && _a2 !== void 0 ? _a2 : noop$4;
  var eventHandlers = useSendbird().state.eventHandlers;
  var id2 = useState(function() {
    return "sbu-modal-".concat(uuidv4());
  })[0];
  useEffect(function() {
    var _a3, _b3;
    return (_b3 = (_a3 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.modal) === null || _a3 === void 0 ? void 0 : _a3.onMounted) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, { close: handleClose, id: id2 });
  }, []);
  var isMobile = useMediaQueryContext().isMobile;
  return createPortal(React__default__default.createElement(
    "div",
    { className: classnames("sendbird-modal", className, isFullScreenOnMobile && isMobile && "sendbird-modal--full-mobile") },
    React__default__default.createElement(
      "div",
      { className: classnames.apply(void 0, __spreadArray(["sendbird-modal__content"], Array.isArray(contentClassName) ? contentClassName : [contentClassName], false)) },
      (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || React__default__default.createElement(ModalHeader, { titleText: titleText !== null && titleText !== void 0 ? titleText : "", onCloseClick: handleClose }),
      React__default__default.createElement(ModalBody, null, children),
      !hideFooter && (customFooter !== null && customFooter !== void 0 ? customFooter : React__default__default.createElement(ModalFooter, { disabled, onCancel: handleClose, onSubmit, submitText: submitText !== null && submitText !== void 0 ? submitText : "", type }))
    ),
    React__default__default.createElement("div", { className: classnames("sendbird-modal__backdrop", isCloseOnClickOutside && "sendbird-modal__backdrop--clickoutside"), onClick: function(e3) {
      e3 === null || e3 === void 0 ? void 0 : e3.stopPropagation();
      if (isCloseOnClickOutside) {
        handleClose();
      }
    } })
  ), document.getElementById(MODAL_ROOT));
}
var GlobalModalContext = createContext({
  openModal: noop$4
});
var GlobalModalProvider = function(_a2) {
  var children = _a2.children;
  var _b2 = useState([]), globalModalQueue = _b2[0], setGlobalModalQueue = _b2[1];
  var openModal = useCallback(function(props) {
    setGlobalModalQueue(function(currentQue) {
      return __spreadArray(__spreadArray([], currentQue, true), [props], false);
    });
  }, []);
  var closeModal = useCallback(function() {
    setGlobalModalQueue(function(currentQue) {
      return currentQue.slice(1);
    });
  }, []);
  var ModalComponent = useMemo(function() {
    return function() {
      return K(globalModalQueue).when(function(q3) {
        return q3.length === 0;
      }, function() {
        return React__default__default.createElement(React__default__default.Fragment, null);
      }).otherwise(function() {
        var _a3 = globalModalQueue[0], modalProps = _a3.modalProps, childElement = _a3.childElement;
        return React__default__default.createElement(Modal, __assign({}, modalProps, { className: classnames("sendbird-global-modal", modalProps === null || modalProps === void 0 ? void 0 : modalProps.className), onClose: function() {
          var _a4;
          (_a4 = modalProps === null || modalProps === void 0 ? void 0 : modalProps.onClose) === null || _a4 === void 0 ? void 0 : _a4.call(modalProps);
          closeModal();
        } }), childElement({
          closeModal
        }));
      });
    };
  }, [globalModalQueue]);
  return React__default__default.createElement(
    GlobalModalContext.Provider,
    { value: {
      openModal
    } },
    React__default__default.createElement(ModalComponent, null),
    children
  );
};
var useGlobalModalContext = function() {
  return useContext(GlobalModalContext);
};
var BottomSheet = function(props) {
  var _a2;
  var _b2 = props.className, className = _b2 === void 0 ? "" : _b2, children = props.children, onBackdropClick = props.onBackdropClick;
  var logger = useSendbird().state.config.logger;
  var portalRoot = useRef();
  portalRoot.current = document.getElementById(MODAL_ROOT);
  if (!portalRoot.current) {
    portalRoot.current = document.createElement("div");
    portalRoot.current.setAttribute("id", MODAL_ROOT);
    document.body.appendChild(portalRoot.current);
    (_a2 = logger === null || logger === void 0 ? void 0 : logger.warning) === null || _a2 === void 0 ? void 0 : _a2.call(logger, "@sendbird/uikit-react/ui/BottomSheet | Should put a ModalRoot to use the BottomSheet.");
  }
  return createPortal(React__default__default.createElement(
    "div",
    { className: "".concat(className, " sendbird-bottomsheet") },
    React__default__default.createElement("div", { className: "sendbird-bottomsheet__content", role: "dialog", "aria-modal": "true", "aria-expanded": "true" }, children),
    React__default__default.createElement("div", { className: "sendbird-bottomsheet__backdrop", onClick: function(e3) {
      e3 === null || e3 === void 0 ? void 0 : e3.stopPropagation();
      onBackdropClick === null || onBackdropClick === void 0 ? void 0 : onBackdropClick();
    } })
  ), portalRoot.current);
};
function MutedAvatarOverlay(props) {
  var _a2 = props.height, height = _a2 === void 0 ? 24 : _a2, _b2 = props.width, width = _b2 === void 0 ? 24 : _b2;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-muted-avatar", style: {
      height: "".concat(height, "px"),
      width: "".concat(width, "px")
    } },
    React__default__default.createElement(
      "div",
      { className: "sendbird-muted-avatar__icon" },
      React__default__default.createElement("div", { className: "sendbird-muted-avatar__bg", style: {
        height: "".concat(height, "px"),
        width: "".concat(width, "px")
      } }),
      React__default__default.createElement(Icon$1, { type: IconTypes.MUTE, fillColor: IconColors.WHITE, width: "".concat(height - 8, "px"), height: "".concat(width - 8, "px") })
    )
  );
}
function Checkbox(_a2) {
  var id2 = _a2.id, _b2 = _a2.checked, checked = _b2 === void 0 ? false : _b2, disabled = _a2.disabled, onChange = _a2.onChange;
  var _c = useState(checked), isChecked = _c[0], setIsCheck = _c[1];
  return React__default__default.createElement(
    "label",
    { className: [
      "sendbird-checkbox",
      disabled ? "disabled" : ""
    ].join(" "), htmlFor: id2 },
    React__default__default.createElement("input", { disabled, id: id2, type: "checkbox", checked: isChecked, onClick: function() {
      if (!disabled)
        setIsCheck(!isChecked);
    }, onChange }),
    React__default__default.createElement("span", { className: [
      "sendbird-checkbox--checkmark",
      disabled ? "disabled" : ""
    ].join(" ") })
  );
}
var getSdk = function(state) {
  var _a2 = state.stores, stores2 = _a2 === void 0 ? {} : _a2;
  var _b2 = stores2.sdkStore, sdkStore = _b2 === void 0 ? {} : _b2;
  var sdk = sdkStore.sdk;
  return sdk;
};
var getPubSub = function(state) {
  var _a2 = state.config, config2 = _a2 === void 0 ? {} : _a2;
  var pubSub = config2.pubSub;
  return pubSub;
};
var getCreateGroupChannel = function(state) {
  return function(params) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      var pubSub = getPubSub(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.groupChannel) {
        reject(new Error("Not found GroupChannelModule"));
      }
      if (!(sdk.groupChannel.createChannel && typeof sdk.groupChannel.createChannel === "function")) {
        reject(new Error('Not found the function "createChannel"'));
      }
      sdk.groupChannel.createChannel(params).then(function(channel) {
        resolve(channel);
        pubSub.publish(pubSubTopics.CREATE_CHANNEL, { channel });
      }).catch(reject);
    });
  };
};
function UserProfile(_a2) {
  var _b2, _c;
  var user = _a2.user, currentUserId = _a2.currentUserId, _d = _a2.disableMessaging, disableMessaging = _d === void 0 ? false : _d, onSuccess2 = _a2.onSuccess;
  var state = useSendbird().state;
  var createChannel = getCreateGroupChannel(state);
  var logger = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.logger;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var currentUserId_ = currentUserId || ((_c = state === null || state === void 0 ? void 0 : state.config) === null || _c === void 0 ? void 0 : _c.userId);
  var onStartDirectMessage = useUserProfileContext().onStartDirectMessage;
  return React__default__default.createElement(
    "div",
    { className: "sendbird__user-profile" },
    React__default__default.createElement(
      "section",
      { className: "sendbird__user-profile-avatar" },
      React__default__default.createElement(Avatar$1, { height: "80px", width: "80px", src: user === null || user === void 0 ? void 0 : user.profileUrl })
    ),
    React__default__default.createElement(
      "section",
      { className: "sendbird__user-profile-name" },
      React__default__default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, (user === null || user === void 0 ? void 0 : user.nickname) || stringSet2.NO_NAME)
    ),
    (user === null || user === void 0 ? void 0 : user.userId) !== currentUserId_ && !disableMessaging && React__default__default.createElement(
      "section",
      { className: "sendbird__user-profile-message" },
      React__default__default.createElement(Button, { type: ButtonTypes.SECONDARY, onClick: function() {
        var params = {
          isDistinct: false,
          invitedUserIds: (user === null || user === void 0 ? void 0 : user.userId) ? [user === null || user === void 0 ? void 0 : user.userId] : [],
          operatorUserIds: [currentUserId_]
        };
        onSuccess2 === null || onSuccess2 === void 0 ? void 0 : onSuccess2();
        createChannel(params).then(function(groupChannel) {
          logger.info("UserProfile, channel create", groupChannel);
          onStartDirectMessage === null || onStartDirectMessage === void 0 ? void 0 : onStartDirectMessage(groupChannel);
        });
      } }, stringSet2.USER_PROFILE__MESSAGE)
    ),
    React__default__default.createElement("div", { className: "sendbird__user-profile-separator" }),
    React__default__default.createElement(
      "section",
      { className: "sendbird__user-profile-userId" },
      React__default__default.createElement(Label, { className: "sendbird__user-profile-userId--label", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.USER_PROFILE__USER_ID),
      React__default__default.createElement(Label, { className: "sendbird__user-profile-userId--value", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, user === null || user === void 0 ? void 0 : user.userId)
    )
  );
}
function UserListItem(_a2) {
  var user = _a2.user, channel = _a2.channel, _b2 = _a2.className, className = _b2 === void 0 ? void 0 : _b2, checked = _a2.checked, checkBox = _a2.checkBox, isOperator2 = _a2.isOperator, disabled = _a2.disabled, disableMessaging = _a2.disableMessaging, action = _a2.action, onChange = _a2.onChange, _c = _a2.avatarSize, avatarSize = _c === void 0 ? "40px" : _c, onClick = _a2.onClick, onUserAvatarClick = _a2.onUserAvatarClick, renderListItemMenu = _a2.renderListItemMenu, _d = _a2.size, size = _d === void 0 ? "normal" : _d;
  var operator = isOperator2 !== null && isOperator2 !== void 0 ? isOperator2 : (user === null || user === void 0 ? void 0 : user.role) === "operator";
  var uniqueKey = user.userId;
  var actionRef = useRef(null);
  var parentRef = useRef(null);
  var avatarRef = useRef(null);
  var _e2 = useUserProfileContext(), disableUserProfile = _e2.disableUserProfile, renderUserProfile = _e2.renderUserProfile;
  var stringSet2 = useLocalization().stringSet;
  var config2 = useSendbird().state.config;
  var currentUser = config2.userId;
  var itemClassName = size === "small" ? "sendbird-user-list-item--small" : "sendbird-user-list-item";
  var avatarClassName = size === "small" ? "sendbird-user-list-item--small__avatar" : "sendbird-user-list-item__avatar";
  var titleClassName = size === "small" ? "sendbird-user-list-item--small__title" : "sendbird-user-list-item__title";
  var subtitleClassName = size === "small" ? "sendbird-user-list-item--small__subtitle" : "sendbird-user-list-item__subtitle";
  var checkboxClassName = size === "small" ? "sendbird-user-list-item--small__checkbox" : "sendbird-user-list-item__checkbox";
  var actionClassName = size === "small" ? "sendbird-user-list-item--small__action" : "sendbird-user-list-item__action";
  var operatorClassName = size === "small" ? "sendbird-user-list-item--small__operator" : "sendbird-user-list-item__operator";
  return React__default__default.createElement(
    "div",
    { className: classnames.apply(void 0, __spreadArray([itemClassName], Array.isArray(className) ? className : [className], false)), ref: parentRef },
    React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return React__default__default.createElement(
        React__default__default.Fragment,
        null,
        React__default__default.createElement(Avatar$1, { className: avatarClassName, ref: avatarRef, src: (user === null || user === void 0 ? void 0 : user.profileUrl) || (user === null || user === void 0 ? void 0 : user.plainProfileUrl) || "", width: avatarSize, height: avatarSize, onClick: function() {
          var _a3;
          if (!disableUserProfile) {
            toggleDropdown();
            (_a3 = onUserAvatarClick !== null && onUserAvatarClick !== void 0 ? onUserAvatarClick : onClick) === null || _a3 === void 0 ? void 0 : _a3();
          }
        } }),
        (user === null || user === void 0 ? void 0 : user.isMuted) && React__default__default.createElement(MutedAvatarOverlay, { height: pxToNumber(avatarSize), width: pxToNumber(avatarSize) })
      );
    }, menuItems: function(closeDropdown) {
      return renderUserProfile ? renderUserProfile({
        user,
        currentUserId: currentUser !== null && currentUser !== void 0 ? currentUser : "",
        close: closeDropdown,
        avatarRef
      }) : React__default__default.createElement(
        MenuItems,
        { openLeft: true, parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
        React__default__default.createElement(UserProfile, { disableMessaging, user, currentUserId: currentUser, onSuccess: closeDropdown })
      );
    } }),
    React__default__default.createElement(
      Label,
      { className: titleClassName, type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 },
      user.nickname || stringSet2.NO_NAME,
      currentUser === user.userId && stringSet2.CHANNEL_SETTING__MEMBERS__YOU
    ),
    !user.nickname && React__default__default.createElement(Label, { className: subtitleClassName, type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, user.userId),
    checkBox && React__default__default.createElement(
      "label",
      { className: checkboxClassName, htmlFor: uniqueKey },
      React__default__default.createElement(Checkbox, { id: uniqueKey, checked, disabled, onChange: function(event) {
        return onChange === null || onChange === void 0 ? void 0 : onChange(event);
      } })
    ),
    operator && React__default__default.createElement(Label, { className: classnames(operatorClassName, checkBox && "checkbox"), type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.LABEL__OPERATOR),
    !checkBox && !renderListItemMenu && action && React__default__default.createElement("div", { className: actionClassName, ref: actionRef }, action({ actionRef, parentRef })),
    !checkBox && renderListItemMenu && React__default__default.createElement("div", { className: actionClassName, ref: actionRef }, renderListItemMenu({ channel, user }))
  );
}
function Tooltip(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, _c = _a2.children, children = _c === void 0 ? "" : _c;
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-tooltip"
    ], false).join(" ") },
    React__default__default.createElement(Label, { className: "sendbird-tooltip__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONCONTENT_1 }, children)
  );
}
var SPACE_FROM_TRIGGER = 8;
function TooltipWrapper(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, children = _a2.children, hoverTooltip = _a2.hoverTooltip;
  var _c = useState(false), showHoverTooltip = _c[0], setShowHoverTooltip = _c[1];
  var childrenRef = useRef();
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-tooltip-wrapper"
    ], false).join(" "), onMouseOver: function() {
      setShowHoverTooltip(true);
    }, onFocus: function() {
      setShowHoverTooltip(true);
    }, onMouseOut: function() {
      setShowHoverTooltip(false);
    }, onBlur: function() {
      setShowHoverTooltip(false);
    } },
    React__default__default.createElement("div", { className: "sendbird-tooltip-wrapper__children", ref: childrenRef }, children),
    showHoverTooltip && React__default__default.createElement(
      "div",
      { className: "sendbird-tooltip-wrapper__hover-tooltip", style: { bottom: "calc(100% + ".concat(SPACE_FROM_TRIGGER, "px)") } },
      React__default__default.createElement(
        "div",
        { className: "sendbird-tooltip-wrapper__hover-tooltip__inner" },
        React__default__default.createElement("div", { className: "sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container", style: { left: childrenRef.current ? "calc(".concat(childrenRef.current.offsetWidth / 2, "px - 50%)") : void 0 } }, hoverTooltip)
      )
    )
  );
}
var defaultValue = {
  message: {},
  isByMe: false
};
var MessageContext$1 = React__default__default.createContext(defaultValue);
var MessageProvider$1 = function(props) {
  var children = props.children, message = props.message, _a2 = props.isByMe, isByMe = _a2 === void 0 ? false : _a2;
  return React__default__default.createElement(MessageContext$1.Provider, { value: {
    message,
    isByMe
  } }, children);
};
var useMessageContext$1 = function() {
  var value = React__default__default.useContext(MessageContext$1);
  if (value === void 0) {
    throw new Error("useMessageContext must be used within a MessageProvider");
  }
  return value;
};
var ReactedMembersBottomSheet = function(_a2) {
  var _b2, _c, _d;
  var message = _a2.message, channel = _a2.channel, _e2 = _a2.emojiKey, emojiKey = _e2 === void 0 ? "" : _e2, hideMenu = _a2.hideMenu, emojiContainer = _a2.emojiContainer, onPressUserProfileHandler = _a2.onPressUserProfileHandler;
  var _f = channel.members, members = _f === void 0 ? [] : _f;
  var _g2 = useState(emojiKey), selectedEmoji = _g2[0], setSelectedEmoji = _g2[1];
  function onPressUserProfileCallBack() {
    if (onPressUserProfileHandler && message) {
      var sender = message === null || message === void 0 ? void 0 : message.sender;
      onPressUserProfileHandler(sender);
    }
  }
  return React__default__default.createElement(
    BottomSheet,
    { onBackdropClick: hideMenu },
    React__default__default.createElement(
      "div",
      { className: "sendbird-message__bottomsheet" },
      React__default__default.createElement("div", { className: "sendbird-message__bottomsheet__reacted-members" }, (_b2 = message.reactions) === null || _b2 === void 0 ? void 0 : _b2.map(function(reaction) {
        var emojiUrl = getEmojiUrl(emojiContainer, reaction.key);
        return React__default__default.createElement(
          "div",
          { key: reaction.key, className: classnames("sendbird-message__bottomsheet__reacted-members__item", selectedEmoji === reaction.key && "sendbird-message__bottomsheet__reacted-members__item__selected"), onClick: function() {
            setSelectedEmoji(reaction.key);
          } },
          React__default__default.createElement(ImageRenderer, { url: emojiUrl, width: "28px", height: "28px", placeHolder: function(_a3) {
            var style = _a3.style;
            return React__default__default.createElement(
              "div",
              { style },
              React__default__default.createElement(Icon$1, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
            );
          } }),
          React__default__default.createElement(Label, { type: LabelTypography.BUTTON_2, color: selectedEmoji === reaction.key ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3 }, reaction.userIds.length)
        );
      })),
      React__default__default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet__reactor-list" },
        // making a member list who reacted to the message with the `selectedEmoji`
        ((_d = (_c = message.reactions) === null || _c === void 0 ? void 0 : _c.find(function(reaction) {
          return reaction.key === selectedEmoji;
        })) === null || _d === void 0 ? void 0 : _d.userIds.map(function(userId) {
          return members.find(function(member) {
            return member.userId === userId;
          });
        }).filter(function(member) {
          return member !== void 0;
        })).map(function(member) {
          return React__default__default.createElement(UserListItem, { key: member.userId, className: "sendbird-message__bottomsheet__reactor-list__item", user: member, avatarSize: "36px", onUserAvatarClick: onPressUserProfileCallBack });
        })
      )
    )
  );
};
function ReactionItem(_a2) {
  var _b2;
  var reaction = _a2.reaction, memberNicknamesMap = _a2.memberNicknamesMap, setEmojiKey = _a2.setEmojiKey, toggleReaction = _a2.toggleReaction, emojisMap = _a2.emojisMap, channel = _a2.channel, message = _a2.message, isFiltered = _a2.isFiltered;
  var openModal = useGlobalModalContext().openModal;
  var userId = useSendbird().state.config.userId;
  var isMobile = useMediaQueryContext().isMobile;
  var messageStore = useMessageContext$1();
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var reactedByMe = isReactedBy(userId, reaction);
  var showHoverTooltip = reaction.userIds.length > 0 && ((channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !channel.isSuper);
  var handleOnClick = function() {
    if (isFiltered && !reactedByMe) {
      openModal({
        modalProps: {
          titleText: "Add reaction failed",
          hideFooter: true,
          isCloseOnClickOutside: true
        },
        childElement: function(_a3) {
          var closeModal = _a3.closeModal;
          return React__default__default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
        }
      });
      return;
    }
    setEmojiKey("");
    toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message !== null && message !== void 0 ? message : messageStore === null || messageStore === void 0 ? void 0 : messageStore.message, reaction.key, reactedByMe);
  };
  var longPress = useLongPress({
    onLongPress: function() {
      setEmojiKey(reaction.key);
    },
    onClick: handleOnClick
  }, {
    shouldPreventDefault: true,
    shouldStopPropagation: true
  });
  return React__default__default.createElement(
    TooltipWrapper,
    { className: "sendbird-emoji-reactions__reaction-badge", hoverTooltip: showHoverTooltip ? React__default__default.createElement(Tooltip, null, getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet2)) : React__default__default.createElement(React__default__default.Fragment, null) },
    React__default__default.createElement(
      "div",
      __assign({}, isMobile ? longPress : { onClick: handleOnClick }),
      React__default__default.createElement(
        ReactionBadge,
        { count: reaction.userIds.length, selected: reactedByMe },
        React__default__default.createElement(ImageRenderer, { circle: true, url: ((_b2 = emojisMap.get(reaction === null || reaction === void 0 ? void 0 : reaction.key)) === null || _b2 === void 0 ? void 0 : _b2.url) || "", width: "20px", height: "20px", defaultComponent: React__default__default.createElement(Icon$1, { width: "20px", height: "20px", type: IconTypes.QUESTION }) })
      )
    )
  );
}
var AddReactionBadgeItem = function(_a2) {
  var onClick = _a2.onClick;
  var onlyClick = useLongPress({
    onLongPress: function() {
    },
    onClick
  }, {
    shouldPreventDefault: true,
    shouldStopPropagation: true
  });
  return React__default__default.createElement(
    "div",
    __assign({ className: "sendbird-emoji-reactions__add-reaction-badge", "data-testid": "sendbird-emoji-reactions__add-reaction-badge" }, onlyClick),
    React__default__default.createElement(
      ReactionBadge,
      { isAdd: true },
      React__default__default.createElement(Icon$1, { type: IconTypes.EMOJI_MORE, fillColor: IconColors.ON_BACKGROUND_3, width: "20px", height: "20px" })
    )
  );
};
var MobileEmojisBottomSheet = function(_a2) {
  var userId = _a2.userId, message = _a2.message, emojiContainer = _a2.emojiContainer, hideMenu = _a2.hideMenu, toggleReaction = _a2.toggleReaction;
  var emojiAllList = useMemo(function() {
    return getEmojiListAll(emojiContainer);
  }, [emojiContainer]);
  return React__default__default.createElement(
    BottomSheet,
    { onBackdropClick: hideMenu },
    React__default__default.createElement("div", { className: "sendbird-message__bottomsheet sendbird-message__emojis-bottomsheet" }, emojiAllList.map(function(emoji) {
      var _a3, _b2, _c, _d;
      var isReacted = (_d = (_c = (_b2 = (_a3 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a3 === void 0 ? void 0 : _a3.find(function(reaction) {
        return reaction.key === emoji.key;
      })) === null || _b2 === void 0 ? void 0 : _b2.userIds) === null || _c === void 0 ? void 0 : _c.some(function(reactorId) {
        return reactorId === userId;
      })) !== null && _d !== void 0 ? _d : false;
      return React__default__default.createElement(
        ReactionButton,
        { key: emoji.key, width: "44px", height: "44px", selected: isReacted, onClick: function(e3) {
          e3 === null || e3 === void 0 ? void 0 : e3.stopPropagation();
          toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
          hideMenu();
        }, testID: "ui_mobile_emoji_reactions_menu_".concat(emoji.key) },
        React__default__default.createElement(ImageRenderer, { url: emoji.url, width: "38px", height: "38px", placeHolder: function(_a4) {
          var style = _a4.style;
          return React__default__default.createElement(
            "div",
            { style },
            React__default__default.createElement(Icon$1, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
          );
        } })
      );
    }))
  );
};
var EmojiReactions = function(_a2) {
  var _b2, _c, _d, _e2, _f;
  var _g2 = _a2.className, className = _g2 === void 0 ? "" : _g2, userId = _a2.userId, message = _a2.message, channel = _a2.channel, emojiContainer = _a2.emojiContainer, memberNicknamesMap = _a2.memberNicknamesMap, _h = _a2.spaceFromTrigger, spaceFromTrigger = _h === void 0 ? { x: 0, y: 0 } : _h, _j = _a2.isByMe, isByMe = _j === void 0 ? false : _j, toggleReaction = _a2.toggleReaction, onPressUserProfile = _a2.onPressUserProfile, filterEmojiCategoryIds = _a2.filterEmojiCategoryIds;
  var showTheReactedMembers = false;
  try {
    var config2 = useSendbird().state.config;
    showTheReactedMembers = channel ? getIsReactionEnabled({
      channel,
      config: config2
    }) : false;
  } catch (err) {
  }
  var isMobile = useMediaQueryContext().isMobile;
  var addReactionRef = useRef(null);
  var _k = useState(false), showEmojiList = _k[0], setShowEmojiList = _k[1];
  var _l = useState(""), selectedEmojiKey = _l[0], setSelectedEmojiKey = _l[1];
  var emojisMap = getEmojiMapAll(emojiContainer);
  var filteredEmojis = useMemo(function() {
    return getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message));
  }, [emojiContainer, filterEmojiCategoryIds]);
  var showAddReactionBadge = ((_c = (_b2 = message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) !== null && _c !== void 0 ? _c : 0) < emojisMap.size;
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      className,
      "sendbird-emoji-reactions",
      isByMe ? "outgoing" : "incoming"
    ]) },
    ((_e2 = (_d = message.reactions) === null || _d === void 0 ? void 0 : _d.length) !== null && _e2 !== void 0 ? _e2 : 0) > 0 && ((_f = message.reactions) === null || _f === void 0 ? void 0 : _f.map(function(reaction) {
      return React__default__default.createElement(ReactionItem, { key: reaction === null || reaction === void 0 ? void 0 : reaction.key, reaction, memberNicknamesMap, setEmojiKey: setSelectedEmojiKey, toggleReaction, emojisMap, channel, message, isFiltered: getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message)).every(function(elem) {
        return elem.key !== (reaction === null || reaction === void 0 ? void 0 : reaction.key);
      }) });
    })),
    !isMobile && showAddReactionBadge && React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return React__default__default.createElement(
        ReactionBadge,
        { className: "sendbird-emoji-reactions__add-reaction-badge", testID: "sendbird-emoji-reactions__add-reaction-badge", ref: addReactionRef, isAdd: true, onClick: function(e3) {
          var _a3;
          toggleDropdown();
          (_a3 = e3 === null || e3 === void 0 ? void 0 : e3.stopPropagation) === null || _a3 === void 0 ? void 0 : _a3.call(e3);
        } },
        React__default__default.createElement(Icon$1, { type: IconTypes.EMOJI_MORE, fillColor: IconColors.ON_BACKGROUND_3, width: "20px", height: "20px" })
      );
    }, menuItems: function(closeDropdown) {
      if (filteredEmojis.length === 0)
        return null;
      return React__default__default.createElement(EmojiListItems, { parentRef: addReactionRef, parentContainRef: addReactionRef, closeDropdown, spaceFromTrigger }, getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message)).map(function(emoji) {
        var _a3, _b3, _c2;
        var isReacted = ((_c2 = (_b3 = (_a3 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a3 === void 0 ? void 0 : _a3.find(function(reaction) {
          return reaction.key === emoji.key;
        })) === null || _b3 === void 0 ? void 0 : _b3.userIds) === null || _c2 === void 0 ? void 0 : _c2.some(function(reactorId) {
          return reactorId === userId;
        })) || false;
        return React__default__default.createElement(
          ReactionButton,
          { key: emoji.key, width: "36px", height: "36px", selected: isReacted, onClick: function(e3) {
            closeDropdown();
            toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
            e3 === null || e3 === void 0 ? void 0 : e3.stopPropagation();
          }, testID: "ui_emoji_reactions_menu_".concat(emoji.key) },
          React__default__default.createElement(ImageRenderer, { url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || "", width: "28px", height: "28px", placeHolder: function(_a4) {
            var style = _a4.style;
            return React__default__default.createElement(
              "div",
              { style },
              React__default__default.createElement(Icon$1, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
            );
          } })
        );
      }));
    } }),
    isMobile && showAddReactionBadge && React__default__default.createElement(AddReactionBadgeItem, { onClick: function() {
      setShowEmojiList(true);
    } }),
    isMobile && showEmojiList && React__default__default.createElement(MobileEmojisBottomSheet, { userId, message, emojiContainer, hideMenu: function() {
      setShowEmojiList(false);
    }, toggleReaction }),
    isMobile && selectedEmojiKey && channel !== null && showTheReactedMembers && React__default__default.createElement(ReactedMembersBottomSheet, { message, channel, emojiKey: selectedEmojiKey, hideMenu: function() {
      setSelectedEmojiKey("");
    }, emojiContainer, onPressUserProfileHandler: onPressUserProfile })
  );
};
function AdminMessage(_a2) {
  var _b2;
  var _c = _a2.className, className = _c === void 0 ? "" : _c, message = _a2.message;
  if (!((message === null || message === void 0 ? void 0 : message.isAdminMessage) || (message === null || message === void 0 ? void 0 : message.messageType)) || !((_b2 = message === null || message === void 0 ? void 0 : message.isAdminMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
    return null;
  }
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-admin-message"
    ], false).join(" ") },
    React__default__default.createElement(Label, { className: "sendbird-admin-message__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, message === null || message === void 0 ? void 0 : message.message)
  );
}
function getMessageFirstFileType(message) {
  return K(message).when(isFileMessage, function() {
    var _a2;
    return (_a2 = message === null || message === void 0 ? void 0 : message.type) !== null && _a2 !== void 0 ? _a2 : "";
  }).when(isMultipleFilesMessage, function() {
    var _a2, _b2;
    return (_b2 = (_a2 = getFirstFileInfo(message)) === null || _a2 === void 0 ? void 0 : _a2.mimeType) !== null && _b2 !== void 0 ? _b2 : "";
  }).otherwise(function() {
    return "";
  });
}
function getFirstFileInfo(message) {
  var fileInfoList = message.fileInfoList;
  return fileInfoList.length > 0 ? fileInfoList[0] : null;
}
function getMessageFirstFileName(message) {
  return K(message).when(isFileMessage, function() {
    var _a2;
    return (_a2 = message === null || message === void 0 ? void 0 : message.name) !== null && _a2 !== void 0 ? _a2 : "";
  }).when(isMultipleFilesMessage, function() {
    var _a2, _b2;
    return (_b2 = (_a2 = getFirstFileInfo(message)) === null || _a2 === void 0 ? void 0 : _a2.fileName) !== null && _b2 !== void 0 ? _b2 : "";
  }).otherwise(function() {
    return "";
  });
}
function getMessageFirstFileUrl(message) {
  return K(message).when(isFileMessage, function() {
    var _a2;
    return (_a2 = message === null || message === void 0 ? void 0 : message.url) !== null && _a2 !== void 0 ? _a2 : "";
  }).when(isMultipleFilesMessage, function() {
    var _a2, _b2;
    return (_b2 = (_a2 = getFirstFileInfo(message)) === null || _a2 === void 0 ? void 0 : _a2.url) !== null && _b2 !== void 0 ? _b2 : "";
  }).otherwise(function() {
    return "";
  });
}
function getMessageFirstFileThumbnails(message) {
  return K(message).when(isFileMessage, function() {
    return message.thumbnails;
  }).when(isMultipleFilesMessage, function() {
    var _a2, _b2;
    return (_b2 = (_a2 = getFirstFileInfo(message)) === null || _a2 === void 0 ? void 0 : _a2.thumbnails) !== null && _b2 !== void 0 ? _b2 : [];
  }).otherwise(function() {
    return [];
  });
}
function getMessageFirstFileThumbnailUrl(message) {
  var thumbnails = getMessageFirstFileThumbnails(message);
  return thumbnails && thumbnails.length > 0 ? thumbnails[0].url : "";
}
function QuoteMessage(_a2) {
  var _b2;
  var _c, _d, _e2, _f, _g2, _h;
  var message = _a2.message, _j = _a2.userId, userId = _j === void 0 ? "" : _j, _k = _a2.isByMe, isByMe = _k === void 0 ? false : _k, _l = _a2.className, className = _l === void 0 ? "" : _l, _m = _a2.isUnavailable, isUnavailable = _m === void 0 ? false : _m, onClick = _a2.onClick;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var parentMessage = message.parentMessage;
  var parentMessageSender = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender;
  var parentMessageSenderNickname = userId === (parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.userId) ? stringSet2.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.nickname;
  var parentMessageUrl = getMessageFirstFileUrl(parentMessage);
  var parentMessageType = getMessageFirstFileType(parentMessage);
  var currentMessageSenderNickname = userId === ((_c = message === null || message === void 0 ? void 0 : message.sender) === null || _c === void 0 ? void 0 : _c.userId) ? stringSet2.QUOTED_MESSAGE__CURRENT_USER : (_d = message === null || message === void 0 ? void 0 : message.sender) === null || _d === void 0 ? void 0 : _d.nickname;
  var _o = useState(false), isThumbnailLoaded = _o[0], setThumbnailLoaded = _o[1];
  var uikitFileTypes = getUIKitFileTypes();
  var splitFileName = (_f = (_e2 = getMessageFirstFileName(parentMessage)) === null || _e2 === void 0 ? void 0 : _e2.split("/")) !== null && _f !== void 0 ? _f : parentMessageUrl.split("/");
  return React__default__default.createElement(
    "div",
    { className: getClassName([className, "sendbird-quote-message", isByMe ? "outgoing" : "incoming", isUnavailable ? "unavailable" : ""]), key: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId, onClick: function() {
      if (!isUnavailable && onClick) {
        onClick();
      }
    }, onTouchEnd: function() {
      if (!isUnavailable && onClick) {
        onClick();
      }
    } },
    React__default__default.createElement(
      "div",
      { className: "sendbird-quote-message__replied-to" },
      React__default__default.createElement(Icon$1, { className: "sendbird-quote-message__replied-to__icon", type: IconTypes.REPLY, fillColor: IconColors.ON_BACKGROUND_3, width: "12px", height: "12px" }),
      React__default__default.createElement(
        Label,
        { className: "sendbird-quote-message__replied-to__text", testID: "sendbird-quote-message__replied-to__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_3 },
        React__default__default.createElement("span", { className: "sendbird-quote-message__replied-to__text__nickname" }, currentMessageSenderNickname),
        React__default__default.createElement("span", { className: "sendbird-quote-message__replied-to__text__text" }, stringSet2.QUOTED_MESSAGE__REPLIED_TO),
        React__default__default.createElement("span", { className: "sendbird-quote-message__replied-to__text__nickname" }, parentMessageSenderNickname)
      )
    ),
    React__default__default.createElement(
      "div",
      { className: "sendbird-quote-message__replied-message" },
      isUnavailable && React__default__default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__text-message" },
        React__default__default.createElement(Label, { className: "sendbird-quote-message__replied-message__text-message__word", testID: "sendbird-quote-message__replied-message__text-message__word", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, stringSet2.QUOTED_MESSAGE__UNAVAILABLE)
      ),
      isUserMessage(parentMessage) && ((_g2 = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message) === null || _g2 === void 0 ? void 0 : _g2.length) > 0 && !isUnavailable && React__default__default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__text-message" },
        React__default__default.createElement(Label, { className: "sendbird-quote-message__replied-message__text-message__word", testID: "sendbird-quote-message__replied-message__text-message__word", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message)
      ),
      isVoiceMessage(parentMessage) && parentMessageUrl && !isUnavailable && React__default__default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__text-message" },
        React__default__default.createElement(Label, { className: "sendbird-quote-message__replied-message__text-message__word", testID: "sendbird-quote-message__replied-message__text-message__word", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, stringSet2.VOICE_MESSAGE)
      ),
      (isThumbnailMessage(parentMessage) || isMultipleFilesMessage(parentMessage)) && parentMessageUrl && !isUnavailable && React__default__default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__thumbnail-message" },
        React__default__default.createElement(ImageRenderer, { className: "sendbird-quote-message__replied-message__thumbnail-message__image", url: parentMessageUrl, alt: parentMessageType, width: "144px", height: "108px", onLoad: function() {
          return setThumbnailLoaded(true);
        }, defaultComponent: React__default__default.createElement(
          "div",
          { className: "sendbird-quote-message__replied-message__thumbnail-message__placeholder" },
          React__default__default.createElement(
            "div",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon" },
            React__default__default.createElement(Icon$1, { type: isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "22px", height: "22px" })
          )
        ) }),
        isVideo(parentMessageType) && !(((_h = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.thumbnails) === null || _h === void 0 ? void 0 : _h.length) > 0) && React__default__default.createElement(
          React__default__default.Fragment,
          null,
          React__default__default.createElement(
            "video",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__video" },
            React__default__default.createElement("source", { src: parentMessageUrl, type: parentMessageType })
          ),
          React__default__default.createElement(
            "div",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__cover" },
            React__default__default.createElement(
              "div",
              { className: "sendbird-quote-message__replied-message__thumbnail-message__cover__icon" },
              React__default__default.createElement(Icon$1, { type: IconTypes.PLAY, fillColor: IconColors.ON_BACKGROUND_2, width: "14px", height: "14px" })
            )
          )
        ),
        isThumbnailLoaded && isGif$1(parentMessageType) && React__default__default.createElement(
          "div",
          { className: "sendbird-quote-message__replied-message__thumbnail-message__cover" },
          React__default__default.createElement(
            "div",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__cover__icon" },
            React__default__default.createElement(Icon$1, { type: IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: "14px", height: "14px" })
          )
        )
      ),
      getUIKitMessageType(parentMessage) === UIKitMessageTypes.FILE && parentMessageUrl && !isUnavailable && React__default__default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__file-message" },
        React__default__default.createElement(Icon$1, { className: "sendbird-quote-message__replied-message__file-message__type-icon", type: (_b2 = {}, _b2[uikitFileTypes.IMAGE] = IconTypes.PHOTO, _b2[uikitFileTypes.VIDEO] = IconTypes.PLAY, _b2[uikitFileTypes.AUDIO] = IconTypes.FILE_AUDIO, _b2[uikitFileTypes.GIF] = IconTypes.GIF, _b2[uikitFileTypes.OTHERS] = IconTypes.FILE_DOCUMENT, _b2)[getUIKitFileType(parentMessageType)], fillColor: IconColors.ON_BACKGROUND_3, width: "16px", height: "16px" }),
        React__default__default.createElement(Label, { className: "sendbird-quote-message__replied-message__file-message__file-name", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 }, truncateString(splitFileName[splitFileName.length - 1]))
      )
    )
  );
}
var CopyMenuItem$1 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isUserMessage(message))
      copyToClipboard$1(message.message);
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__COPY),
    React__default__default.createElement(Icon$1, { type: IconTypes.COPY, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var ReplyMenuItem$1 = function(props) {
  var _a2, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, setQuoteMessage = _d.setQuoteMessage;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { disabled: message.parentMessageId > 0, onClick: function(e3) {
    var _a3;
    setQuoteMessage(message);
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: ((_b2 = message.parentMessageId) !== null && _b2 !== void 0 ? _b2 : 0) > 0 ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__REPLY),
    React__default__default.createElement(Icon$1, { type: IconTypes.REPLY, fillColor: ((_c = message.parentMessageId) !== null && _c !== void 0 ? _c : 0) > 0 ? IconColors.ON_BACKGROUND_4 : IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var ThreadMenuItem$1 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, onReplyInThread = _b2.onReplyInThread;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    onReplyInThread({ message });
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__THREAD),
    React__default__default.createElement(Icon$1, { type: IconTypes.THREAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var EditMenuItem$1 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, showEdit = _b2.showEdit, isOnline = _b2.isOnline;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isOnline) {
      showEdit(true);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__EDIT),
    React__default__default.createElement(Icon$1, { type: IconTypes.EDIT, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var ResendMenuItem$1 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, resendMessage = _b2.resendMessage, isOnline = _b2.isOnline;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isOnline) {
      resendMessage(message);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__RESEND),
    React__default__default.createElement(Icon$1, { type: IconTypes.REFRESH, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var DeleteMenuItem$1 = function(props) {
  var _a2, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, deleteMessage = _d.deleteMessage, showRemove = _d.showRemove, isOnline = _d.isOnline, disableDeleteMessage = _d.disableDeleteMessage;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { disabled: typeof disableDeleteMessage === "boolean" ? disableDeleteMessage : ((_b2 = (_a2 = message.threadInfo) === null || _a2 === void 0 ? void 0 : _a2.replyCount) !== null && _b2 !== void 0 ? _b2 : 0) > 0, onClick: function(e3) {
    var _a3;
    if (isFailedMessage(message)) {
      deleteMessage(message);
    } else if (isOnline) {
      showRemove(true);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_c = props.children) !== null && _c !== void 0 ? _c : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: disableDeleteMessage ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__DELETE),
    React__default__default.createElement(Icon$1, { type: IconTypes.DELETE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var DownloadMenuItem$1 = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, message = _b2.message, onDownloadClick = _b2.onDownloadClick;
  var url = message.url;
  return React__default__default.createElement(MenuItem$1, __assign({}, props, { onClick: function() {
    hideMenu();
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    "a",
    { className: "sendbird-message__contextmenu--hyperlink", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__SAVE),
    React__default__default.createElement(Icon$1, { type: IconTypes.DOWNLOAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var MobileContextMenu = function(props) {
  var _a2, _b2, _c, _d;
  var channel = props.channel, message = props.message, replyType = props.replyType, userId = props.userId, resendMessage = props.resendMessage, showEdit = props.showEdit, showRemove = props.showRemove, deleteMenuState = props.deleteMenuState, deleteMessage = props.deleteMessage, setQuoteMessage = props.setQuoteMessage, parentRef = props.parentRef, onReplyInThread = props.onReplyInThread, _e2 = props.isOpenedFromThread, isOpenedFromThread = _e2 === void 0 ? false : _e2, _f = props.onDownloadClick, onDownloadClick = _f === void 0 ? null : _f, renderMenuItems = props.renderMenuItems, hideMobileMenu = props.hideMenu;
  var isByMe = ((_a2 = message === null || message === void 0 ? void 0 : message.sender) === null || _a2 === void 0 ? void 0 : _a2.userId) === userId;
  var isOnline = useSendbird().state.config.isOnline;
  var showMenuItemCopy2 = isUserMessage(message);
  var showMenuItemEdit2 = isUserMessage(message) && isSentMessage(message) && isByMe;
  var showMenuItemResend2 = isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
  var showMenuItemDelete2 = !isPendingMessage(message) && isByMe;
  var showMenuItemDeleteByState = isByMe && (deleteMenuState === void 0 || deleteMenuState !== "HIDE");
  var showMenuItemDeleteFinal = showMenuItemDeleteByState && showMenuItemDelete2;
  var showMenuItemDownload = !isPendingMessage(message) && isFileMessage(message) && !(isVoiceMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isSuper) || (channel === null || channel === void 0 ? void 0 : channel.isBroadcast));
  var showMenuItemReply2 = replyType === "QUOTE_REPLY" && !isFailedMessage(message) && !isPendingMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());
  var showMenuItemThread2 = replyType === "THREAD" && !isOpenedFromThread && !isFailedMessage(message) && !isPendingMessage(message) && !isThreadMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());
  var disableDeleteMessage = deleteMenuState !== void 0 && deleteMenuState === "DISABLE" || ((_c = (_b2 = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _b2 === void 0 ? void 0 : _b2.replyCount) !== null && _c !== void 0 ? _c : 0) > 0;
  var contextValue = {
    message,
    hideMenu: hideMobileMenu,
    setQuoteMessage,
    onReplyInThread,
    onMoveToParentMessage: noop$4,
    showEdit,
    showRemove,
    deleteMessage,
    resendMessage,
    isOnline,
    disableDeleteMessage,
    triggerRef: parentRef,
    containerRef: parentRef,
    onDownloadClick
  };
  return React__default__default.createElement(
    MessageMenuProvider,
    { value: contextValue },
    React__default__default.createElement(MenuItems, { className: "sendbird-message__mobile-context-menu", parentRef, parentContainRef: parentRef, closeDropdown: hideMobileMenu }, (_d = renderMenuItems === null || renderMenuItems === void 0 ? void 0 : renderMenuItems({
      items: {
        CopyMenuItem: CopyMenuItem$1,
        ReplyMenuItem: ReplyMenuItem$1,
        ThreadMenuItem: ThreadMenuItem$1,
        EditMenuItem: EditMenuItem$1,
        ResendMenuItem: ResendMenuItem$1,
        DeleteMenuItem: DeleteMenuItem$1
      }
    })) !== null && _d !== void 0 ? _d : React__default__default.createElement(
      React__default__default.Fragment,
      null,
      showMenuItemCopy2 && React__default__default.createElement(CopyMenuItem$1, null),
      showMenuItemReply2 && React__default__default.createElement(ReplyMenuItem$1, null),
      showMenuItemThread2 && React__default__default.createElement(ThreadMenuItem$1, null),
      showMenuItemEdit2 && React__default__default.createElement(EditMenuItem$1, null),
      showMenuItemResend2 && React__default__default.createElement(ResendMenuItem$1, null),
      showMenuItemDeleteFinal && React__default__default.createElement(DeleteMenuItem$1, null),
      showMenuItemDownload && React__default__default.createElement(DownloadMenuItem$1, null)
    ))
  );
};
var CopyMenuItem = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu;
  return React__default__default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isUserMessage(message))
      copyToClipboard$1(message.message);
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Icon$1, { type: IconTypes.COPY, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__COPY)
  ));
};
var EditMenuItem = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, showEdit = _b2.showEdit, isOnline = _b2.isOnline;
  return React__default__default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isOnline) {
      showEdit(true);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Icon$1, { type: IconTypes.EDIT, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__EDIT)
  ));
};
var ResendMenuItem = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, resendMessage = _b2.resendMessage, isOnline = _b2.isOnline;
  return React__default__default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e3) {
    var _a3;
    if (isOnline) {
      resendMessage(message);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Icon$1, { type: IconTypes.REFRESH, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__RESEND)
  ));
};
var ReplyMenuItem = function(props) {
  var _a2, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, setQuoteMessage = _d.setQuoteMessage;
  return React__default__default.createElement(BottomSheetMenuItem, __assign({}, props, { disabled: message.parentMessageId > 0, onClick: function(e3) {
    var _a3;
    setQuoteMessage(message);
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Icon$1, { type: IconTypes.REPLY, fillColor: ((_b2 = message.parentMessageId) !== null && _b2 !== void 0 ? _b2 : 0) > 0 ? IconColors.ON_BACKGROUND_3 : IconColors.PRIMARY, width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: ((_c = message.parentMessageId) !== null && _c !== void 0 ? _c : 0) > 0 ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__REPLY)
  ));
};
var ThreadMenuItem = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, onReplyInThread = _b2.onReplyInThread;
  return React__default__default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e3) {
    var _a3;
    onReplyInThread({ message });
    hideMenu();
    (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
  } }), (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Icon$1, { type: IconTypes.THREAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__THREAD)
  ));
};
var DeleteMenuItem = function(props) {
  var _a2, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, deleteMessage = _d.deleteMessage, showRemove = _d.showRemove, isOnline = _d.isOnline, disableDeleteMessage = _d.disableDeleteMessage;
  return React__default__default.createElement(BottomSheetMenuItem, __assign({}, props, { disabled: typeof disableDeleteMessage === "boolean" ? disableDeleteMessage : ((_b2 = (_a2 = message.threadInfo) === null || _a2 === void 0 ? void 0 : _a2.replyCount) !== null && _b2 !== void 0 ? _b2 : 0) > 0, onClick: function(e3) {
    var _a3;
    if (isFailedMessage(message)) {
      deleteMessage(message);
    } else if (isOnline) {
      showRemove(true);
      hideMenu();
      (_a3 = props.onClick) === null || _a3 === void 0 ? void 0 : _a3.call(props, e3);
    }
  } }), (_c = props.children) !== null && _c !== void 0 ? _c : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Icon$1, { type: IconTypes.DELETE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: disableDeleteMessage ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__DELETE)
  ));
};
var DownloadMenuItem = function(props) {
  var _a2;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, message = _b2.message, onDownloadClick = _b2.onDownloadClick;
  var url = message.url;
  return React__default__default.createElement(BottomSheetMenuItem, { onClick: function() {
    return hideMenu();
  } }, (_a2 = props.children) !== null && _a2 !== void 0 ? _a2 : React__default__default.createElement(
    "a",
    { className: "sendbird-message__bottomsheet--hyperlink", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
    React__default__default.createElement(Icon$1, { type: IconTypes.DOWNLOAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__SAVE)
  ));
};
var EMOJI_SIZE = 38;
var MobileBottomSheet = function(props) {
  var _a2, _b2, _c, _d;
  var hideMenu = props.hideMenu, channel = props.channel, emojiContainer = props.emojiContainer, message = props.message, replyType = props.replyType, userId = props.userId, resendMessage = props.resendMessage, deleteMessage = props.deleteMessage, toggleReaction = props.toggleReaction, _e2 = props.isReactionEnabled, isReactionEnabled = _e2 === void 0 ? false : _e2, showEdit = props.showEdit, showRemove = props.showRemove, deleteMenuState = props.deleteMenuState, setQuoteMessage = props.setQuoteMessage, onReplyInThread = props.onReplyInThread, _f = props.isOpenedFromThread, isOpenedFromThread = _f === void 0 ? false : _f, onDownloadClick = props.onDownloadClick, renderMenuItems = props.renderMenuItems;
  var isByMe = ((_a2 = message === null || message === void 0 ? void 0 : message.sender) === null || _a2 === void 0 ? void 0 : _a2.userId) === userId;
  var isOnline = useSendbird().state.config.isOnline;
  var showMenuItemCopy2 = isUserMessage(message);
  var showMenuItemEdit2 = isUserMessage(message) && isSentMessage(message) && isByMe;
  var showMenuItemResend2 = isOnline && isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
  var showMenuItemDelete2 = !isPendingMessage(message) && isByMe;
  var showMenuItemDeleteByState = isByMe && (deleteMenuState === void 0 || deleteMenuState !== "HIDE");
  var showMenuItemDeleteFinal = showMenuItemDeleteByState && showMenuItemDelete2;
  var disableDelete = deleteMenuState !== void 0 && deleteMenuState === "DISABLE" || ((_c = (_b2 = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _b2 === void 0 ? void 0 : _b2.replyCount) !== null && _c !== void 0 ? _c : 0) > 0;
  var showMenuItemDownload = isSentMessage(message) && isFileMessage(message) && !isVoiceMessage(message);
  var showReaction = !isFailedMessage(message) && !isPendingMessage(message) && isReactionEnabled;
  var showMenuItemReply2 = replyType === "QUOTE_REPLY" && !isFailedMessage(message) && !isPendingMessage(message) && ((channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel === null || channel === void 0 ? void 0 : channel.isBroadcast));
  var showMenuItemThread2 = replyType === "THREAD" && !isOpenedFromThread && !isFailedMessage(message) && !isPendingMessage(message) && !isThreadMessage(message) && ((channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel === null || channel === void 0 ? void 0 : channel.isBroadcast));
  var maxEmojisPerRow = Math.floor(window.innerWidth / EMOJI_SIZE) - 1;
  var _g2 = useState(false), showEmojisOnly = _g2[0], setShowEmojisOnly = _g2[1];
  var emojis = emojiContainer && getEmojiListAll(emojiContainer);
  var visibleEmojis = showEmojisOnly ? emojis : emojis === null || emojis === void 0 ? void 0 : emojis.slice(0, maxEmojisPerRow);
  var canShowMoreEmojis = emojis && emojis.length > maxEmojisPerRow;
  var contextValue = {
    message,
    hideMenu,
    setQuoteMessage,
    onReplyInThread,
    onMoveToParentMessage: function() {
    },
    showEdit,
    showRemove,
    deleteMessage,
    resendMessage,
    isOnline,
    disableDeleteMessage: disableDelete,
    triggerRef: null,
    containerRef: null,
    onDownloadClick
  };
  return React__default__default.createElement(
    MessageMenuProvider,
    { value: contextValue },
    React__default__default.createElement(
      BottomSheet,
      { onBackdropClick: hideMenu },
      React__default__default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet" },
        showReaction && React__default__default.createElement(
          "div",
          { className: "sendbird-message__bottomsheet-reactions" },
          React__default__default.createElement(
            "ul",
            { className: "sendbird-message__bottomsheet-reaction-bar" },
            React__default__default.createElement(
              "div",
              { className: classnames("sendbird-message__bottomsheet-reaction-bar__row", showEmojisOnly && "sendbird-message__bottomsheet-reaction-bar__all") },
              visibleEmojis.map(function(emoji) {
                var _a3, _b3, _c2;
                var isReacted = (_c2 = (_b3 = (_a3 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a3 === void 0 ? void 0 : _a3.filter(function(reaction) {
                  return reaction.key === emoji.key;
                })[0]) === null || _b3 === void 0 ? void 0 : _b3.userIds) === null || _c2 === void 0 ? void 0 : _c2.some(function(reactorId) {
                  return reactorId === userId;
                });
                return React__default__default.createElement(
                  ReactionButton,
                  { key: emoji.key, width: "".concat(EMOJI_SIZE, "px"), height: "".concat(EMOJI_SIZE, "px"), selected: isReacted, onClick: function() {
                    hideMenu();
                    toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
                  }, testID: "ui_mobile_emoji_reactions_menu_".concat(emoji.key) },
                  React__default__default.createElement(ImageRenderer, { url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || "", width: "28px", height: "28px", placeHolder: function(_a4) {
                    var style = _a4.style;
                    return React__default__default.createElement(
                      "div",
                      { style },
                      React__default__default.createElement(Icon$1, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
                    );
                  } })
                );
              }),
              canShowMoreEmojis && !showEmojisOnly && React__default__default.createElement(
                ReactionButton,
                { key: "emoji_more", width: "38px", height: "38px", onClick: function() {
                  return setShowEmojisOnly(true);
                }, testID: "ui_mobile_emoji_reactions_menu_emojiadd" },
                React__default__default.createElement(ImageRenderer, { url: "", width: "28px", height: "28px", placeHolder: function(_a3) {
                  var style = _a3.style;
                  return React__default__default.createElement(
                    "div",
                    { style },
                    React__default__default.createElement(Icon$1, { type: IconTypes.EMOJI_MORE, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
                  );
                } })
              )
            )
          )
        ),
        !showEmojisOnly && React__default__default.createElement("div", { className: "sendbird-message__bottomsheet--actions" }, (_d = renderMenuItems === null || renderMenuItems === void 0 ? void 0 : renderMenuItems({
          items: {
            CopyMenuItem,
            EditMenuItem,
            ResendMenuItem,
            ReplyMenuItem,
            ThreadMenuItem,
            DeleteMenuItem
          }
        })) !== null && _d !== void 0 ? _d : React__default__default.createElement(
          React__default__default.Fragment,
          null,
          showMenuItemCopy2 && React__default__default.createElement(CopyMenuItem, null),
          showMenuItemEdit2 && React__default__default.createElement(EditMenuItem, null),
          showMenuItemResend2 && React__default__default.createElement(ResendMenuItem, null),
          showMenuItemReply2 && React__default__default.createElement(ReplyMenuItem, null),
          showMenuItemThread2 && React__default__default.createElement(ThreadMenuItem, null),
          showMenuItemDeleteFinal && React__default__default.createElement(DeleteMenuItem, null),
          showMenuItemDownload && React__default__default.createElement(DownloadMenuItem, null)
        ))
      )
    )
  );
};
var MobileMenu = function(props) {
  return React__default__default.createElement(React__default__default.Fragment, null, (props === null || props === void 0 ? void 0 : props.isReactionEnabled) ? React__default__default.createElement(MobileBottomSheet, __assign({}, props)) : React__default__default.createElement(MobileContextMenu, __assign({}, props)));
};
function ThreadReplies(_a2, ref) {
  var _b2;
  var className = _a2.className, threadInfo = _a2.threadInfo, onClick = _a2.onClick;
  var _c = threadInfo.mostRepliedUsers, mostRepliedUsers = _c === void 0 ? [] : _c, replyCount = threadInfo.replyCount;
  var stringSet2 = useLocalization().stringSet;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-ui-thread-replies ".concat(className), role: "button", onClick: function(e3) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e3);
      e3 === null || e3 === void 0 ? void 0 : e3.stopPropagation();
    }, onKeyDown: function(e3) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e3);
      e3 === null || e3 === void 0 ? void 0 : e3.stopPropagation();
    }, ref },
    React__default__default.createElement(
      "div",
      { className: "sendbird-ui-thread-replies__user-profiles" },
      mostRepliedUsers.slice(0, 4).map(function(user) {
        return React__default__default.createElement(Avatar$1, { key: user.userId, className: "sendbird-ui-thread-replies__user-profiles__avatar", src: user === null || user === void 0 ? void 0 : user.profileUrl, alt: "user profile", width: "20px", height: "20px" });
      }),
      (mostRepliedUsers === null || mostRepliedUsers === void 0 ? void 0 : mostRepliedUsers.length) >= 5 && React__default__default.createElement(
        "div",
        { className: "sendbird-ui-thread-replies__user-profiles__avatar" },
        React__default__default.createElement(Avatar$1, { className: "sendbird-ui-thread-replies__user-profiles__avatar__image", src: (_b2 = mostRepliedUsers === null || mostRepliedUsers === void 0 ? void 0 : mostRepliedUsers[4]) === null || _b2 === void 0 ? void 0 : _b2.profileUrl, alt: "user profile", width: "20px", height: "20px" }),
        React__default__default.createElement("div", { className: "sendbird-ui-thread-replies__user-profiles__avatar__cover" }),
        React__default__default.createElement(
          "div",
          { className: "sendbird-ui-thread-replies__user-profiles__avatar__plus" },
          React__default__default.createElement(Icon$1, { type: IconTypes.PLUS, fillColor: IconColors.WHITE, width: "16px", height: "16px" })
        )
      )
    ),
    React__default__default.createElement(Label, { className: "sendbird-ui-thread-replies__reply-counts", type: LabelTypography.CAPTION_2, color: LabelColors.PRIMARY }, replyCount === 1 ? "".concat(replyCount, " ").concat(stringSet2.CHANNEL__THREAD_REPLY) : "".concat(replyCount > 99 ? stringSet2.CHANNEL__THREAD_OVER_MAX : replyCount, " ").concat(stringSet2.CHANNEL__THREAD_REPLIES)),
    React__default__default.createElement(Icon$1, { className: "sendbird-ui-thread-replies__icon", type: IconTypes.CHEVRON_RIGHT, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
  );
}
var ThreadReplies$1 = React__default__default.forwardRef(ThreadReplies);
function MentionLabel(props) {
  var _a2, _b2, _c;
  var mentionTemplate = props.mentionTemplate, mentionedUserId = props.mentionedUserId, mentionedUserNickname = props.mentionedUserNickname, isByMe = props.isByMe;
  var mentionRef = useRef();
  var state = useSendbird().state;
  var userId = (_a2 = state === null || state === void 0 ? void 0 : state.config) === null || _a2 === void 0 ? void 0 : _a2.userId;
  var sdk = (_c = (_b2 = state === null || state === void 0 ? void 0 : state.stores) === null || _b2 === void 0 ? void 0 : _b2.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;
  var amIBeingMentioned = userId === mentionedUserId;
  var _d = useState(), user = _d[0], setUser = _d[1];
  var fetchUser = useCallback(function(toggleDropdown) {
    if (user || !(sdk === null || sdk === void 0 ? void 0 : sdk.createApplicationUserListQuery)) {
      toggleDropdown();
      return;
    }
    var query = sdk === null || sdk === void 0 ? void 0 : sdk.createApplicationUserListQuery({
      userIdsFilter: [mentionedUserId]
    });
    query.next().then(function(members) {
      if ((members === null || members === void 0 ? void 0 : members.length) > 0) {
        setUser(members[0]);
      }
      toggleDropdown();
    });
  }, [sdk, mentionedUserId]);
  return React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
    return React__default__default.createElement(
      "a",
      { className: classnames("sendbird-word__mention", amIBeingMentioned && "sendbird-word__mention--me"), onClick: function() {
        return fetchUser(toggleDropdown);
      }, ref: mentionRef, "data-userid": mentionedUserId, "data-nickname": mentionedUserNickname, "data-sb-mention": true },
      React__default__default.createElement(Label, { type: LabelTypography.CAPTION_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, "".concat(mentionTemplate).concat(mentionedUserNickname))
    );
  }, menuItems: function(closeDropdown) {
    return React__default__default.createElement(
      MenuItems,
      {
        /**
        * parentRef: For catching location(x, y) of MenuItems
        * parentContainRef: For toggling more options(menus & reactions)
        */
        parentRef: mentionRef,
        parentContainRef: mentionRef,
        closeDropdown,
        style: { paddingTop: "0px", paddingBottom: "0px" }
      },
      React__default__default.createElement(UserProfile, { user, onSuccess: closeDropdown, currentUserId: userId })
    );
  } });
}
var http = /https?:\/\//;
function LinkLabel(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, src = _a2.src, type = _a2.type, color = _a2.color, children = _a2.children;
  var url = http.test(src) ? src : "http://".concat(src);
  return React__default__default.createElement(
    "a",
    {
      className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-link-label",
        changeColorToClassName$2(color)
      ], false).join(" "),
      href: url,
      target: "_blank",
      rel: "noopener noreferrer",
      // for mobile
      onTouchEnd: function(e3) {
        e3.preventDefault();
        e3.nativeEvent.stopImmediatePropagation();
        openURL(url);
      }
    },
    React__default__default.createElement(Label, { className: "sendbird-link-label__label", testID: "sendbird-link-label__label", type, color }, children)
  );
}
function keyGenerator(createdAt, messageUpdatedAt, index) {
  return "sb-msg_".concat(createdAt, "_").concat(messageUpdatedAt, "_").concat(index);
}
var supportedProtocols = ["https:", "http:", "tel:", "mailto:"];
function asSafeURL(url) {
  var safeURL = decodeURIComponent(url);
  try {
    var protocol_1 = new URL(safeURL).protocol;
    if (supportedProtocols.some(function(it2) {
      return it2 === protocol_1.toLowerCase();
    })) {
      return safeURL;
    } else {
      return "#";
    }
  } catch (error) {
    if (!safeURL.startsWith("http://") && !safeURL.startsWith("https://")) {
      safeURL = "https://" + safeURL;
    }
  }
  return safeURL;
}
function TextFragment(_a2) {
  var tokens = _a2.tokens;
  var messageStore = useMessageContext$1();
  var message = messageStore === null || messageStore === void 0 ? void 0 : messageStore.message;
  var isByMe = messageStore === null || messageStore === void 0 ? void 0 : messageStore.isByMe;
  var updatedAt = message.updatedAt, createdAt = message.createdAt;
  return React__default__default.createElement(React__default__default.Fragment, null, tokens === null || tokens === void 0 ? void 0 : tokens.map(function(token, idx) {
    var key = keyGenerator(createdAt, updatedAt, idx);
    return K(token.type).with(TOKEN_TYPES.markdown, function() {
      var markdownToken = token;
      var groups = markdownToken.groups;
      return React__default__default.createElement("span", { className: "sendbird-word", key, "data-testid": "sendbird-ui-word" }, K(markdownToken.markdownType).with("bold", function() {
        return React__default__default.createElement(
          "span",
          { style: { fontWeight: "bold" } },
          React__default__default.createElement(TextFragment, { tokens: tokenizeMarkdown({ messageText: groups[1] }) })
        );
      }).with("url", function() {
        return React__default__default.createElement(
          "a",
          { className: isByMe ? "sendbird-label--color-oncontent-1" : "sendbird-label--color-onbackground-1", href: asSafeURL(groups[2]) },
          React__default__default.createElement(TextFragment, { tokens: tokenizeMarkdown({ messageText: groups[1] }) })
        );
      }).otherwise(function() {
        return React__default__default.createElement(React__default__default.Fragment, null);
      }));
    }).with(TOKEN_TYPES.mention, function() {
      return React__default__default.createElement(
        "span",
        { className: "sendbird-word", key, "data-testid": "sendbird-ui-word" },
        React__default__default.createElement(MentionLabel, {
          mentionTemplate: USER_MENTION_PREFIX,
          // @ts-ignore
          mentionedUserId: token.userId,
          mentionedUserNickname: token.value,
          isByMe
        })
      );
    }).with(TOKEN_TYPES.url, function() {
      return React__default__default.createElement(
        "span",
        { className: "sendbird-word", key, "data-testid": "sendbird-ui-word" },
        React__default__default.createElement(LinkLabel, { src: token.value, type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, token.value)
      );
    }).otherwise(function() {
      return React__default__default.createElement(React__default__default.Fragment, { key }, getWhiteSpacePreservedText(token.value));
    });
  }));
}
function OGMessageItemBody(_a2) {
  var _b2, _c, _d, _e2;
  var className = _a2.className, message = _a2.message, _f = _a2.isByMe, isByMe = _f === void 0 ? false : _f, _g2 = _a2.mouseHover, mouseHover = _g2 === void 0 ? false : _g2, _h = _a2.isMentionEnabled, isMentionEnabled = _h === void 0 ? false : _h, _j = _a2.isReactionEnabled, isReactionEnabled = _j === void 0 ? false : _j, _k = _a2.isMarkdownEnabled, isMarkdownEnabled = _k === void 0 ? false : _k, _l = _a2.onMessageHeightChange, onMessageHeightChange = _l === void 0 ? function() {
  } : _l;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var isMessageMentioned = isMentionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && ((_c = message === null || message === void 0 ? void 0 : message.mentionedUsers) === null || _c === void 0 ? void 0 : _c.length) > 0;
  var tokens = useMemo(function() {
    var _a3;
    if (isMessageMentioned) {
      return tokenizeMessage({
        mentionedUsers: (_a3 = message === null || message === void 0 ? void 0 : message.mentionedUsers) !== null && _a3 !== void 0 ? _a3 : void 0,
        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,
        includeMarkdown: isMarkdownEnabled
      });
    }
    return tokenizeMessage({
      messageText: message === null || message === void 0 ? void 0 : message.message,
      includeMarkdown: isMarkdownEnabled
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  var openOpenGraphURL = function() {
    var _a3;
    return openURL((_a3 = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a3 === void 0 ? void 0 : _a3.url);
  };
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-og-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_d = message === null || message === void 0 ? void 0 : message.reactions) === null || _d === void 0 ? void 0 : _d.length) > 0 ? "reactions" : ""
    ]) },
    React__default__default.createElement(
      Label,
      { type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 },
      React__default__default.createElement(
        "div",
        { className: OG_MESSAGE_BODY_CLASSNAME },
        React__default__default.createElement(TextFragment, { tokens }),
        isEditedMessage(message) && React__default__default.createElement(Label, { className: "sendbird-og-message-item-body__text-bubble__message", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2 }, " ".concat(stringSet2.MESSAGE_EDITED, " "))
      )
    ),
    ((_e2 = message.ogMetaData) === null || _e2 === void 0 ? void 0 : _e2.defaultImage) && React__default__default.createElement(OGImageSection, { onClick: openOpenGraphURL, ogImage: message.ogMetaData.defaultImage, onMessageHeightChange }),
    message.ogMetaData && React__default__default.createElement(OGDescriptionSection, { onClick: openOpenGraphURL, ogMetaData: message.ogMetaData, onMessageHeightChange }),
    React__default__default.createElement("div", { className: "sendbird-og-message-item-body__cover" })
  );
}
var OGImageSection = function(props) {
  var onClick = props.onClick, ogImage = props.ogImage, onMessageHeightChange = props.onMessageHeightChange;
  var imageRef = useRef(null);
  var isMobile = useMediaQueryContext().isMobile;
  return React__default__default.createElement(
    "div",
    { ref: imageRef, className: classnames("sendbird-og-message-item-body__og-thumbnail", !ogImage.url && "sendbird-og-message-item-body__og-thumbnail__empty"), onClick: function() {
      return onClick();
    } },
    React__default__default.createElement(ImageRenderer, { className: "sendbird-og-message-item-body__og-thumbnail__image", url: ogImage.url || "", alt: ogImage.alt || "", width: "100%", height: isMobile ? "136px" : "240px", onLoad: onMessageHeightChange, onError: function() {
      var _a2, _b2;
      try {
        (_b2 = (_a2 = imageRef === null || imageRef === void 0 ? void 0 : imageRef.current) === null || _a2 === void 0 ? void 0 : _a2.classList) === null || _b2 === void 0 ? void 0 : _b2.add("sendbird-og-message-item-body__og-thumbnail__empty");
      } catch (error) {
      }
    }, defaultComponent: React__default__default.createElement(
      "div",
      { className: "sendbird-og-message-item-body__og-thumbnail__place-holder" },
      React__default__default.createElement(Icon$1, { className: "sendbird-og-message-item-body__og-thumbnail__place-holder__icon", type: IconTypes.THUMBNAIL_NONE, width: "56px", height: "56px" })
    ) })
  );
};
var OGDescriptionSection = function(props) {
  var onClick = props.onClick, ogMetaData = props.ogMetaData, onMessageHeightChange = props.onMessageHeightChange;
  useEffect(function() {
    onMessageHeightChange();
  }, [ogMetaData.title, ogMetaData.description, ogMetaData.url]);
  return React__default__default.createElement(
    "div",
    { className: "sendbird-og-message-item-body__description", onClick: function() {
      return onClick();
    } },
    ogMetaData.title && React__default__default.createElement(Label, { className: "sendbird-og-message-item-body__description__title", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.title),
    ogMetaData.description && React__default__default.createElement(Label, { className: "sendbird-og-message-item-body__description__description", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.description),
    ogMetaData.url && React__default__default.createElement(Label, { className: "sendbird-og-message-item-body__description__url", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, ogMetaData.url)
  );
};
function TextMessageItemBody(_a2) {
  var _b2;
  var _c = _a2.className, className = _c === void 0 ? "" : _c, message = _a2.message, _d = _a2.isByMe, isByMe = _d === void 0 ? false : _d, _e2 = _a2.mouseHover, mouseHover = _e2 === void 0 ? false : _e2, _f = _a2.isMentionEnabled, isMentionEnabled = _f === void 0 ? false : _f, _g2 = _a2.isReactionEnabled, isReactionEnabled = _g2 === void 0 ? false : _g2, _h = _a2.isMarkdownEnabled, isMarkdownEnabled = _h === void 0 ? false : _h;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var isMessageMentioned = isMentionEnabled && (message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) && message.mentionedMessageTemplate.length > 0 && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && message.mentionedUsers.length > 0;
  var tokens = useMemo(function() {
    var _a3;
    if (isMessageMentioned) {
      return tokenizeMessage({
        mentionedUsers: (_a3 = message === null || message === void 0 ? void 0 : message.mentionedUsers) !== null && _a3 !== void 0 ? _a3 : void 0,
        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,
        includeMarkdown: isMarkdownEnabled
      });
    }
    return tokenizeMessage({
      messageText: message === null || message === void 0 ? void 0 : message.message,
      includeMarkdown: isMarkdownEnabled
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  return React__default__default.createElement(
    Label,
    { type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 },
    React__default__default.createElement(
      "div",
      { className: getClassName([
        className,
        TEXT_MESSAGE_BODY_CLASSNAME,
        isByMe ? "outgoing" : "incoming",
        mouseHover ? "mouse-hover" : "",
        isReactionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 ? "reactions" : ""
      ]) },
      React__default__default.createElement(TextFragment, { tokens }),
      isEditedMessage(message) && React__default__default.createElement(Label, { className: "sendbird-text-message-item-body__message edited", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2 }, " ".concat(stringSet2.MESSAGE_EDITED, " "))
    )
  );
}
function FileMessageItemBody(_a2) {
  var _this = this;
  var _b2;
  var _c = _a2.className, className = _c === void 0 ? "" : _c, message = _a2.message, _d = _a2.isByMe, isByMe = _d === void 0 ? false : _d, _e2 = _a2.mouseHover, mouseHover = _e2 === void 0 ? false : _e2, _f = _a2.isReactionEnabled, isReactionEnabled = _f === void 0 ? false : _f, truncateLimit = _a2.truncateLimit, onBeforeDownloadFileMessage = _a2.onBeforeDownloadFileMessage;
  var logger = null;
  try {
    var globalLogger = useSendbird().state.config.logger;
    logger = globalLogger;
  } catch (err) {
  }
  var isMobile = useMediaQueryContext().isMobile;
  var truncateMaxNum = truncateLimit !== null && truncateLimit !== void 0 ? truncateLimit : isMobile ? 20 : void 0;
  var downloadFileWithUrl = function() {
    return openURL(message === null || message === void 0 ? void 0 : message.url);
  };
  var handleOnClickTextButton = onBeforeDownloadFileMessage ? function() {
    return __awaiter$5(_this, void 0, void 0, function() {
      var allowDownload, err_1;
      var _a3, _b3;
      return __generator(this, function(_c2) {
        switch (_c2.label) {
          case 0:
            _c2.trys.push([0, 2, , 3]);
            return [4, onBeforeDownloadFileMessage({ message })];
          case 1:
            allowDownload = _c2.sent();
            if (allowDownload) {
              downloadFileWithUrl();
            } else {
              (_a3 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "FileMessageItemBody: Not allowed to download.");
            }
            return [3, 3];
          case 2:
            err_1 = _c2.sent();
            (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "FileMessageItemBody: Error occurred while determining download continuation:", err_1);
            return [3, 3];
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  } : downloadFileWithUrl;
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      className,
      "sendbird-file-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 ? "reactions" : ""
    ]) },
    React__default__default.createElement(
      "div",
      { className: "sendbird-file-message-item-body__file-icon" },
      React__default__default.createElement(Icon$1, { className: "sendbird-file-message-item-body__file-icon__icon", type: {
        IMAGE: IconTypes.PHOTO,
        VIDEO: IconTypes.PLAY,
        AUDIO: IconTypes.FILE_AUDIO,
        GIF: IconTypes.GIF,
        OTHERS: IconTypes.FILE_DOCUMENT
      }[getUIKitFileType(message === null || message === void 0 ? void 0 : message.type)], fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
    ),
    React__default__default.createElement(
      TextButton,
      { className: "sendbird-file-message-item-body__file-name", onClick: handleOnClickTextButton, color: isByMe ? Colors.ONCONTENT_1 : Colors.ONBACKGROUND_1 },
      React__default__default.createElement(Label, { className: "sendbird-file-message-item-body__file-name__text", testID: "sendbird-file-message-item-body__file-name__text", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, truncateString((message === null || message === void 0 ? void 0 : message.name) || (message === null || message === void 0 ? void 0 : message.url), truncateMaxNum))
    )
  );
}
function useKeyDown(ref, keyDownCallbackMap) {
  useLayoutEffect(function() {
    var _a2;
    (_a2 = ref.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  }, [ref.current]);
  var onKeyDown = usePreservedCallback$1(function(event) {
    var callback = keyDownCallbackMap[event.key];
    callback === null || callback === void 0 ? void 0 : callback(event);
    event.stopPropagation();
  });
  return onKeyDown;
}
var ViewerTypes = {
  MULTI: "MULTI"
};
function mapFileViewerComponentProps(_a2) {
  var props = _a2.props;
  if (props.viewerType === ViewerTypes.MULTI) {
    var _b2 = props, fileInfoList = _b2.fileInfoList, currentIndex = _b2.currentIndex;
    return fileInfoList[currentIndex];
  }
  var fileInfo = props;
  return {
    name: fileInfo.name,
    type: fileInfo.type,
    url: fileInfo.url
  };
}
function DeleteButton(props) {
  if (props.viewerType !== ViewerTypes.MULTI) {
    var onDelete_1 = props.onDelete, isByMe = props.isByMe, disableDelete_1 = props.disableDelete, className = props.className;
    return isByMe ? React__default__default.createElement(
      "div",
      { className: "sendbird-fileviewer__header__right__actions__delete ".concat(className) },
      React__default__default.createElement(Icon$1, { className: disableDelete_1 ? "disabled" : "", type: IconTypes.DELETE, fillColor: disableDelete_1 ? IconColors.GRAY : IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function(e3) {
        if (!disableDelete_1) {
          onDelete_1 === null || onDelete_1 === void 0 ? void 0 : onDelete_1(e3);
        }
      } })
    ) : React__default__default.createElement(React__default__default.Fragment, null);
  }
  return React__default__default.createElement(React__default__default.Fragment, null);
}
function Slider(props) {
  if (props.viewerType === ViewerTypes.MULTI) {
    var onClickLeft_1 = props.onClickLeft, onClickRight_1 = props.onClickRight;
    return React__default__default.createElement(
      "div",
      { className: "sendbird-file-viewer-slider" },
      React__default__default.createElement(
        "div",
        { className: "sendbird-file-viewer-arrow--left" },
        React__default__default.createElement(Icon$1, { type: IconTypes.SLIDE_LEFT, fillColor: IconColors.ON_BACKGROUND_1, height: SLIDER_BUTTON_ICON_SIDE_LENGTH, width: SLIDER_BUTTON_ICON_SIDE_LENGTH, onClick: function(e3) {
          onClickLeft_1 === null || onClickLeft_1 === void 0 ? void 0 : onClickLeft_1();
          e3.stopPropagation();
        } })
      ),
      React__default__default.createElement(
        "div",
        { className: "sendbird-file-viewer-arrow--right" },
        React__default__default.createElement(Icon$1, { type: IconTypes.SLIDE_LEFT, fillColor: IconColors.ON_BACKGROUND_1, height: SLIDER_BUTTON_ICON_SIDE_LENGTH, width: SLIDER_BUTTON_ICON_SIDE_LENGTH, onClick: function(e3) {
          e3.stopPropagation();
          onClickRight_1 === null || onClickRight_1 === void 0 ? void 0 : onClickRight_1();
        } })
      )
    );
  }
  return React__default__default.createElement(React__default__default.Fragment, null);
}
var FileViewerComponent$1 = function(props) {
  var profileUrl = props.profileUrl, nickname = props.nickname, onClose = props.onClose, onDownloadClick = props.onDownloadClick;
  var _a2 = props, onClickLeft = _a2.onClickLeft, onClickRight = _a2.onClickRight;
  var ref = useRef(null);
  var onKeyDown = useKeyDown(ref, {
    Escape: function(e3) {
      return onClose === null || onClose === void 0 ? void 0 : onClose(e3);
    },
    ArrowLeft: function() {
      return onClickLeft === null || onClickLeft === void 0 ? void 0 : onClickLeft();
    },
    ArrowRight: function() {
      return onClickRight === null || onClickRight === void 0 ? void 0 : onClickRight();
    }
  });
  var _b2 = mapFileViewerComponentProps({ props }), name = _b2.name, type = _b2.type, url = _b2.url;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(
    Modal,
    { onClose },
    React__default__default.createElement(
      "div",
      {
        className: "sendbird-fileviewer",
        "data-testid": "sendbird-fileviewer",
        onKeyDown,
        // to focus
        tabIndex: 1,
        ref
      },
      React__default__default.createElement(
        "div",
        { className: "sendbird-fileviewer__header" },
        React__default__default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__left" },
          React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__avatar" },
            React__default__default.createElement(Avatar$1, { height: "32px", width: "32px", src: profileUrl })
          ),
          React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__text-container" },
            React__default__default.createElement(Label, { className: "sendbird-fileviewer__header__left__filename", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, name),
            React__default__default.createElement(Label, { className: "sendbird-fileviewer__header__left__sender-name", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, nickname)
          )
        ),
        React__default__default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__right" },
          isSupportedFileView(type) && React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions" },
            React__default__default.createElement(
              "a",
              { className: "sendbird-fileviewer__header__right__actions__download", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
              React__default__default.createElement(Icon$1, { type: IconTypes.DOWNLOAD, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px" })
            ),
            React__default__default.createElement(DeleteButton, __assign({ className: "sendbird-fileviewer__header__right__actions__delete" }, props))
          ),
          React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions__close" },
            React__default__default.createElement(Icon$1, { type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function(e3) {
              return onClose === null || onClose === void 0 ? void 0 : onClose(e3);
            } })
          )
        )
      ),
      React__default__default.createElement(
        "div",
        { className: "sendbird-fileviewer__content" },
        isVideo(type) && React__default__default.createElement(
          "video",
          { controls: true, className: "sendbird-fileviewer__content__video" },
          React__default__default.createElement("source", { src: url, type })
        ),
        isImage(type) && React__default__default.createElement("img", { src: url, alt: name, className: props.viewerType === ViewerTypes.MULTI ? "sendbird-fileviewer__content__img__multi" : "sendbird-fileviewer__content__img" }),
        !isSupportedFileView(type) && React__default__default.createElement(
          "div",
          { className: "sendbird-fileviewer__content__unsupported" },
          React__default__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, (stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.UI__FILE_VIEWER__UNSUPPORT) || "Unsupported message")
        ),
        React__default__default.createElement(Slider, __assign({}, props))
      )
    )
  );
};
function FileViewer$1(_a2) {
  var _b2, _c, _d;
  var message = _a2.message, _e2 = _a2.statefulFileInfoList, statefulFileInfoList = _e2 === void 0 ? [] : _e2, onClose = _a2.onClose, _f = _a2.isByMe, isByMe = _f === void 0 ? false : _f, onDelete = _a2.onDelete, currentIndex = _a2.currentIndex, onClickLeft = _a2.onClickLeft, onClickRight = _a2.onClickRight, onDownloadClick = _a2.onDownloadClick;
  if (isMultipleFilesMessage(message)) {
    var castedMessage = message;
    return React__default__default.createElement(FileViewerComponent$1, { profileUrl: castedMessage.sender.profileUrl, nickname: castedMessage.sender.nickname, viewerType: ViewerTypes.MULTI, fileInfoList: statefulFileInfoList.filter(function(fileInfo) {
      return fileInfo.url;
    }).map(function(fileInfo) {
      return {
        name: fileInfo.fileName || "",
        type: fileInfo.mimeType || "",
        url: fileInfo.url || ""
      };
    }), currentIndex: currentIndex || 0, onClickLeft: onClickLeft || noop$4, onClickRight: onClickRight || noop$4, onClose, onDownloadClick });
  } else if (isFileMessage(message)) {
    var castedMessage = message;
    return createPortal(React__default__default.createElement(FileViewerComponent$1, { profileUrl: (_b2 = castedMessage.sender) === null || _b2 === void 0 ? void 0 : _b2.profileUrl, nickname: (_c = castedMessage.sender) === null || _c === void 0 ? void 0 : _c.nickname, name: castedMessage.name, type: castedMessage.type, url: castedMessage === null || castedMessage === void 0 ? void 0 : castedMessage.url, isByMe, disableDelete: (((_d = castedMessage.threadInfo) === null || _d === void 0 ? void 0 : _d.replyCount) || 0) > 0, onClose, onDelete: onDelete || noop$4, onDownloadClick }), document.getElementById(MODAL_ROOT));
  }
  return React__default__default.createElement(React__default__default.Fragment, null);
}
function ImageGrid(_a2) {
  var _b2;
  var children = _a2.children, className = _a2.className, message = _a2.message, isReactionEnabled = _a2.isReactionEnabled;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-image-grid-wrap" },
    React__default__default.createElement("div", { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-image-grid",
      isReactionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 ? "reactions" : ""
    ]) }, children)
  );
}
var GRID_WIDTH_CHAT_WEB = 400;
var GRID_SIDE_PADDING = 8;
var GRID_GAP = 4;
var TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 54;
var PROFILE_IMAGE_WIDTH = 40;
var CHAT_MOBILE_SIDE_PADDING = 48;
var THREAD_PARENT_WIDTH = 320;
var THREAD_PARENT_SIDE_PADDING = 28;
var THREAD_PARENT_GRID_MARGIN_LEFT = 12;
var THREAD_CHILD_WIDTH = 200;
var THREAD_CHILD_SIDE_PADDING = 8;
var THREAD_CHILD_MOBILE_SIDE_PADDING = 32;
var THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 60;
var MULTIPLE_FILES_IMAGE_SIDE_LENGTH = {
  CHAT_WEB: "calc(".concat(GRID_WIDTH_CHAT_WEB / 2, "px - ").concat((GRID_SIDE_PADDING + GRID_GAP) / 2, "px)"),
  CHAT_MOBILE: "calc(50vw - ".concat((CHAT_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, "px)"),
  THREAD_PARENT_WEB: "calc(".concat((THREAD_PARENT_WIDTH - (THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP)) / 2, "px)"),
  THREAD_PARENT_MOBILE: "calc(50vw - ".concat((THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP) / 2, "px)"),
  THREAD_CHILD_WEB: "calc(".concat((THREAD_CHILD_WIDTH - THREAD_CHILD_SIDE_PADDING - GRID_GAP) / 2, "px)"),
  THREAD_CHILD_MOBILE: "calc(50vw - ".concat((THREAD_CHILD_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, "px)")
};
var MULTIPLE_FILES_IMAGE_BORDER_RADIUS = {
  CHAT_WEB: "6px",
  CHAT_MOBILE: "6px",
  THREAD_PARENT_WEB: "6px",
  THREAD_PARENT_MOBILE: "6px",
  THREAD_CHILD_WEB: "6px",
  THREAD_CHILD_MOBILE: "6px"
};
var MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH = "34px";
var ThreadMessageKind = {
  PARENT: "parent",
  CHILD: "child"
};
function MultipleFilesMessageItemBody(_a2) {
  var _this = this;
  var className = _a2.className, message = _a2.message, _b2 = _a2.isReactionEnabled, isReactionEnabled = _b2 === void 0 ? false : _b2, threadMessageKindKey = _a2.threadMessageKindKey, _c = _a2.statefulFileInfoList, statefulFileInfoList = _c === void 0 ? [] : _c, _d = _a2.onBeforeDownloadFileMessage, onBeforeDownloadFileMessage = _d === void 0 ? null : _d;
  var logger = useSendbird().state.config.logger;
  var _e2 = useState(-1), currentFileViewerIndex = _e2[0], setCurrentFileViewerIndex = _e2[1];
  function onClose() {
    setCurrentFileViewerIndex(-1);
  }
  function onClickLeft() {
    setCurrentFileViewerIndex(currentFileViewerIndex === 0 ? statefulFileInfoList.length - 1 : currentFileViewerIndex - 1);
  }
  function onClickRight() {
    setCurrentFileViewerIndex(currentFileViewerIndex === statefulFileInfoList.length - 1 ? 0 : currentFileViewerIndex + 1);
  }
  return threadMessageKindKey ? React__default__default.createElement(
    React__default__default.Fragment,
    null,
    currentFileViewerIndex > -1 && React__default__default.createElement(FileViewer$1, { message, statefulFileInfoList, currentIndex: currentFileViewerIndex, onClickLeft, onClickRight, onClose, onDownloadClick: function(e3) {
      return __awaiter$5(_this, void 0, void 0, function() {
        var allowDownload, err_1;
        var _a3, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              if (!onBeforeDownloadFileMessage)
                return [
                  2
                  /*return*/
                ];
              _c2.label = 1;
            case 1:
              _c2.trys.push([1, 3, , 4]);
              return [4, onBeforeDownloadFileMessage({ message, index: currentFileViewerIndex })];
            case 2:
              allowDownload = _c2.sent();
              if (!allowDownload) {
                e3.preventDefault();
                (_a3 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "MultipleFilesMessageItemBody: Not allowed to download.");
              }
              return [3, 4];
            case 3:
              err_1 = _c2.sent();
              (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "MultipleFilesMessageItemBody: Error occurred while determining download continuation:", err_1);
              return [3, 4];
            case 4:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    } }),
    React__default__default.createElement(ImageGrid, { className, message, isReactionEnabled }, statefulFileInfoList.map(function(fileInfo, index) {
      var _a3, _b3, _c2, _d2;
      return React__default__default.createElement(
        "div",
        { className: "sendbird-multiple-files-image-renderer-wrapper", onClick: message.sendingStatus === Z.SUCCEEDED ? function() {
          return setCurrentFileViewerIndex(index);
        } : void 0, key: "sendbird-multiple-files-image-renderer-".concat(index, "-").concat(fileInfo.url) },
        React__default__default.createElement(ImageRenderer, { url: (_d2 = (_c2 = (_b3 = (_a3 = fileInfo.thumbnails) === null || _a3 === void 0 ? void 0 : _a3[0]) === null || _b3 === void 0 ? void 0 : _b3.url) !== null && _c2 !== void 0 ? _c2 : fileInfo.url) !== null && _d2 !== void 0 ? _d2 : "", fixedSize: false, width: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey], maxSideLength: MULTIPLE_FILES_IMAGE_SIDE_LENGTH.CHAT_WEB, height: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey], borderRadius: getBorderRadiusForMultipleImageRenderer(MULTIPLE_FILES_IMAGE_BORDER_RADIUS[threadMessageKindKey], index, statefulFileInfoList.length), shadeOnHover: true, isUploaded: !!fileInfo.isUploaded, placeHolder: function(_a4) {
          var style = _a4.style;
          if (fileInfo.mimeType && isGif$1(fileInfo.mimeType))
            return React__default__default.createElement(ImagePlaceholder.GIF, { style });
          return React__default__default.createElement(ImagePlaceholder.Default, { style });
        }, defaultComponent: React__default__default.createElement(ImagePlaceholder.LoadError, null) })
      );
    }))
  ) : React__default__default.createElement(React__default__default.Fragment, null);
}
var ImagePlaceholder = {
  Default: function(_a2) {
    var style = _a2.style;
    return React__default__default.createElement(
      "div",
      { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder", style },
      React__default__default.createElement(Icon$1, { type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH })
    );
  },
  GIF: function(_a2) {
    var style = _a2.style;
    return React__default__default.createElement(
      "div",
      { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder", style },
      React__default__default.createElement(
        "div",
        { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder__icon" },
        React__default__default.createElement(Icon$1, { type: IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH })
      )
    );
  },
  LoadError: function() {
    return React__default__default.createElement(
      "div",
      { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder" },
      React__default__default.createElement(Icon$1, { type: IconTypes.THUMBNAIL_NONE, fillColor: IconColors.ON_BACKGROUND_2, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH })
    );
  }
};
function useThreadMessageKindKeySelector(_a2) {
  var threadMessageKind = _a2.threadMessageKind, isMobile = _a2.isMobile;
  var threadMessageKindKey = useMemo(function() {
    return K(threadMessageKind).with(ThreadMessageKind.PARENT, function() {
      return isMobile ? "THREAD_PARENT_MOBILE" : "THREAD_PARENT_WEB";
    }).with(ThreadMessageKind.CHILD, function() {
      return isMobile ? "THREAD_CHILD_MOBILE" : "THREAD_CHILD_WEB";
    }).otherwise(function() {
      return isMobile ? "CHAT_MOBILE" : "CHAT_WEB";
    });
  }, [isMobile, threadMessageKind]);
  return threadMessageKindKey;
}
var useFileInfoListWithUploaded = function(message) {
  var _a2, _b2;
  var blobHandler = useRef(/* @__PURE__ */ new Map());
  var getObjectURL = function(index, blob) {
    if (!blobHandler.current.has(index) && blob)
      blobHandler.current.set(index, URL.createObjectURL(blob));
    return blobHandler.current.get(index);
  };
  var revokeURLs = function() {
    if (blobHandler.current.size > 0) {
      blobHandler.current.forEach(function(url) {
        return URL.revokeObjectURL(url);
      });
      blobHandler.current.clear();
    }
  };
  useEffect(function() {
    return function() {
      return revokeURLs();
    };
  }, []);
  if (!message || !message.isMultipleFilesMessage || !message.isMultipleFilesMessage()) {
    return [];
  } else if (message.sendingStatus === Z.SUCCEEDED) {
    revokeURLs();
    return message.fileInfoList.map(function(it2) {
      var _a3, _b3;
      return __assign(__assign({}, it2), { url: it2.url, isUploaded: true, mimeType: (_a3 = it2.mimeType) !== null && _a3 !== void 0 ? _a3 : void 0, fileName: (_b3 = it2.fileName) !== null && _b3 !== void 0 ? _b3 : void 0 });
    });
  } else {
    return (_b2 = (_a2 = message === null || message === void 0 ? void 0 : message.messageParams) === null || _a2 === void 0 ? void 0 : _a2.fileInfoList.map(function(it2, index) {
      var _a3, _b3;
      return __assign(__assign({}, it2), { url: (_b3 = (_a3 = getObjectURL(index)) !== null && _a3 !== void 0 ? _a3 : it2.fileUrl) !== null && _b3 !== void 0 ? _b3 : it2.file instanceof Blob ? getObjectURL(index, it2.file) : void 0, isUploaded: !it2.file && typeof it2.fileUrl === "string" && it2.fileUrl.length > 0 });
    })) !== null && _b2 !== void 0 ? _b2 : [];
  }
};
var ProgressBarColorTypes = {
  PRIMARY: "progress-bar-color--primary",
  GRAY: "progress-bar-color--gray"
};
var ProgressBar = function(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, _c = _a2.disabled, disabled = _c === void 0 ? false : _c, maxSize = _a2.maxSize, _d = _a2.currentSize, currentSize = _d === void 0 ? 0 : _d, _e2 = _a2.colorType, colorType = _e2 === void 0 ? ProgressBarColorTypes.PRIMARY : _e2;
  var width = useMemo(function() {
    return "".concat(currentSize / maxSize * 100, "%");
  }, [currentSize, maxSize]);
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-progress-bar", className, colorType, disabled && "progress-bar--disabled") },
    React__default__default.createElement("div", { className: "sendbird-progress-bar__fill", style: { width } })
  );
};
var INITIALIZE_AUDIO_UNIT = "INITIALIZE_AUDIO_UNIT";
var RESET_AUDIO_UNIT = "RESET_AUDIO_UNIT";
var SET_CURRENT_PLAYER = "SET_CURRENT_PLAYER";
var ON_VOICE_PLAYER_PLAY = "ON_VOICE_PLAYER_PLAY";
var ON_VOICE_PLAYER_PAUSE = "ON_VOICE_PLAYER_PAUSE";
var ON_CURRENT_TIME_UPDATE = "ON_CURRENT_TIME_UPDATE";
var VOICE_PLAYER_STATUS = {
  IDLE: "IDLE",
  PREPARING: "PREPARING",
  PLAYING: "PLAYING",
  PAUSED: "PAUSED"
};
var AudioUnitDefaultValue = function() {
  return {
    audioFile: null,
    playbackTime: 0,
    duration: 1e3,
    playingStatus: VOICE_PLAYER_STATUS.IDLE
  };
};
var voicePlayerInitialState = {
  currentPlayer: null,
  currentGroupKey: "",
  audioStorage: {}
};
function voicePlayerReducer(state, action) {
  var _a2, _b2, _c, _d, _e2;
  var _f, _g2, _h, _j;
  switch (action.type) {
    case INITIALIZE_AUDIO_UNIT: {
      var groupKey = action.payload.groupKey;
      var audioUnit = ((_f = state.audioStorage) === null || _f === void 0 ? void 0 : _f[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PREPARING;
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_a2 = {}, _a2[groupKey] = audioUnit, _a2)) });
    }
    case RESET_AUDIO_UNIT: {
      var groupKey = action.payload.groupKey;
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_b2 = {}, _b2[groupKey] = AudioUnitDefaultValue(), _b2)) });
    }
    case SET_CURRENT_PLAYER: {
      var _k = action.payload, audioPlayer = _k.audioPlayer, groupKey = _k.groupKey;
      return __assign(__assign({}, state), { currentPlayer: audioPlayer, currentGroupKey: groupKey });
    }
    case ON_VOICE_PLAYER_PLAY: {
      var _l = action.payload, groupKey = _l.groupKey, audioFile = _l.audioFile;
      var audioUnit = ((_g2 = state.audioStorage) === null || _g2 === void 0 ? void 0 : _g2[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      audioUnit.audioFile = audioFile;
      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PLAYING;
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_c = {}, _c[groupKey] = audioUnit, _c)) });
    }
    case ON_VOICE_PLAYER_PAUSE: {
      var _m = action.payload, groupKey = _m.groupKey, duration = _m.duration, currentTime = _m.currentTime;
      var audioUnit = ((_h = state.audioStorage) === null || _h === void 0 ? void 0 : _h[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PAUSED;
      if (duration === currentTime) {
        audioUnit.playbackTime = 0;
      }
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_d = {}, _d[groupKey] = audioUnit, _d)) });
    }
    case ON_CURRENT_TIME_UPDATE: {
      var groupKey = action.payload.groupKey;
      var _o = state.currentPlayer, currentTime = _o.currentTime, duration = _o.duration;
      var audioUnit = ((_j = state.audioStorage) === null || _j === void 0 ? void 0 : _j[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      if (audioUnit.playbackTime === audioUnit.duration && audioUnit.playingStatus === VOICE_PLAYER_STATUS.PAUSED) {
        audioUnit.playbackTime = 0;
      } else if (currentTime > 0 && duration > 0) {
        audioUnit.playbackTime = currentTime;
        audioUnit.duration = duration;
      }
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_e2 = {}, _e2[groupKey] = audioUnit, _e2)) });
    }
    default:
      return state;
  }
}
var generateGroupKey = function(channelUrl, key) {
  if (channelUrl === void 0) {
    channelUrl = "";
  }
  if (key === void 0) {
    key = "";
  }
  return "".concat(channelUrl, "-").concat(key);
};
var getParsedVoiceAudioFileInfo = function(mimeType) {
  if (isSafari(navigator.userAgent) && mimeType.includes("m4a")) {
    return {
      name: VOICE_MESSAGE_FILE_NAME__XM4A,
      mimeType: VOICE_MESSAGE_MIME_TYPE__XM4A
    };
  }
  return {
    name: VOICE_MESSAGE_FILE_NAME,
    mimeType: VOICE_MESSAGE_MIME_TYPE
  };
};
var ALL = "ALL";
var noop$2 = function() {
};
var VoicePlayerStoreDefaultValue = {
  currentGroupKey: "",
  currentPlayer: null,
  audioStorage: {}
};
var Context$1 = createContext({
  play: noop$2,
  pause: noop$2,
  stop: noop$2,
  voicePlayerStore: VoicePlayerStoreDefaultValue
});
var VoicePlayerProvider = function(_a2) {
  var children = _a2.children;
  var _b2 = useReducer(voicePlayerReducer, voicePlayerInitialState), voicePlayerStore = _b2[0], voicePlayerDispatcher = _b2[1];
  var currentGroupKey = voicePlayerStore.currentGroupKey, currentPlayer = voicePlayerStore.currentPlayer, audioStorage = voicePlayerStore.audioStorage;
  var state = useSendbird().state;
  var config2 = state.config;
  var logger = config2.logger;
  var stop = function(text2) {
    if (text2 === void 0) {
      text2 = "";
    }
    if (currentGroupKey.includes(text2)) {
      logger.info("VoicePlayer: Pause playing(by text).");
      pause(currentGroupKey);
    }
  };
  var pause = function(groupKey) {
    if (currentPlayer) {
      if (groupKey === currentGroupKey) {
        logger.info("VoicePlayer: Pause playing(by group key).");
        currentPlayer.pause();
      } else if (groupKey === ALL) {
        logger.info("VoicePlayer: Pause playing(all).");
        currentPlayer.pause();
      }
    } else {
      logger.warning("VoicePlayer: No currentPlayer to pause.");
    }
  };
  var play = function(_a3) {
    var groupKey = _a3.groupKey, audioFile = _a3.audioFile, _b3 = _a3.audioFileUrl, audioFileUrl = _b3 === void 0 ? "" : _b3, _c = _a3.audioFileMimeType, audioFileMimeType = _c === void 0 ? VOICE_MESSAGE_MIME_TYPE : _c;
    if (groupKey !== currentGroupKey) {
      pause(currentGroupKey);
    }
    var voicePlayerRoot = document.getElementById(VOICE_PLAYER_ROOT_ID);
    var voicePlayerAudioElement = document.getElementById(VOICE_PLAYER_AUDIO_ID);
    if (voicePlayerRoot && voicePlayerAudioElement) {
      voicePlayerRoot.removeChild(voicePlayerAudioElement);
    }
    logger.info("VoicePlayer: Start getting audio file.");
    new Promise(function(resolve, reject) {
      var _a4;
      voicePlayerDispatcher({
        type: INITIALIZE_AUDIO_UNIT,
        payload: { groupKey }
      });
      if (audioFile) {
        logger.info("VoicePlayer: Use the audioFile instance.");
        resolve(audioFile);
        return;
      }
      var cachedAudioFile = (_a4 = audioStorage === null || audioStorage === void 0 ? void 0 : audioStorage[groupKey]) === null || _a4 === void 0 ? void 0 : _a4.audioFile;
      if (cachedAudioFile) {
        logger.info("VoicePlayer: Get from the audioStorage.");
        resolve(cachedAudioFile);
        return;
      }
      fetch(audioFileUrl).then(function(res) {
        return res.blob();
      }).then(function(blob) {
        var audioFile2 = new File([blob], getParsedVoiceAudioFileInfo(audioFileMimeType).name, {
          lastModified: (/* @__PURE__ */ new Date()).getTime(),
          type: getParsedVoiceAudioFileInfo(audioFileMimeType).mimeType
        });
        resolve(audioFile2);
        logger.info("VoicePlayer: Get the audioFile from URL.");
      }).catch(reject);
    }).then(function(audioFile2) {
      var _a4;
      var voicePlayerRoot2 = document.getElementById(VOICE_PLAYER_ROOT_ID);
      logger.info("VoicePlayer: Succeeded getting audio file.", { audioFile: audioFile2 });
      var currentAudioUnit = audioStorage[groupKey] || AudioUnitDefaultValue();
      var audioPlayer = new Audio((_a4 = URL === null || URL === void 0 ? void 0 : URL.createObjectURL) === null || _a4 === void 0 ? void 0 : _a4.call(URL, audioFile2));
      audioPlayer.id = VOICE_PLAYER_AUDIO_ID;
      audioPlayer.currentTime = currentAudioUnit.playbackTime;
      audioPlayer.volume = 1;
      audioPlayer.loop = false;
      audioPlayer.onplaying = function() {
        logger.info("VoicePlayer: OnPlaying event is called from audioPlayer", { groupKey, audioPlayer });
        voicePlayerDispatcher({
          type: ON_VOICE_PLAYER_PLAY,
          payload: { groupKey, audioFile: audioFile2 }
        });
      };
      audioPlayer.onpause = function() {
        logger.info("VoicePlayer: OnPause event is called from audioPlayer", { groupKey, audioPlayer });
        voicePlayerDispatcher({
          type: ON_VOICE_PLAYER_PAUSE,
          payload: { groupKey, duration: audioPlayer.duration, currentTime: audioPlayer.currentTime }
        });
      };
      audioPlayer.ontimeupdate = function() {
        voicePlayerDispatcher({
          type: ON_CURRENT_TIME_UPDATE,
          payload: { groupKey }
        });
      };
      audioPlayer.onerror = function(error) {
        logger.error("VoicePlayer: Failed to load the audioFile on the audio player.", error);
        voicePlayerDispatcher({
          type: RESET_AUDIO_UNIT,
          payload: { groupKey }
        });
      };
      audioPlayer.dataset.sbGroupId = groupKey;
      try {
        voicePlayerRoot2 === null || voicePlayerRoot2 === void 0 ? void 0 : voicePlayerRoot2.childNodes.forEach(function(node) {
          var _a5, _b4;
          var element = node;
          var thisGroupKey = (_a5 = element.dataset) === null || _a5 === void 0 ? void 0 : _a5.sbGroupKey;
          if (thisGroupKey !== groupKey) {
            (_b4 = element === null || element === void 0 ? void 0 : element.pause) === null || _b4 === void 0 ? void 0 : _b4.call(element);
            voicePlayerRoot2.removeChild(element);
            logger.info("VoicePlayer: Removed other player.", { element });
          }
        });
      } finally {
        audioPlayer === null || audioPlayer === void 0 ? void 0 : audioPlayer.play();
        voicePlayerRoot2 === null || voicePlayerRoot2 === void 0 ? void 0 : voicePlayerRoot2.appendChild(audioPlayer);
        voicePlayerDispatcher({
          type: SET_CURRENT_PLAYER,
          payload: { groupKey, audioPlayer }
        });
        logger.info("VoicePlayer: Succeeded playing audio player.", { groupKey, audioPlayer });
      }
    }).catch(function(error) {
      logger.warning("VoicePlayer: Failed loading audio file with URL.", error);
      voicePlayerDispatcher({
        type: RESET_AUDIO_UNIT,
        payload: { groupKey }
      });
    });
  };
  return React__default__default.createElement(
    Context$1.Provider,
    { value: {
      play,
      pause,
      stop,
      voicePlayerStore
    } },
    React__default__default.createElement("div", { id: VOICE_PLAYER_ROOT_ID, style: { display: "none" } }),
    children
  );
};
var useVoicePlayerContext = function() {
  return useContext(Context$1);
};
var Context = createContext({
  start: noop$4,
  stop: noop$4,
  isRecordable: false
});
var VoiceRecorderProvider = function(props) {
  var _a2;
  var children = props.children;
  var state = useSendbird().state;
  var config2 = state.config;
  var logger = config2.logger, groupChannel = config2.groupChannel;
  var _b2 = useState(null), mediaRecorder = _b2[0], setMediaRecorder = _b2[1];
  var _c = useState(false), isRecordable = _c[0], setIsRecordable = _c[1];
  var _d = useState(false), permissionWarning = _d[0], setPermissionWarning = _d[1];
  var stringSet2 = useLocalization().stringSet;
  var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;
  var _e2 = useState(null), webAudioUtils = _e2[0], setWebAudioUtils = _e2[1];
  var browserSupportMimeType = (_a2 = BROWSER_SUPPORT_MIME_TYPE_LIST.find(function(mimeType) {
    return MediaRecorder.isTypeSupported(mimeType);
  })) !== null && _a2 !== void 0 ? _a2 : "";
  if (isVoiceMessageEnabled && !browserSupportMimeType) {
    logger.error("VoiceRecorder: Browser does not support mimeType", { mimmeTypes: BROWSER_SUPPORT_MIME_TYPE_LIST });
  }
  useEffect(function() {
    if (isVoiceMessageEnabled && !webAudioUtils) {
      import("./bundle-CzgB87O4-C_4Xdpvl.js").then(function(module) {
        return setWebAudioUtils(module);
      });
    }
  }, [isVoiceMessageEnabled, webAudioUtils]);
  var start = useCallback(function(eventHandler) {
    var _a3, _b3;
    if (isVoiceMessageEnabled && !webAudioUtils) {
      logger.error("VoiceRecorder: Recording audio processor is being loaded.");
      return;
    }
    var checkPermission = function() {
      try {
        navigator.permissions.query({ name: "microphone" }).then(function(result) {
          if (result.state === "denied") {
            logger.warning("VoiceRecorder: Permission denied.");
            setPermissionWarning(true);
          }
        });
      } catch (error) {
        logger.warning("VoiceRecorder: Failed to check permission.", error);
      }
    };
    logger.info("VoiceRecorder: Start recording.");
    if (mediaRecorder) {
      stop();
      logger.info("VoiceRecorder: Previous mediaRecorder is stopped.");
    }
    checkPermission();
    (_b3 = (_a3 = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _a3 === void 0 ? void 0 : _a3.getUserMedia) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, { audio: true }).then(function(stream) {
      var _a4;
      logger.info("VoiceRecorder: Succeeded getting media stream.", stream);
      setIsRecordable(true);
      var mediaRecorder2 = new MediaRecorder(stream, {
        mimeType: browserSupportMimeType,
        audioBitsPerSecond: VOICE_RECORDER_AUDIO_BIT_RATE
      });
      mediaRecorder2.ondataavailable = function(e3) {
        logger.info("VoiceRecorder: Succeeded getting an available data.", e3.data);
        var audioFile = new File([e3.data], VOICE_MESSAGE_FILE_NAME, {
          lastModified: (/* @__PURE__ */ new Date()).getTime(),
          type: VOICE_MESSAGE_MIME_TYPE
        });
        webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.downsampleToWav(audioFile, function(buffer) {
          var _a5;
          var mp3Buffer = webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.encodeMp3(buffer);
          var mp3blob = new Blob(mp3Buffer, { type: VOICE_MESSAGE_MIME_TYPE });
          var convertedAudioFile = new File([mp3blob], VOICE_MESSAGE_FILE_NAME, {
            lastModified: (/* @__PURE__ */ new Date()).getTime(),
            type: VOICE_MESSAGE_MIME_TYPE
          });
          (_a5 = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingEnded) === null || _a5 === void 0 ? void 0 : _a5.call(eventHandler, convertedAudioFile);
          logger.info("VoiceRecorder: Succeeded converting audio file.", convertedAudioFile);
        });
        var tracks = stream.getAudioTracks();
        tracks.forEach(function(track) {
          return track.stop();
        });
        setIsRecordable(false);
      };
      mediaRecorder2.onstart = (_a4 = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingStarted) !== null && _a4 !== void 0 ? _a4 : noop$4;
      mediaRecorder2 === null || mediaRecorder2 === void 0 ? void 0 : mediaRecorder2.start();
      setMediaRecorder(mediaRecorder2);
    }).catch(function(err) {
      logger.error("VoiceRecorder: Failed getting media stream.", err);
      setMediaRecorder(null);
    });
  }, [mediaRecorder, webAudioUtils]);
  var stop = useCallback(function() {
    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();
    setMediaRecorder(null);
    setIsRecordable(false);
    logger.info("VoiceRecorder: Stop recording.");
  }, [mediaRecorder]);
  return React__default__default.createElement(
    Context.Provider,
    { value: { start, stop, isRecordable } },
    children,
    permissionWarning && React__default__default.createElement(
      Modal,
      { hideFooter: true, onClose: function() {
        return setPermissionWarning(false);
      } },
      React__default__default.createElement(React__default__default.Fragment, null, stringSet2.VOICE_RECORDING_PERMISSION_DENIED)
    )
  );
};
var useVoiceRecorderContext = function() {
  return useContext(Context);
};
var useVoicePlayer = function(_a2) {
  var _b2;
  var _c = _a2.key, key = _c === void 0 ? "" : _c, _d = _a2.channelUrl, channelUrl = _d === void 0 ? "" : _d, audioFile = _a2.audioFile, _e2 = _a2.audioFileUrl, audioFileUrl = _e2 === void 0 ? "" : _e2, _f = _a2.audioFileMimeType, audioFileMimeType = _f === void 0 ? VOICE_MESSAGE_MIME_TYPE : _f;
  var groupKey = generateGroupKey(channelUrl, key);
  var _g2 = useVoicePlayerContext(), play = _g2.play, pause = _g2.pause, stop = _g2.stop, voicePlayerStore = _g2.voicePlayerStore;
  var isRecordable = useVoiceRecorderContext().isRecordable;
  var currentAudioUnit = ((_b2 = voicePlayerStore === null || voicePlayerStore === void 0 ? void 0 : voicePlayerStore.audioStorage) === null || _b2 === void 0 ? void 0 : _b2[groupKey]) || AudioUnitDefaultValue();
  var playVoicePlayer = function() {
    if (!isRecordable) {
      play === null || play === void 0 ? void 0 : play({
        groupKey,
        audioFile,
        audioFileUrl,
        audioFileMimeType
      });
    }
  };
  var pauseVoicePlayer = function() {
    pause === null || pause === void 0 ? void 0 : pause(groupKey);
  };
  var stopVoicePlayer = function(text2) {
    if (text2 === void 0) {
      text2 = "";
    }
    stop === null || stop === void 0 ? void 0 : stop(text2);
  };
  useEffect(function() {
    return function() {
      var _a3;
      if (audioFile || audioFileUrl) {
        var voiceAudioPlayerElement = document.getElementById(VOICE_PLAYER_AUDIO_ID);
        (_a3 = voiceAudioPlayerElement === null || voiceAudioPlayerElement === void 0 ? void 0 : voiceAudioPlayerElement.pause) === null || _a3 === void 0 ? void 0 : _a3.call(voiceAudioPlayerElement);
      }
    };
  }, []);
  return {
    play: playVoicePlayer,
    pause: pauseVoicePlayer,
    stop: stopVoicePlayer,
    /**
     * The reason why we multiply this by *1000 is,
     * The unit of playbackTime and duration should be millisecond
     */
    playbackTime: ((currentAudioUnit === null || currentAudioUnit === void 0 ? void 0 : currentAudioUnit.playbackTime) || 0) * 1e3,
    duration: ((currentAudioUnit === null || currentAudioUnit === void 0 ? void 0 : currentAudioUnit.duration) || 0) * 1e3,
    playingStatus: currentAudioUnit.playingStatus
  };
};
var PlaybackTime = function(_a2) {
  var className = _a2.className, _b2 = _a2.time, time = _b2 === void 0 ? 0 : _b2, _c = _a2.labelType, labelType = _c === void 0 ? LabelTypography.CAPTION_2 : _c, _d = _a2.labelColor, labelColor = _d === void 0 ? LabelColors.ONCONTENT_1 : _d;
  var naturalTime = time < 0 ? 0 : time;
  var hour = Math.floor(naturalTime / 36e5);
  var min = Math.floor(naturalTime % 36e5 / 6e4);
  var sec = Math.floor(naturalTime % 36e5 % 6e4 / 1e3);
  return React__default__default.createElement(
    "div",
    { className: "sendbird-ui-play-time ".concat(className) },
    React__default__default.createElement(Label, { type: labelType, color: labelColor }, "".concat(hour ? hour + ":" : "").concat(min < 10 ? "0" : "").concat(min ? min : "0", ":").concat(sec < 10 ? "0" : "").concat(sec))
  );
};
var VoiceMessageItemBody = function(_a2) {
  var _b2;
  var className = _a2.className, message = _a2.message, channelUrl = _a2.channelUrl, _c = _a2.isByMe, isByMe = _c === void 0 ? false : _c, _d = _a2.isReactionEnabled, isReactionEnabled = _d === void 0 ? false : _d;
  var _e2 = useState(false), usingReaction = _e2[0], setUsingReaction = _e2[1];
  var _f = useVoicePlayer({
    channelUrl,
    key: "".concat(message === null || message === void 0 ? void 0 : message.messageId),
    audioFileUrl: message === null || message === void 0 ? void 0 : message.url,
    audioFileMimeType: message === null || message === void 0 ? void 0 : message.type
  }), play = _f.play, pause = _f.pause, _g2 = _f.playbackTime, playbackTime = _g2 === void 0 ? 0 : _g2, duration = _f.duration, _h = _f.playingStatus, playingStatus = _h === void 0 ? VOICE_PLAYER_STATUS.IDLE : _h;
  useEffect(function() {
    var _a3;
    if (isReactionEnabled && ((_a3 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a3 === void 0 ? void 0 : _a3.length) > 0) {
      setUsingReaction(true);
    } else {
      setUsingReaction(false);
    }
  }, [isReactionEnabled, (_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length]);
  var progressBarMaxSize = useMemo(function() {
    var _a3;
    var DEFAULT_MAX_SIZE = 1;
    if (message === null || message === void 0 ? void 0 : message.metaArrays) {
      var duration_1 = (_a3 = message === null || message === void 0 ? void 0 : message.metaArrays.find(function(metaArray) {
        return metaArray.key === "KEY_VOICE_MESSAGE_DURATION";
      })) === null || _a3 === void 0 ? void 0 : _a3.value[0];
      return duration_1 ? parseInt(duration_1) : DEFAULT_MAX_SIZE;
    }
    return DEFAULT_MAX_SIZE;
  }, [message === null || message === void 0 ? void 0 : message.metaArrays]);
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-voice-message-item-body", className, usingReaction && "is-reactions-contained") },
    React__default__default.createElement(ProgressBar, { className: "sendbird-voice-message-item-body__progress-bar", maxSize: duration || progressBarMaxSize, currentSize: playbackTime, colorType: isByMe ? ProgressBarColorTypes.PRIMARY : ProgressBarColorTypes.GRAY }),
    React__default__default.createElement(
      "div",
      { className: "sendbird-voice-message-item-body__status-button" },
      (playingStatus === VOICE_PLAYER_STATUS.IDLE || playingStatus === VOICE_PLAYER_STATUS.PAUSED) && React__default__default.createElement(
        "div",
        { className: "sendbird-voice-message-item-body__status-button__button", onClick: play },
        React__default__default.createElement(Icon$1, { width: "18px", height: "18px", type: IconTypes.PLAY, fillColor: IconColors.PRIMARY })
      ),
      playingStatus === VOICE_PLAYER_STATUS.PREPARING && React__default__default.createElement(
        Loader,
        { width: "22.2px", height: "22.2px" },
        React__default__default.createElement(Icon$1, { width: "22.2px", height: "22.2px", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY_2 })
      ),
      playingStatus === VOICE_PLAYER_STATUS.PLAYING && React__default__default.createElement(
        "div",
        { className: "sendbird-voice-message-item-body__status-button__button", onClick: function() {
          pause();
        } },
        React__default__default.createElement(
          "div",
          { className: "sendbird-voice-message-item-body__status-button__button__pause" },
          React__default__default.createElement("div", { className: "sendbird-voice-message-item-body__status-button__button__pause__inner" }),
          React__default__default.createElement("div", { className: "sendbird-voice-message-item-body__status-button__button__pause__inner" })
        )
      )
    ),
    React__default__default.createElement(PlaybackTime, { className: "sendbird-voice-message-item-body__playback-time", time: progressBarMaxSize - playbackTime, labelType: LabelTypography.BODY_1, labelColor: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 })
  );
};
function ThumbnailMessageItemBody(_a2) {
  var _b2, _c;
  var _d = _a2.className, className = _d === void 0 ? "" : _d, message = _a2.message, _e2 = _a2.isByMe, isByMe = _e2 === void 0 ? false : _e2, _f = _a2.mouseHover, mouseHover = _f === void 0 ? false : _f, _g2 = _a2.isReactionEnabled, isReactionEnabled = _g2 === void 0 ? false : _g2, _h = _a2.showFileViewer, showFileViewer = _h === void 0 ? noop$4 : _h, _j = _a2.style, style = _j === void 0 ? {} : _j;
  var thumbnailUrl = getMessageFirstFileThumbnailUrl(message);
  var _k = useState(false), imageRendered = _k[0], setImageRendered = _k[1];
  var onClickHandler = useLongPress({
    onLongPress: noop$4,
    onClick: function() {
      if (isSentMessage(message)) {
        showFileViewer === null || showFileViewer === void 0 ? void 0 : showFileViewer(true);
      }
    }
  });
  return React__default__default.createElement(
    "div",
    __assign({ className: getClassName([
      className,
      "sendbird-thumbnail-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_c = (_b2 = message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) !== null && _c !== void 0 ? _c : 0) > 0 ? "reactions" : ""
    ]) }, onClickHandler),
    React__default__default.createElement(ImageRenderer, { className: "sendbird-thumbnail-message-item-body__thumbnail", url: thumbnailUrl || getMessageFirstFileUrl(message), alt: getMessageFirstFileType(message), width: (style === null || style === void 0 ? void 0 : style.width) || "360px", height: (style === null || style === void 0 ? void 0 : style.height) || "270px", onLoad: function() {
      setImageRendered(true);
    }, placeHolder: function(_a3) {
      var style2 = _a3.style;
      return React__default__default.createElement("div", { className: "sendbird-thumbnail-message-item-body__placeholder", style: style2 });
    } }),
    isVideoMessage(message) && !thumbnailUrl && !imageRendered && React__default__default.createElement(
      "video",
      { className: "sendbird-thumbnail-message-item-body__video" },
      React__default__default.createElement("source", { src: getMessageFirstFileUrl(message), type: getMessageFirstFileType(message) })
    ),
    React__default__default.createElement("div", { className: "sendbird-thumbnail-message-item-body__image-cover" }),
    (isVideoMessage(message) || isGifMessage(message)) && React__default__default.createElement(
      "div",
      { className: "sendbird-thumbnail-message-item-body__icon-wrapper" },
      React__default__default.createElement(
        "div",
        { className: "sendbird-thumbnail-message-item-body__icon-wrapper__icon" },
        React__default__default.createElement(Icon$1, { type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: "34px", height: "34px" })
      )
    )
  );
}
function UnknownMessageItemBody(_a2) {
  var _b2;
  var className = _a2.className, message = _a2.message, _c = _a2.isByMe, isByMe = _c === void 0 ? false : _c, _d = _a2.mouseHover, mouseHover = _d === void 0 ? false : _d, _e2 = _a2.isReactionEnabled, isReactionEnabled = _e2 === void 0 ? false : _e2;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-unknown-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 ? "reactions" : ""
    ]) },
    React__default__default.createElement(Label, { className: "sendbird-unknown-message-item-body__header", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, stringSet2.UNKNOWN__UNKNOWN_MESSAGE_TYPE),
    React__default__default.createElement(Label, { className: "sendbird-unknown-message-item-body__description", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2 }, stringSet2.UNKNOWN__CANNOT_READ_MESSAGE)
  );
}
var ComponentType;
(function(ComponentType2) {
  ComponentType2["Box"] = "box";
  ComponentType2["Text"] = "text";
  ComponentType2["Image"] = "image";
  ComponentType2["TextButton"] = "textButton";
  ComponentType2["ImageButton"] = "imageButton";
  ComponentType2["Carousel"] = "carouselView";
})(ComponentType || (ComponentType = {}));
const outSingle$1 = (key, obj) => {
  if (typeof obj[key] !== "string")
    return {};
  return { [key]: argbToRgba(obj[key]) };
};
function argbToRgba(string) {
  if (!string.startsWith("#")) {
    return string;
  }
  if (string.length === 9) {
    return `#${string.slice(3)}${string[1]}${string[2]}`;
  }
  if (string.length === 5) {
    return `#${string.slice(2)}${string[1]}`;
  }
  return string;
}
const outViewStyle$1 = (viewStyle) => {
  if (!viewStyle)
    return {};
  return {
    viewStyle: Object.assign(Object.assign(Object.assign({}, viewStyle), outSingle$1("backgroundColor", viewStyle)), outSingle$1("borderColor", viewStyle))
  };
};
const outTextStyle$1 = (textStyle) => {
  if (!textStyle)
    return {};
  return {
    textStyle: Object.assign(Object.assign({}, textStyle), outSingle$1("color", textStyle))
  };
};
const outImageStyle = (imageStyle) => {
  if (!imageStyle)
    return {};
  return {
    imageStyle: Object.assign(Object.assign({}, imageStyle), outSingle$1("tintColor", imageStyle))
  };
};
const colorTransform = {
  run(prop) {
    if (prop.type === ComponentType.Text || prop.type === ComponentType.TextButton) {
      return Object.assign(Object.assign(Object.assign({}, prop), outViewStyle$1(prop.viewStyle)), outTextStyle$1(prop.textStyle));
    }
    if (prop.type === ComponentType.ImageButton || prop.type === ComponentType.Image) {
      return Object.assign(Object.assign(Object.assign({}, prop), outViewStyle$1(prop.viewStyle)), outImageStyle(prop.imageStyle));
    }
    return Object.assign(Object.assign({}, prop), outViewStyle$1(prop.viewStyle));
  }
};
const isNumber = (val) => {
  if (typeof val === "string") {
    return !Number.isNaN(Number(val));
  }
  return typeof val === "number" && !Number.isNaN(val);
};
const outSingle = (key, obj) => {
  if (obj[key] === void 0 || obj[key] === null)
    return {};
  return isNumber(obj[key]) ? { [key]: Number(obj[key]) } : {};
};
const outSpacing = (key, spacing) => {
  if (!spacing)
    return {};
  return {
    [key]: {
      left: isNumber(spacing.left) ? Number(spacing.left) : spacing.left,
      right: isNumber(spacing.right) ? Number(spacing.right) : spacing.right,
      top: isNumber(spacing.top) ? Number(spacing.top) : spacing.top,
      bottom: isNumber(spacing.bottom) ? Number(spacing.bottom) : spacing.bottom
    }
  };
};
const outSize = (key, size) => {
  if (!size)
    return {};
  return {
    [key]: {
      type: size.type,
      value: isNumber(size.value) ? Number(size.value) : size.value
    }
  };
};
const outMetadata = (metaData) => {
  if (!metaData)
    return {};
  return {
    metaData: {
      pixelWidth: isNumber(metaData.pixelWidth) ? Number(metaData.pixelWidth) : metaData.pixelWidth,
      pixelHeight: isNumber(metaData.pixelHeight) ? Number(metaData.pixelHeight) : metaData.pixelHeight
    }
  };
};
const outViewStyle = (viewStyle) => {
  if (!viewStyle)
    return {};
  return {
    viewStyle: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, viewStyle), outSingle("borderWidth", viewStyle)), outSingle("radius", viewStyle)), outSpacing("margin", viewStyle.margin)), outSpacing("padding", viewStyle.padding))
  };
};
const outTextStyle = (textStyle) => {
  if (!textStyle)
    return {};
  return {
    textStyle: Object.assign(Object.assign(Object.assign({}, textStyle), outSingle("size", textStyle)), outSingle("weight", textStyle))
  };
};
const outCarouselStyle = (carouselstyle) => {
  if (!carouselstyle)
    return {};
  return {
    carouselStyle: Object.assign(Object.assign({}, carouselstyle), outSingle("spacing", carouselstyle))
  };
};
const outViewProps = (view) => {
  return Object.assign(Object.assign(Object.assign({}, outSize("width", view.width)), outSize("height", view.height)), outViewStyle(view.viewStyle));
};
const outTextProps = (text2) => {
  return Object.assign(Object.assign(Object.assign({}, outViewProps(text2)), outTextStyle(text2.textStyle)), outSingle("maxTextLines", text2));
};
const outImageProps = (image) => {
  return Object.assign(Object.assign({}, outViewProps(image)), outMetadata(image.metaData));
};
const outCarouselProps = (carousel) => {
  return Object.assign(Object.assign(Object.assign({}, outViewProps(carousel)), outCarouselStyle(carousel.carouselStyle)), {
    // Convert only top-level items to find has fill width values.
    items: carousel.items.map((item) => Object.assign(Object.assign({}, item), { body: Object.assign(Object.assign({}, item.body), { items: item.body.items.map((it2) => numberTransform.run(it2)) }) }))
  });
};
const numberTransform = {
  run(prop) {
    if (prop.type === ComponentType.Text || prop.type === ComponentType.TextButton) {
      return Object.assign(Object.assign({}, prop), outTextProps(prop));
    }
    if (prop.type === ComponentType.ImageButton || prop.type === ComponentType.Image) {
      return Object.assign(Object.assign({}, prop), outImageProps(prop));
    }
    if (prop.type === ComponentType.Carousel) {
      return Object.assign(Object.assign({}, prop), outCarouselProps(prop));
    }
    return Object.assign(Object.assign({}, prop), outViewProps(prop));
  }
};
const MAPPER = () => void 0;
const createParser = (params) => {
  var _a2;
  const defaultMapper = (params === null || params === void 0 ? void 0 : params.defaultMapper) || MAPPER;
  const mapper = {
    defaultMapper,
    mapBoxProps: (params === null || params === void 0 ? void 0 : params.mapBoxProps) || defaultMapper,
    mapTextProps: (params === null || params === void 0 ? void 0 : params.mapTextProps) || defaultMapper,
    mapImageProps: (params === null || params === void 0 ? void 0 : params.mapImageProps) || defaultMapper,
    mapTextButtonProps: (params === null || params === void 0 ? void 0 : params.mapTextButtonProps) || defaultMapper,
    mapImageButtonProps: (params === null || params === void 0 ? void 0 : params.mapImageButtonProps) || defaultMapper,
    mapCarouselProps: (params === null || params === void 0 ? void 0 : params.mapCarouselProps) || defaultMapper
  };
  const transforms = [colorTransform, numberTransform, ...(_a2 = params === null || params === void 0 ? void 0 : params.transforms) !== null && _a2 !== void 0 ? _a2 : []];
  const transformDirty = /* @__PURE__ */ new Set();
  return {
    setTransforms(newTransforms) {
      transforms.length = 0;
      transforms.push(...newTransforms);
      transformDirty.clear();
    },
    addTransforms(newTransforms) {
      transforms.push(...newTransforms);
    },
    parse(rawItem, options) {
      const item = transforms.reduce((it2, transform) => transform.run(it2), rawItem);
      switch (item.type) {
        case ComponentType.Box: {
          return { transformed: item, properties: mapper.mapBoxProps(item, options) };
        }
        case ComponentType.Text: {
          return { transformed: item, properties: mapper.mapTextProps(item, options) };
        }
        case ComponentType.Image: {
          return { transformed: item, properties: mapper.mapImageProps(item, options) };
        }
        case ComponentType.TextButton: {
          return { transformed: item, properties: mapper.mapTextButtonProps(item, options) };
        }
        case ComponentType.ImageButton: {
          return { transformed: item, properties: mapper.mapImageButtonProps(item, options) };
        }
        case ComponentType.Carousel: {
          return { transformed: item, properties: mapper.mapCarouselProps(item, options) };
        }
        default:
          return { transformed: item, properties: void 0 };
      }
    }
  };
};
const FRAGMENT = ({ children }) => React__default__default.createElement(React__default__default.Fragment, null, children);
function createRenderer(params) {
  var _a2, _b2, _c, _d, _e2, _f;
  return {
    box: ((_a2 = params === null || params === void 0 ? void 0 : params.views) === null || _a2 === void 0 ? void 0 : _a2.box) || FRAGMENT,
    text: ((_b2 = params === null || params === void 0 ? void 0 : params.views) === null || _b2 === void 0 ? void 0 : _b2.text) || FRAGMENT,
    image: ((_c = params === null || params === void 0 ? void 0 : params.views) === null || _c === void 0 ? void 0 : _c.image) || FRAGMENT,
    imageButton: ((_d = params === null || params === void 0 ? void 0 : params.views) === null || _d === void 0 ? void 0 : _d.imageButton) || FRAGMENT,
    textButton: ((_e2 = params === null || params === void 0 ? void 0 : params.views) === null || _e2 === void 0 ? void 0 : _e2.textButton) || FRAGMENT,
    carouselView: ((_f = params === null || params === void 0 ? void 0 : params.views) === null || _f === void 0 ? void 0 : _f.carouselView) || FRAGMENT
  };
}
var __rest$5 = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
const SizeContext = createContext({
  sizes: {},
  updateSize: () => {
  }
});
const SizeContextProvider = ({ children }) => {
  const [sizes, setSizes] = useState({});
  const updateSize = useCallback((_a2) => {
    var { id: id2 } = _a2, rest = __rest$5(_a2, ["id"]);
    if (id2) {
      setSizes((prevSizes) => Object.assign(Object.assign({}, prevSizes), { [id2]: rest }));
    }
  }, []);
  return React__default__default.createElement(SizeContext.Provider, { value: { sizes, updateSize } }, children);
};
const useSizeContext = () => useContext(SizeContext);
var Layout;
(function(Layout2) {
  Layout2["Row"] = "row";
  Layout2["Column"] = "column";
})(Layout || (Layout = {}));
var AlignValue;
(function(AlignValue2) {
  AlignValue2["Center"] = "center";
  AlignValue2["Left"] = "left";
  AlignValue2["Right"] = "right";
  AlignValue2["Top"] = "top";
  AlignValue2["Bottom"] = "bottom";
})(AlignValue || (AlignValue = {}));
var FlexSizeSpecValue;
(function(FlexSizeSpecValue2) {
  FlexSizeSpecValue2[FlexSizeSpecValue2["FillParent"] = 0] = "FillParent";
  FlexSizeSpecValue2[FlexSizeSpecValue2["WrapContent"] = 1] = "WrapContent";
})(FlexSizeSpecValue || (FlexSizeSpecValue = {}));
var FontWeight;
(function(FontWeight2) {
  FontWeight2["Normal"] = "normal";
  FontWeight2["Bold"] = "bold";
})(FontWeight || (FontWeight = {}));
var MediaContentMode;
(function(MediaContentMode2) {
  MediaContentMode2["AspectFit"] = "aspectFit";
  MediaContentMode2["AspectFill"] = "aspectFill";
  MediaContentMode2["ScalesToFill"] = "scalesToFill";
})(MediaContentMode || (MediaContentMode = {}));
const SUPPORTED_TEMPLATE_VERSIONS = [
  1,
  2
  // Composite templates: Carousel
];
const alignInFlex = (align) => {
  switch (align) {
    case AlignValue.Right:
    case AlignValue.Bottom:
      return "flex-end";
    case AlignValue.Center:
      return "center";
    case AlignValue.Left:
    case AlignValue.Top:
    default:
      return "flex-start";
  }
};
const isTemplateVersionSupported = (templateVersion) => {
  if (!templateVersion)
    return true;
  return SUPPORTED_TEMPLATE_VERSIONS.includes(Number(templateVersion));
};
const memoize = (fn2) => {
  const cache = /* @__PURE__ */ new Map();
  const cached = function(val) {
    return cache.has(val) ? cache.get(val) : cache.set(val, fn2.call(this, val)) && cache.get(val);
  };
  cached.cache = cache;
  return cached;
};
const setTemplateItemId = memoize((data) => {
  const addIdRecursively = (item, id2) => {
    if ("items" in item && (item === null || item === void 0 ? void 0 : item.items) != null) {
      item.items.forEach((subItem, subIdx) => {
        const subId = `${id2}-${subIdx}`;
        subItem.id = subId;
        addIdRecursively(subItem, subId);
      });
    }
  };
  data.forEach((item, idx) => {
    const id2 = `${idx}`;
    item.id = id2;
    addIdRecursively(item, id2);
  });
  return data;
});
const defaultProperties = {
  rootLayout: Layout.Column,
  view: {
    size: {
      width: { type: "flex", value: FlexSizeSpecValue.FillParent },
      height: { type: "flex", value: FlexSizeSpecValue.WrapContent }
    }
  },
  box: {
    layout: Layout.Row,
    align: { vertical: AlignValue.Top, horizontal: AlignValue.Left }
  },
  textButton: {
    maxTextLines: 1
  },
  carousel: {
    style: {
      spacing: 10,
      maxChildWidth: 240
    }
  }
};
const createMessageTemplate = (opts) => {
  const Container = opts.Container || React__default__default.Fragment;
  const UnknownMessage = opts.UnknownMessage || (() => null);
  const parser2 = opts.parser || createParser();
  const renderer2 = opts.renderer || createRenderer();
  const MessageTemplateBase = ({ templateItems, templateVersion, parentLayout = defaultProperties.box.layout, depth = 0 }) => {
    if (!isTemplateVersionSupported(templateVersion)) {
      throw new Error(`Cannot parse template item due to unsupported template version: ${templateVersion}, ${SUPPORTED_TEMPLATE_VERSIONS}`);
    }
    return React__default__default.createElement(React__default__default.Fragment, null, templateItems.map((rawItem, index, siblings) => {
      const result = parser2.parse(rawItem, { parentLayout, depth, elemIdx: index, siblings });
      const item = result.transformed;
      const rendererProps = {
        key: index,
        siblings,
        parentLayout,
        parsedProperties: result.properties
      };
      switch (item.type) {
        case ComponentType.Carousel: {
          if (!Array.isArray(item.items) || item.items.length === 0) {
            throw new Error("Cannot parse template item as Carousel if carousel has no items.");
          }
          return React__default__default.createElement(renderer2.carouselView, Object.assign({}, item, rendererProps), item.items.map((template, index2) => React__default__default.createElement(MessageTemplateBase, { key: index2, templateItems: template.body.items || [], depth: depth + 1, templateVersion: template.version })));
        }
        case ComponentType.Box: {
          return React__default__default.createElement(
            renderer2.box,
            Object.assign({}, item, rendererProps),
            React__default__default.createElement(MessageTemplateBase, { templateItems: item.items || [], parentLayout: item.layout, depth: depth + 1, templateVersion })
          );
        }
        case ComponentType.Text: {
          return React__default__default.createElement(renderer2.text, Object.assign({}, item, rendererProps));
        }
        case ComponentType.Image: {
          return React__default__default.createElement(renderer2.image, Object.assign({}, item, rendererProps));
        }
        case ComponentType.TextButton: {
          return React__default__default.createElement(renderer2.textButton, Object.assign({}, item, rendererProps));
        }
        case ComponentType.ImageButton: {
          return React__default__default.createElement(renderer2.imageButton, Object.assign({}, item, rendererProps));
        }
        default: {
          return React__default__default.createElement(UnknownMessage, { item });
        }
      }
    }));
  };
  return {
    MessageTemplate: ({ templateVersion, templateItems, parentLayout = defaultProperties.rootLayout }) => {
      const items = setTemplateItemId(templateItems);
      return React__default__default.createElement(
        SizeContextProvider,
        null,
        React__default__default.createElement(
          Container,
          null,
          React__default__default.createElement(MessageTemplateBase, { isRoot: true, parentLayout, templateItems: items, templateVersion })
        )
      );
    },
    MessageTemplateBase
  };
};
var ActionType;
(function(ActionType2) {
  ActionType2["Web"] = "web";
  ActionType2["Custom"] = "custom";
  ActionType2["UIKit"] = "uikit";
})(ActionType || (ActionType = {}));
({
  body: {
    items: [
      {
        type: ComponentType.Image,
        action: { type: ActionType.Web, data: "https://docs.sendbird.com" },
        height: { type: "fixed", value: 236 },
        viewStyle: {
          padding: {
            left: 4,
            right: 4,
            top: 4,
            bottom: 4
          }
        },
        imageUrl: "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
        imageStyle: { contentMode: MediaContentMode.AspectFill }
      },
      {
        type: ComponentType.Box,
        layout: Layout.Column,
        width: { type: "flex", value: FlexSizeSpecValue.FillParent },
        height: { type: "fixed", value: 200 },
        items: [
          {
            type: ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "flex", value: FlexSizeSpecValue.FillParent },
            viewStyle: { backgroundColor: "#fa6464" }
          },
          {
            type: ComponentType.Box,
            layout: Layout.Column,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "flex", value: FlexSizeSpecValue.WrapContent },
            viewStyle: { backgroundColor: "#ffaf5c" },
            items: [
              {
                type: ComponentType.Text,
                text: "Message",
                align: { horizontal: AlignValue.Center, vertical: AlignValue.Center },
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                height: { type: "fixed", value: 50 }
              },
              {
                type: ComponentType.Image,
                action: { type: ActionType.Web, data: "https://docs.sendbird.com" },
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                height: { type: "fixed", value: 50 },
                imageUrl: "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
                imageStyle: { contentMode: MediaContentMode.AspectFill }
              }
            ]
          },
          {
            type: ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "fixed", value: 20 },
            viewStyle: { backgroundColor: "#ffe450" }
          },
          {
            type: ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "flex", value: FlexSizeSpecValue.FillParent },
            viewStyle: { backgroundColor: "#329a1b" }
          }
        ]
      },
      {
        type: ComponentType.Box,
        viewStyle: { padding: { top: 12, bottom: 12, left: 12, right: 12 } },
        layout: Layout.Column,
        items: [
          {
            type: ComponentType.Box,
            align: { horizontal: AlignValue.Left, vertical: AlignValue.Center },
            layout: Layout.Row,
            viewStyle: {
              borderWidth: 1,
              borderColor: "#72723f"
            },
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "fixed", value: 150 },
            items: [
              {
                type: ComponentType.Text,
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                height: { type: "fixed", value: 50 },
                text: "Sample1 text",
                maxTextLines: 1,
                align: { vertical: AlignValue.Center, horizontal: AlignValue.Left },
                viewStyle: {
                  backgroundColor: "#cc4400"
                },
                textStyle: {
                  size: 16,
                  color: "#f8f8f8",
                  weight: FontWeight.Bold
                }
              },
              {
                type: ComponentType.ImageButton,
                action: { type: ActionType.UIKit, data: "uikit://delete" },
                width: { type: "fixed", value: 20 },
                height: { type: "fixed", value: 20 },
                imageUrl: "https://file-ap-1.sendbird.com/5b5379aa73fd460da22ffaf9a61d0d7f.png",
                imageStyle: { contentMode: MediaContentMode.AspectFit }
              }
            ]
          },
          {
            type: ComponentType.Text,
            viewStyle: { padding: { top: 6, bottom: 12, left: 0, right: 0 } },
            text: "Esse eu esse duis ipsum et dolor eu ut sit amet consectetur cillum velit officia. Ex adipisicing elit quis ea sit. Occaecat in eu aliqua nulla magna id ut excepteur minim.",
            maxTextLines: 2,
            textStyle: { size: 14, color: "#e10000" },
            width: { type: "fixed", value: 200 },
            height: { type: "fixed", value: 50 }
          },
          {
            type: ComponentType.TextButton,
            action: { type: ActionType.Web, data: "https://www.daum.net" },
            text: "Button 3",
            textStyle: { size: 14, color: "#742ddd", weight: FontWeight.Bold }
          }
        ]
      }
    ]
  }
});
({
  "body": {
    "items": [
      {
        "type": ComponentType.Image,
        "action": { "type": ActionType.Web, "data": "https://www.naver.com/" },
        "height": { "type": "fixed", "value": 136 },
        "imageUrl": "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
        "imageStyle": { "contentMode": MediaContentMode.AspectFill }
      },
      {
        "type": ComponentType.Box,
        "viewStyle": { "padding": { "top": 12, "bottom": 12, "left": 12, "right": 12 }, backgroundColor: "#cccccc" },
        "layout": Layout.Column,
        width: { type: "flex", value: FlexSizeSpecValue.FillParent },
        "items": [
          {
            "type": ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            "layout": Layout.Row,
            "items": [
              {
                "type": ComponentType.TextButton,
                "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                width: { type: "fixed", value: 150 },
                "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 0, "right": 4 } },
                "text": "Button 2",
                "textStyle": { "size": 14, "weight": FontWeight.Bold }
              },
              {
                "type": ComponentType.TextButton,
                "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 4, "right": 0 } },
                "text": "Button 3",
                "textStyle": { "size": 14, "weight": FontWeight.Bold }
              }
            ]
          },
          {
            "type": ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            "layout": Layout.Row,
            "items": [
              {
                "type": ComponentType.Text,
                "text": "Sample2 text",
                "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
                "maxTextLines": 1,
                "textStyle": { "size": 16, "weight": FontWeight.Bold }
              },
              {
                "type": ComponentType.ImageButton,
                "action": { "type": ActionType.UIKit, "data": "uikit://delete" },
                "width": { "type": "fixed", "value": 20 },
                "height": { "type": "fixed", "value": 20 },
                "imageUrl": "https://file-ap-1.sendbird.com/5b5379aa73fd460da22ffaf9a61d0d7f.png",
                "imageStyle": { "contentMode": MediaContentMode.AspectFit }
              }
            ]
          },
          {
            "type": ComponentType.Text,
            "viewStyle": { "padding": { "top": 6, "bottom": 12, "left": 0, "right": 0 } },
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aui",
            "textStyle": { "size": 14 }
          }
        ]
      }
    ]
  }
});
({
  "body": {
    "items": [
      {
        "type": ComponentType.Box,
        "viewStyle": { "backgroundColor": "#ffffff", "borderWidth": 1, "borderColor": "#eeeeee", "radius": 16 },
        "layout": Layout.Column,
        "items": [
          {
            "type": ComponentType.Image,
            "height": { "type": "fixed", "value": 200 },
            "imageUrl": "https://img.freepik.com/free-vector/cartoon-happy-hours-background_52683-81243.jpg?w=2000&t=st=1666689198~exp=1666689798~hmac=23109d44ba03deee7aee069cbeebfcb48fa27f85e53c1cafc5d5d7345f1a2041",
            "imageStyle": { "contentMode": MediaContentMode.AspectFill }
          },
          {
            "type": ComponentType.Box,
            "viewStyle": { "padding": { "top": 15, "bottom": 15, "left": 15, "right": 15 } },
            "layout": Layout.Column,
            "items": [
              {
                "type": ComponentType.Text,
                "text": "Don't miss these deals today",
                "maxTextLines": 1,
                "textStyle": { "size": 20, "color": "#e10000", "weight": FontWeight.Bold }
              },
              {
                "type": ComponentType.Text,
                "viewStyle": { "margin": { "top": 5, "bottom": 0, "left": 0, "right": 0 } },
                "text": "Pay with Maya and get cashback!",
                "maxTextLines": 1,
                "textStyle": { "size": 14, "color": "#e10000" }
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Image,
                    "width": { "type": "fixed", "value": 50 },
                    "height": { "type": "fixed", "value": 50 },
                    "viewStyle": {
                      "backgroundColor": "#ffffff",
                      "borderWidth": 1,
                      "borderColor": "#eeeeee",
                      "radius": 25
                    },
                    "imageUrl": "https://yt3.ggpht.com/ytc/AMLnZu8Kg89ymE7qt5bsS9vMqi9h2aHiN6m9ID-IgxR6-Q=s900-c-k-c0x00ffffff-no-rj",
                    "imageStyle": { "contentMode": MediaContentMode.AspectFill }
                  },
                  {
                    "type": ComponentType.Box,
                    "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                    "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 15, "right": 0 } },
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "Meralco",
                        "maxTextLines": 1,
                        "textStyle": { "size": 16, "color": "#e10000", "weight": FontWeight.Bold }
                      },
                      {
                        "type": ComponentType.Text,
                        "viewStyle": { "margin": { "top": 3, "bottom": 0, "left": 0, "right": 0 } },
                        "text": "30% cashback, P300 min spend",
                        "maxTextLines": 1,
                        "textStyle": { "size": 12, "color": "#610000", "weight": FontWeight.Bold }
                      }
                    ]
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Image,
                    "width": { "type": "fixed", "value": 50 },
                    "height": { "type": "fixed", "value": 50 },
                    "viewStyle": {
                      "backgroundColor": "#ffffff",
                      "borderWidth": 1,
                      "borderColor": "#eeeeee",
                      "radius": 25
                    },
                    "imageUrl": "https://1000logos.net/wp-content/uploads/2021/12/Globe-Telecom-logo.png",
                    "imageStyle": { "contentMode": MediaContentMode.AspectFill, tintColor: "#a49a9a" }
                  },
                  {
                    "type": ComponentType.Box,
                    "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                    "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 15, "right": 0 } },
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "Globe",
                        "maxTextLines": 1,
                        "textStyle": { "size": 16, "color": "#e10000", "weight": FontWeight.Bold }
                      },
                      {
                        "type": ComponentType.Text,
                        "viewStyle": { "margin": { "top": 3, "bottom": 0, "left": 0, "right": 0 } },
                        "text": "30% cashback, P300 min spend",
                        "maxTextLines": 1,
                        "textStyle": { "size": 12, "color": "#610000", "weight": FontWeight.Bold }
                      }
                    ]
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Image,
                    "width": { "type": "fixed", "value": 50 },
                    "height": { "type": "fixed", "value": 50 },
                    "viewStyle": {
                      "backgroundColor": "#ffffff",
                      "borderWidth": 1,
                      "borderColor": "#eeeeee",
                      "radius": 25
                    },
                    "imageUrl": "https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Cignal.svg/640px-Cignal.svg.png",
                    "imageStyle": { "contentMode": MediaContentMode.AspectFill }
                  },
                  {
                    "type": ComponentType.Box,
                    "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                    "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 15, "right": 0 } },
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "Cignal",
                        "maxTextLines": 1,
                        "textStyle": { "size": 16, "color": "#e10000", "weight": FontWeight.Bold }
                      },
                      {
                        "type": ComponentType.Text,
                        "viewStyle": { "margin": { "top": 3, "bottom": 0, "left": 0, "right": 0 } },
                        "text": "30% cashback, P300 min spend",
                        "maxTextLines": 1,
                        "textStyle": { "size": 12, "color": "#610000", "weight": FontWeight.Bold }
                      }
                    ]
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.TextButton,
                    "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                    "viewStyle": {
                      "backgroundColor": "#e0e0e0",
                      "radius": 16,
                      "margin": { "top": 0, "bottom": 0, "left": 0, "right": 4 },
                      "padding": { "top": 12, "bottom": 12, "left": 12, "right": 12 }
                    },
                    "text": "Learn more",
                    "textStyle": { "size": 15, "color": "#e10000", "weight": FontWeight.Bold }
                  },
                  {
                    "type": ComponentType.TextButton,
                    "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                    "viewStyle": {
                      "backgroundColor": "#e10000",
                      "radius": 16,
                      "margin": { "top": 0, "bottom": 0, "left": 4, "right": 0 },
                      "padding": { "top": 12, "bottom": 12, "left": 12, "right": 12 }
                    },
                    "text": "Pay now",
                    "textStyle": { "size": 15, "color": "#ffffff", "weight": FontWeight.Bold }
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
});
({
  "body": {
    "items": [
      {
        "type": ComponentType.Box,
        "layout": Layout.Column,
        "items": [
          {
            "type": ComponentType.Image,
            "imageUrl": "https://static.sendbird.com/sample/profiles/profile_40_512px.png",
            "metaData": {
              "pixelWidth": 512,
              "pixelHeight": 512
            },
            "imageStyle": {
              "tintColor": "#44ff1188"
            },
            viewStyle: {
              "padding": {
                "top": 12,
                "right": 12,
                "bottom": 12,
                "left": 12
              }
            }
          },
          {
            "type": ComponentType.Box,
            "viewStyle": {
              "padding": {
                "top": 12,
                "right": 12,
                "bottom": 12,
                "left": 12
              }
            },
            "layout": Layout.Column,
            "items": [
              {
                "type": ComponentType.Box,
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Box,
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "hi",
                        "maxTextLines": 3,
                        "viewStyle": {
                          "padding": {
                            "top": 0,
                            "bottom": 6,
                            "left": 0,
                            "right": 0
                          }
                        },
                        "textStyle": {
                          "size": 16,
                          "weight": FontWeight.Bold
                        }
                      },
                      {
                        "type": ComponentType.Text,
                        "text": "bye",
                        "maxTextLines": 10,
                        "textStyle": {
                          "size": 14
                        }
                      }
                    ]
                  },
                  {
                    "type": ComponentType.ImageButton,
                    "action": {
                      "type": ActionType.UIKit,
                      "data": "sendbirduikit://delete"
                    },
                    "width": {
                      "type": "fixed",
                      "value": 20
                    },
                    "height": {
                      "type": "fixed",
                      "value": 20
                    },
                    "metaData": {
                      "pixelWidth": 60,
                      "pixelHeight": 60
                    },
                    "imageUrl": "https://dxstmhyqfqr1o.cloudfront.net/sendbird-message-builder/icon-more.png",
                    "imageStyle": {
                      "tintColor": "#ff8d5a"
                    }
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "layout": Layout.Column,
                "items": [
                  {
                    "type": ComponentType.Box,
                    "viewStyle": {
                      "margin": {
                        "top": 16,
                        "bottom": 0,
                        "left": 0,
                        "right": 0
                      }
                    },
                    "align": {
                      "horizontal": AlignValue.Left,
                      "vertical": AlignValue.Center
                    },
                    "layout": Layout.Row,
                    "items": [
                      {
                        "type": ComponentType.Image,
                        "imageUrl": "https://ca.slack-edge.com/T0ADCTNEL-ULE240VNV-83fd5776e78e-512",
                        "width": {
                          "type": "fixed",
                          "value": 40
                        },
                        "height": {
                          "type": "fixed",
                          "value": 40
                        },
                        "metaData": {
                          "pixelWidth": 512,
                          "pixelHeight": 512
                        },
                        "viewStyle": {
                          "backgroundColor": "#BDBDBD",
                          "radius": 20
                        },
                        "imageStyle": {
                          "contentMode": MediaContentMode.AspectFill
                        }
                      },
                      {
                        "type": ComponentType.Box,
                        "viewStyle": {
                          "margin": {
                            "top": 0,
                            "bottom": 0,
                            "left": 12,
                            "right": 0
                          }
                        },
                        "layout": Layout.Column,
                        "items": [
                          {
                            "type": ComponentType.Text,
                            "text": "Chongbu",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 16,
                              "weight": FontWeight.Bold
                            }
                          },
                          {
                            "type": ComponentType.Text,
                            "viewStyle": {
                              "margin": {
                                "top": 4,
                                "bottom": 0,
                                "left": 0,
                                "right": 0
                              }
                            },
                            "text": " ",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 14
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": ComponentType.Box,
                    "viewStyle": {
                      "margin": {
                        "top": 16,
                        "bottom": 0,
                        "left": 0,
                        "right": 0
                      }
                    },
                    "align": {
                      "horizontal": AlignValue.Left,
                      "vertical": AlignValue.Center
                    },
                    "layout": Layout.Row,
                    "items": [
                      {
                        "type": ComponentType.Image,
                        "imageUrl": "https://ca.slack-edge.com/T0ADCTNEL-U02LA25KY8J-d41a3e8c7554-512",
                        "width": {
                          "type": "fixed",
                          "value": 40
                        },
                        "height": {
                          "type": "fixed",
                          "value": 40
                        },
                        "metaData": {
                          "pixelWidth": 512,
                          "pixelHeight": 512
                        },
                        "viewStyle": {
                          "backgroundColor": "#BDBDBD",
                          "radius": 20
                        },
                        "imageStyle": {
                          "contentMode": MediaContentMode.AspectFill
                        }
                      },
                      {
                        "type": ComponentType.Box,
                        "viewStyle": {
                          "margin": {
                            "top": 0,
                            "bottom": 0,
                            "left": 12,
                            "right": 0
                          }
                        },
                        "layout": Layout.Column,
                        "items": [
                          {
                            "type": ComponentType.Text,
                            "text": "Amanda",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 16,
                              "weight": FontWeight.Bold
                            }
                          },
                          {
                            "type": ComponentType.Text,
                            "viewStyle": {
                              "margin": {
                                "top": 4,
                                "bottom": 0,
                                "left": 0,
                                "right": 0
                              }
                            },
                            "text": "This is title message",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 14
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
});
({
  "body": {
    "items": [
      {
        "type": "box",
        "layout": "column",
        height: { type: "fixed", value: 600 },
        "items": [
          {
            "type": "box",
            "layout": "column",
            "viewStyle": { "radius": "8", "padding": { "top": "12", "bottom": "12", "left": "12", "right": "12" } },
            "items": [
              {
                "type": "text",
                "text": "Title text",
                "textStyle": { "color": "#E0000000", "size": "16", "weight": "bold" },
                "maxTextLines": "5",
                "viewStyle": {},
                "action": { "data": "www.naver.com" }
              },
              {
                "type": "text",
                "viewStyle": { "margin": { "top": "8", "right": "0", "bottom": "0", "left": "0" } },
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aui",
                "textStyle": { "color": "#E0000000", "size": "14", "weight": "normal" },
                "maxTextLines": "5",
                "action": { "data": "https://www.naver.com" }
              },
              {
                "type": "box",
                "layout": "row",
                "viewStyle": { "margin": { "top": "12", "right": "0", "bottom": "0", "left": "0" } },
                "items": [
                  {
                    "type": "textButton",
                    "viewStyle": {
                      "backgroundColor": "#E0E0E0",
                      "padding": { "top": "10", "bottom": "10", "left": "20", "right": "20" }
                    },
                    "text": "Button 1",
                    "textStyle": { "color": "#742DDD", "size": "14", "weight": "bold" },
                    "maxTextLines": "5",
                    "action": { "data": "www.naver.com" }
                  },
                  {
                    "type": "textButton",
                    "viewStyle": {
                      "backgroundColor": "#E0E0E0",
                      "padding": { "top": "10", "bottom": "10", "left": "20", "right": "20" },
                      "margin": { "left": "8", "right": "0", "top": "0", "bottom": "0" }
                    },
                    "text": "Button 2",
                    "textStyle": { "color": "#742DDD", "size": "14", "weight": "bold" },
                    "maxTextLines": "5",
                    "action": { "data": "https://www.naver.com" }
                  }
                ]
              }
            ],
            "action": { "data": "https://www.naver.com" }
          },
          {
            "type": "image",
            "viewStyle": {},
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "imageStyle": { "contentMode": "aspectFill" },
            "imageUrl": "https://file-preprod.sendbird.com/d03c08bb3f9041a88c1207b6bbf15ab8.png",
            "metaData": { "pixelWidth": "1062", "pixelHeight": "1070" }
          },
          {
            "type": "textButton",
            "viewStyle": {
              "backgroundColor": "#E0E0E0",
              "padding": { "top": "10", "bottom": "10", "left": "20", "right": "20" }
            },
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "text": "Button",
            "textStyle": { "color": "#742DDD", "size": "16", "weight": "normal" },
            "maxTextLines": "5",
            "action": { "data": "www.naver.com" }
          },
          {
            "type": "imageButton",
            "viewStyle": {},
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "imageUrl": "https://file-preprod.sendbird.com/38fdf5c1056f42b89a44b38155cc4b49.jpg",
            "imageStyle": { "contentMode": "aspectFill" },
            "metaData": { "pixelWidth": "1080", "pixelHeight": "2640" },
            "action": { "data": "www.naver.com" }
          }
        ],
        "viewStyle": {}
      }
    ]
  }
});
({
  "body": {
    "items": [
      {
        "elementId": "root",
        "type": "box",
        "layout": "column",
        "width": {
          "type": "flex",
          "value": FlexSizeSpecValue.FillParent
        },
        "height": {
          "type": "flex",
          "value": FlexSizeSpecValue.WrapContent
        },
        "items": [
          {
            "type": "text",
            "viewStyle": {
              "backgroundColor": "#a0c0ffff",
              "margin": {
                "top": 16,
                "bottom": 16,
                "left": 16,
                "right": 16
              },
              "padding": {
                "top": 16,
                "bottom": 16,
                "left": 16,
                "right": 16
              }
            },
            "text": "Wrap Wrap Wrap Wrap Wrap Wrap Wrap Wrap Wrap Wrap ",
            "textStyle": {
              "size": 14,
              "color": "#222121e0",
              "weight": "normal"
            },
            "maxTextLines": 5,
            "width": {
              "type": "flex",
              "value": FlexSizeSpecValue.FillParent
            },
            "height": {
              "type": "flex",
              "value": 1
            },
            "align": {
              "horizontal": "left",
              "vertical": "top"
            },
            "elementId": "c0e15878-4984-408d-abaa-4b495c2e3872"
          },
          {
            "type": "imageButton",
            "viewStyle": {
              margin: {
                left: 24,
                right: 12
              }
            },
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "fixed", "value": 250 },
            "imageUrl": "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
            "imageStyle": { "contentMode": "aspectFill" },
            "metaData": { "pixelWidth": "1080", "pixelHeight": "2640" },
            "action": { "data": "www.naver.com" }
          }
        ]
      }
    ]
  }
});
const SWIPE_THRESHOLD = 24;
function useCarousel({ spacing, childrenLength, paddingInlineStart, paddingInlineEnd }) {
  const paddingStart = paddingInlineStart;
  const paddingEnd = paddingInlineEnd;
  const carouselRef = useRef(null);
  const childrenRefs = useRef(Array.from({ length: childrenLength }, () => React__default__default.createRef()));
  const isDragging = useRef(false);
  const isScrolling = useRef(false);
  const animationFrame = useRef(null);
  const drag = useRef({
    sx: null,
    sy: null,
    offset: 0,
    translateX: 0,
    currentIndex: 0
  });
  const [childWidths, setChildWidths] = useState(() => childrenRefs.current.map(() => 0));
  const itemPositions = useMemo(() => {
    let currentPosition = paddingStart;
    return childWidths.map((width, i3) => {
      const start = currentPosition - (i3 > 0 ? spacing : 0);
      const end = start - width;
      currentPosition = end;
      return { start, end };
    });
  }, [childWidths, spacing, paddingStart]);
  const totalContentWidth = useMemo(() => {
    const totalItemWidth = childWidths.reduce((acc, width) => acc + width, 0);
    const totalSpacing = spacing * (childrenLength - 1);
    return totalItemWidth + totalSpacing;
  }, [childWidths, spacing, childrenLength]);
  useLayoutEffect(() => {
    setChildWidths(childrenRefs.current.map((ref) => {
      var _a2, _b2;
      return (_b2 = (_a2 = ref.current) === null || _a2 === void 0 ? void 0 : _a2.clientWidth) !== null && _b2 !== void 0 ? _b2 : 0;
    }));
  }, [childrenLength]);
  useLayoutEffect(() => {
    if (itemPositions.length > 0) {
      drag.current.translateX = itemPositions[0].start;
      animate();
    }
  }, [itemPositions]);
  const dragStart = () => {
    if (!carouselRef.current)
      return;
    isDragging.current = true;
    carouselRef.current.style.cursor = "grabbing";
    carouselRef.current.style.transition = "none";
    animationFrame.current = requestAnimationFrame(animate);
  };
  const dragStop = () => {
    if (!carouselRef.current)
      return;
    isDragging.current = false;
    carouselRef.current.style.cursor = "grab";
    carouselRef.current.style.transition = "transform 0.5s ease";
    if (animationFrame.current) {
      cancelAnimationFrame(animationFrame.current);
      animationFrame.current = null;
    }
  };
  const dragRelease = () => {
    const { offset, currentIndex } = drag.current;
    const thresholdExceeded = Math.abs(offset) >= SWIPE_THRESHOLD;
    const swipeToNext = offset < 0 && currentIndex < childrenLength - 1;
    const swipeToPrev = offset > 0 && currentIndex > 0;
    let newIndex = currentIndex;
    if (thresholdExceeded && swipeToNext) {
      newIndex = currentIndex + 1;
    } else if (thresholdExceeded && swipeToPrev) {
      newIndex = currentIndex - 1;
    }
    function clampTranslateX(translateX) {
      var _a2, _b2;
      const containerWidth = (_b2 = (_a2 = carouselRef.current) === null || _a2 === void 0 ? void 0 : _a2.clientWidth) !== null && _b2 !== void 0 ? _b2 : 0;
      const start = paddingStart;
      const end = Math.min(0, containerWidth - totalContentWidth) - paddingEnd;
      return Math.min(start, Math.max(end, translateX));
    }
    drag.current.currentIndex = newIndex;
    drag.current.translateX = clampTranslateX(itemPositions[newIndex].start);
    drag.current.offset = 0;
  };
  const scrollStart = () => {
    isScrolling.current = true;
  };
  const scrollStop = () => {
    isScrolling.current = false;
  };
  const animate = () => {
    if (carouselRef.current) {
      carouselRef.current.style.transform = `translateX(${drag.current.translateX + drag.current.offset}px)`;
    }
    if (animationFrame.current) {
      animationFrame.current = requestAnimationFrame(animate);
    }
  };
  const blockScroll = () => {
    if (carouselRef.current) {
      carouselRef.current.style.touchAction = "pan-x";
    }
  };
  const unblockScroll = () => {
    if (carouselRef.current) {
      carouselRef.current.style.touchAction = "pan-y";
    }
  };
  const onMouseDown = (event) => {
    dragStart();
    scrollStop();
    drag.current.sx = event.clientX;
    drag.current.sy = event.clientY;
    drag.current.offset = 0;
    animationFrame.current = requestAnimationFrame(animate);
  };
  const onMouseMove = (event) => {
    if (!isDragging.current || drag.current.sx === null)
      return;
    drag.current.offset = event.clientX - drag.current.sx;
  };
  const onMouseUp = () => {
    if (!isDragging.current)
      return;
    scrollStop();
    dragRelease();
    dragStop();
  };
  const onMouseLeave = () => {
    if (!isDragging.current)
      return;
    scrollStop();
    dragRelease();
    dragStop();
  };
  const onTouchStart = (event) => {
    scrollStop();
    dragStop();
    const touch = event.touches[0];
    drag.current.sx = touch.clientX;
    drag.current.sy = touch.clientY;
    drag.current.offset = 0;
    animationFrame.current = requestAnimationFrame(animate);
  };
  const onTouchMove = (event) => {
    if (drag.current.sx === null || drag.current.sy === null || isScrolling.current)
      return;
    const { clientX, clientY } = event.touches[0];
    const { sx, sy } = drag.current;
    if (isDragging.current) {
      drag.current.offset = clientX - sx;
      return;
    }
    const isVerticalScroll = Math.abs(clientY - sy) > Math.abs(clientX - sx);
    if (isVerticalScroll) {
      scrollStart();
    } else {
      drag.current.offset = clientX - sx;
      blockScroll();
      dragStart();
    }
  };
  const onTouchEnd = () => {
    unblockScroll();
    scrollStop();
    dragRelease();
    dragStop();
  };
  return {
    carouselRef,
    childrenRefs,
    handlers: {
      onMouseDown,
      onMouseMove,
      onMouseUp,
      onMouseLeave,
      onTouchStart,
      onTouchMove,
      onTouchEnd
    }
  };
}
var __rest$4 = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
const Carousel = ({ children, style, spacing = defaultProperties.carousel.style.spacing, maxChildWidth = defaultProperties.carousel.style.maxChildWidth }) => {
  const _a2 = style !== null && style !== void 0 ? style : {}, { paddingInlineStart = 0, paddingInlineEnd = 0 } = _a2, restStyle = __rest$4(_a2, ["paddingInlineStart", "paddingInlineEnd"]);
  const { carouselRef, childrenRefs, handlers } = useCarousel({
    spacing,
    childrenLength: children.length,
    paddingInlineStart: Number(paddingInlineStart),
    paddingInlineEnd: Number(paddingInlineEnd)
  });
  return React__default__default.createElement("div", Object.assign({}, handlers, { ref: carouselRef, className: "sb-message-template__carousel", style: Object.assign(Object.assign({}, restStyle), { gap: spacing, width: "100%", overflow: "visible" }) }), children.map((item, index) => React__default__default.createElement(CarouselChild, { ref: childrenRefs.current[index], key: index, maxChildWidth }, item)));
};
const CarouselChild = React__default__default.forwardRef(function CarouselChild2({ maxChildWidth, children }, ref) {
  const maxWidth = shouldSetMaxChildWidth(children.props, maxChildWidth) ? maxChildWidth : "fit-content";
  return React__default__default.createElement("div", { ref, style: { maxWidth, width: "100%", flexShrink: 0, overflow: "hidden", userSelect: "none" } }, children);
});
function shouldSetMaxChildWidth(props, maxChildWidth) {
  return !!props.templateItems.find((it2) => {
    var _a2, _b2, _c, _d;
    const hasFillWidth = ((_a2 = it2.width) === null || _a2 === void 0 ? void 0 : _a2.type) === "flex" && ((_b2 = it2.width) === null || _b2 === void 0 ? void 0 : _b2.value) === FlexSizeSpecValue.FillParent;
    const overMaxChildWidth = ((_c = it2.width) === null || _c === void 0 ? void 0 : _c.type) === "fixed" && ((_d = it2.width) === null || _d === void 0 ? void 0 : _d.value) >= maxChildWidth;
    return hasFillWidth || overMaxChildWidth;
  });
}
function isWrappedText(view) {
  var _a2;
  return view.type === ComponentType.Text && ((_a2 = view.width) === null || _a2 === void 0 ? void 0 : _a2.value) == FlexSizeSpecValue.WrapContent;
}
const isSizeCompatibleWithOption = ({ size, option }) => {
  if (option === "wrap") {
    return size.type === "flex" && size.value == FlexSizeSpecValue.WrapContent;
  }
  if (option === "fill") {
    return size.type === "flex" && size.value == FlexSizeSpecValue.FillParent;
  }
  return size.type === "fixed";
};
const isGif = (url) => {
  var _a2;
  if (typeof url !== "string")
    return false;
  const extension = (_a2 = url.split(".").pop()) === null || _a2 === void 0 ? void 0 : _a2.toLowerCase();
  return extension === "gif";
};
var __rest$3 = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
const CanvasReactMessageTemplateImage = (props) => {
  const { imageSize, canvasRef, canvasProps } = useCanvasMessageTemplateImage(props);
  return React__default__default.createElement("canvas", Object.assign({}, canvasProps, { ref: canvasRef, width: imageSize === null || imageSize === void 0 ? void 0 : imageSize.width, height: imageSize === null || imageSize === void 0 ? void 0 : imageSize.height, onError: props.onError }));
};
const useCanvasMessageTemplateImage = (_a2) => {
  var { metaData, tintColor } = _a2, props = __rest$3(_a2, ["metaData", "tintColor"]);
  const canvasRef = useRef(null);
  const [fallbackImageSize, setFallbackImageSize] = useState();
  const imageSize = useMemo(() => {
    if ((metaData === null || metaData === void 0 ? void 0 : metaData.pixelHeight) && (metaData === null || metaData === void 0 ? void 0 : metaData.pixelWidth)) {
      return { width: metaData.pixelWidth, height: metaData.pixelHeight };
    }
    return fallbackImageSize;
  }, [fallbackImageSize, metaData === null || metaData === void 0 ? void 0 : metaData.pixelHeight, metaData === null || metaData === void 0 ? void 0 : metaData.pixelWidth]);
  useEffect(() => {
    if (imageSize == null) {
      console.log("Canvas_ReactMessageTemplateImage: no metaData, render fit to container");
      if (canvasRef.current) {
        canvasRef.current.style.width = "100%";
        canvasRef.current.style.height = "100%";
        const containerSize = canvasRef.current.getBoundingClientRect();
        setFallbackImageSize(containerSize);
      }
    }
  }, [imageSize]);
  useEffect(() => {
    if (props.src) {
      const img = new Image();
      const onImageLoad = () => {
        if (canvasRef.current && tintColor && imageSize) {
          const ctx = canvasRef.current.getContext("2d");
          if (ctx) {
            const { width: imageWidth, height: imageHeight } = imageSize;
            ctx.clearRect(0, 0, imageWidth, imageHeight);
            ctx.beginPath();
            ctx.globalCompositeOperation = "source-over";
            ctx.fillStyle = "#000";
            ctx.drawImage(img, 0, 0, imageWidth, imageHeight);
            ctx.globalCompositeOperation = "source-atop";
            ctx.fillStyle = tintColor;
            ctx.fillRect(0, 0, imageWidth, imageHeight);
          }
        }
      };
      const onImageError = (event) => {
        var _a3;
        (_a3 = props.onError) === null || _a3 === void 0 ? void 0 : _a3.call(props, event);
      };
      img.addEventListener("load", onImageLoad);
      img.addEventListener("error", onImageError);
      img.src = props.src;
      return () => {
        img.removeEventListener("load", onImageLoad);
        img.removeEventListener("error", onImageError);
      };
    }
    return;
  }, [props.src, imageSize, tintColor]);
  return {
    canvasRef,
    canvasProps: props,
    imageSize
  };
};
const ImgReactMessageTemplateImage = (props) => {
  return React__default__default.createElement("img", Object.assign({}, props, { onError: props.onError, referrerPolicy: "no-referrer" }));
};
const PlaceholderReactMessageTemplateImage = (props) => {
  return React__default__default.createElement("div", { style: Object.assign(Object.assign({}, props.style), { backgroundColor: "transparent" }) });
};
var __rest$2 = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
const ReactMessageTemplateImage = (_a2) => {
  var { tintColor, metaData } = _a2, props = __rest$2(_a2, ["tintColor", "metaData"]);
  const { hasError, onError: onError2 } = useImageLoadError(props.src);
  if (props.onError)
    console.warn("`onError` is intercepted and not executed in the ReactMessageTemplateImage.");
  if (hasError) {
    return React__default__default.createElement(PlaceholderReactMessageTemplateImage, Object.assign({}, props));
  } else if (tintColor && !isGif(props.src)) {
    return React__default__default.createElement(CanvasReactMessageTemplateImage, Object.assign({}, props, { onError: onError2, tintColor, metaData }));
  } else {
    return React__default__default.createElement(ImgReactMessageTemplateImage, Object.assign({}, props, { onError: onError2 }));
  }
};
const useImageLoadError = (source) => {
  const [hasError, setHasError] = useState(false);
  useEffect(() => setHasError(false), [source]);
  return {
    hasError,
    onError: useCallback(() => setHasError(true), [])
  };
};
function getDefaultStyles(overrides) {
  return Object.assign({ display: "flex", overflow: "hidden", boxSizing: "border-box" }, overrides);
}
function setViewProps(styles2, props, options) {
  setViewSize(styles2, props, options);
  setViewStyle(styles2, props);
}
function setBorderStyle(styles2, borderWidth, borderColor, radius) {
  if (borderWidth) {
    styles2["--border-width"] = `${borderWidth}px`;
    styles2["--border-color"] = borderColor || "transparent";
  }
  if (radius) {
    styles2["borderRadius"] = radius;
    styles2["--border-radius"] = `${radius}px`;
  }
}
function setViewStyle(styles2, props) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h;
  const { viewStyle } = props;
  styles2["marginBlockStart"] = (_a2 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _a2 === void 0 ? void 0 : _a2.top;
  styles2["marginBlockEnd"] = (_b2 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _b2 === void 0 ? void 0 : _b2.bottom;
  styles2["marginInlineStart"] = (_c = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _c === void 0 ? void 0 : _c.left;
  styles2["marginInlineEnd"] = (_d = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _d === void 0 ? void 0 : _d.right;
  const marginHorizontal = ((_f = (_e2 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _e2 === void 0 ? void 0 : _e2.left) !== null && _f !== void 0 ? _f : 0) + ((_h = (_g2 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _g2 === void 0 ? void 0 : _g2.right) !== null && _h !== void 0 ? _h : 0);
  if (marginHorizontal > 0 && styles2.width === "100%")
    styles2.width = `calc(100% - ${marginHorizontal}px)`;
  if (viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.backgroundColor)
    styles2["backgroundColor"] = viewStyle.backgroundColor;
  if (viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.backgroundImageUrl) {
    styles2["backgroundImage"] = `url(${JSON.stringify(viewStyle.backgroundImageUrl)})`;
    styles2["backgroundSize"] = "100% 100%";
    styles2["backgroundPosition"] = "center";
  }
  setBorderStyle(styles2, viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.borderWidth, viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.borderColor, viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.radius);
}
function getViewSizeStyle(width, height, parentLayout) {
  const style = {};
  if (width.type === "flex" && width.value == FlexSizeSpecValue.FillParent) {
    style["width"] = "100%";
    if (parentLayout === Layout.Row) {
      style["flex"] = 1;
    }
  } else if (width.type === "fixed" && width.value >= 0) {
    style["width"] = width.value;
  }
  if (height.type === "flex" && height.value == FlexSizeSpecValue.FillParent) {
    style["height"] = "100%";
    if (parentLayout === Layout.Column) {
      style["flex"] = 1;
    }
  } else if (height.type === "fixed" && height.value >= 0) {
    style["height"] = height.value;
  }
  return style;
}
function setViewSize(styles2, props, options) {
  var _a2, _b2;
  const { width: defaultWidth, height: defaultHeight } = defaultProperties.view.size;
  const { parentLayout } = options;
  const sizeStyle = getViewSizeStyle((_a2 = props.width) !== null && _a2 !== void 0 ? _a2 : defaultWidth, (_b2 = props.height) !== null && _b2 !== void 0 ? _b2 : defaultHeight, parentLayout);
  Object.assign(styles2, sizeStyle);
}
function setAlign(styles2, layout = defaultProperties.box.layout, align = defaultProperties.box.align) {
  if (layout === Layout.Row) {
    styles2["flexDirection"] = "row";
    styles2["alignItems"] = alignInFlex(align.vertical);
    styles2["justifyContent"] = alignInFlex(align.horizontal);
  }
  if (layout === Layout.Column) {
    styles2["flexDirection"] = "column";
    styles2["alignItems"] = alignInFlex(align.horizontal);
    styles2["justifyContent"] = alignInFlex(align.vertical);
  }
}
function setTextAlign(styles2, align = defaultProperties.box.align.horizontal) {
  styles2.textAlign = align;
}
function setImageStyle(styles2, imageStyle) {
  const { contentMode = MediaContentMode.AspectFit } = imageStyle || {};
  if (contentMode) {
    switch (contentMode) {
      case MediaContentMode.AspectFill:
        styles2["objectFit"] = "cover";
        break;
      case MediaContentMode.AspectFit:
        styles2["objectFit"] = "contain";
        break;
      case MediaContentMode.ScalesToFill:
        styles2["objectFit"] = "fill";
        break;
    }
  }
}
function setImageAspectRatio(styles2, props) {
  var _a2, _b2, _c, _d;
  const imageMetaData = props === null || props === void 0 ? void 0 : props.metaData;
  if (!(imageMetaData === null || imageMetaData === void 0 ? void 0 : imageMetaData.pixelHeight) || !(imageMetaData === null || imageMetaData === void 0 ? void 0 : imageMetaData.pixelWidth)) {
    return;
  }
  if (((_a2 = props === null || props === void 0 ? void 0 : props.width) === null || _a2 === void 0 ? void 0 : _a2.type) === "fixed" || ((_b2 = props === null || props === void 0 ? void 0 : props.height) === null || _b2 === void 0 ? void 0 : _b2.type) === "fixed") {
    return;
  }
  styles2["aspectRatio"] = `${(_c = props === null || props === void 0 ? void 0 : props.metaData) === null || _c === void 0 ? void 0 : _c.pixelWidth} / ${(_d = props === null || props === void 0 ? void 0 : props.metaData) === null || _d === void 0 ? void 0 : _d.pixelHeight}`;
}
function webkitLineClampStyles(numberOfLines) {
  return {
    WebkitLineClamp: numberOfLines,
    WebkitBoxOrient: "vertical",
    display: "-webkit-box",
    overflow: "hidden",
    overflowWrap: "anywhere",
    flex: 1
  };
}
function setTextStyle(styles2, props, options) {
  const { textStyle, width } = props;
  const { size, color, weight } = textStyle || {};
  if (size)
    styles2["fontSize"] = size;
  if (color)
    styles2["color"] = color;
  if (weight)
    styles2["fontWeight"] = weight;
  if ((width === null || width === void 0 ? void 0 : width.type) === "flex" && (width === null || width === void 0 ? void 0 : width.value) == FlexSizeSpecValue.WrapContent) {
    styles2["width"] = "fit-content";
    styles2["maxWidth"] = "100%";
  }
  if (props.type === ComponentType.Text) {
    const { siblings, elemIdx } = options;
    if (siblings != null && siblings.length >= 2 && siblings.every(isWrappedText)) {
      styles2.flexShrink = siblings.length - 1 === elemIdx ? 1 : 0;
    }
  }
}
const MessageContext = React__default__default.createContext(null);
const MessageProvider = (props) => {
  const { message, handleWebAction, handleCustomAction, handlePredefinedAction, children } = props;
  const value = React__default__default.useMemo(() => ({
    message,
    handleWebAction,
    handleCustomAction,
    handlePredefinedAction
  }), [message === null || message === void 0 ? void 0 : message.updatedAt]);
  return React__default__default.createElement(MessageContext.Provider, { value }, children);
};
const useMessageContext = () => {
  const context = React__default__default.useContext(MessageContext);
  if (!context) {
    throw new Error("useMessageContext must be used within a MessageProvider");
  }
  return context;
};
function usePreservedCallback(callback) {
  const callbackRef = useRef(callback);
  useEffect(() => {
    callbackRef.current = callback;
  }, [callback]);
  return useCallback((...args) => {
    return callbackRef.current(...args);
  }, [callbackRef]);
}
function useRefEffect(callback, deps) {
  const preservedCallback = usePreservedCallback(callback);
  const disposeRef = useRef(noop$1);
  const effect = useCallback((element) => {
    disposeRef.current();
    disposeRef.current = noop$1;
    if (element != null) {
      const cleanup = callback(element);
      if (typeof cleanup === "function") {
        disposeRef.current = cleanup;
      }
    }
  }, [preservedCallback, ...deps]);
  return effect;
}
function noop$1() {
}
function useResizeObserver(onResize) {
  const resizeCallback = usePreservedCallback(onResize);
  const ref = useRefEffect((elem) => {
    const observer = new ResizeObserver((entries2) => {
      if (entries2[0] != null) {
        resizeCallback(entries2[0]);
      }
    });
    observer.observe(elem);
    return () => {
      observer.unobserve(elem);
    };
  }, [resizeCallback]);
  return ref;
}
function useElementSize() {
  const [width, setWidth] = useState(-1);
  const [height, setHeight] = useState(-1);
  const [contentWidth, setContentWidth] = useState(-1);
  const [contentHeight, setContentHeight] = useState(-1);
  const [paddingWidth, setPaddingWidth] = useState(-1);
  const [paddingHeight, setPaddingHeight] = useState(-1);
  const ref = useResizeObserver((entry) => {
    const { width: contentWidth2, height: contentHeight2 } = entry.contentRect;
    const target = entry.target;
    const { width: width2, height: height2 } = target.getBoundingClientRect();
    setWidth(width2);
    setHeight(height2);
    setContentWidth(contentWidth2);
    setContentHeight(contentHeight2);
    setPaddingWidth(width2 - contentWidth2);
    setPaddingHeight(height2 - contentHeight2);
  });
  return { ref, width, height, contentWidth, contentHeight, paddingWidth, paddingHeight };
}
var __rest$1 = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
function isViewCompatibleWithSizeOption({ width = defaultProperties.view.size.width, height = defaultProperties.view.size.height, parentLayout = defaultProperties.box.layout, option }) {
  if (parentLayout === Layout.Row) {
    return isSizeCompatibleWithOption({
      size: width,
      option
    });
  }
  return isSizeCompatibleWithOption({
    size: height,
    option
  });
}
function useRecalculateWidth(params) {
  const { style, props } = params;
  const _a2 = useElementSize(), { ref: elemRef } = _a2, size = __rest$1(_a2, ["ref"]);
  const { updateSize, sizes } = useSizeContext();
  const { id: id2, siblings, parentLayout } = props;
  const { width, height, paddingWidth, paddingHeight, contentWidth, contentHeight } = size;
  useEffect(() => {
    updateSize({
      id: props.id,
      width,
      height,
      paddingWidth,
      paddingHeight,
      contentWidth,
      contentHeight
    });
  }, [props.id, width, height, paddingWidth, paddingHeight, contentWidth, contentHeight, updateSize]);
  const currentStyle = useMemo(() => {
    const sumViewSize = (acc = 0, view) => {
      var _a3, _b2, _c, _d;
      if (parentLayout === Layout.Row) {
        return acc + ((_b2 = (_a3 = sizes[view.id]) === null || _a3 === void 0 ? void 0 : _a3.contentWidth) !== null && _b2 !== void 0 ? _b2 : 0);
      }
      return acc + ((_d = (_c = sizes[view.id]) === null || _c === void 0 ? void 0 : _c.contentHeight) !== null && _d !== void 0 ? _d : 0);
    };
    const hasFillOption = isViewCompatibleWithSizeOption({
      width: props.width,
      height: props.height,
      parentLayout,
      option: "fill"
    });
    if (hasFillOption) {
      const wrapSiblingsSize = siblings.filter(({ width: width2, height: height2 }) => !isViewCompatibleWithSizeOption({
        width: width2,
        height: height2,
        parentLayout,
        option: "fill"
      })).reduce(sumViewSize, 0);
      const fillSiblingCount = siblings.filter(({ width: width2, height: height2 }) => isViewCompatibleWithSizeOption({
        width: width2,
        height: height2,
        parentLayout,
        option: "fill"
      })).length;
      const maxSizeOption = (() => {
        if (parentLayout === Layout.Row) {
          return {
            maxWidth: `calc((100% - ${wrapSiblingsSize}px) / ${fillSiblingCount})`
          };
        }
        return {
          maxHeight: `calc((100% - ${wrapSiblingsSize}px) / ${fillSiblingCount})`
        };
      })();
      return Object.assign(Object.assign(Object.assign({}, style), maxSizeOption), width == 0 && { height: 0 });
    } else {
      const currentElemIdx = siblings.findIndex((sibling) => sibling.id === id2);
      const forwardSiblingsSize = siblings.slice(0, currentElemIdx).filter(({ width: width2, height: height2 }) => isViewCompatibleWithSizeOption({
        width: width2,
        height: height2,
        parentLayout,
        option: "wrap"
      })).reduce(sumViewSize, 0);
      return Object.assign(Object.assign(Object.assign({}, style), width === 0 && { height: 0 }), parentLayout === Layout.Row ? {
        maxWidth: `calc(100% - ${forwardSiblingsSize}px)`
      } : {
        maxHeight: `calc(100% - ${forwardSiblingsSize}px)`
      });
    }
  }, [props.width, props.height, parentLayout, sizes, siblings, style, width, id2]);
  return { recalculatedStyle: currentStyle, elemRef };
}
var __rest = function(s4, e3) {
  var t4 = {};
  for (var p2 in s4) if (Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0)
    t4[p2] = s4[p2];
  if (s4 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++) {
      if (e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]))
        t4[p2[i3]] = s4[p2[i3]];
    }
  return t4;
};
const hasValidUrlProtocol = (url = "") => ["http://", "https://", "ftp://"].some((protocol) => url.startsWith(protocol));
const returnUrl = (url = "") => {
  if (hasValidUrlProtocol(url)) {
    return url;
  }
  return `https://${url}`;
};
const ActionHandler = ({ children, props, className, style }) => {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h, _j;
  const { recalculatedStyle, elemRef } = useRecalculateWidth({ style, props });
  const { message, handleWebAction, handleCustomAction, handlePredefinedAction } = useMessageContext();
  const borderClass = ((_a2 = props.viewStyle) === null || _a2 === void 0 ? void 0 : _a2.borderWidth) ? "sb-message-template__border" : "";
  const paddingStyles = {
    paddingBlockStart: (_c = (_b2 = props.viewStyle) === null || _b2 === void 0 ? void 0 : _b2.padding) === null || _c === void 0 ? void 0 : _c.top,
    paddingBlockEnd: (_e2 = (_d = props.viewStyle) === null || _d === void 0 ? void 0 : _d.padding) === null || _e2 === void 0 ? void 0 : _e2.bottom,
    paddingInlineStart: (_g2 = (_f = props.viewStyle) === null || _f === void 0 ? void 0 : _f.padding) === null || _g2 === void 0 ? void 0 : _g2.left,
    paddingInlineEnd: (_j = (_h = props.viewStyle) === null || _h === void 0 ? void 0 : _h.padding) === null || _j === void 0 ? void 0 : _j.right
  };
  const onClick = (e3) => {
    var _a3, _b3, _c2, _d2, _e3, _f2, _g3;
    if (((_a3 = props.action) === null || _a3 === void 0 ? void 0 : _a3.type) === "web") {
      if (handleWebAction) {
        handleWebAction(e3, props.action, message);
      } else {
        (_c2 = window === null || window === void 0 ? void 0 : window.open(returnUrl((_b3 = props === null || props === void 0 ? void 0 : props.action) === null || _b3 === void 0 ? void 0 : _b3.data), "_blank", "noopener noreferrer")) === null || _c2 === void 0 ? void 0 : _c2.focus();
      }
    } else if (((_d2 = props.action) === null || _d2 === void 0 ? void 0 : _d2.type) === "custom") {
      if (handleCustomAction) {
        handleCustomAction(e3, props.action, message);
      } else {
        (_f2 = window === null || window === void 0 ? void 0 : window.open(returnUrl((_e3 = props === null || props === void 0 ? void 0 : props.action) === null || _e3 === void 0 ? void 0 : _e3.data), "_blank", "noopener noreferrer")) === null || _f2 === void 0 ? void 0 : _f2.focus();
      }
    } else if (((_g3 = props.action) === null || _g3 === void 0 ? void 0 : _g3.type) === "uikit") {
      handlePredefinedAction === null || handlePredefinedAction === void 0 ? void 0 : handlePredefinedAction(e3, props.action, message);
    }
  };
  if (props.type === ComponentType.TextButton) {
    return React__default__default.createElement("button", { className: clx(className, borderClass), "data-sb-template-id": props.elementId, style: Object.assign(Object.assign({}, style), paddingStyles), onClick }, children);
  }
  const { display, flexDirection, justifyContent, alignItems, objectFit } = recalculatedStyle, wrapperStyles = __rest(recalculatedStyle, ["display", "flexDirection", "justifyContent", "alignItems", "objectFit"]);
  return React__default__default.createElement(
    "div",
    { ref: elemRef, className: clx(className, borderClass, props.action && "sb-message-template__action"), "data-sb-template-id": props.elementId, style: wrapperStyles, onClick },
    React__default__default.createElement("div", { style: Object.assign({
      display,
      flexDirection,
      justifyContent,
      alignItems,
      objectFit,
      width: "100%",
      height: "100%"
    }, paddingStyles) }, children)
  );
};
function clx(...names) {
  return names.filter((it2) => !!it2).join(" ");
}
function isFixedOrFill(view) {
  var _a2, _b2, _c, _d;
  const heightType = (_a2 = view === null || view === void 0 ? void 0 : view.height) === null || _a2 === void 0 ? void 0 : _a2.type;
  const widthType = (_b2 = view === null || view === void 0 ? void 0 : view.width) === null || _b2 === void 0 ? void 0 : _b2.type;
  const isFixedDiamension = heightType === "fixed" || widthType === "fixed";
  const isFill = heightType === "flex" && ((_c = view === null || view === void 0 ? void 0 : view.height) === null || _c === void 0 ? void 0 : _c.value) === FlexSizeSpecValue.FillParent || widthType === "flex" && ((_d = view === null || view === void 0 ? void 0 : view.width) === null || _d === void 0 ? void 0 : _d.value) === FlexSizeSpecValue.FillParent;
  return isFixedDiamension || isFill;
}
function convertNewlinesToBr(text2) {
  return text2.split("\n").map((line, index) => React__default__default.createElement(
    React__default__default.Fragment,
    { key: index },
    line,
    React__default__default.createElement("br", null)
  ));
}
function renderText(view) {
  const { text: text2, maxTextLines } = view;
  const isToBeWrapped = isFixedOrFill(view);
  const hasMaxLines = typeof maxTextLines === "number" && maxTextLines > 0;
  const convertedText = convertNewlinesToBr(text2);
  if (hasMaxLines || isToBeWrapped) {
    const wrapperStyling = Object.assign(Object.assign({}, (hasMaxLines || isToBeWrapped) && { maxWidth: "100%" }), isToBeWrapped && { maxHeight: "100%", overflow: "hidden" });
    return React__default__default.createElement("div", { style: wrapperStyling }, hasMaxLines ? React__default__default.createElement("div", { style: webkitLineClampStyles(maxTextLines) }, convertedText) : convertedText);
  }
  return hasMaxLines ? React__default__default.createElement("div", { style: webkitLineClampStyles(maxTextLines) }, convertedText) : convertedText;
}
const renderer = createRenderer({
  views: {
    box(props) {
      return React__default__default.createElement(ActionHandler, { className: "sb-message-template__box", elementId: props.elementId, style: props.parsedProperties, props }, props.children);
    },
    text(props) {
      return React__default__default.createElement(ActionHandler, { className: "sb-message-template__text", elementId: props.elementId, style: props.parsedProperties, props }, renderText(props));
    },
    image(props) {
      var _a2;
      return React__default__default.createElement(
        ActionHandler,
        { className: "sb-message-template__image-container", elementId: props.elementId, style: props.parsedProperties, props },
        React__default__default.createElement(ReactMessageTemplateImage, { className: "sb-message-template__image", alt: "image", src: props.imageUrl, style: { width: "100%", height: "100%", aspectRatio: "inherit", objectFit: "inherit" }, tintColor: (_a2 = props.imageStyle) === null || _a2 === void 0 ? void 0 : _a2.tintColor, metaData: props.metaData })
      );
    },
    textButton(props) {
      return React__default__default.createElement(ActionHandler, { className: "sb-message-template__text-button", elementId: props.elementId, style: props.parsedProperties, props }, renderText(Object.assign({ maxTextLines: defaultProperties.textButton.maxTextLines }, props)));
    },
    imageButton(props) {
      var _a2;
      return React__default__default.createElement(
        ActionHandler,
        { className: "sb-message-template__image-container sb-message-template__image-button", elementId: props.elementId, style: props.parsedProperties, props },
        React__default__default.createElement(ReactMessageTemplateImage, { className: "sb-message-template__image", alt: "image-button", src: props.imageUrl, style: { width: "100%", height: "100%", aspectRatio: "inherit", objectFit: "inherit" }, tintColor: (_a2 = props.imageStyle) === null || _a2 === void 0 ? void 0 : _a2.tintColor, metaData: props.metaData })
      );
    },
    carouselView(props) {
      var _a2, _b2;
      return React__default__default.createElement(Carousel, { maxChildWidth: (_a2 = props.carouselStyle) === null || _a2 === void 0 ? void 0 : _a2.maxChildWidth, spacing: (_b2 = props.carouselStyle) === null || _b2 === void 0 ? void 0 : _b2.spacing, style: props.parsedProperties }, props.children);
    }
  }
});
const parser = createParser({
  mapBoxProps(props, options) {
    const styles2 = getDefaultStyles();
    setViewProps(styles2, props, options);
    setAlign(styles2, props.layout, props.align);
    return styles2;
  },
  mapTextProps(props, options) {
    var _a2;
    const styles2 = getDefaultStyles({ whiteSpace: "pre-line", wordBreak: "break-word" });
    setViewProps(styles2, props, options);
    setTextStyle(styles2, props, options);
    setAlign(styles2, Layout.Row, props.align);
    setTextAlign(styles2, (_a2 = props.align) === null || _a2 === void 0 ? void 0 : _a2.horizontal);
    return styles2;
  },
  mapImageProps(props, options) {
    const styles2 = getDefaultStyles();
    setViewProps(styles2, props, options);
    setImageStyle(styles2, props.imageStyle);
    setImageAspectRatio(styles2, props);
    return styles2;
  },
  mapTextButtonProps(props, options) {
    const styles2 = getDefaultStyles({ whiteSpace: "pre-line", alignItems: "center", justifyContent: "center" });
    setViewProps(styles2, props, options);
    setTextStyle(styles2, props, options);
    return styles2;
  },
  mapImageButtonProps(props, options) {
    const styles2 = getDefaultStyles();
    setViewProps(styles2, props, options);
    setImageStyle(styles2, props.imageStyle);
    setImageAspectRatio(styles2, props);
    return styles2;
  },
  mapCarouselProps(props, options) {
    var _a2, _b2, _c, _d, _e2, _f, _g2, _h;
    const styles2 = getDefaultStyles();
    setViewProps(styles2, props, options);
    styles2["paddingBlockStart"] = (_b2 = (_a2 = props.viewStyle) === null || _a2 === void 0 ? void 0 : _a2.padding) === null || _b2 === void 0 ? void 0 : _b2.top;
    styles2["paddingBlockEnd"] = (_d = (_c = props.viewStyle) === null || _c === void 0 ? void 0 : _c.padding) === null || _d === void 0 ? void 0 : _d.bottom;
    styles2["paddingInlineStart"] = (_f = (_e2 = props.viewStyle) === null || _e2 === void 0 ? void 0 : _e2.padding) === null || _f === void 0 ? void 0 : _f.left;
    styles2["paddingInlineEnd"] = (_h = (_g2 = props.viewStyle) === null || _g2 === void 0 ? void 0 : _g2.padding) === null || _h === void 0 ? void 0 : _h.right;
    return styles2;
  }
});
createMessageTemplate({
  renderer,
  parser,
  Container: ({ children, className }) => {
    return React__default__default.createElement("div", { className: `sb-message-template__parent ${className}`, style: {
      display: "flex",
      flexDirection: "column",
      maxWidth: 400,
      marginBlockEnd: 24
    } }, children);
  }
});
var CustomTemplate = createMessageTemplate({
  parser,
  renderer,
  Container: function(_a2) {
    var children = _a2.children, className = _a2.className;
    return React__default__default.createElement("div", { className: [
      "sb-message-template__parent ".concat(className),
      "sendbird-message-template__root"
    ].join(" ") }, children);
  }
}).MessageTemplate;
function MessageTemplate(_a2) {
  var templateItems = _a2.templateItems, templateVersion = _a2.templateVersion;
  return React__default__default.createElement(CustomTemplate, { templateItems, templateVersion });
}
function FallbackTemplateMessageItemBody(_a2) {
  var className = _a2.className, message = _a2.message, isByMe = _a2.isByMe;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var text2 = message["message"];
  return React__default__default.createElement("div", { className: getClassName([
    className !== null && className !== void 0 ? className : "",
    isByMe ? "outgoing" : "incoming",
    "sendbird-template-message-item-body__fallback_message"
  ]) }, text2 ? React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ONCONTENT_INVERSE_1 }, text2)
  ) : React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(Label, { className: "sendbird-template-message-item-body__fallback_message__header", type: LabelTypography.BODY_1, color: LabelColors.ONCONTENT_INVERSE_1 }, stringSet2.UNKNOWN__TEMPLATE_ERROR),
    React__default__default.createElement(Label, { className: "sendbird-template-message-item-body__fallback_message__description", type: LabelTypography.BODY_1, color: LabelColors.ONCONTENT_INVERSE_3 }, stringSet2.UNKNOWN__CANNOT_READ_TEMPLATE)
  ));
}
var TEMPLATE_LOADING_SPINNER_SIZE = "40px";
function LoadingTemplateMessageItemBody(_a2) {
  var className = _a2.className, isByMe = _a2.isByMe;
  return React__default__default.createElement(
    "div",
    { className: classnames(className, isByMe ? "outgoing" : "incoming", "sendbird-template-loading-message-item-body") },
    React__default__default.createElement(
      Loader,
      { className: "sendbird-message-status__icon", testID: "sendbird-message-status-icon", width: TEMPLATE_LOADING_SPINNER_SIZE, height: TEMPLATE_LOADING_SPINNER_SIZE },
      React__default__default.createElement(Icon$1, { type: IconTypes.SPINNER, fillColor: IconColors.CONTENT_INVERSE_3, width: TEMPLATE_LOADING_SPINNER_SIZE, height: TEMPLATE_LOADING_SPINNER_SIZE })
    )
  );
}
var MessageTemplateWrapper = function(_a2) {
  var message = _a2.message, templateVersion = _a2.templateVersion, templateItems = _a2.templateItems;
  return React__default__default.createElement(
    MessageProvider,
    { message },
    React__default__default.createElement(MessageTemplate, { templateVersion, templateItems })
  );
};
var splitColorVariables = function(colorVariables) {
  var light = {};
  var dark = {};
  for (var key in colorVariables) {
    if (Object.prototype.hasOwnProperty.call(colorVariables, key)) {
      var value = colorVariables[key];
      if (typeof value === "object" && value !== null) {
        var _a2 = splitColorVariables(value), nestedLight = _a2[0], nestedDark = _a2[1];
        light[key] = nestedLight;
        dark[key] = nestedDark;
      } else if (typeof value === "string") {
        var _b2 = value.split(","), lightColor = _b2[0], darkColor = _b2[1];
        light[key] = lightColor;
        dark[key] = darkColor || lightColor;
      } else {
        light[key] = value;
        dark[key] = value;
      }
    }
  }
  return [light, dark];
};
function selectColorVariablesByTheme(_a2) {
  var colorVariables = _a2.colorVariables, theme = _a2.theme;
  var _b2 = splitColorVariables(colorVariables), light = _b2[0], dark = _b2[1];
  return theme === "light" ? light : dark;
}
var MessageTemplateErrorBoundary = (
  /** @class */
  function(_super) {
    __extends(MessageTemplateErrorBoundary2, _super);
    function MessageTemplateErrorBoundary2(props) {
      var _this = _super.call(this, props) || this;
      _this.state = { hasError: false };
      return _this;
    }
    MessageTemplateErrorBoundary2.getDerivedStateFromError = function() {
      return { hasError: true };
    };
    MessageTemplateErrorBoundary2.prototype.componentDidCatch = function(error, errorInfo) {
      var _a2;
      (_a2 = this.props.logger) === null || _a2 === void 0 ? void 0 : _a2.error("Error caught by ErrorBoundary: ", error, errorInfo);
    };
    MessageTemplateErrorBoundary2.prototype.render = function() {
      if (this.state.hasError) {
        return this.props.fallbackMessage;
      }
      return this.props.children;
    };
    return MessageTemplateErrorBoundary2;
  }(Component)
);
var flattenObjectHelper = function(currentObject, flattenObject2, parentKeyPath) {
  if (parentKeyPath === void 0) {
    parentKeyPath = "";
  }
  for (var _i2 = 0, _a2 = Object.entries(currentObject); _i2 < _a2.length; _i2++) {
    var _b2 = _a2[_i2], key = _b2[0], value = _b2[1];
    var currentKeyPath = parentKeyPath ? "".concat(parentKeyPath, ".").concat(key) : key;
    if (value && typeof value === "object") {
      flattenObjectHelper(value, flattenObject2, currentKeyPath);
    } else {
      flattenObject2[currentKeyPath] = value;
    }
  }
};
function flattenObject(object) {
  var result = {};
  flattenObjectHelper(object, result);
  return result;
}
var TEMPLATE_FETCH_RETRY_BUFFER_TIME_IN_MILLIES = 500;
var replaceVariablesInTemplateString = function(_a2) {
  var template = _a2.template, _b2 = _a2.templateData, templateData = _b2 === void 0 ? {} : _b2, colorVariables = _a2.colorVariables, theme = _a2.theme;
  var selectedThemeColorVariables = {};
  if (colorVariables && theme) {
    selectedThemeColorVariables = selectColorVariablesByTheme({
      colorVariables,
      theme
    });
  }
  var source = __assign(__assign({}, templateData), selectedThemeColorVariables);
  var flattenedSource = flattenObject(source);
  var replaced = template;
  Object.entries(flattenedSource).forEach(function(_a3) {
    var key = _a3[0], val = _a3[1];
    var pattern = "\\{".concat(key, "\\}");
    var regex2 = new RegExp(pattern, "g");
    replaced = replaced.replace(regex2, val);
  });
  return replaced;
};
function TemplateMessageItemBody(_a2) {
  var _b2;
  var _c = _a2.className, className = _c === void 0 ? "" : _c, message = _a2.message, _d = _a2.isByMe, isByMe = _d === void 0 ? false : _d, _e2 = _a2.theme, theme = _e2 === void 0 ? "light" : _e2;
  var templateData = (_b2 = message.extendedMessagePayload) === null || _b2 === void 0 ? void 0 : _b2[MESSAGE_TEMPLATE_KEY];
  var getFailedBody = function() {
    return React__default__default.createElement(FallbackTemplateMessageItemBody, { className, message, isByMe });
  };
  if (!(templateData === null || templateData === void 0 ? void 0 : templateData.key)) {
    return getFailedBody();
  }
  var templateKey = templateData.key;
  var state = useSendbird().state;
  if (!state) {
    return getFailedBody();
  }
  var logger = state.config.logger;
  var _f = state.utils, getCachedTemplate = _f.getCachedTemplate, updateMessageTemplatesInfo = _f.updateMessageTemplatesInfo;
  var waitingTemplateKeysMap = state.stores.appInfoStore.waitingTemplateKeysMap;
  var waitingTemplateKeysMapString = Object.entries(waitingTemplateKeysMap).map(function(_a3) {
    var key = _a3[0], value = _a3[1];
    return [key, value.requestedAt, value.erroredMessageIds.join(",")].join("-");
  }).join("_");
  var _g2 = useState(getFilledMessageTemplateItems()), renderData = _g2[0], setRenderData = _g2[1];
  function findSubstrings(input, matchString) {
    var indices = [];
    var startIndex = 0;
    while ((startIndex = input.indexOf(matchString, startIndex)) !== -1) {
      indices.push({ start: startIndex, end: startIndex + matchString.length });
      startIndex += matchString.length;
    }
    return indices;
  }
  function replaceAtIndices(input, indices, replacement) {
    var result = "";
    var lastIndex = 0;
    indices.forEach(function(_a3) {
      var start = _a3.start, end = _a3.end;
      result += input.slice(lastIndex, start) + replacement;
      lastIndex = end;
    });
    result += input.slice(lastIndex);
    return result;
  }
  function replaceReservationKeys(templateString, reservationKey, replacement) {
    var indices = findSubstrings(templateString, reservationKey);
    return replaceAtIndices(templateString, indices, replacement);
  }
  function getFilledRootTemplate(rootTemplate) {
    var rootTemplateString = replaceVariablesInTemplateString({
      template: rootTemplate.uiTemplate,
      templateData: templateData.variables,
      colorVariables: rootTemplate.colorVariables,
      theme
    });
    if (templateData.view_variables) {
      var reservationKeyToItems_1 = {};
      Object.entries(templateData.view_variables).forEach(function(_a3) {
        var reservationKey = _a3[0], simpleTemplateDataList = _a3[1];
        var filledSimpleTemplates = [];
        simpleTemplateDataList.forEach(function(simpleTemplateData) {
          var simpleTemplateKey = simpleTemplateData === null || simpleTemplateData === void 0 ? void 0 : simpleTemplateData.key;
          if (simpleTemplateKey) {
            var cachedTemplate = getCachedTemplate(simpleTemplateKey);
            if (!cachedTemplate) {
              logger.error("TemplateMessageItemBody | simple template is expected to be cached: ", simpleTemplateKey);
            }
            var items = replaceVariablesInTemplateString({
              template: cachedTemplate.uiTemplate,
              templateData: simpleTemplateData.variables,
              colorVariables: cachedTemplate.colorVariables,
              theme
            });
            filledSimpleTemplates.push({
              version: cachedTemplate.version,
              body: {
                items: JSON.parse(items)
              }
            });
            reservationKeyToItems_1[reservationKey] = JSON.stringify(filledSimpleTemplates);
          }
        });
      });
      Object.entries(reservationKeyToItems_1).forEach(function(_a3) {
        var reservationKey = _a3[0], filledSimpleTemplates = _a3[1];
        rootTemplateString = replaceReservationKeys(rootTemplateString, '"@{'.concat(reservationKey, '}"'), filledSimpleTemplates);
      });
    }
    return JSON.parse(rootTemplateString);
  }
  function getFilledMessageTemplateItems() {
    var result = {
      filledMessageTemplateItemsList: [],
      isErrored: false
    };
    var nonCachedTemplateKeys = [];
    var cachedTemplate = getCachedTemplate(templateKey);
    if (!cachedTemplate) {
      nonCachedTemplateKeys.push(templateKey);
    }
    if (templateData === null || templateData === void 0 ? void 0 : templateData.view_variables) {
      try {
        Object.entries(templateData.view_variables).forEach(function(_a3) {
          var _2 = _a3[0], simpleTemplateDataList = _a3[1];
          simpleTemplateDataList.forEach(function(simpleTemplateData) {
            var simpleTemplateKey = simpleTemplateData === null || simpleTemplateData === void 0 ? void 0 : simpleTemplateData.key;
            if (simpleTemplateKey && !getCachedTemplate(simpleTemplateKey) && !nonCachedTemplateKeys.includes(simpleTemplateKey)) {
              nonCachedTemplateKeys.push(simpleTemplateKey);
            }
          });
        });
      } catch (e3) {
        logger.error("TemplateMessageItemBody | received view_variables is malformed: ", templateData);
        result.isErrored = true;
        return result;
      }
    }
    try {
      if (nonCachedTemplateKeys.length > 0) {
        tryFetchTemplateByKey(nonCachedTemplateKeys);
      } else if (cachedTemplate) {
        var items = getFilledRootTemplate(cachedTemplate);
        result.filledMessageTemplateItemsList.push({
          version: cachedTemplate.version,
          items
        });
      }
    } catch (e3) {
      logger.error("TemplateMessageItemBody | fetching non-cached templates by given template keys failed: ", e3);
      result.isErrored = true;
    }
    return result;
  }
  useEffect(function() {
    if (!renderData.isErrored && renderData.filledMessageTemplateItemsList.length === 0) {
      var newRenderData = getFilledMessageTemplateItems();
      setRenderData(newRenderData);
    }
  }, [templateData.key, waitingTemplateKeysMapString]);
  function tryFetchTemplateByKey(templateKeys) {
    if (templateKeys.length > 0) {
      var waitingTemplateKeyDataList_1 = [];
      templateKeys.forEach(function(templateKey2) {
        var waitingTemplateKeyData = waitingTemplateKeysMap[templateKey2];
        waitingTemplateKeyDataList_1.push([templateKey2, waitingTemplateKeyData]);
      });
      var requestedAt_1 = Date.now();
      var keysToUpdate_1 = [];
      waitingTemplateKeyDataList_1.forEach(function(_a3) {
        var templateKey2 = _a3[0], waitingTemplateKeyData = _a3[1];
        if (!waitingTemplateKeyData || waitingTemplateKeyData.erroredMessageIds.indexOf(message.messageId) === -1 && requestedAt_1 > waitingTemplateKeyData.requestedAt + TEMPLATE_FETCH_RETRY_BUFFER_TIME_IN_MILLIES) {
          keysToUpdate_1.push(templateKey2);
        } else if (waitingTemplateKeyData.erroredMessageIds.indexOf(message.messageId) > -1) {
          throw new Error("TemplateMessageItemBody | fetching template key ".concat(templateKey2, " for messageId: ").concat(message.messageId, " has failed."));
        }
      });
      if (keysToUpdate_1.length > 0) {
        updateMessageTemplatesInfo(keysToUpdate_1, message.messageId, requestedAt_1);
      }
    }
  }
  if (renderData.isErrored) {
    return getFailedBody();
  }
  if (renderData.filledMessageTemplateItemsList.length === 0) {
    return React__default__default.createElement(LoadingTemplateMessageItemBody, { className, isByMe });
  }
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      className,
      isByMe ? "outgoing" : "incoming",
      "sendbird-template-message-item-body"
    ]) },
    React__default__default.createElement(MessageTemplateErrorBoundary, { fallbackMessage: React__default__default.createElement(FallbackTemplateMessageItemBody, { className, message, isByMe }), logger }, renderData.filledMessageTemplateItemsList.map(function(filledMessageTemplateItem, i3) {
      var _a3;
      return React__default__default.createElement(MessageTemplateWrapper, { key: i3, message, templateVersion: (_a3 = filledMessageTemplateItem.version) !== null && _a3 !== void 0 ? _a3 : 0, templateItems: filledMessageTemplateItem.items });
    }))
  );
}
function MessageFeedbackFailedModal(props) {
  var text2 = props.text, onCancel = props.onCancel;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var modalRef = useRef(null);
  var onKeyDown = useKeyDown(modalRef, {
    Enter: function() {
      return onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    },
    Escape: function() {
      return onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    }
  });
  return React__default__default.createElement(
    "div",
    { onKeyDown },
    React__default__default.createElement(Modal, { contentClassName: "sendbird-message-feedback-modal-content__mobile", type: ButtonTypes.PRIMARY, onSubmit: onCancel, onClose: onCancel, submitText: stringSet2.BUTTON__OK, renderHeader: function() {
      return React__default__default.createElement(
        "div",
        { className: "sendbird-modal__header" },
        React__default__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1, className: "sendbird-message-feedback-modal-header" }, text2)
      );
    }, customFooter: React__default__default.createElement(
      "div",
      { className: "sendbird-message-feedback-modal-footer__root_failed" },
      React__default__default.createElement(
        Button,
        { onClick: onCancel },
        React__default__default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONCONTENT_1 }, stringSet2.BUTTON__OK)
      )
    ) })
  );
}
function MessageProfile(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, isByMe = _a2.isByMe, displayThreadReplies = _a2.displayThreadReplies, bottom = _a2.bottom, message = _a2.message, channel = _a2.channel, userId = _a2.userId, _c = _a2.chainBottom, chainBottom = _c === void 0 ? false : _c;
  var avatarRef = useRef(null);
  var _d = useUserProfileContext(), disableUserProfile = _d.disableUserProfile, renderUserProfile = _d.renderUserProfile;
  if (isByMe || chainBottom || !isSendableMessage(message)) {
    return null;
  }
  return React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
    var _a3, _b3;
    return React__default__default.createElement(Avatar$1, {
      className: classnames(className, displayThreadReplies && "use-thread-replies"),
      src: ((_b3 = (_a3 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a3 === void 0 ? void 0 : _a3.find(function(member) {
        return (member === null || member === void 0 ? void 0 : member.userId) === message.sender.userId;
      })) === null || _b3 === void 0 ? void 0 : _b3.profileUrl) || message.sender.profileUrl || "",
      // TODO: Divide getting profileUrl logic to utils
      ref: avatarRef,
      width: "28px",
      height: "28px",
      bottom,
      onClick: function() {
        if (!disableUserProfile)
          toggleDropdown();
      }
    });
  }, menuItems: function(closeDropdown) {
    return renderUserProfile ? renderUserProfile({
      user: message.sender,
      close: closeDropdown,
      currentUserId: userId,
      avatarRef
    }) : React__default__default.createElement(
      MenuItems,
      {
        /**
         * parentRef: For catching location(x, y) of MenuItems
         * parentContainRef: For toggling more options(menus & reactions)
        */
        parentRef: avatarRef,
        parentContainRef: avatarRef,
        closeDropdown,
        style: { paddingTop: "0px", paddingBottom: "0px" }
      },
      React__default__default.createElement(UserProfile, { user: message.sender, onSuccess: closeDropdown })
    );
  } });
}
var InputLabel$1 = function(_a2) {
  var children = _a2.children;
  return React__default__default.createElement(Label, { className: "sendbird-form-message__input__label", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, children);
};
var FormInput = function(props) {
  var name = props.name, required = props.required, errorMessage = props.errorMessage, isValid2 = props.isValid, values = props.values, isInvalidated = props.isInvalidated, isSubmitTried = props.isSubmitTried, style = props.style, onFocused = props.onFocused, onChange = props.onChange, placeHolder = props.placeHolder, isSubmitted = props.isSubmitted;
  var layout = style.layout, _a2 = style.options, options = _a2 === void 0 ? [] : _a2, resultCount = style.resultCount;
  var _b2 = resultCount !== null && resultCount !== void 0 ? resultCount : {}, _c = _b2.min, min = _c === void 0 ? 1 : _c, _d = _b2.max, max = _d === void 0 ? 1 : _d;
  var chipDataList = getInitialChipDataList();
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var handleFocus = function() {
    onFocused === null || onFocused === void 0 ? void 0 : onFocused(true);
  };
  var handleBlur = function() {
    onFocused === null || onFocused === void 0 ? void 0 : onFocused(false);
  };
  function getInitialChipDataList() {
    if (isSubmitted) {
      return options.map(function(option) {
        return {
          state: values.includes(option) ? "submittedSelected" : "submittedDefault",
          option
        };
      });
    } else {
      return options.map(function(option) {
        return {
          state: values.includes(option) ? "selected" : "default",
          option
        };
      });
    }
  }
  var onChipClick = function(index) {
    if (isSubmitted)
      return;
    var newDraftedValues;
    if (min === 1 && max === 1) {
      newDraftedValues = chipDataList[index].state === "selected" ? [] : [chipDataList[index].option];
    } else {
      newDraftedValues = chipDataList.reduce(function(acc, chipData, i3) {
        if (i3 === index) {
          if (chipData.state === "default" && values.length < max) {
            acc.push(chipData.option);
          }
        } else if (chipData.state === "selected") {
          acc.push(chipData.option);
        }
        return acc;
      }, []);
    }
    onChange(newDraftedValues);
  };
  return React__default__default.createElement(
    "div",
    { className: "sendbird-form-message__input__root" },
    React__default__default.createElement(
      InputLabel$1,
      null,
      React__default__default.createElement(
        "div",
        { className: "sendbird-form-message__input__title-container" },
        name,
        " ",
        !required && React__default__default.createElement("span", { className: "sendbird-form-message__input__title-optional" }, "(optional)")
      )
    ),
    React__default__default.createElement(
      "div",
      { className: "sendbird-input_for_form" },
      function() {
        switch (layout) {
          case "chip": {
            return React__default__default.createElement("div", { className: "sendbird-form-message__input__chip-container" }, chipDataList.map(function(chipData, index) {
              return React__default__default.createElement(
                "div",
                { className: "sendbird-form-message__input__chip ".concat(chipData.state), key: index, onClick: function() {
                  return onChipClick(index);
                } },
                React__default__default.createElement("div", { className: "sendbird-form-message__input__chip-text" }, chipData.option),
                isSubmitted && chipData.state === "submittedSelected" && React__default__default.createElement(Icon$1, { className: "sendbird-form-message__submitted-check-icon-chip", type: IconTypes.DONE, fillColor: IconColors.SECONDARY_2, width: "20px", height: "20px" })
              );
            }));
          }
          case "textarea": {
            var currentValue = values.length > 0 ? values[0] : "";
            return React__default__default.createElement("div", { className: "sendbird-form-message__input__container" }, isSubmitted ? React__default__default.createElement(
              "div",
              { className: "sendbird-form-message__submitted-input-box textarea" },
              React__default__default.createElement("div", { className: "sendbird-form-message__submitted-input-box-text" }, currentValue),
              isValid2 && React__default__default.createElement(
                "div",
                { className: "sendbird-form-message__submitted-check-icon-container" },
                React__default__default.createElement(Icon$1, { type: IconTypes.DONE, fillColor: IconColors.SECONDARY_2, width: "20px", height: "20px" })
              ),
              !currentValue && React__default__default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, stringSet2.FORM_ITEM_OPTIONAL_EMPTY)
            ) : React__default__default.createElement(
              React__default__default.Fragment,
              null,
              React__default__default.createElement("textarea", { className: classnames("sendbird-input__input", !!errorMessage && "error", "sendbird-form-message__input__textarea"), required, disabled: isSubmitted, value: currentValue, onFocus: handleFocus, onBlur: handleBlur, onChange: function(event) {
                var value = event.target.value;
                onChange(value ? [value] : []);
              } }),
              placeHolder && !currentValue && React__default__default.createElement(Label, { className: "sendbird-input__placeholder textarea", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, placeHolder)
            ));
          }
          case "text":
          case "number":
          case "phone":
          case "email": {
            var currentValue = values.length > 0 ? values[0] : "";
            return React__default__default.createElement("div", { className: "sendbird-form-message__input__container" }, isSubmitted ? React__default__default.createElement(
              "div",
              { className: "sendbird-form-message__submitted-input-box" },
              React__default__default.createElement("div", { className: "sendbird-form-message__submitted-input-box-text" }, currentValue),
              isValid2 && React__default__default.createElement(
                "div",
                { className: "sendbird-form-message__submitted-check-icon-container" },
                React__default__default.createElement(Icon$1, { type: IconTypes.DONE, fillColor: IconColors.SECONDARY_2, width: "20px", height: "20px" })
              ),
              !currentValue && React__default__default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, stringSet2.FORM_ITEM_OPTIONAL_EMPTY)
            ) : React__default__default.createElement(
              React__default__default.Fragment,
              null,
              React__default__default.createElement("input", { type: layout === "number" ? "text" : layout, inputMode: layout === "number" ? "numeric" : "text", className: "sendbird-input__input ".concat(errorMessage ? "error" : ""), name, required, disabled: isSubmitted, value: currentValue, onFocus: handleFocus, onBlur: handleBlur, onChange: function(event) {
                var value = event.target.value;
                onChange(value ? [value] : []);
              } }),
              placeHolder && !currentValue && React__default__default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, placeHolder)
            ));
          }
          default: {
            return React__default__default.createElement(React__default__default.Fragment, null);
          }
        }
      }(),
      errorMessage && (isSubmitTried || isInvalidated) && React__default__default.createElement(Label, { className: "sendbird-form-message__error-label", type: LabelTypography.CAPTION_3 }, errorMessage)
    )
  );
};
var FallbackUserMessage = function(_a2) {
  var isByMe = _a2.isByMe, text2 = _a2.text;
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      "sendbird-unknown-message-item-body",
      isByMe ? "outgoing" : "incoming"
    ]) },
    React__default__default.createElement(Label, { className: "sendbird-unknown-message-item-body__description", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_3 : LabelColors.ONBACKGROUND_3 }, text2)
  );
};
function FormMessageItemBody(props) {
  var _this = this;
  var message = props.message, form = props.form, isByMe = props.isByMe, logger = props.logger;
  var items = form.items, formId = form.id;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var _a2 = useState(false), submitFailed = _a2[0], setSubmitFailed = _a2[1];
  var _b2 = useState(false), isSubmitTried = _b2[0], setIsSubmitTried = _b2[1];
  var _c = useState(function() {
    var initialFormValues = [];
    items.forEach(function(_a3) {
      var required = _a3.required, _b3 = _a3.style, style = _b3 === void 0 ? {} : _b3;
      var layout = style.layout, _c2 = style.defaultOptions, defaultOptions2 = _c2 === void 0 ? [] : _c2;
      initialFormValues.push({
        draftValues: layout === "chip" ? defaultOptions2 : [],
        required,
        errorMessage: null,
        isInvalidated: false
      });
    });
    return initialFormValues;
  }), formValues = _c[0], setFormValues = _c[1];
  var isSubmitted = form.isSubmitted;
  var hasError = formValues.some(function(_a3) {
    var errorMessage = _a3.errorMessage;
    return !!errorMessage;
  });
  var hasInvalidated = formValues.some(function(_a3) {
    var isInvalidated = _a3.isInvalidated;
    return isInvalidated;
  });
  var isButtonDisabled = hasError && (isSubmitTried || hasInvalidated) || isSubmitted;
  var handleSubmit = useCallback(function() {
    return __awaiter$5(_this, void 0, void 0, function() {
      var hasError_1, isMissingRequired, error_1;
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            setIsSubmitTried(true);
            _a3.label = 1;
          case 1:
            _a3.trys.push([1, 3, , 4]);
            hasError_1 = formValues.some(function(_a4) {
              var errorMessage = _a4.errorMessage;
              return errorMessage;
            });
            if (hasError_1) {
              return [
                2
                /*return*/
              ];
            }
            isMissingRequired = formValues.some(function(formValue) {
              return formValue.required && (!formValue.draftValues || formValue.draftValues.length === 0);
            });
            if (isMissingRequired) {
              setFormValues(function(oldFormValues) {
                return oldFormValues.map(function(formValue) {
                  if (formValue.required && formValue.draftValues.length === 0) {
                    return __assign(__assign({}, formValue), { errorMessage: stringSet2.FORM_ITEM_REQUIRED });
                  }
                  return formValue;
                });
              });
              return [
                2
                /*return*/
              ];
            }
            formValues.forEach(function(formValue, index) {
              items[index].draftValues = formValue.draftValues;
            });
            return [4, message.submitMessageForm()];
          case 2:
            _a3.sent();
            return [3, 4];
          case 3:
            error_1 = _a3.sent();
            setSubmitFailed(true);
            logger === null || logger === void 0 ? void 0 : logger.error(error_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [formValues, message.messageId, message.submitMessageForm, formId]);
  if (!isFormVersionCompatible(form.version)) {
    return React__default__default.createElement(FallbackUserMessage, { isByMe, text: stringSet2.FORM_VERSION_ERROR });
  }
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      "".concat(TEXT_MESSAGE_BODY_CLASSNAME, " disable-hover"),
      "sendbird-form-message__root",
      "incoming"
    ]) },
    items.map(function(item, index) {
      var _a3;
      var name = item.name, placeholder = item.placeholder, id2 = item.id, required = item.required, style = item.style;
      var _b3 = formValues[index], _c2 = _b3.draftValues, draftValues = _c2 === void 0 ? [] : _c2, errorMessage = _b3.errorMessage;
      return React__default__default.createElement(FormInput, { key: id2, style, placeHolder: placeholder, values: (_a3 = item.submittedValues) !== null && _a3 !== void 0 ? _a3 : draftValues, isInvalidated: formValues[index].isInvalidated, isSubmitTried, errorMessage, isValid: isSubmitted, isSubmitted, name, required, onFocused: function(isFocus) {
        if (errorMessage && !isFocus && !formValues[index].isInvalidated) {
          setFormValues(function(_a4) {
            var newInputs = _a4.slice(0);
            newInputs[index] = __assign(__assign({}, newInputs[index]), { isInvalidated: true });
            return newInputs;
          });
        } else if (!errorMessage) {
          setFormValues(function(_a4) {
            var newInputs = _a4.slice(0);
            newInputs[index] = __assign(__assign({}, newInputs[index]), { isInvalidated: false });
            return newInputs;
          });
        }
      }, onChange: function(values) {
        setFormValues(function(_a4) {
          var newInputs = _a4.slice(0);
          newInputs[index] = __assign(__assign({}, newInputs[index]), { draftValues: values, errorMessage: function() {
            if (!item.isValid(values)) {
              return stringSet2.FORM_ITEM_INVALID;
            }
            if (required && values.length === 0) {
              return stringSet2.FORM_ITEM_REQUIRED;
            }
            return null;
          }() });
          return newInputs;
        });
      } });
    }),
    React__default__default.createElement(Button, { className: "sendbird-form-message__submit-button", onClick: handleSubmit, disabled: isButtonDisabled, labelType: LabelTypography.BUTTON_2, labelColor: LabelColors.ONCONTENT_1 }, isSubmitted ? "Submitted successfully" : "Submit"),
    submitFailed && React__default__default.createElement(MessageFeedbackFailedModal, { text: "Submit failed.", onCancel: function() {
      setSubmitFailed(false);
    } })
  );
}
var MESSAGE_ITEM_BODY_CLASSNAME = "sendbird-message-content__middle__message-item-body";
var MessageBody = function(props) {
  var _a2;
  var _b2 = props.className, className = _b2 === void 0 ? MESSAGE_ITEM_BODY_CLASSNAME : _b2, message = props.message, channel = props.channel, showFileViewer = props.showFileViewer, onMessageHeightChange = props.onMessageHeightChange, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, mouseHover = props.mouseHover, isMobile = props.isMobile, config2 = props.config, isReactionEnabledInChannel = props.isReactionEnabledInChannel, isByMe = props.isByMe;
  var customSubcomponentsProps = (_a2 = props["customSubcomponentsProps"]) !== null && _a2 !== void 0 ? _a2 : {};
  var threadMessageKindKey = useThreadMessageKindKeySelector({
    isMobile
  });
  var statefulFileInfoList = useFileInfoListWithUploaded(message);
  var messageTypes = getUIKitMessageTypes();
  var isOgMessageEnabledInGroupChannel = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && config2.groupChannel.enableOgtag;
  var isFormMessageEnabledInGroupChannel = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && config2.groupChannel.enableFormTypeMessage;
  var renderUnknownMessageItemBody = function() {
    return React__default__default.createElement(UnknownMessageItemBody, { className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel });
  };
  return K(message).when(function(message2) {
    return isFormMessageEnabledInGroupChannel && isFormMessage(message2);
  }, function() {
    return React__default__default.createElement(FormMessageItemBody, { isByMe, message, form: message.messageForm, logger: config2.logger });
  }).when(isTemplateMessage, function() {
    var _a3, _b3;
    var templatePayload = message.extendedMessagePayload[MESSAGE_TEMPLATE_KEY];
    if (!isValidTemplateMessageType(templatePayload)) {
      (_b3 = (_a3 = config2.logger) === null || _a3 === void 0 ? void 0 : _a3.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, "TemplateMessageItemBody: invalid type value in message.extendedMessagePayload.message_template.", templatePayload);
      return renderUnknownMessageItemBody();
    }
    return React__default__default.createElement(TemplateMessageItemBody, { className, message, isByMe, theme: config2 === null || config2 === void 0 ? void 0 : config2.theme });
  }).when(function(message2) {
    return isOgMessageEnabledInGroupChannel && isSendableMessage(message2) && isOGMessage(message2);
  }, function() {
    var _a3;
    return React__default__default.createElement(OGMessageItemBody, { className, message, isByMe, mouseHover, isMentionEnabled: (_a3 = config2.groupChannel.enableMention) !== null && _a3 !== void 0 ? _a3 : false, isReactionEnabled: isReactionEnabledInChannel, onMessageHeightChange, isMarkdownEnabled: config2.groupChannel.enableMarkdownForUserMessage });
  }).when(isTextMessage, function() {
    var _a3;
    return React__default__default.createElement(TextMessageItemBody, { className, message, isByMe, mouseHover, isMentionEnabled: (_a3 = config2.groupChannel.enableMention) !== null && _a3 !== void 0 ? _a3 : false, isReactionEnabled: isReactionEnabledInChannel, isMarkdownEnabled: config2.groupChannel.enableMarkdownForUserMessage });
  }).when(function(message2) {
    return getUIKitMessageType(message2) === messageTypes.FILE;
  }, function() {
    return React__default__default.createElement(FileMessageItemBody, { className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel, onBeforeDownloadFileMessage });
  }).when(isMultipleFilesMessage, function() {
    var _a3;
    return React__default__default.createElement(MultipleFilesMessageItemBody, __assign({ className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel, threadMessageKindKey, statefulFileInfoList, onBeforeDownloadFileMessage }, (_a3 = customSubcomponentsProps["MultipleFilesMessageItemBody"]) !== null && _a3 !== void 0 ? _a3 : {}));
  }).when(isVoiceMessage, function() {
    var _a3;
    return React__default__default.createElement(VoiceMessageItemBody, { className, message, channelUrl: (_a3 = channel === null || channel === void 0 ? void 0 : channel.url) !== null && _a3 !== void 0 ? _a3 : "", isByMe, isReactionEnabled: isReactionEnabledInChannel });
  }).when(isThumbnailMessage, function() {
    var _a3;
    return React__default__default.createElement(ThumbnailMessageItemBody, __assign({ className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel, showFileViewer, style: isMobile ? { width: "100%" } : {} }, (_a3 = customSubcomponentsProps["ThumbnailMessageItemBody"]) !== null && _a3 !== void 0 ? _a3 : {}));
  }).otherwise(function() {
    return renderUnknownMessageItemBody();
  });
};
var MessageHeader = function(props) {
  var _a2, _b2;
  var channel = props.channel, message = props.message;
  return React__default__default.createElement(
    Label,
    { className: "sendbird-message-content__middle__sender-name", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 },
    /**
     * To use the latest member profile information, message.sender might be outdated
     */
    ((_b2 = (_a2 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a2 === void 0 ? void 0 : _a2.find(function(member) {
      var _a3;
      return (member === null || member === void 0 ? void 0 : member.userId) === ((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId);
    })) === null || _b2 === void 0 ? void 0 : _b2.nickname) || getSenderName(message)
    // TODO: Divide getting profileUrl logic to utils
  );
};
var FeedbackIconButton = React__default__default.forwardRef(function(props, ref) {
  var children = props.children, isSelected = props.isSelected, _a2 = props.onClick, onClick = _a2 === void 0 ? function() {
  } : _a2, _b2 = props.disabled, disabled = _b2 === void 0 ? false : _b2;
  return React__default__default.createElement(
    "button",
    { className: [
      "sendbird-iconbutton__feedback",
      isSelected ? "sendbird-iconbutton__feedback__pressed" : "",
      disabled ? "sendbird-iconbutton__feedback__disabled" : ""
    ].join(" "), ref, type: "button", onClick: function(e3) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e3);
    }, disabled },
    React__default__default.createElement("span", { className: [
      "sendbird-iconbutton__feedback__inner",
      isSelected ? "sendbird-iconbutton__feedback__inner__pressed" : "",
      disabled ? "sendbird-iconbutton__feedback__inner__disabled" : ""
    ].join(" ") }, children)
  );
});
function MobileFeedbackMenu(props) {
  var hideMenu = props.hideMenu, onEditFeedback = props.onEditFeedback, onRemoveFeedback = props.onRemoveFeedback;
  var stringSet2 = useLocalization().stringSet;
  return React__default__default.createElement(
    BottomSheet,
    { onBackdropClick: hideMenu },
    React__default__default.createElement(
      "div",
      { className: "sendbird-message__bottomsheet--feedback-options-menu" },
      React__default__default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet--feedback-option", onClick: function() {
          hideMenu();
          onEditFeedback();
        } },
        React__default__default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.EDIT_COMMENT)
      ),
      React__default__default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet--feedback-option", onClick: function() {
          hideMenu();
          onRemoveFeedback();
        } },
        React__default__default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ERROR }, stringSet2.REMOVE_FEEDBACK)
      )
    )
  );
}
var InputLabel = function(_a2) {
  var children = _a2.children;
  return React__default__default.createElement(Label, { className: "sendbird-input-label", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_1 }, children);
};
var Input = React__default__default.forwardRef(function(props, ref) {
  var name = props.name, required = props.required, disabled = props.disabled, value = props.value, placeHolder = props.placeHolder, _a2 = props.autoFocus, autoFocus = _a2 === void 0 ? false : _a2;
  var _b2 = useState(value), inputValue = _b2[0], setInputValue = _b2[1];
  return React__default__default.createElement(
    "div",
    { className: "sendbird-input" },
    React__default__default.createElement("input", { className: "sendbird-input__input", ref, name, required, disabled, value: inputValue, onChange: function(e3) {
      setInputValue(e3.target.value);
    }, autoFocus }),
    placeHolder && !inputValue && React__default__default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, placeHolder)
  );
});
function MessageFeedbackModal(props) {
  var _a2, _b2;
  var selectedFeedback = props.selectedFeedback, message = props.message, onClose = props.onClose, onSubmit = props.onSubmit, onUpdate = props.onUpdate, onRemove = props.onRemove;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var isMobile = useMediaQueryContext().isMobile;
  var isEdit = (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating;
  var hasComment = (_a2 = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a2 === void 0 ? void 0 : _a2.comment;
  var onSubmitWrapper = function() {
    var _a3, _b3, _c;
    if (!selectedFeedback)
      return;
    var comment = (_b3 = (_a3 = inputRef.current) === null || _a3 === void 0 ? void 0 : _a3.value) !== null && _b3 !== void 0 ? _b3 : "";
    if (isEdit) {
      if (comment !== ((_c = message.myFeedback) === null || _c === void 0 ? void 0 : _c.comment)) {
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(selectedFeedback, comment);
      } else {
        onClose === null || onClose === void 0 ? void 0 : onClose();
      }
    } else if (!message.myFeedback) {
      onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(selectedFeedback, comment);
    }
  };
  var modalRef = useRef();
  var inputRef = useRef();
  var onKeyDown = useKeyDown(modalRef, {
    Enter: function() {
      return onSubmitWrapper();
    },
    Escape: function() {
      return onClose === null || onClose === void 0 ? void 0 : onClose();
    }
  });
  return React__default__default.createElement(
    "div",
    { onKeyDown },
    React__default__default.createElement(
      Modal,
      { contentClassName: "sendbird-message-feedback-modal-content__mobile", type: ButtonTypes.PRIMARY, onCancel: onClose, onSubmit: function() {
        onSubmitWrapper();
      }, submitText: stringSet2.BUTTON__SUBMIT, renderHeader: function() {
        return React__default__default.createElement(
          "div",
          { className: "sendbird-modal__header" },
          React__default__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1, className: "sendbird-message-feedback-modal-header" }, stringSet2.FEEDBACK_MODAL_TITLE)
        );
      }, customFooter: React__default__default.createElement(
        "div",
        { className: "sendbird-message-feedback-modal-footer__root" },
        !isMobile && (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating ? React__default__default.createElement(Button, { type: ButtonTypes.WARNING, onClick: onRemove, labelType: LabelTypography.BUTTON_3 }, stringSet2.BUTTON__REMOVE_FEEDBACK) : React__default__default.createElement("div", null),
        React__default__default.createElement(
          "div",
          { className: "sendbird-message-feedback-modal-footer__right-content" },
          React__default__default.createElement(
            Button,
            { type: ButtonTypes.SECONDARY, onClick: onClose },
            React__default__default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONBACKGROUND_1 }, stringSet2.BUTTON__CANCEL)
          ),
          React__default__default.createElement(
            Button,
            { onClick: function() {
              return onSubmitWrapper();
            } },
            React__default__default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONCONTENT_1 }, hasComment ? stringSet2.BUTTON__SAVE : stringSet2.BUTTON__SUBMIT)
          )
        )
      ) },
      React__default__default.createElement(
        "div",
        { className: "sendbird-message-feedback-modal-body__root" },
        React__default__default.createElement(Input, { name: "sendbird-message-feedback-modal-body__root", ref: inputRef, value: isEdit ? (_b2 = message.myFeedback) === null || _b2 === void 0 ? void 0 : _b2.comment : void 0, placeHolder: stringSet2.FEEDBACK_CONTENT_PLACEHOLDER, autoFocus: true })
      )
    )
  );
}
function useElementObserver(selector, targetElement) {
  var _a2 = useState(false), isElementMounted = _a2[0], setIsElementMounted = _a2[1];
  useEffect(function() {
    var targetElements = Array.isArray(targetElement) ? targetElement : [targetElement];
    var updateElementState = function() {
      var _a3;
      var elements = targetElements === null || targetElements === void 0 ? void 0 : targetElements.map(function(target) {
        return target === null || target === void 0 ? void 0 : target.querySelector(selector);
      });
      setIsElementMounted((_a3 = elements === null || elements === void 0 ? void 0 : elements.some(function(element) {
        return !!element;
      })) !== null && _a3 !== void 0 ? _a3 : false);
    };
    updateElementState();
    var observerCallback = function(mutations) {
      mutations.forEach(function(mutation) {
        if (mutation.addedNodes.length || mutation.removedNodes.length) {
          Array.from(mutation.addedNodes).forEach(function(node) {
            if (node.nodeType === Node.ELEMENT_NODE && node.matches(selector)) {
              setIsElementMounted(true);
            }
          });
          Array.from(mutation.removedNodes).forEach(function(node) {
            if (node.nodeType === Node.ELEMENT_NODE && node.matches(selector)) {
              setIsElementMounted(false);
            }
          });
        }
      });
    };
    var observer = new MutationObserver(observerCallback);
    var observerOptions = {
      childList: true,
      // Observe addition and removal of child nodes
      subtree: true
      // Observe the entire subtree
    };
    targetElements === null || targetElements === void 0 ? void 0 : targetElements.forEach(function(target) {
      if (target)
        observer.observe(target, observerOptions);
    });
    return function() {
      observer.disconnect();
    };
  }, [selector, targetElement]);
  return isElementMounted;
}
var SbFeedbackStatus;
(function(SbFeedbackStatus2) {
  SbFeedbackStatus2["NOT_APPLICABLE"] = "NOT_APPLICABLE";
  SbFeedbackStatus2["NO_FEEDBACK"] = "NO_FEEDBACK";
  SbFeedbackStatus2["SUBMITTED"] = "SUBMITTED";
})(SbFeedbackStatus || (SbFeedbackStatus = {}));
function MessageContentForTemplateMessage(props) {
  var _a2, _b2, _c;
  var channel = props.channel, message = props.message, showFileViewer = props.showFileViewer, onMessageHeightChange = props.onMessageHeightChange, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, renderSenderProfile = props.renderSenderProfile, renderMessageHeader = props.renderMessageHeader, renderMessageBody = props.renderMessageBody, isByMe = props.isByMe, displayThreadReplies = props.displayThreadReplies, mouseHover = props.mouseHover, isMobile = props.isMobile, isReactionEnabledInChannel = props.isReactionEnabledInChannel, hoveredMenuClassName = props.hoveredMenuClassName, templateType = props.templateType, useReplying = props.useReplying;
  var config2 = useSendbird().state.config;
  var dateLocale = useLocalization().dateLocale;
  var uiContainerTypeClassName = (_a2 = uiContainerType[templateType]) !== null && _a2 !== void 0 ? _a2 : "";
  var senderProfile = renderSenderProfile(__assign(__assign({}, props), { chainBottom: false, className: "", isByMe, displayThreadReplies }));
  var messageHeader = renderMessageHeader(props);
  var messageBody = renderMessageBody({
    message,
    channel,
    showFileViewer,
    onMessageHeightChange,
    mouseHover,
    isMobile,
    config: config2,
    isReactionEnabledInChannel,
    isByMe,
    onBeforeDownloadFileMessage
  });
  var timeStamp = React__default__default.createElement(Label, { className: classnames("sendbird-message-content__middle__body-container__created-at", "right", hoveredMenuClassName, uiContainerTypeClassName), type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, "p", {
    locale: dateLocale
  }));
  var templateData = (_b2 = message.extendedMessagePayload) === null || _b2 === void 0 ? void 0 : _b2[MESSAGE_TEMPLATE_KEY];
  var _d = (_c = templateData === null || templateData === void 0 ? void 0 : templateData.container_options) !== null && _c !== void 0 ? _c : {}, _e2 = _d.profile, profile = _e2 === void 0 ? true : _e2, _f = _d.time, time = _f === void 0 ? true : _f, _g2 = _d.nickname, nickname = _g2 === void 0 ? true : _g2;
  var hasContainerHeader = profile || nickname;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-message-content__sendbird-ui-container-type__default__root" },
    !isByMe && hasContainerHeader && !useReplying && React__default__default.createElement(
      "div",
      { className: "sendbird-message-content__sendbird-ui-container-type__default__header-container" },
      React__default__default.createElement("div", { className: "sendbird-message-content__sendbird-ui-container-type__default__header-container__left__profile" }, profile && senderProfile),
      nickname && messageHeader
    ),
    messageBody,
    !isByMe && time && React__default__default.createElement("div", { className: "sendbird-message-content__sendbird-ui-container-type__default__bottom" }, timeStamp)
  );
}
function MessageContent(props) {
  var _this = this;
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h, _j, _k, _l, _m, _o;
  var className = props.className, userId = props.userId, channel = props.channel, message = props.message, _p = props.disabled, disabled = _p === void 0 ? false : _p, _q = props.chainTop, chainTop = _q === void 0 ? false : _q, _r2 = props.chainBottom, chainBottom = _r2 === void 0 ? false : _r2, _s2 = props.isReactionEnabled, isReactionEnabled = _s2 === void 0 ? false : _s2, _t2 = props.disableQuoteMessage, disableQuoteMessage = _t2 === void 0 ? false : _t2, replyType = props.replyType, threadReplySelectType = props.threadReplySelectType, nicknamesMap = props.nicknamesMap, emojiContainer = props.emojiContainer, scrollToMessage = props.scrollToMessage, showEdit = props.showEdit, showRemove = props.showRemove, showFileViewer = props.showFileViewer, resendMessage = props.resendMessage, deleteMessage = props.deleteMessage, toggleReaction = props.toggleReaction, setQuoteMessage = props.setQuoteMessage, onReplyInThread = props.onReplyInThread, onQuoteMessageClick = props.onQuoteMessageClick, onMessageHeightChange = props.onMessageHeightChange, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, filterEmojiCategoryIds = props.filterEmojiCategoryIds;
  var _u = deleteNullish(props), _v = _u.renderSenderProfile, renderSenderProfile = _v === void 0 ? function(props2) {
    return React__default__default.createElement(MessageProfile, __assign({}, props2));
  } : _v, _w = _u.renderMessageBody, renderMessageBody = _w === void 0 ? function(props2) {
    return React__default__default.createElement(MessageBody, __assign({}, props2));
  } : _w, _x = _u.renderMessageHeader, renderMessageHeader = _x === void 0 ? function(props2) {
    return React__default__default.createElement(MessageHeader, __assign({}, props2));
  } : _x, _y = _u.renderMessageMenu, renderMessageMenu = _y === void 0 ? function(props2) {
    return React__default__default.createElement(MessageMenu, __assign({}, props2));
  } : _y, _z = _u.renderEmojiMenu, renderEmojiMenu = _z === void 0 ? function(props2) {
    return React__default__default.createElement(MessageEmojiMenu, __assign({}, props2));
  } : _z, _0 = _u.renderEmojiReactions, renderEmojiReactions = _0 === void 0 ? function(props2) {
    return React__default__default.createElement(EmojiReactions, __assign({}, props2));
  } : _0, _1 = _u.renderMobileMenuOnLongPress, renderMobileMenuOnLongPress = _1 === void 0 ? function(props2) {
    return React__default__default.createElement(MobileMenu, __assign({}, props2));
  } : _1;
  var _2 = useLocalization(), dateLocale = _2.dateLocale, stringSet2 = _2.stringSet;
  var _3 = useSendbird().state, config2 = _3.config, eventHandlers = _3.eventHandlers;
  var logger = config2.logger;
  var onPressUserProfileHandler = (_a2 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.reaction) === null || _a2 === void 0 ? void 0 : _a2.onPressUserProfile;
  var contentRef = useRef();
  var threadRepliesRef = useRef();
  var feedbackButtonsRef = useRef();
  var isMobile = useMediaQueryContext().isMobile;
  var _4 = useState(false), showMenu = _4[0], setShowMenu = _4[1];
  var _5 = useState(false), mouseHover = _5[0], setMouseHover = _5[1];
  var isMenuMounted = useElementObserver("#".concat(getObservingId(message.messageId), ".").concat(MENU_OBSERVING_CLASS_NAME), [
    document.getElementById(MENU_ROOT_ID),
    document.getElementById(EMOJI_MENU_ROOT_ID)
  ]);
  var _6 = useState(false), showFeedbackOptionsMenu = _6[0], setShowFeedbackOptionsMenu = _6[1];
  var _7 = useState(false), showFeedbackModal = _7[0], setShowFeedbackModal = _7[1];
  var _8 = useState(""), feedbackFailedText = _8[0], setFeedbackFailedText = _8[1];
  var isByMe = userId === ((_b2 = message === null || message === void 0 ? void 0 : message.sender) === null || _b2 === void 0 ? void 0 : _b2.userId) || (message === null || message === void 0 ? void 0 : message.sendingStatus) === "pending" || (message === null || message === void 0 ? void 0 : message.sendingStatus) === "failed";
  var isByMeClassName = isByMe ? "outgoing" : "incoming";
  var chainTopClassName = chainTop ? "chain-top" : "";
  var isReactionEnabledInChannel = isReactionEnabled && !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral);
  var isReactionEnabledClassName = isReactionEnabledInChannel ? "use-reactions" : "";
  var hoveredMenuClassName = isMenuMounted ? "sendbird-mouse-hover" : "";
  var useReplying = !!((replyType === "QUOTE_REPLY" || replyType === "THREAD") && (message === null || message === void 0 ? void 0 : message.parentMessageId) && (message === null || message === void 0 ? void 0 : message.parentMessage) && !disableQuoteMessage);
  var useReplyingClassName = useReplying ? "use-quote" : "";
  var displayThreadReplies = ((_c = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _c === void 0 ? void 0 : _c.replyCount) && message.threadInfo.replyCount > 0 && replyType === "THREAD";
  var isFeedbackMessage = !isByMe && !!(message === null || message === void 0 ? void 0 : message.myFeedbackStatus) && message.myFeedbackStatus !== SbFeedbackStatus.NOT_APPLICABLE;
  var isFeedbackEnabled = !!((_d = config2 === null || config2 === void 0 ? void 0 : config2.groupChannel) === null || _d === void 0 ? void 0 : _d.enableFeedback) && isFeedbackMessage;
  var hasFeedback = (_e2 = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _e2 === void 0 ? void 0 : _e2.rating;
  var isNotSpecialMessage = !isTemplateMessage(message) && !isFormMessage(message);
  var showLongPressMenu = isNotSpecialMessage && isMobile;
  var showOutgoingMenu = isNotSpecialMessage && isByMe && !isMobile;
  var showThreadReplies = isNotSpecialMessage && displayThreadReplies;
  var showRightContent = isNotSpecialMessage && !isByMe && !isMobile;
  var getTotalBottom = function() {
    var sum = 2;
    if (threadRepliesRef.current) {
      sum += 4 + threadRepliesRef.current.clientHeight;
    }
    if (feedbackButtonsRef.current) {
      sum += 4 + feedbackButtonsRef.current.clientHeight;
    }
    return sum > 0 ? sum + "px" : "";
  };
  var onCloseFeedbackForm = function() {
    setShowFeedbackModal(false);
  };
  var openFeedbackFormOrMenu = function(hasFeedback2) {
    if (hasFeedback2 === void 0) {
      hasFeedback2 = false;
    }
    if (isMobile && hasFeedback2) {
      setShowFeedbackOptionsMenu(true);
    } else {
      setShowFeedbackModal(true);
    }
  };
  var longPress = useLongPress({
    onLongPress: function() {
      if (showLongPressMenu) {
        setShowMenu(true);
      }
    },
    onClick: noop$4
  }, {
    delay: 300,
    shouldPreventDefault: false
  });
  if (isAdminMessage(message)) {
    return React__default__default.createElement(AdminMessage, { message });
  }
  if (isTemplateMessage(message)) {
    var templatePayload = message.extendedMessagePayload[MESSAGE_TEMPLATE_KEY];
    if (isValidTemplateMessageType(templatePayload)) {
      return React__default__default.createElement(MessageContentForTemplateMessage, __assign({}, props, { renderSenderProfile, renderMessageHeader, renderMessageBody, isByMe, displayThreadReplies, mouseHover, isMobile, isReactionEnabledInChannel, hoveredMenuClassName, templateType: templatePayload["type"], useReplying }));
    }
  }
  return React__default__default.createElement(
    "div",
    { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-message-content",
      isByMeClassName
    ]), onMouseOver: function() {
      return setMouseHover(true);
    }, onMouseLeave: function() {
      return setMouseHover(false);
    } },
    React__default__default.createElement(
      "div",
      { className: classnames("sendbird-message-content__left", isReactionEnabledClassName, isByMeClassName, useReplyingClassName), "data-testid": "sendbird-message-content__left" },
      renderSenderProfile(__assign(__assign({}, props), { className: "sendbird-message-content__left__avatar", isByMe, displayThreadReplies, bottom: getTotalBottom() })),
      showOutgoingMenu && React__default__default.createElement(
        "div",
        { className: classnames("sendbird-message-content-menu", isReactionEnabledClassName, hoveredMenuClassName, isByMeClassName) },
        renderMessageMenu({
          channel,
          message,
          isByMe,
          replyType,
          showEdit,
          showRemove,
          resendMessage,
          setQuoteMessage,
          onReplyInThread: function(_a3) {
            var _b3, _c2;
            var message2 = _a3.message;
            if (threadReplySelectType === ThreadReplySelectType.THREAD) {
              onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message2 });
            } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {
              scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c2 = (_b3 = message2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.createdAt) !== null && _c2 !== void 0 ? _c2 : 0, message2.parentMessageId);
            }
          },
          deleteMessage
        }),
        isReactionEnabledInChannel && renderEmojiMenu({
          message,
          userId,
          emojiContainer,
          toggleReaction,
          filterEmojiCategoryIds
        })
      )
    ),
    React__default__default.createElement(
      "div",
      __assign({ className: classnames("sendbird-message-content__middle"), "data-testid": "sendbird-message-content__middle" }, isMobile ? __assign({}, longPress) : {}, { ref: contentRef }),
      !isByMe && !chainTop && !useReplying && renderMessageHeader(props),
      useReplying ? React__default__default.createElement(
        "div",
        { className: classnames("sendbird-message-content__middle__quote-message", isByMe ? "outgoing" : "incoming", useReplyingClassName), "data-testid": "sendbird-message-content__middle__quote-message" },
        React__default__default.createElement(QuoteMessage, { className: "sendbird-message-content__middle__quote-message__quote", message, userId, isByMe, isUnavailable: ((_f = channel === null || channel === void 0 ? void 0 : channel.messageOffsetTimestamp) !== null && _f !== void 0 ? _f : 0) > ((_h = (_g2 = message.parentMessage) === null || _g2 === void 0 ? void 0 : _g2.createdAt) !== null && _h !== void 0 ? _h : 0), onClick: function() {
          var _a3;
          if (replyType === "THREAD" && threadReplySelectType === ThreadReplySelectType.THREAD) {
            onQuoteMessageClick === null || onQuoteMessageClick === void 0 ? void 0 : onQuoteMessageClick({ message });
          }
          if ((replyType === "QUOTE_REPLY" || replyType === "THREAD" && threadReplySelectType === ThreadReplySelectType.PARENT) && ((_a3 = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _a3 === void 0 ? void 0 : _a3.createdAt) && (message === null || message === void 0 ? void 0 : message.parentMessageId)) {
            scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);
          }
        } })
      ) : null,
      React__default__default.createElement(
        "div",
        { className: classnames("sendbird-message-content__middle__body-container") },
        isByMe && !chainBottom && React__default__default.createElement(
          "div",
          { className: classnames("sendbird-message-content__middle__body-container__created-at", "left", hoveredMenuClassName) },
          React__default__default.createElement(
            "div",
            { className: "sendbird-message-content__middle__body-container__created-at__component-container" },
            React__default__default.createElement(MessageStatus, { message, channel })
          )
        ),
        renderMessageBody({
          message,
          channel,
          showFileViewer,
          onMessageHeightChange,
          mouseHover,
          isMobile,
          config: config2,
          isReactionEnabledInChannel,
          isByMe,
          onBeforeDownloadFileMessage
        }),
        isReactionEnabledInChannel && ((_j = message === null || message === void 0 ? void 0 : message.reactions) === null || _j === void 0 ? void 0 : _j.length) > 0 && React__default__default.createElement("div", { className: classnames("sendbird-message-content-reactions", isMultipleFilesMessage(message) ? "image-grid" : isByMe && !isThumbnailMessage(message) && !isOGMessage(message) && "primary", mouseHover && "mouse-hover") }, renderEmojiReactions({
          userId,
          message,
          channel,
          isByMe,
          // @ts-ignore
          emojiContainer: emojiContainer !== null && emojiContainer !== void 0 ? emojiContainer : new Ct({}),
          memberNicknamesMap: nicknamesMap !== null && nicknamesMap !== void 0 ? nicknamesMap : /* @__PURE__ */ new Map(),
          toggleReaction,
          onPressUserProfile: onPressUserProfileHandler,
          filterEmojiCategoryIds
        })),
        !isByMe && !chainBottom && React__default__default.createElement(Label, { className: classnames("sendbird-message-content__middle__body-container__created-at", "right", hoveredMenuClassName), type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
          locale: dateLocale
        }))
      ),
      showThreadReplies && (message === null || message === void 0 ? void 0 : message.threadInfo) && React__default__default.createElement(ThreadReplies$1, { className: "sendbird-message-content__middle__thread-replies", threadInfo: message === null || message === void 0 ? void 0 : message.threadInfo, onClick: function() {
        return onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message });
      }, ref: threadRepliesRef }),
      isFeedbackEnabled && React__default__default.createElement(
        "div",
        { className: "sendbird-message-content__middle__body-container__feedback-buttons-container", ref: feedbackButtonsRef },
        React__default__default.createElement(
          FeedbackIconButton,
          { isSelected: ((_k = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _k === void 0 ? void 0 : _k.rating) === Le$1.GOOD, onClick: function() {
            return __awaiter$5(_this, void 0, void 0, function() {
              var error_1;
              var _a3, _b3;
              return __generator(this, function(_c2) {
                switch (_c2.label) {
                  case 0:
                    if (!!hasFeedback) return [3, 5];
                    _c2.label = 1;
                  case 1:
                    _c2.trys.push([1, 3, , 4]);
                    return [4, message.submitFeedback({
                      rating: Le$1.GOOD
                    })];
                  case 2:
                    _c2.sent();
                    openFeedbackFormOrMenu();
                    return [3, 4];
                  case 3:
                    error_1 = _c2.sent();
                    (_b3 = (_a3 = config2 === null || config2 === void 0 ? void 0 : config2.logger) === null || _a3 === void 0 ? void 0 : _a3.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, "Channel: Submit feedback failed.", error_1);
                    setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_SUBMIT);
                    return [3, 4];
                  case 4:
                    return [3, 6];
                  case 5:
                    openFeedbackFormOrMenu(true);
                    _c2.label = 6;
                  case 6:
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          }, disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== Le$1.GOOD },
          React__default__default.createElement(Icon$1, { type: IconTypes.FEEDBACK_LIKE, width: "24px", height: "24px" })
        ),
        React__default__default.createElement(
          FeedbackIconButton,
          { isSelected: ((_l = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _l === void 0 ? void 0 : _l.rating) === Le$1.BAD, onClick: function() {
            return __awaiter$5(_this, void 0, void 0, function() {
              var error_2;
              var _a3, _b3;
              return __generator(this, function(_c2) {
                switch (_c2.label) {
                  case 0:
                    if (!!hasFeedback) return [3, 5];
                    _c2.label = 1;
                  case 1:
                    _c2.trys.push([1, 3, , 4]);
                    return [4, message.submitFeedback({
                      rating: Le$1.BAD
                    })];
                  case 2:
                    _c2.sent();
                    openFeedbackFormOrMenu();
                    return [3, 4];
                  case 3:
                    error_2 = _c2.sent();
                    (_b3 = (_a3 = config2 === null || config2 === void 0 ? void 0 : config2.logger) === null || _a3 === void 0 ? void 0 : _a3.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, "Channel: Submit feedback failed.", error_2);
                    setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_SUBMIT);
                    return [3, 4];
                  case 4:
                    return [3, 6];
                  case 5:
                    openFeedbackFormOrMenu(true);
                    _c2.label = 6;
                  case 6:
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          }, disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== Le$1.BAD },
          React__default__default.createElement(Icon$1, { type: IconTypes.FEEDBACK_DISLIKE, width: "24px", height: "24px" })
        )
      )
    ),
    showRightContent && React__default__default.createElement(
      "div",
      { className: classnames("sendbird-message-content__right", chainTopClassName, isReactionEnabledClassName, useReplyingClassName), "data-testid": "sendbird-message-content__right" },
      React__default__default.createElement(
        "div",
        { className: classnames("sendbird-message-content-menu", chainTopClassName, hoveredMenuClassName, isByMeClassName) },
        isReactionEnabledInChannel && renderEmojiMenu({
          className: "sendbird-message-content-menu__reaction-menu",
          message,
          userId,
          emojiContainer,
          toggleReaction,
          filterEmojiCategoryIds
        }),
        renderMessageMenu({
          className: "sendbird-message-content-menu__normal-menu",
          channel,
          message,
          isByMe,
          replyType,
          showRemove,
          resendMessage,
          setQuoteMessage,
          onReplyInThread: function(_a3) {
            var _b3, _c2;
            var message2 = _a3.message;
            if (threadReplySelectType === ThreadReplySelectType.THREAD) {
              onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message2 });
            } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {
              scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c2 = (_b3 = message2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.createdAt) !== null && _c2 !== void 0 ? _c2 : 0, message2.parentMessageId);
            }
          },
          deleteMessage
        })
      )
    ),
    showMenu && isSendableMessage(message) && channel && renderMobileMenuOnLongPress({
      parentRef: contentRef,
      channel,
      hideMenu: function() {
        setShowMenu(false);
      },
      message,
      isReactionEnabled: isReactionEnabledInChannel,
      isByMe,
      userId,
      replyType,
      disabled,
      showRemove,
      emojiContainer,
      resendMessage,
      deleteMessage,
      setQuoteMessage,
      toggleReaction,
      showEdit,
      onReplyInThread: function(_a3) {
        var _b3;
        var message2 = _a3.message;
        if (threadReplySelectType === ThreadReplySelectType.THREAD) {
          onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message2 });
        } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {
          scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(((_b3 = message2 === null || message2 === void 0 ? void 0 : message2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.createdAt) || 0, (message2 === null || message2 === void 0 ? void 0 : message2.parentMessageId) || 0);
        }
      },
      onDownloadClick: function(e3) {
        return __awaiter$5(_this, void 0, void 0, function() {
          var allowDownload, err_1;
          var _a3, _b3;
          return __generator(this, function(_c2) {
            switch (_c2.label) {
              case 0:
                if (!onBeforeDownloadFileMessage) {
                  return [
                    2
                    /*return*/
                  ];
                }
                _c2.label = 1;
              case 1:
                _c2.trys.push([1, 3, , 4]);
                return [4, onBeforeDownloadFileMessage({ message })];
              case 2:
                allowDownload = _c2.sent();
                if (!allowDownload) {
                  e3.preventDefault();
                  (_a3 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "MessageContent: Not allowed to download.");
                }
                return [3, 4];
              case 3:
                err_1 = _c2.sent();
                (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "MessageContent: Error occurred while determining download continuation:", err_1);
                return [3, 4];
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    }),
    ((_m = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _m === void 0 ? void 0 : _m.rating) && showFeedbackOptionsMenu && React__default__default.createElement(MobileFeedbackMenu, { hideMenu: function() {
      setShowFeedbackOptionsMenu(false);
    }, onEditFeedback: function() {
      setShowFeedbackOptionsMenu(false);
      setShowFeedbackModal(true);
    }, onRemoveFeedback: function() {
      return __awaiter$5(_this, void 0, void 0, function() {
        var error_3;
        var _a3, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              _c2.trys.push([0, 3, , 4]);
              if (!(message.myFeedback !== null)) return [3, 2];
              return [4, message.deleteFeedback(message.myFeedback.id)];
            case 1:
              _c2.sent();
              _c2.label = 2;
            case 2:
              return [3, 4];
            case 3:
              error_3 = _c2.sent();
              (_b3 = (_a3 = config2 === null || config2 === void 0 ? void 0 : config2.logger) === null || _a3 === void 0 ? void 0 : _a3.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, "Channel: Delete feedback failed.", error_3);
              setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_DELETE);
              return [3, 4];
            case 4:
              setShowFeedbackOptionsMenu(false);
              return [
                2
                /*return*/
              ];
          }
        });
      });
    } }),
    ((_o = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _o === void 0 ? void 0 : _o.rating) && showFeedbackModal && React__default__default.createElement(MessageFeedbackModal, { selectedFeedback: message.myFeedback.rating, message, onUpdate: function(selectedFeedback, comment) {
      return __awaiter$5(_this, void 0, void 0, function() {
        var newFeedback, error_4;
        var _a3, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              if (!(message.myFeedback !== null)) return [3, 4];
              newFeedback = new Qe$1({
                id: message.myFeedback.id,
                rating: selectedFeedback,
                comment
              });
              _c2.label = 1;
            case 1:
              _c2.trys.push([1, 3, , 4]);
              return [4, message.updateFeedback(newFeedback)];
            case 2:
              _c2.sent();
              return [3, 4];
            case 3:
              error_4 = _c2.sent();
              (_b3 = (_a3 = config2 === null || config2 === void 0 ? void 0 : config2.logger) === null || _a3 === void 0 ? void 0 : _a3.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, "Channel: Update feedback failed.", error_4);
              setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_SAVE);
              return [3, 4];
            case 4:
              onCloseFeedbackForm();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, onClose: onCloseFeedbackForm, onRemove: function() {
      return __awaiter$5(_this, void 0, void 0, function() {
        var error_5;
        var _a3, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              _c2.trys.push([0, 3, , 4]);
              if (!(message.myFeedback !== null)) return [3, 2];
              return [4, message.deleteFeedback(message.myFeedback.id)];
            case 1:
              _c2.sent();
              _c2.label = 2;
            case 2:
              return [3, 4];
            case 3:
              error_5 = _c2.sent();
              (_b3 = (_a3 = config2 === null || config2 === void 0 ? void 0 : config2.logger) === null || _a3 === void 0 ? void 0 : _a3.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a3, "Channel: Delete feedback failed.", error_5);
              setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_DELETE);
              return [3, 4];
            case 4:
              onCloseFeedbackForm();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    } }),
    feedbackFailedText && React__default__default.createElement(MessageFeedbackFailedModal, { text: feedbackFailedText, onCancel: function() {
      setFeedbackFailedText("");
    } })
  );
}
var ReplyItem = function(_a2) {
  var value = _a2.value, onClickReply = _a2.onClickReply, _b2 = _a2.type, type = _b2 === void 0 ? "vertical" : _b2;
  return React__default__default.createElement("div", { className: "sendbird-suggested-replies__option ".concat(type), id: value, onClick: function(e3) {
    return onClickReply(e3, value);
  } }, value);
};
var SuggestedReplies = function(_a2) {
  var replyOptions = _a2.replyOptions, onSendMessage = _a2.onSendMessage, _b2 = _a2.type, type = _b2 === void 0 ? "vertical" : _b2;
  var _c = useState(false), replied = _c[0], setReplied = _c[1];
  var onClickReply = function(event, option) {
    event.preventDefault();
    onSendMessage({ message: option });
    setReplied(true);
  };
  if (replied) {
    return null;
  }
  var children = replyOptions.map(function(option, index) {
    return React__default__default.createElement(ReplyItem, { key: index, value: option, onClickReply, type });
  });
  return React__default__default.createElement("div", { className: "sendbird-suggested-replies ".concat(type) }, children);
};
function SuggestedUserMentionItem(props) {
  var member = props.member, _a2 = props.isFocused, isFocused = _a2 === void 0 ? false : _a2, parentScrollRef = props.parentScrollRef, onClick = props.onClick, onMouseOver = props.onMouseOver, onMouseMove = props.onMouseMove, renderUserMentionItem = props.renderUserMentionItem;
  var scrollRef = useRef(null);
  var stringSet2 = useContext(LocalizationContext).stringSet;
  useEffect(function() {
    if (isFocused && (parentScrollRef === null || parentScrollRef === void 0 ? void 0 : parentScrollRef.current) != null && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) != null && (parentScrollRef.current.scrollTop >= scrollRef.current.offsetTop || parentScrollRef.current.scrollTop + parentScrollRef.current.clientHeight <= scrollRef.current.offsetTop)) {
      scrollRef.current.scrollIntoView({ block: "nearest", inline: "nearest" });
    }
  }, [isFocused]);
  var customMentionItem = useMemo(function() {
    if (renderUserMentionItem) {
      return React__default__default.createElement("div", { className: "sendbird-mention-suggest-list__user-item", onClick: function(event) {
        return onClick === null || onClick === void 0 ? void 0 : onClick({ event, member, itemRef: scrollRef });
      }, onMouseOver: function(event) {
        return onMouseOver === null || onMouseOver === void 0 ? void 0 : onMouseOver({ event, member, itemRef: scrollRef });
      }, onMouseMove: function(event) {
        return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove({ event, member, itemRef: scrollRef });
      }, key: (member === null || member === void 0 ? void 0 : member.userId) || uuidv4(), ref: scrollRef }, renderUserMentionItem({ user: member }));
    }
  }, [renderUserMentionItem]);
  if (customMentionItem) {
    return customMentionItem;
  }
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-mention-suggest-list__user-item", isFocused && "focused"), onClick: function(event) {
      return onClick === null || onClick === void 0 ? void 0 : onClick({ event, member, itemRef: scrollRef });
    }, onMouseOver: function(event) {
      return onMouseOver === null || onMouseOver === void 0 ? void 0 : onMouseOver({ event, member, itemRef: scrollRef });
    }, onMouseMove: function(event) {
      return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove({ event, member, itemRef: scrollRef });
    }, key: (member === null || member === void 0 ? void 0 : member.userId) || uuidv4(), ref: scrollRef },
    React__default__default.createElement(Avatar$1, { className: "sendbird-mention-suggest-list__user-item__avatar", src: member === null || member === void 0 ? void 0 : member.profileUrl, alt: "user-profile", width: "24px", height: "24px" }),
    React__default__default.createElement(Label, { className: "sendbird-mention-suggest-list__user-item__nickname", testID: "sendbird-mention-suggest-list__user-item__nickname", type: LabelTypography.SUBTITLE_2, color: (member === null || member === void 0 ? void 0 : member.nickname) ? LabelColors.ONBACKGROUND_1 : LabelColors.ONBACKGROUND_3 }, (member === null || member === void 0 ? void 0 : member.nickname) || (stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.MENTION_NAME__NO_NAME)),
    React__default__default.createElement(Label, { className: "sendbird-mention-suggest-list__user-item__user-id", testID: "sendbird-mention-suggest-list__user-item__user-id", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, member === null || member === void 0 ? void 0 : member.userId)
  );
}
function fetchMembersFromChannel(currentUserId, channel, maxSuggestionCount, searchString) {
  return __awaiter$5(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, channel.members.sort(function(a4, b3) {
        var _a3;
        return (_a3 = a4.nickname) === null || _a3 === void 0 ? void 0 : _a3.localeCompare(b3.nickname);
      }).filter(function(member) {
        var _a3;
        return ((_a3 = member.nickname) === null || _a3 === void 0 ? void 0 : _a3.toLowerCase().startsWith(searchString.toLowerCase())) && member.userId !== currentUserId && member.isActive;
      }).slice(0, maxSuggestionCount)];
    });
  });
}
function fetchMembersFromQuery(currentUserId, channel, maxSuggestionCount, searchString) {
  return __awaiter$5(this, void 0, void 0, function() {
    var query;
    return __generator(this, function(_a2) {
      query = channel.createMemberListQuery({
        limit: maxSuggestionCount + 1,
        // because current user could be included
        nicknameStartsWithFilter: searchString
      });
      return [2, query.next().then(function(memberList) {
        return memberList.filter(function(member) {
          return currentUserId !== (member === null || member === void 0 ? void 0 : member.userId);
        }).slice(0, maxSuggestionCount);
      })];
    });
  });
}
var DEBOUNCING_TIME = 300;
var SuggestedMentionListView = function(props) {
  var _a2, _b2, _c;
  var className = props.className, currentChannel = props.currentChannel, _d = props.targetNickname, targetNickname = _d === void 0 ? "" : _d, onUserItemClick = props.onUserItemClick, onFocusItemChange = props.onFocusItemChange, onFetchUsers = props.onFetchUsers, renderUserMentionItem = props.renderUserMentionItem, inputEvent = props.inputEvent, _e2 = props.ableAddMention, ableAddMention = _e2 === void 0 ? true : _e2, _f = props.maxMentionCount, maxMentionCount = _f === void 0 ? MAX_USER_MENTION_COUNT : _f, _g2 = props.maxSuggestionCount, maxSuggestionCount = _g2 === void 0 ? MAX_USER_SUGGESTION_COUNT : _g2;
  var state = useSendbird().state;
  var config2 = state.config, stores2 = state.stores;
  var logger = config2.logger;
  var currentUserId = ((_c = (_b2 = (_a2 = stores2 === null || stores2 === void 0 ? void 0 : stores2.sdkStore) === null || _a2 === void 0 ? void 0 : _a2.sdk) === null || _b2 === void 0 ? void 0 : _b2.currentUser) === null || _c === void 0 ? void 0 : _c.userId) || "";
  var scrollRef = useRef(null);
  var stringSet2 = useLocalization().stringSet;
  var _h = useState(null), timer = _h[0], setTimer = _h[1];
  var _j = useState(""), searchString = _j[0], setSearchString = _j[1];
  var _k = useState(""), lastSearchString = _k[0], setLastSearchString = _k[1];
  var _l = useState(null), currentFocusedMember = _l[0], setCurrentFocusedMember = _l[1];
  var _m = useState([]), currentMemberList = _m[0], setCurrentMemberList = _m[1];
  useEffect(function() {
    clearTimeout(timer !== null && timer !== void 0 ? timer : void 0);
    setTimer(setTimeout(function() {
      setSearchString(targetNickname);
    }, DEBOUNCING_TIME));
  }, [targetNickname]);
  useEffect(function() {
    if ((inputEvent === null || inputEvent === void 0 ? void 0 : inputEvent.key) === MessageInputKeys.Enter) {
      if (currentFocusedMember && currentMemberList.length > 0) {
        onUserItemClick === null || onUserItemClick === void 0 ? void 0 : onUserItemClick(currentFocusedMember);
      }
    }
    if ((inputEvent === null || inputEvent === void 0 ? void 0 : inputEvent.key) === MessageInputKeys.ArrowUp) {
      var currentUserIndex = currentMemberList.findIndex(function(member) {
        return (member === null || member === void 0 ? void 0 : member.userId) === (currentFocusedMember === null || currentFocusedMember === void 0 ? void 0 : currentFocusedMember.userId);
      });
      if (0 < currentUserIndex) {
        setCurrentFocusedMember(currentMemberList[currentUserIndex - 1]);
        onFocusItemChange === null || onFocusItemChange === void 0 ? void 0 : onFocusItemChange(currentMemberList[currentUserIndex - 1]);
      }
    }
    if ((inputEvent === null || inputEvent === void 0 ? void 0 : inputEvent.key) === MessageInputKeys.ArrowDown) {
      var currentUserIndex = currentMemberList.findIndex(function(member) {
        return (member === null || member === void 0 ? void 0 : member.userId) === (currentFocusedMember === null || currentFocusedMember === void 0 ? void 0 : currentFocusedMember.userId);
      });
      if (currentUserIndex < currentMemberList.length - 1) {
        setCurrentFocusedMember(currentMemberList[currentUserIndex + 1]);
        onFocusItemChange === null || onFocusItemChange === void 0 ? void 0 : onFocusItemChange(currentMemberList[currentUserIndex + 1]);
      }
    }
  }, [inputEvent]);
  useEffect(function() {
    if (lastSearchString && searchString.indexOf(lastSearchString) === 0 && currentMemberList.length === 0) {
      return;
    }
    if (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isSuper) {
      if (!(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.createMemberListQuery)) {
        logger.warning("SuggestedMentionList: Creating member list query failed");
        return;
      }
    }
    var fetcher = (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isSuper) ? fetchMembersFromQuery : fetchMembersFromChannel;
    fetcher(currentUserId, currentChannel, maxSuggestionCount, searchString.slice(USER_MENTION_TEMP_CHAR.length)).then(function(suggestingMembers) {
      if (suggestingMembers.length < 1) {
        logger.info("SuggestedMentionList: Fetched member list is empty");
      } else {
        logger.info("SuggestedMentionList: Fetching member list succeeded", { memberList: suggestingMembers });
        setCurrentFocusedMember(suggestingMembers[0]);
      }
      setLastSearchString(searchString);
      onFetchUsers === null || onFetchUsers === void 0 ? void 0 : onFetchUsers(suggestingMembers);
      setCurrentMemberList(suggestingMembers);
    }).catch(function(error) {
      if (error) {
        logger.error("SuggestedMentionList: Fetching member list failed", error);
      }
    });
  }, [
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url,
    // We have to be specific like this or React would not recognize the changes in instances.
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members.map(function(member) {
      return member.nickname;
    }).join(),
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members.map(function(member) {
      return member.isActive;
    }).join(),
    searchString,
    maxSuggestionCount,
    currentUserId,
    currentMemberList.length,
    lastSearchString
  ]);
  if (!ableAddMention && currentMemberList.length === 0) {
    return null;
  }
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-mention-suggest-list", className), "data-testid": "sendbird-mention-suggest-list", key: "sendbird-mention-suggest-list", ref: scrollRef },
    ableAddMention && (currentMemberList === null || currentMemberList === void 0 ? void 0 : currentMemberList.map(function(member) {
      return React__default__default.createElement(SuggestedUserMentionItem, { key: (member === null || member === void 0 ? void 0 : member.userId) || uuidv4(), member, isFocused: (member === null || member === void 0 ? void 0 : member.userId) === (currentFocusedMember === null || currentFocusedMember === void 0 ? void 0 : currentFocusedMember.userId), parentScrollRef: scrollRef, onClick: function(_a3) {
        var member2 = _a3.member;
        onUserItemClick === null || onUserItemClick === void 0 ? void 0 : onUserItemClick(member2);
      }, onMouseOver: function(_a3) {
        var member2 = _a3.member;
        setCurrentFocusedMember(member2);
      }, renderUserMentionItem });
    })),
    !ableAddMention && React__default__default.createElement(
      "div",
      { className: "sendbird-mention-suggest-list__notice-item" },
      React__default__default.createElement(Icon$1, { className: "sendbird-mention-suggest-list__notice-item__icon", type: IconTypes.INFO, fillColor: IconColors.ON_BACKGROUND_2, width: "20px", height: "20px" }),
      React__default__default.createElement(Label, { className: "sendbird-mention-suggest-list__notice-item__text", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.MENTION_COUNT__OVER_LIMIT.replace("%d", String(maxMentionCount)))
    )
  );
};
var useDidMountEffect = function(func, deps) {
  var _a2 = useState(false), didMount = _a2[0], setDidMount = _a2[1];
  useEffect(function() {
    if (didMount) {
      func();
    } else {
      setDidMount(true);
    }
  }, deps);
};
var MessageView = function(props) {
  var _a2, _b2;
  var message = props.message, children = props.children, hasSeparator = props.hasSeparator, chainTop = props.chainTop, chainBottom = props.chainBottom, handleScroll = props.handleScroll, channel = props.channel, emojiContainer = props.emojiContainer, editInputDisabled = props.editInputDisabled, shouldRenderSuggestedReplies = props.shouldRenderSuggestedReplies, isReactionEnabled = props.isReactionEnabled, replyType = props.replyType, threadReplySelectType = props.threadReplySelectType, nicknamesMap = props.nicknamesMap, scrollToMessage = props.scrollToMessage, toggleReaction = props.toggleReaction, setQuoteMessage = props.setQuoteMessage, onQuoteMessageClick = props.onQuoteMessageClick, onReplyInThreadClick = props.onReplyInThreadClick, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, sendUserMessage = props.sendUserMessage, updateUserMessage = props.updateUserMessage, resendMessage = props.resendMessage, deleteMessage = props.deleteMessage, setAnimatedMessageId = props.setAnimatedMessageId, animatedMessageId = props.animatedMessageId, onMessageAnimated = props.onMessageAnimated, _c = props.usedInLegacy, usedInLegacy = _c === void 0 ? true : _c;
  var _d = deleteNullish(props), renderUserMentionItem = _d.renderUserMentionItem, renderMessage = _d.renderMessage, _e2 = _d.renderMessageContent, renderMessageContent = _e2 === void 0 ? function(props2) {
    return React__default__default.createElement(MessageContent, __assign({}, props2));
  } : _e2, _f = _d.renderSuggestedReplies, renderSuggestedReplies = _f === void 0 ? function(props2) {
    return React__default__default.createElement(SuggestedReplies, __assign({}, props2));
  } : _f, renderCustomSeparator = _d.renderCustomSeparator, renderEditInput = _d.renderEditInput, renderFileViewer = _d.renderFileViewer, renderRemoveMessageModal = _d.renderRemoveMessageModal, filterEmojiCategoryIds = _d.filterEmojiCategoryIds;
  var _g2 = useLocalization(), dateLocale = _g2.dateLocale, stringSet2 = _g2.stringSet;
  var state = useSendbird().state;
  var _h = state.config, userId = _h.userId, isOnline = _h.isOnline, userMention = _h.userMention, logger = _h.logger, groupChannel = _h.groupChannel;
  var maxUserMentionCount = (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount) || MAX_USER_MENTION_COUNT;
  var maxUserSuggestionCount = (userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount) || MAX_USER_SUGGESTION_COUNT;
  var _j = useState(false), showEdit = _j[0], setShowEdit = _j[1];
  var _k = useState(false), showRemove = _k[0], setShowRemove = _k[1];
  var _l = useState(false), showFileViewer = _l[0], setShowFileViewer = _l[1];
  var _m = useState(false), isAnimated = _m[0], setIsAnimated = _m[1];
  var _o = useState(""), mentionNickname = _o[0], setMentionNickname = _o[1];
  var _p = useState([]), mentionedUsers = _p[0], setMentionedUsers = _p[1];
  var _q = useState([]), mentionedUserIds = _q[0], setMentionedUserIds = _q[1];
  var _r2 = useState(null), messageInputEvent = _r2[0], setMessageInputEvent = _r2[1];
  var _s2 = useState(null), selectedUser = _s2[0], setSelectedUser = _s2[1];
  var _t2 = useState([]), mentionSuggestedUsers = _t2[0], setMentionSuggestedUsers = _t2[1];
  var editMessageInputRef = useRef(null);
  var messageScrollRef = useRef(null);
  var displaySuggestedMentionList = isOnline && groupChannel.enableMention && mentionNickname.length > 0 && !isDisabledBecauseFrozen$1(channel) && !isDisabledBecauseMuted$1(channel);
  var mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < maxUserMentionCount;
  useEffect(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a3) {
      var userId2 = _a3.userId;
      var i3 = mentionedUserIds.indexOf(userId2);
      if (i3 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i3, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  useDidMountEffect(function() {
    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll();
  }, [showEdit, (_a2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a2 === void 0 ? void 0 : _a2.length]);
  useDidMountEffect(function() {
    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  var prevShouldRenderSuggestedReplies = useRef(shouldRenderSuggestedReplies);
  useEffect(function() {
    if (prevShouldRenderSuggestedReplies.current !== shouldRenderSuggestedReplies) {
      handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll();
    } else {
      prevShouldRenderSuggestedReplies.current = shouldRenderSuggestedReplies;
    }
  }, [shouldRenderSuggestedReplies]);
  useLayoutEffect(function() {
    if (usedInLegacy)
      handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);
  }, []);
  useLayoutEffect(function() {
    var timeouts = [];
    if (animatedMessageId === message.messageId && (messageScrollRef === null || messageScrollRef === void 0 ? void 0 : messageScrollRef.current)) {
      timeouts.push(setTimeout(function() {
        setIsAnimated(true);
      }, 500));
      timeouts.push(setTimeout(function() {
        setAnimatedMessageId(null);
        onMessageAnimated === null || onMessageAnimated === void 0 ? void 0 : onMessageAnimated();
      }, 1600));
    } else {
      setIsAnimated(false);
    }
    return function() {
      timeouts.forEach(function(it2) {
        return clearTimeout(it2);
      });
    };
  }, [animatedMessageId, messageScrollRef.current, message.messageId]);
  var renderedCustomSeparator = useMemo(function() {
    var _a3;
    return (_a3 = renderCustomSeparator === null || renderCustomSeparator === void 0 ? void 0 : renderCustomSeparator({ message })) !== null && _a3 !== void 0 ? _a3 : null;
  }, [message, renderCustomSeparator]);
  var renderChildren = function() {
    if (children) {
      return children;
    }
    if (renderMessage) {
      var messageProps = __assign(__assign({}, props), { renderMessage: void 0 });
      return renderMessage(messageProps);
    }
    return React__default__default.createElement(
      React__default__default.Fragment,
      null,
      renderMessageContent({
        className: "sendbird-message-hoc__message-content",
        userId,
        scrollToMessage,
        channel,
        message,
        disabled: !isOnline,
        chainTop,
        chainBottom,
        isReactionEnabled,
        replyType,
        threadReplySelectType,
        nicknamesMap,
        emojiContainer,
        showEdit: setShowEdit,
        showRemove: setShowRemove,
        showFileViewer: setShowFileViewer,
        resendMessage,
        deleteMessage,
        toggleReaction,
        setQuoteMessage,
        onReplyInThread: onReplyInThreadClick,
        onQuoteMessageClick,
        onMessageHeightChange: handleScroll,
        onBeforeDownloadFileMessage,
        filterEmojiCategoryIds
      }),
      shouldRenderSuggestedReplies && renderSuggestedReplies({
        replyOptions: getSuggestedReplies(message),
        onSendMessage: sendUserMessage,
        type: groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.suggestedRepliesDirection
      }),
      showRemove && (renderRemoveMessageModal === null || renderRemoveMessageModal === void 0 ? void 0 : renderRemoveMessageModal({ message, onCancel: function() {
        return setShowRemove(false);
      } })),
      showFileViewer && renderFileViewer({ message, onCancel: function() {
        return setShowFileViewer(false);
      } })
    );
  };
  if (showEdit && ((_b2 = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message))) {
    return (renderEditInput === null || renderEditInput === void 0 ? void 0 : renderEditInput()) || React__default__default.createElement(
      React__default__default.Fragment,
      null,
      displaySuggestedMentionList && React__default__default.createElement(SuggestedMentionListView, { currentChannel: channel, targetNickname: mentionNickname, inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0, renderUserMentionItem, onUserItemClick: function(user) {
        if (user) {
          setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
        }
        setMentionNickname("");
        setSelectedUser(user);
        setMessageInputEvent(null);
      }, onFocusItemChange: function() {
        setMessageInputEvent(null);
      }, onFetchUsers: function(users) {
        setMentionSuggestedUsers(users);
      }, ableAddMention: ableMention, maxMentionCount: maxUserMentionCount, maxSuggestionCount: maxUserSuggestionCount }),
      React__default__default.createElement(MessageInput, { isEdit: true, channel, disabled: editInputDisabled, ref: editMessageInputRef, mentionSelectedUser: selectedUser, isMentionEnabled: groupChannel.enableMention, message, onStartTyping: function() {
        var _a3;
        (_a3 = channel === null || channel === void 0 ? void 0 : channel.startTyping) === null || _a3 === void 0 ? void 0 : _a3.call(channel);
      }, onUpdateMessage: function(_a3) {
        var _b3;
        var messageId = _a3.messageId, message2 = _a3.message, mentionTemplate = _a3.mentionTemplate;
        updateUserMessage(messageId, {
          message: message2,
          mentionedUsers,
          mentionedMessageTemplate: mentionTemplate
        });
        setShowEdit(false);
        (_b3 = channel === null || channel === void 0 ? void 0 : channel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(channel);
      }, onCancelEdit: function() {
        var _a3;
        setMentionNickname("");
        setMentionedUsers([]);
        setMentionedUserIds([]);
        setMentionSuggestedUsers([]);
        setShowEdit(false);
        (_a3 = channel === null || channel === void 0 ? void 0 : channel.endTyping) === null || _a3 === void 0 ? void 0 : _a3.call(channel);
      }, onUserMentioned: function(user) {
        if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
          setSelectedUser(null);
          setMentionNickname("");
        }
      }, onMentionStringChange: function(mentionText) {
        setMentionNickname(mentionText);
      }, onMentionedUserIdsUpdated: function(userIds) {
        setMentionedUserIds(userIds);
      }, onKeyDown: function(e3) {
        if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e3.key === MessageInputKeys.Enter && ableMention || e3.key === MessageInputKeys.ArrowUp || e3.key === MessageInputKeys.ArrowDown)) {
          setMessageInputEvent(e3);
          return true;
        }
        return false;
      } })
    );
  }
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-msg-hoc sendbird-msg--scroll-ref", isAnimated && "sendbird-msg-hoc__animated"), "data-testid": "sendbird-message-view", style: children || renderMessage ? void 0 : { marginBottom: "2px" }, "data-sb-message-id": message.messageId, "data-sb-created-at": message.createdAt, ref: messageScrollRef },
    hasSeparator && (renderedCustomSeparator || React__default__default.createElement(
      DateSeparator,
      null,
      React__default__default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_LIST__DATE_SEPARATOR, {
        locale: dateLocale
      }))
    )),
    renderChildren()
  );
};
var FileViewerView = function(_a2) {
  var message = _a2.message, onCancel = _a2.onCancel, deleteMessage = _a2.deleteMessage, onDownloadClick = _a2.onDownloadClick;
  var sender = message.sender, type = message.type, url = message.url, _b2 = message.name, name = _b2 === void 0 ? "" : _b2, threadInfo = message.threadInfo;
  var profileUrl = sender.profileUrl, nickname = sender.nickname, userId = sender.userId;
  var state = useSendbird().state;
  var config2 = state.config;
  return createPortal(React__default__default.createElement(FileViewerComponent, { profileUrl, nickname, type, url, name, onCancel, onDelete: function() {
    return deleteMessage(message).then(function() {
      return onCancel();
    });
  }, isByMe: config2.userId === userId, disableDelete: (threadInfo === null || threadInfo === void 0 ? void 0 : threadInfo.replyCount) ? threadInfo.replyCount > 0 : false, onDownloadClick }), document.getElementById(MODAL_ROOT));
};
var FileViewerComponent = function(_a2) {
  var profileUrl = _a2.profileUrl, nickname = _a2.nickname, name = _a2.name, type = _a2.type, url = _a2.url, isByMe = _a2.isByMe, onCancel = _a2.onCancel, onDelete = _a2.onDelete, disableDelete = _a2.disableDelete, onDownloadClick = _a2.onDownloadClick;
  return React__default__default.createElement(
    Modal,
    { onClose: onCancel },
    React__default__default.createElement(
      "div",
      { className: "sendbird-fileviewer", "data-testid": "sendbird-fileviewer" },
      React__default__default.createElement(
        "div",
        { className: "sendbird-fileviewer__header" },
        React__default__default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__left" },
          React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__avatar" },
            React__default__default.createElement(Avatar$1, { height: "32px", width: "32px", src: profileUrl })
          ),
          React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__text-container" },
            React__default__default.createElement(Label, { className: "sendbird-fileviewer__header__left__filename", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, name),
            React__default__default.createElement(Label, { className: "sendbird-fileviewer__header__left__sender-name", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, nickname)
          )
        ),
        React__default__default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__right" },
          isSupportedFileView(type) && React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions" },
            React__default__default.createElement(
              "a",
              { className: "sendbird-fileviewer__header__right__actions__download", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
              React__default__default.createElement(Icon$1, { type: IconTypes.DOWNLOAD, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px" })
            ),
            onDelete && isByMe && React__default__default.createElement(
              "div",
              { className: "sendbird-fileviewer__header__right__actions__delete" },
              React__default__default.createElement(Icon$1, { className: disableDelete ? "disabled" : "", type: IconTypes.DELETE, fillColor: disableDelete ? IconColors.GRAY : IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function() {
                if (!disableDelete) {
                  onDelete();
                }
              } })
            )
          ),
          React__default__default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions__close" },
            React__default__default.createElement(Icon$1, { type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: onCancel })
          )
        )
      ),
      React__default__default.createElement(
        "div",
        { className: "sendbird-fileviewer__content" },
        isVideo(type) && React__default__default.createElement(
          "video",
          { controls: true, className: "sendbird-fileviewer__content__video" },
          React__default__default.createElement("source", { src: url, type })
        ),
        isImage(type) && React__default__default.createElement("img", { src: url, alt: name, className: "sendbird-fileviewer__content__img" }),
        !isSupportedFileView(type) && React__default__default.createElement(
          "div",
          { className: "sendbird-fileviewer__content__unsupported" },
          React__default__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, LabelStringSet.UI__FILE_VIEWER__UNSUPPORT)
        )
      )
    )
  );
};
var FileViewer = function(props) {
  var _a2 = useGroupChannel(), onBeforeDownloadFileMessage = _a2.state.onBeforeDownloadFileMessage, deleteMessage = _a2.actions.deleteMessage;
  var logger = useSendbird().state.config.logger;
  return React__default__default.createElement(FileViewerView, __assign({}, props, { deleteMessage, onDownloadClick: function(e3) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var allowDownload, err_1;
      var _a3, _b2;
      return __generator(this, function(_c) {
        switch (_c.label) {
          case 0:
            if (!onBeforeDownloadFileMessage)
              return [
                2
                /*return*/
              ];
            _c.label = 1;
          case 1:
            _c.trys.push([1, 3, , 4]);
            return [4, onBeforeDownloadFileMessage({ message: props.message })];
          case 2:
            allowDownload = _c.sent();
            if (!allowDownload) {
              e3.preventDefault();
              (_a3 = logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "FileViewer: Not allowed to download.");
            }
            return [3, 4];
          case 3:
            err_1 = _c.sent();
            (_b2 = logger.error) === null || _b2 === void 0 ? void 0 : _b2.call(logger, "FileViewer: Error occurred while determining download continuation:", err_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  } }));
};
function getModalDeleteMessageTitle(stringSet2, message) {
  return K(message).when(isMultipleFilesMessage, function() {
    var filesCount = message.fileInfoList.length;
    return "Do you want to delete all ".concat(filesCount, " photos?");
  }).otherwise(function() {
    return stringSet2.MODAL__DELETE_MESSAGE__TITLE;
  });
}
var RemoveMessageModalView = function(props) {
  var _a2;
  var _b2 = props.onSubmit, onSubmit = _b2 === void 0 ? function() {
  } : _b2, onCancel = props.onCancel, message = props.message, deleteMessage = props.deleteMessage;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(Modal, { type: ButtonTypes.DANGER, disabled: ((_a2 = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _a2 === void 0 ? void 0 : _a2.replyCount) ? message.threadInfo.replyCount > 0 : void 0, onCancel, onSubmit: function() {
    if (message.isUserMessage() || message.isFileMessage() || message.isMultipleFilesMessage()) {
      deleteMessage(message).then(function() {
        onSubmit();
        onCancel();
      });
    }
  }, submitText: stringSet2.MESSAGE_MENU__DELETE, titleText: getModalDeleteMessageTitle(stringSet2, message) });
};
var RemoveMessageModal$1 = function(props) {
  var deleteMessage = useGroupChannel().actions.deleteMessage;
  return React__default__default.createElement(RemoveMessageModalView, __assign({}, props, { deleteMessage }));
};
var Message = function(props) {
  var state = useSendbird().state;
  var config2 = state.config, emojiManager = state.emojiManager;
  var _a2 = useGroupChannel(), _b2 = _a2.state, loading = _b2.loading, currentChannel = _b2.currentChannel, animatedMessageId = _b2.animatedMessageId, replyType = _b2.replyType, threadReplySelectType = _b2.threadReplySelectType, isReactionEnabled = _b2.isReactionEnabled, nicknamesMap = _b2.nicknamesMap, renderUserMentionItem = _b2.renderUserMentionItem, filterEmojiCategoryIds = _b2.filterEmojiCategoryIds, onQuoteMessageClick = _b2.onQuoteMessageClick, onReplyInThreadClick = _b2.onReplyInThreadClick, onMessageAnimated = _b2.onMessageAnimated, onBeforeDownloadFileMessage = _b2.onBeforeDownloadFileMessage, messages = _b2.messages, _c = _a2.actions, toggleReaction = _c.toggleReaction, setQuoteMessage = _c.setQuoteMessage, setAnimatedMessageId = _c.setAnimatedMessageId, scrollToMessage = _c.scrollToMessage, updateUserMessage = _c.updateUserMessage, sendUserMessage = _c.sendUserMessage, resendMessage = _c.resendMessage, deleteMessage = _c.deleteMessage;
  var message = props.message;
  var initialized = !loading && Boolean(currentChannel);
  var shouldRenderSuggestedReplies = useIIFE(function() {
    var _a3 = config2.groupChannel, enableSuggestedReplies = _a3.enableSuggestedReplies, showSuggestedRepliesFor = _a3.showSuggestedRepliesFor;
    var lastMessageInView = messages[messages.length - 1];
    var hasUnsentMessage = isSendableMessage(lastMessageInView) && lastMessageInView.sendingStatus !== "succeeded";
    var showSuggestedReplies = showSuggestedRepliesFor === "all_messages" ? true : message.messageId === lastMessageInView.messageId;
    return enableSuggestedReplies && getSuggestedReplies(message).length > 0 && !hasUnsentMessage && showSuggestedReplies;
  });
  return React__default__default.createElement(MessageView, __assign({}, props, { channel: currentChannel, emojiContainer: emojiManager.emojiContainer, editInputDisabled: !initialized || isDisabledBecauseFrozen$1(currentChannel !== null && currentChannel !== void 0 ? currentChannel : void 0) || isDisabledBecauseMuted$1(currentChannel !== null && currentChannel !== void 0 ? currentChannel : void 0) || !config2.isOnline, shouldRenderSuggestedReplies, isReactionEnabled: isReactionEnabled !== null && isReactionEnabled !== void 0 ? isReactionEnabled : false, replyType: replyType !== null && replyType !== void 0 ? replyType : "NONE", threadReplySelectType: threadReplySelectType !== null && threadReplySelectType !== void 0 ? threadReplySelectType : ThreadReplySelectType.PARENT, nicknamesMap, renderUserMentionItem, filterEmojiCategoryIds, scrollToMessage, toggleReaction, setQuoteMessage, onQuoteMessageClick, onReplyInThreadClick, sendUserMessage, updateUserMessage, resendMessage, deleteMessage, animatedMessageId, setAnimatedMessageId, onMessageAnimated, renderFileViewer: function(props2) {
    return React__default__default.createElement(FileViewer, __assign({}, props2));
  }, renderRemoveMessageModal: function(props2) {
    return React__default__default.createElement(RemoveMessageModal$1, __assign({}, props2));
  }, usedInLegacy: false, onBeforeDownloadFileMessage }));
};
var UnreadCount = function(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, _c = _a2.count, count = _c === void 0 ? 0 : _c, _d = _a2.time, time = _d === void 0 ? "" : _d, onClick = _a2.onClick, lastReadAt = _a2.lastReadAt;
  var _e2 = useContext(LocalizationContext), stringSet2 = _e2.stringSet, dateLocale = _e2.dateLocale;
  var unreadSince = useMemo(function() {
    var _a3, _b3;
    if (stringSet2.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON !== "on") {
      var timeArray = ((_b3 = (_a3 = time === null || time === void 0 ? void 0 : time.toString) === null || _a3 === void 0 ? void 0 : _a3.call(time)) === null || _b3 === void 0 ? void 0 : _b3.split(" ")) || [];
      timeArray === null || timeArray === void 0 ? void 0 : timeArray.splice(-2, 0, stringSet2.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);
      return timeArray.join(" ");
    } else if (lastReadAt) {
      return format(lastReadAt, stringSet2.DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE, { locale: dateLocale });
    }
  }, [time, lastReadAt]);
  return React__default__default.createElement(
    "div",
    { className: classnames(count < 1 ? "sendbird-notification--hide" : "sendbird-notification", className), "data-testid": "sendbird-notification", onClick },
    React__default__default.createElement(
      Label,
      { className: "sendbird-notification__text", testID: "sendbird-notification__text", color: LabelColors.ONCONTENT_1, type: LabelTypography.CAPTION_2 },
      "".concat(count, " "),
      stringSet2.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE,
      " ".concat(unreadSince)
    ),
    React__default__default.createElement(Icon$1, { width: "24px", height: "24px", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.CONTENT })
  );
};
var FrozenNotification = function(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(
    "div",
    { className: classnames("sendbird-notification", "sendbird-notification--frozen", className), "data-testid": "sendbird-notification" },
    React__default__default.createElement(Label, { className: "sendbird-notification__text", testID: "sendbird-notification__text", type: LabelTypography.CAPTION_2 }, stringSet2.CHANNEL_FROZEN)
  );
};
var TypingDots = function() {
  return React__default__default.createElement(
    "div",
    { className: "typing-dots-container" },
    React__default__default.createElement("span", null),
    React__default__default.createElement("span", null),
    React__default__default.createElement("span", null)
  );
};
var AVATAR_BORDER_SIZE = 2;
var AVATAR_DIAMETER_WITHOUT_BORDER = 28;
var AVATAR_DIAMETER = AVATAR_DIAMETER_WITHOUT_BORDER + AVATAR_BORDER_SIZE * 2;
var LEFT_GAP = 24;
var MAX_PROFILES_COUNT = 3;
var LEFT_FOR_BORDER = AVATAR_BORDER_SIZE;
var AvatarStack = function(props) {
  var sources = props.sources, max = props.max;
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    " ",
    sources.slice(0, max).map(function(src, index) {
      return React__default__default.createElement(Avatar$1, {
        className: "sendbird-message-content__left__avatar multiple",
        src: src || "",
        key: "avatar_stack_item_".concat(src),
        // TODO: Divide getting profileUrl logic to utils
        width: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
        height: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
        zIndex: index,
        left: "".concat(index * LEFT_GAP - LEFT_FOR_BORDER, "px")
      });
    }),
    " "
  );
};
var TypingIndicatorBubbleAvatar = function(props) {
  var typingMembers = props.typingMembers;
  var membersCount = typingMembers.length;
  var displayCount = Math.min(membersCount, 4);
  var hiddenCount = membersCount - MAX_PROFILES_COUNT;
  var superImposedWidth = (displayCount - 1) * (AVATAR_DIAMETER - LEFT_GAP);
  var rightPaddingSize = 12;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-message-content__left incoming", style: {
      minWidth: displayCount * AVATAR_DIAMETER - superImposedWidth + rightPaddingSize
    } },
    React__default__default.createElement(AvatarStack, { sources: typingMembers.map(function(member) {
      return member.profileUrl;
    }), max: MAX_PROFILES_COUNT }),
    hiddenCount > 0 ? React__default__default.createElement(Avatar$1, {
      className: "sendbird-message-content__left__avatar multiple",
      // TODO: Divide getting profileUrl logic to utils
      width: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
      height: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
      zIndex: MAX_PROFILES_COUNT,
      left: "".concat(MAX_PROFILES_COUNT * LEFT_GAP, "px"),
      customDefaultComponent: function(_a2) {
        var width = _a2.width, height = _a2.height;
        return React__default__default.createElement(AvatarDefault, { width, height, text: "+".concat(hiddenCount) });
      }
    }) : null
  );
};
var TypingIndicatorBubble = function(props) {
  var typingMembers = props.typingMembers, handleScroll = props.handleScroll;
  useLayoutEffect(function() {
    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);
  }, []);
  if (typingMembers.length === 0)
    return null;
  return React__default__default.createElement(
    "div",
    { className: "sendbird-message-content incoming", style: { marginBottom: "2px" } },
    React__default__default.createElement(TypingIndicatorBubbleAvatar, { typingMembers }),
    React__default__default.createElement(
      "div",
      { className: "sendbird-message-content__middle" },
      React__default__default.createElement(TypingDots, null)
    )
  );
};
var compareMessagesForGrouping = function(prevMessage, currMessage, nextMessage, stringSet2, currentChannel, replyType) {
  if (!currentChannel || currentChannel.channelType !== "group") {
    return [
      isSameGroup(prevMessage, currMessage, stringSet2),
      isSameGroup(currMessage, nextMessage, stringSet2)
    ];
  }
  if (replyType === "THREAD" && (currMessage === null || currMessage === void 0 ? void 0 : currMessage.threadInfo)) {
    return [false, false];
  }
  var sendingStatus = (currMessage === null || currMessage === void 0 ? void 0 : currMessage.sendingStatus) || "";
  var isAcceptable = sendingStatus !== "pending" && sendingStatus !== "failed";
  return [
    isSameGroup(prevMessage, currMessage, stringSet2, currentChannel) && isAcceptable,
    isSameGroup(currMessage, nextMessage, stringSet2, currentChannel) && isAcceptable
  ];
};
var getMessageCreatedAt = function(message, stringSet2) {
  return format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT);
};
var isSameGroup = function(message, comparingMessage, stringSet2, currentChannel) {
  var _a2, _b2;
  if (!(message && comparingMessage && message.messageType && message.messageType !== "admin" && comparingMessage.messageType && (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.messageType) !== "admin" && "sender" in message && "sender" in comparingMessage && message.createdAt && comparingMessage.createdAt && message.sender.userId && comparingMessage.sender.userId)) {
    return false;
  }
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.sendingStatus) && ((_a2 = message === null || message === void 0 ? void 0 : message.sender) === null || _a2 === void 0 ? void 0 : _a2.userId) === ((_b2 = comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.sender) === null || _b2 === void 0 ? void 0 : _b2.userId) && getMessageCreatedAt(message, stringSet2) === getMessageCreatedAt(comparingMessage, stringSet2) && (currentChannel ? isReadMessage(currentChannel, message) === isReadMessage(currentChannel, comparingMessage) : true);
};
var getMessagePartsInfo = function(_a2) {
  var allMessages = _a2.allMessages, stringSet2 = _a2.stringSet, _b2 = _a2.isMessageGroupingEnabled, isMessageGroupingEnabled = _b2 === void 0 ? true : _b2, _c = _a2.currentIndex, currentIndex = _c === void 0 ? 0 : _c, currentMessage = _a2.currentMessage, _d = _a2.currentChannel, currentChannel = _d === void 0 ? null : _d, _e2 = _a2.replyType, replyType = _e2 === void 0 ? "" : _e2;
  var previousMessage = allMessages[currentIndex - 1];
  var nextMessage = allMessages[currentIndex + 1];
  var _f = isMessageGroupingEnabled ? compareMessagesForGrouping(previousMessage, currentMessage, nextMessage, stringSet2, currentChannel, replyType) : [false, false], chainTop = _f[0], chainBottom = _f[1];
  var previousMessageCreatedAt = previousMessage === null || previousMessage === void 0 ? void 0 : previousMessage.createdAt;
  var currentCreatedAt = currentMessage.createdAt;
  var isLocalMessage = "sendingStatus" in currentMessage && currentMessage.sendingStatus !== "succeeded";
  var hasSeparator = isLocalMessage ? false : !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));
  return {
    chainTop,
    chainBottom,
    hasSeparator
  };
};
var scrollIntoLast$1 = function(initialTry, scrollRef, setIsScrolled) {
  if (initialTry === void 0) {
    initialTry = 0;
  }
  var MAX_TRIES = 10;
  var currentTry = initialTry;
  if (currentTry > MAX_TRIES) {
    return;
  }
  try {
    var scrollDOM = (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) || document.querySelector(".sendbird-conversation__messages-padding");
    if (scrollDOM)
      scrollDOM.scrollTop = scrollDOM.scrollHeight;
    setIsScrolled === null || setIsScrolled === void 0 ? void 0 : setIsScrolled(true);
  } catch (error) {
    setTimeout(function() {
      scrollIntoLast$1(currentTry + 1, scrollRef, setIsScrolled);
    }, 500 * currentTry);
  }
};
var isOperator = function(groupChannel) {
  var myRole = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.myRole;
  return myRole === "operator";
};
var isDisabledBecauseFrozen = function(groupChannel) {
  var isFrozen2 = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.isFrozen;
  return isFrozen2 && !isOperator(groupChannel);
};
var isDisabledBecauseMuted = function(groupChannel) {
  var myMutedState = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.myMutedState;
  return myMutedState === "muted";
};
var isAboutSame = function(a4, b3, px) {
  return Math.abs(a4 - b3) <= px;
};
var InfiniteList = forwardRef(function(props, listRef) {
  var messages = props.messages, renderMessage = props.renderMessage, scrollPositionRef = props.scrollPositionRef, scrollDistanceFromBottomRef = props.scrollDistanceFromBottomRef, onLoadPrevious = props.onLoadPrevious, onLoadNext = props.onLoadNext, _a2 = props.loadThreshold, loadThreshold = _a2 === void 0 ? 0.05 : _a2, typingIndicator = props.typingIndicator, _b2 = props.onScrollPosition, onScrollPosition = _b2 === void 0 ? noop$4 : _b2, initDeps = props.initDeps;
  var isFetching = React__default__default.useRef(false);
  var direction = React__default__default.useRef();
  var oldScrollTop = useRef(0);
  useLayoutEffect(function() {
    if (listRef.current) {
      listRef.current.scrollTop = listRef.current.scrollHeight;
    }
  }, initDeps);
  useLayoutEffect(function() {
    if (listRef.current) {
      if (direction.current === "top") {
        listRef.current.scrollTop = listRef.current.scrollHeight - scrollPositionRef.current;
      }
      if (direction.current === "bottom") {
        listRef.current.scrollTop = oldScrollTop.current;
      }
      direction.current = void 0;
    }
  }, [listRef.current, messages.length]);
  var handleScroll = useCallback(function() {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var list, threshold;
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            if (!listRef.current)
              return [
                2
                /*return*/
              ];
            list = listRef.current;
            onScrollPosition(getReachedStatus(list));
            scrollPositionRef.current = list.scrollHeight - list.scrollTop;
            scrollDistanceFromBottomRef.current = scrollPositionRef.current - list.clientHeight;
            oldScrollTop.current = list.scrollTop;
            if (isFetching.current)
              return [
                2
                /*return*/
              ];
            threshold = list.clientHeight * Math.min(Math.max(0, loadThreshold), 1);
            if (!(list.scrollTop <= threshold)) return [3, 2];
            isFetching.current = true;
            direction.current = "top";
            return [4, onLoadPrevious()];
          case 1:
            _a3.sent();
            isFetching.current = false;
            return [3, 5];
          case 2:
            if (!(list.scrollHeight - list.scrollTop - list.clientHeight <= threshold)) return [3, 4];
            isFetching.current = true;
            direction.current = "bottom";
            return [4, onLoadNext()];
          case 3:
            _a3.sent();
            isFetching.current = false;
            return [3, 5];
          case 4:
            direction.current = void 0;
            _a3.label = 5;
          case 5:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [messages.length]);
  return React__default__default.createElement(
    "div",
    { className: "sendbird-conversation__scroll-container" },
    React__default__default.createElement("div", { className: "sendbird-conversation__padding" }),
    React__default__default.createElement(
      "div",
      { ref: listRef, className: "sendbird-conversation__messages-padding", "data-testid": "sendbird-message-list-container", onScroll: handleScroll },
      messages.map(function(message, index) {
        return renderMessage({ message, index });
      }),
      typingIndicator
    )
  );
});
function getReachedStatus(element) {
  if (isAboutSame(element.scrollTop, 0, SCROLL_BUFFER)) {
    return "top";
  }
  if (isAboutSame(element.scrollHeight, element.clientHeight + element.scrollTop, SCROLL_BUFFER)) {
    return "bottom";
  }
  return "middle";
}
var MessageList = function(props) {
  var _a2, _b2, _c, _d, _e2;
  var _f = props.className, className = _f === void 0 ? "" : _f;
  var _g2 = deleteNullish(props), _h = _g2.renderMessage, renderMessage = _h === void 0 ? function(props2) {
    return React__default__default.createElement(Message, __assign({}, props2));
  } : _h, renderMessageContent = _g2.renderMessageContent, renderSuggestedReplies = _g2.renderSuggestedReplies, renderCustomSeparator = _g2.renderCustomSeparator, _j = _g2.renderPlaceholderLoader, renderPlaceholderLoader = _j === void 0 ? function() {
    return React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING });
  } : _j, _k = _g2.renderPlaceholderEmpty, renderPlaceholderEmpty = _k === void 0 ? function() {
    return React__default__default.createElement(PlaceHolder, { className: "sendbird-conversation__no-messages", type: PlaceHolderTypes.NO_MESSAGES });
  } : _k, _l = _g2.renderFrozenNotification, renderFrozenNotification = _l === void 0 ? function() {
    return React__default__default.createElement(FrozenNotification, { className: "sendbird-conversation__messages__notification" });
  } : _l;
  var _m = useGroupChannel(), _o = _m.state, channelUrl = _o.channelUrl, hasNext = _o.hasNext, loading = _o.loading, messages = _o.messages, newMessages = _o.newMessages, isScrollBottomReached = _o.isScrollBottomReached, isMessageGroupingEnabled = _o.isMessageGroupingEnabled, currentChannel = _o.currentChannel, replyType = _o.replyType, scrollPubSub = _o.scrollPubSub, loadNext = _o.loadNext, loadPrevious = _o.loadPrevious, resetNewMessages = _o.resetNewMessages, scrollRef = _o.scrollRef, scrollPositionRef = _o.scrollPositionRef, scrollDistanceFromBottomRef = _o.scrollDistanceFromBottomRef, _p = _m.actions, scrollToBottom = _p.scrollToBottom, setIsScrollBottomReached = _p.setIsScrollBottomReached;
  var state = useSendbird().state;
  var stringSet2 = useLocalization().stringSet;
  var _q = useState(), unreadSinceDate = _q[0], setUnreadSinceDate = _q[1];
  useEffect(function() {
    if (isScrollBottomReached) {
      setUnreadSinceDate(void 0);
    } else {
      setUnreadSinceDate(/* @__PURE__ */ new Date());
    }
  }, [isScrollBottomReached]);
  var onMessageContentSizeChanged = function(isBottomMessageAffected) {
    if (isBottomMessageAffected === void 0) {
      isBottomMessageAffected = false;
    }
    var elem = scrollRef.current;
    if (elem) {
      var latestDistance = scrollDistanceFromBottomRef.current;
      var currentDistance = elem.scrollHeight - elem.scrollTop - elem.offsetHeight;
      if (latestDistance < currentDistance && (!isBottomMessageAffected || latestDistance < SCROLL_BUFFER)) {
        var diff = currentDistance - latestDistance;
        scrollPubSub.publish("scroll", { top: elem.scrollTop + diff, lazy: false, animated: false });
      }
    }
  };
  var renderer2 = {
    frozenNotification: function() {
      if (!currentChannel || !currentChannel.isFrozen)
        return null;
      return renderFrozenNotification();
    },
    unreadMessagesNotification: function() {
      if (isScrollBottomReached || !unreadSinceDate)
        return null;
      return React__default__default.createElement(UnreadCount, { className: "sendbird-conversation__messages__notification", count: newMessages.length, lastReadAt: unreadSinceDate, onClick: function() {
        return scrollToBottom();
      } });
    },
    scrollToBottomButton: function() {
      if (!hasNext() && isScrollBottomReached)
        return null;
      return React__default__default.createElement(
        "div",
        { className: "sendbird-conversation__scroll-bottom-button", onClick: function() {
          return scrollToBottom();
        }, onKeyDown: function() {
          return scrollToBottom();
        }, tabIndex: 0, role: "button" },
        React__default__default.createElement(Icon$1, { width: "24px", height: "24px", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.PRIMARY })
      );
    }
  };
  if (loading) {
    return renderPlaceholderLoader();
  }
  if (messages.length === 0) {
    return renderPlaceholderEmpty();
  }
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(
      "div",
      { className: "sendbird-conversation__messages ".concat(className), dir: getHTMLTextDirection(state.config.htmlTextDirection, state.config.forceLeftToRightMessageLayout) },
      React__default__default.createElement(InfiniteList, { ref: scrollRef, initDeps: [channelUrl], scrollPositionRef, scrollDistanceFromBottomRef, onLoadNext: loadNext, onLoadPrevious: loadPrevious, onScrollPosition: function(it2) {
        var isScrollBottomReached2 = it2 === "bottom";
        if (newMessages.length > 0 && isScrollBottomReached2) {
          resetNewMessages();
        }
        setIsScrollBottomReached(isScrollBottomReached2);
      }, messages, renderMessage: function(_a3) {
        var message = _a3.message, index = _a3.index;
        var _b3 = getMessagePartsInfo({
          allMessages: messages,
          stringSet: stringSet2,
          replyType: replyType !== null && replyType !== void 0 ? replyType : "NONE",
          isMessageGroupingEnabled: isMessageGroupingEnabled !== null && isMessageGroupingEnabled !== void 0 ? isMessageGroupingEnabled : false,
          currentIndex: index,
          currentMessage: message,
          currentChannel
        }), chainTop = _b3.chainTop, chainBottom = _b3.chainBottom, hasSeparator = _b3.hasSeparator;
        var isOutgoingMessage = isSendableMessage(message) && message.sender.userId === state.config.userId;
        return React__default__default.createElement(MessageProvider$1, { message, key: getComponentKeyFromMessage(message), isByMe: isOutgoingMessage }, renderMessage({
          handleScroll: onMessageContentSizeChanged,
          message,
          hasSeparator,
          chainTop,
          chainBottom,
          renderMessageContent,
          renderSuggestedReplies,
          renderCustomSeparator
        }));
      }, typingIndicator: !hasNext() && ((_b2 = (_a2 = state === null || state === void 0 ? void 0 : state.config) === null || _a2 === void 0 ? void 0 : _a2.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.enableTypingIndicator) && ((_e2 = (_d = (_c = state === null || state === void 0 ? void 0 : state.config) === null || _c === void 0 ? void 0 : _c.groupChannel) === null || _d === void 0 ? void 0 : _d.typingIndicatorTypes) === null || _e2 === void 0 ? void 0 : _e2.has(TypingIndicatorType.Bubble)) && React__default__default.createElement(TypingIndicatorBubbleWrapper, { channelUrl, handleScroll: onMessageContentSizeChanged }) }),
      React__default__default.createElement(React__default__default.Fragment, null, renderer2.frozenNotification()),
      React__default__default.createElement(React__default__default.Fragment, null, renderer2.unreadMessagesNotification()),
      React__default__default.createElement(React__default__default.Fragment, null, renderer2.scrollToBottomButton())
    )
  );
};
var TypingIndicatorBubbleWrapper = function(props) {
  var stores2 = useSendbird().state.stores;
  var _a2 = useGroupChannel().state, isScrollBottomReached = _a2.isScrollBottomReached, scrollPubSub = _a2.scrollPubSub;
  var _b2 = useState([]), typingMembers = _b2[0], setTypingMembers = _b2[1];
  useGroupChannelHandler(stores2.sdkStore.sdk, {
    onTypingStatusUpdated: function(channel) {
      if (channel.url === props.channelUrl) {
        setTypingMembers(channel.getTypingUsers());
      }
      if (isScrollBottomReached && isContextMenuClosed()) {
        setTimeout(function() {
          scrollPubSub.publish("scrollToBottom", {});
        }, 10);
      }
    }
  });
  return React__default__default.createElement(TypingIndicatorBubble, { typingMembers, handleScroll: props.handleScroll });
};
var SuggestedMentionList$1 = function(props) {
  return React__default__default.createElement(SuggestedMentionListView, __assign({}, props));
};
var componentClassname = "sendbird-quote_message_input__avatar";
function QuoteMessageThumbnail(_a2) {
  var _b2;
  var message = _a2.message;
  if (!isFileMessage(message) && !isMultipleFilesMessage(message) || isVoiceMessage(message)) {
    return React__default__default.createElement(React__default__default.Fragment, null);
  }
  var thumbnailUrl = getMessageFirstFileThumbnailUrl(message);
  if (!thumbnailUrl) {
    if (isImageMessage(message) || isVideoMessage(message)) {
      thumbnailUrl = getMessageFirstFileUrl(message);
    } else if (isMultipleFilesMessage(message) && isImageFileInfo((_b2 = message.fileInfoList) === null || _b2 === void 0 ? void 0 : _b2[0])) {
      thumbnailUrl = message.fileInfoList[0].url;
    }
  }
  if (isVideoMessage(message) && thumbnailUrl) {
    return React__default__default.createElement(
      "div",
      { className: componentClassname },
      React__default__default.createElement("video", { style: {
        width: "44px",
        height: "44px"
      }, src: thumbnailUrl })
    );
  } else if ((isThumbnailMessage(message) || isMultipleFilesMessage(message)) && thumbnailUrl) {
    return React__default__default.createElement(ImageRenderer, { className: componentClassname, url: thumbnailUrl, alt: getMessageFirstFileType(message), width: "44px", height: "44px", fixedSize: true });
  } else if (isAudioMessage(message)) {
    return React__default__default.createElement(
      "div",
      { className: componentClassname },
      React__default__default.createElement(Icon$1, { type: IconTypes.FILE_AUDIO, fillColor: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px" })
    );
  } else {
    return React__default__default.createElement(
      "div",
      { className: componentClassname },
      React__default__default.createElement(Icon$1, { type: IconTypes.FILE_DOCUMENT, fillColor: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px" })
    );
  }
}
function QuoteMessageInput(_a2) {
  var className = _a2.className, replyingMessage = _a2.replyingMessage, onClose = _a2.onClose;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var fileMessage = replyingMessage;
  var sender = replyingMessage === null || replyingMessage === void 0 ? void 0 : replyingMessage.sender;
  var displayFileIcon = (isFileMessage(replyingMessage) || isMultipleFilesMessage(replyingMessage)) && !isVoiceMessage(replyingMessage);
  return React__default__default.createElement(
    "div",
    { className: getClassName(["sendbird-quote_message_input", className !== null && className !== void 0 ? className : ""]) },
    displayFileIcon && React__default__default.createElement(QuoteMessageThumbnail, { message: fileMessage }),
    React__default__default.createElement(
      "div",
      { className: "sendbird-quote_message_input__body", style: {
        width: "calc(100% - ".concat(displayFileIcon ? "164px" : "120px", ")"),
        left: displayFileIcon ? "92px" : "40px"
      } },
      React__default__default.createElement(Label, { className: "sendbird-quote_message_input__body__sender-name", type: LabelTypography.CAPTION_1, color: LabelColors.ONBACKGROUND_1 }, "".concat(stringSet2.QUOTE_MESSAGE_INPUT__REPLY_TO, " ").concat(sender && sender.nickname ? sender.nickname : stringSet2.NO_NAME)),
      React__default__default.createElement(
        Label,
        { className: "sendbird-quote_message_input__body__message-content", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 },
        isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet2.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE,
        isVideoMessage(fileMessage) && stringSet2.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO,
        isGifMessage(fileMessage) && stringSet2.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF,
        isUserMessage(replyingMessage) && replyingMessage.message,
        getUIKitMessageType(replyingMessage) === UIKitMessageTypes.FILE && getMessageFirstFileName(fileMessage),
        isMultipleFilesMessage(replyingMessage) && "".concat(fileMessage.fileInfoList.length, " Photos"),
        isVoiceMessage(replyingMessage) && stringSet2.VOICE_MESSAGE
      )
    ),
    React__default__default.createElement(Icon$1, { className: "sendbird-quote_message_input__close-button", type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px", onClick: function() {
      return onClose === null || onClose === void 0 ? void 0 : onClose(replyingMessage);
    } })
  );
}
var VoiceRecorderStatus = {
  PREPARING: "PREPARING",
  READY_TO_RECORD: "READY_TO_RECORD",
  RECORDING: "RECORDING",
  COMPLETED: "COMPLETED"
};
var useVoiceRecorder = function(_a2) {
  var _b2 = _a2.onRecordingStarted, onRecordingStarted = _b2 === void 0 ? noop$4 : _b2, _c = _a2.onRecordingEnded, onRecordingEnded = _c === void 0 ? noop$4 : _c;
  var state = useSendbird().state;
  var config2 = state.config;
  var voiceRecord = config2.voiceRecord;
  var maxRecordingTime = voiceRecord === null || voiceRecord === void 0 ? void 0 : voiceRecord.maxRecordingTime;
  var voiceRecorder = useVoiceRecorderContext();
  var isRecordable = voiceRecorder.isRecordable;
  var _d = useState(null), recordedFile = _d[0], setRecordedFile = _d[1];
  var _e2 = useState(VoiceRecorderStatus.PREPARING), recordingStatus = _e2[0], setRecordingStatus = _e2[1];
  useEffect(function() {
    if (isRecordable && recordingStatus === VoiceRecorderStatus.PREPARING) {
      setRecordingStatus(VoiceRecorderStatus.READY_TO_RECORD);
    }
  }, [isRecordable]);
  var start = useCallback(function() {
    voiceRecorder === null || voiceRecorder === void 0 ? void 0 : voiceRecorder.start({
      onRecordingStarted: function() {
        setRecordingStatus(VoiceRecorderStatus.RECORDING);
        onRecordingStarted();
        startTimer();
      },
      onRecordingEnded: function(audioFile) {
        setRecordingStatus(VoiceRecorderStatus.COMPLETED);
        onRecordingEnded(audioFile);
        setRecordedFile(audioFile);
        stopTimer();
      }
    });
  }, [onRecordingStarted, onRecordingEnded]);
  var stop = useCallback(function() {
    voiceRecorder === null || voiceRecorder === void 0 ? void 0 : voiceRecorder.stop();
    stopTimer();
  }, [voiceRecorder]);
  var cancel = useCallback(function() {
    stop();
    setRecordedFile(null);
  }, [voiceRecorder]);
  var _f = useState(0), recordingTime = _f[0], setRecordingTime = _f[1];
  var timer = useRef(null);
  function startTimer() {
    stopTimer();
    setRecordingTime(0);
    timer.current = setInterval(function() {
      setRecordingTime(function(prevTime) {
        var newTime = prevTime + 100;
        if (newTime > maxRecordingTime) {
          stopTimer();
        }
        return newTime;
      });
    }, 100);
  }
  function stopTimer() {
    if (timer.current) {
      clearInterval(timer.current);
      timer.current = null;
    }
  }
  useEffect(function() {
    if (recordingTime > maxRecordingTime) {
      stop();
    }
  }, [recordingTime, maxRecordingTime, stop]);
  return {
    start,
    stop,
    cancel,
    recordingStatus,
    recordingTime,
    recordedFile,
    recordingLimit: maxRecordingTime
  };
};
var VoiceMessageInputStatus = {
  READY_TO_RECORD: "READY_TO_RECORD",
  RECORDING: "RECORDING",
  READY_TO_PLAY: "READY_TO_PLAY",
  PLAYING: "PLAYING"
};
var ControlerIcon = function(_a2) {
  var inputState = _a2.inputState;
  switch (inputState) {
    case VoiceMessageInputStatus.READY_TO_RECORD: {
      return React__default__default.createElement("div", { className: "sendbird-controler-icon record-icon" });
    }
    case VoiceMessageInputStatus.RECORDING: {
      return React__default__default.createElement("div", { className: "sendbird-controler-icon stop-icon" });
    }
    case VoiceMessageInputStatus.READY_TO_PLAY: {
      return React__default__default.createElement(Icon$1, { className: "sendbird-controler-icon play-icon", width: "20px", height: "20px", type: IconTypes.PLAY, fillColor: IconColors.ON_BACKGROUND_1 });
    }
    case VoiceMessageInputStatus.PLAYING: {
      return React__default__default.createElement(
        "div",
        { className: "sendbird-controler-icon pause-icon" },
        React__default__default.createElement("div", { className: "sendbird-controler-icon pause-icon-inner" }),
        React__default__default.createElement("div", { className: "sendbird-controler-icon pause-icon-inner" })
      );
    }
    default:
      return React__default__default.createElement(React__default__default.Fragment, null);
  }
};
var VoiceMessageInput = function(_a2) {
  var _b2 = _a2.minRecordTime, minRecordTime = _b2 === void 0 ? VOICE_RECORDER_DEFAULT_MIN : _b2, maximumValue = _a2.maximumValue, _c = _a2.currentValue, currentValue = _c === void 0 ? 0 : _c, currentType = _a2.currentType, onCancelClick = _a2.onCancelClick, onControlClick = _a2.onControlClick, onSubmitClick = _a2.onSubmitClick, renderCancelButton = _a2.renderCancelButton, renderControlButton = _a2.renderControlButton, renderSubmitButton = _a2.renderSubmitButton;
  var _d = useState(0), lastClickTime = _d[0], setLastClickTime = _d[1];
  var isReadyToRecord = useMemo(function() {
    return currentType === VoiceMessageInputStatus.READY_TO_RECORD;
  }, [currentType]);
  var isRecording = useMemo(function() {
    return currentType === VoiceMessageInputStatus.RECORDING;
  }, [currentType]);
  var isSendButtonDisabled = useMemo(function() {
    if (currentType === VoiceMessageInputStatus.READY_TO_RECORD || currentType === VoiceMessageInputStatus.RECORDING) {
      return minRecordTime > currentValue;
    }
    return false;
  }, [currentType, minRecordTime, currentValue]);
  var isPlayMode = useMemo(function() {
    return currentType === VoiceMessageInputStatus.READY_TO_PLAY || currentType === VoiceMessageInputStatus.PLAYING;
  }, [currentType]);
  var stringSet2 = useLocalization().stringSet;
  var handleOnCancelClick = function() {
    var currentTime = Date.now();
    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {
      onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
      setLastClickTime(currentTime);
    }
  };
  var handleOnControlClick = function() {
    var currentTime = Date.now();
    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {
      onControlClick === null || onControlClick === void 0 ? void 0 : onControlClick(currentType);
      setLastClickTime(currentTime);
    }
  };
  var handleOnSubmitClick = function() {
    var currentTime = Date.now();
    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {
      if (!isSendButtonDisabled) {
        onSubmitClick === null || onSubmitClick === void 0 ? void 0 : onSubmitClick();
      }
      setLastClickTime(currentTime);
    }
  };
  return React__default__default.createElement(
    "div",
    { className: "sendbird-voice-message-input" },
    React__default__default.createElement(
      "div",
      { className: "sendbird-voice-message-input__indicator" },
      React__default__default.createElement(
        "div",
        { className: "sendbird-voice-message-input__indicator__progress-bar" },
        React__default__default.createElement(ProgressBar, { className: "sendbird-voice-message-input__indicator__progress-bar__bar", disabled: isReadyToRecord, maxSize: maximumValue, currentSize: currentValue })
      ),
      isRecording ? React__default__default.createElement("div", { className: "sendbird-voice-message-input__indicator__on-rec" }) : null,
      React__default__default.createElement(PlaybackTime, { className: "sendbird-voice-message-input__indicator__playback-time", time: isPlayMode ? maximumValue - currentValue : currentValue, labelColor: isReadyToRecord ? LabelColors.ONBACKGROUND_4 : LabelColors.ONCONTENT_1 })
    ),
    React__default__default.createElement(
      "div",
      { className: "sendbird-voice-message-input__controler" },
      (renderCancelButton === null || renderCancelButton === void 0 ? void 0 : renderCancelButton()) || React__default__default.createElement(
        TextButton,
        { className: "sendbird-voice-message-input__controler__cancel", onClick: handleOnCancelClick, disableUnderline: true },
        React__default__default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.BUTTON__CANCEL)
      ),
      (renderControlButton === null || renderControlButton === void 0 ? void 0 : renderControlButton(currentType)) || React__default__default.createElement(
        "div",
        { className: "sendbird-voice-message-input__controler__main", onClick: handleOnControlClick },
        React__default__default.createElement(ControlerIcon, { inputState: currentType })
      ),
      (renderSubmitButton === null || renderSubmitButton === void 0 ? void 0 : renderSubmitButton()) || React__default__default.createElement(
        "div",
        { className: classnames("sendbird-voice-message-input__controler__submit", isSendButtonDisabled && "voice-message--disabled"), onClick: handleOnSubmitClick },
        React__default__default.createElement(Icon$1, { width: "19px", height: "19px", type: IconTypes.SEND, fillColor: isSendButtonDisabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT })
      )
    )
  );
};
var compressImage = function(_a2) {
  var imageFile = _a2.imageFile, compressionRate = _a2.compressionRate, resizingWidth = _a2.resizingWidth, resizingHeight = _a2.resizingHeight, outputFormat = _a2.outputFormat;
  var image = document.createElement("img");
  return new Promise(function(resolve, reject) {
    image.src = URL.createObjectURL(imageFile);
    image.onerror = reject;
    image.onload = function() {
      URL.revokeObjectURL(image.src);
      var canvas = document.createElement("canvas");
      var originWidth = image.width;
      var originHeight = image.height;
      var targetResizingWidth = !resizingWidth || resizingWidth > originWidth ? originWidth : resizingWidth;
      var targetResizingHeight = !resizingHeight || resizingHeight > originHeight ? originHeight : resizingHeight;
      var widthRatio = originWidth / targetResizingWidth;
      var heightRatio = originHeight / targetResizingHeight;
      if (widthRatio > heightRatio) {
        targetResizingHeight = originHeight / (resizingWidth ? widthRatio : 1);
      } else if (heightRatio > widthRatio) {
        targetResizingWidth = originWidth / (resizingHeight ? heightRatio : 1);
      }
      canvas.width = targetResizingWidth;
      canvas.height = targetResizingHeight;
      var ctx = canvas.getContext("2d");
      if (!ctx) {
        reject(new Error("Failed to get canvas 2d context"));
        return;
      }
      ctx.drawImage(image, 0, 0, targetResizingWidth, targetResizingHeight);
      var targetFileType = outputFormat === "preserve" ? imageFile.type : "image/".concat(outputFormat);
      var targetSubtype = targetFileType.split("/").pop();
      var dotIndex = imageFile.name.lastIndexOf(".");
      var targetName = "".concat(dotIndex === -1 ? imageFile.name : imageFile.name.substring(0, dotIndex), ".").concat(targetSubtype);
      ctx.canvas.toBlob(function(blob) {
        if (blob) {
          var file = new File([blob], targetName, { type: targetFileType });
          resolve(file);
        } else {
          reject(new Error("Failed to compress image"));
        }
      }, targetFileType, compressionRate);
    };
  });
};
var compressImages = function(_a2) {
  return __awaiter$5(void 0, [_a2], void 0, function(_b2) {
    var compressionRate, _c, outputFormat, resizingWidth, resizingHeight, result;
    var files = _b2.files, logger = _b2.logger, imageCompression = _b2.imageCompression;
    return __generator(this, function(_d) {
      switch (_d.label) {
        case 0:
          compressionRate = imageCompression.compressionRate, _c = imageCompression.outputFormat, outputFormat = _c === void 0 ? "preserve" : _c;
          resizingWidth = imageCompression.resizingWidth ? pxToNumber(imageCompression.resizingWidth) : void 0;
          resizingHeight = imageCompression.resizingHeight ? pxToNumber(imageCompression.resizingHeight) : void 0;
          result = {
            failedIndexes: [],
            compressedFiles: []
          };
          if (!(Array.isArray(files) && files.length > 0)) {
            logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: There are no files.", files);
            return [2, result];
          }
          if (!compressionRate || compressionRate < 0 || 1 < compressionRate) {
            logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: The compressionRate is not acceptable.", compressionRate);
            return [2, result];
          }
          return [4, Promise.all(files.map(function(file, index) {
            return __awaiter$5(void 0, void 0, void 0, function() {
              var compressedImage, err_1;
              return __generator(this, function(_a3) {
                switch (_a3.label) {
                  case 0:
                    if (!(file.type === "image/jpg" || file.type === "image/png" || file.type === "image/jpeg")) {
                      logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: The fileType is not compressible.", { file, index });
                      result.failedIndexes.push(index);
                      result.compressedFiles.push(file);
                      return [
                        2
                        /*return*/
                      ];
                    }
                    _a3.label = 1;
                  case 1:
                    _a3.trys.push([1, 3, , 4]);
                    return [4, compressImage({
                      imageFile: file,
                      compressionRate,
                      resizingWidth,
                      resizingHeight,
                      outputFormat
                    })];
                  case 2:
                    compressedImage = _a3.sent();
                    result.compressedFiles.push(compressedImage);
                    return [3, 4];
                  case 3:
                    err_1 = _a3.sent();
                    result.compressedFiles.push(file);
                    result.failedIndexes.push(index);
                    logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: Failed to compress image file", { file, err: err_1 });
                    return [3, 4];
                  case 4:
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          }))];
        case 1:
          _d.sent();
          logger === null || logger === void 0 ? void 0 : logger.info("utils - compressImages: Finished compressing images", result);
          return [2, result];
      }
    });
  });
};
var VoiceMessageInputWrapper = function(_a2) {
  var channel = _a2.channel, onCancelClick = _a2.onCancelClick, onSubmitClick = _a2.onSubmitClick;
  var uuid = useRef(uuidv4()).current;
  var _b2 = useState(null), audioFile = _b2[0], setAudioFile = _b2[1];
  var _c = useState(VoiceMessageInputStatus.READY_TO_RECORD), voiceInputState = _c[0], setVoiceInputState = _c[1];
  var _d = useState(false), isSubmitted = _d[0], setSubmit = _d[1];
  var _e2 = useState(false), isDisabled = _e2[0], setDisabled = _e2[1];
  var _f = useState(false), showModal = _f[0], setShowModal = _f[1];
  var stringSet2 = useLocalization().stringSet;
  var state = useSendbird().state;
  var config2 = state.config;
  var _g2 = useVoiceRecorder({
    onRecordingStarted: function() {
      setVoiceInputState(VoiceMessageInputStatus.RECORDING);
    },
    onRecordingEnded: function(audioFile2) {
      setAudioFile(audioFile2);
    }
  }), start = _g2.start, stop = _g2.stop, cancel = _g2.cancel, recordingTime = _g2.recordingTime, recordingStatus = _g2.recordingStatus, recordingLimit = _g2.recordingLimit;
  var voicePlayer = useVoicePlayer({
    channelUrl: channel === null || channel === void 0 ? void 0 : channel.url,
    key: uuid,
    audioFile: audioFile !== null && audioFile !== void 0 ? audioFile : void 0
  });
  var play = voicePlayer.play, pause = voicePlayer.pause, playbackTime = voicePlayer.playbackTime, playingStatus = voicePlayer.playingStatus;
  var stopVoicePlayer = voicePlayer.stop;
  useEffect(function() {
    if (isDisabledBecauseFrozen$1(channel) || isDisabledBecauseMuted$1(channel)) {
      setDisabled(true);
    } else {
      setDisabled(false);
    }
  }, [channel === null || channel === void 0 ? void 0 : channel.myRole, channel === null || channel === void 0 ? void 0 : channel.isFrozen, channel === null || channel === void 0 ? void 0 : channel.myMutedState]);
  useEffect(function() {
    if (isSubmitted && audioFile) {
      onSubmitClick === null || onSubmitClick === void 0 ? void 0 : onSubmitClick(audioFile, recordingTime);
      setSubmit(false);
      setAudioFile(null);
    }
  }, [isSubmitted, audioFile, recordingTime]);
  useEffect(function() {
    if (audioFile) {
      if (recordingTime < config2.voiceRecord.minRecordingTime) {
        setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
        setAudioFile(null);
      } else if (playingStatus === VOICE_PLAYER_STATUS.PLAYING) {
        setVoiceInputState(VoiceMessageInputStatus.PLAYING);
      } else {
        setVoiceInputState(VoiceMessageInputStatus.READY_TO_PLAY);
      }
    }
  }, [audioFile, recordingTime, playingStatus]);
  return React__default__default.createElement(
    "div",
    { className: "sendbird-voice-message-input-wrapper" },
    React__default__default.createElement(VoiceMessageInput, { currentValue: recordingStatus === VoiceRecorderStatus.COMPLETED ? playbackTime : recordingTime, maximumValue: recordingStatus === VoiceRecorderStatus.COMPLETED ? recordingTime : recordingLimit, currentType: voiceInputState, onCancelClick: function() {
      onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
      cancel();
      stopVoicePlayer();
    }, onSubmitClick: function() {
      if (isDisabled) {
        setShowModal(true);
        setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
      } else {
        stop();
        pause();
        setSubmit(true);
      }
    }, onControlClick: function(type) {
      switch (type) {
        case VoiceMessageInputStatus.READY_TO_RECORD: {
          stopVoicePlayer();
          start();
          break;
        }
        case VoiceMessageInputStatus.RECORDING: {
          if (recordingTime >= config2.voiceRecord.minRecordingTime && !isDisabled) {
            stop();
          } else if (isDisabled) {
            cancel();
            setShowModal(true);
            setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
          } else {
            cancel();
            setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
          }
          break;
        }
        case VoiceMessageInputStatus.READY_TO_PLAY: {
          play();
          break;
        }
        case VoiceMessageInputStatus.PLAYING: {
          pause();
          break;
        }
      }
    } }),
    showModal && React__default__default.createElement(
      Modal,
      { className: "sendbird-voice-message-input-wrapper-alert", titleText: isDisabledBecauseMuted$1(channel) ? stringSet2.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED : stringSet2.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN, hideFooter: true, isCloseOnClickOutside: true, onClose: function() {
        setShowModal(false);
        onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
      } },
      React__default__default.createElement(
        "div",
        { className: "sendbird-voice-message-input-wrapper-alert__body" },
        React__default__default.createElement(Button, { className: "sendbird-voice-message-input-wrapper-alert__body__ok-button", type: ButtonTypes.PRIMARY, size: ButtonSizes.BIG, onClick: function() {
          setShowModal(false);
          onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
        } }, stringSet2.BUTTON__OK)
      )
    )
  );
};
var useHandleUploadFiles$1 = function(_a2, _b2) {
  var sendFileMessage = _a2.sendFileMessage, sendMultipleFilesMessage = _a2.sendMultipleFilesMessage, quoteMessage = _a2.quoteMessage;
  var logger = _b2.logger;
  var stringSet2 = useLocalization().stringSet;
  var state = useSendbird().state;
  var config2 = state.config;
  var imageCompression = config2.imageCompression;
  var uikitUploadSizeLimit = config2 === null || config2 === void 0 ? void 0 : config2.uikitUploadSizeLimit;
  var uikitMultipleFilesMessageLimit = config2 === null || config2 === void 0 ? void 0 : config2.uikitMultipleFilesMessageLimit;
  var openModal = useGlobalModalContext().openModal;
  return useCallback(function(files) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var ONE_MiB2, compressedFiles, sendingFiles, file, imageFiles_1, otherFiles_1;
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            if (files.length === 0) {
              logger.warning("Channel|useHandleUploadFiles: given file list is empty.", { files });
              return [
                2
                /*return*/
              ];
            }
            if (files.length > uikitMultipleFilesMessageLimit) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload files more than ".concat(uikitMultipleFilesMessageLimit));
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__COUNT_LIMIT.replace("%d", "".concat(uikitUploadSizeLimit)),
                  hideFooter: true
                },
                childElement: function(_a4) {
                  var closeModal = _a4.closeModal;
                  return React__default__default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            if (files.some(function(file2) {
              return file2.size > uikitUploadSizeLimit;
            })) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload file size exceeding ".concat(uikitUploadSizeLimit));
              ONE_MiB2 = 1024 * 1024;
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT.replace("%d", "".concat(Math.floor(uikitUploadSizeLimit / ONE_MiB2))),
                  hideFooter: true
                },
                childElement: function(_a4) {
                  var closeModal = _a4.closeModal;
                  return React__default__default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            return [4, compressImages({
              files,
              imageCompression,
              logger
            })];
          case 1:
            compressedFiles = _a3.sent().compressedFiles;
            sendingFiles = compressedFiles;
            if (sendingFiles.length === 1) {
              logger.info("Channel|useHandleUploadFiles: sending one file.");
              file = sendingFiles[0];
              return [2, sendFileMessage({ file, parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId })];
            } else if (sendingFiles.length > 1) {
              logger.info("Channel|useHandleUploadFiles: sending multiple files.");
              imageFiles_1 = [];
              otherFiles_1 = [];
              sendingFiles.forEach(function(file2) {
                if (isImage(file2.type)) {
                  imageFiles_1.push(file2);
                } else {
                  otherFiles_1.push(file2);
                }
              });
              return [2, otherFiles_1.reduce(function(previousPromise, item) {
                return previousPromise.then(function() {
                  return sendFileMessage({ file: item, parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId });
                });
              }, function() {
                if (imageFiles_1.length === 0) {
                  return Promise.resolve();
                } else if (imageFiles_1.length === 1) {
                  return sendFileMessage({ file: imageFiles_1[0] });
                } else {
                  return sendMultipleFilesMessage({
                    fileInfoList: imageFiles_1.map(function(file2) {
                      return {
                        file: file2,
                        fileName: file2.name,
                        fileSize: file2.size,
                        mimeType: file2.type
                      };
                    }),
                    parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId
                  });
                }
              }())];
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [sendFileMessage, sendMultipleFilesMessage, quoteMessage]);
};
var MessageInputWrapperView = React__default__default.forwardRef(function(props, ref) {
  var _a2;
  var currentChannel = props.currentChannel, messages = props.messages, loading = props.loading, quoteMessage = props.quoteMessage, setQuoteMessage = props.setQuoteMessage, messageInputRef = props.messageInputRef, sendUserMessage = props.sendUserMessage, sendFileMessage = props.sendFileMessage, sendVoiceMessage = props.sendVoiceMessage, sendMultipleFilesMessage = props.sendMultipleFilesMessage, renderUserMentionItem = props.renderUserMentionItem, renderFileUploadIcon = props.renderFileUploadIcon, renderVoiceMessageIcon = props.renderVoiceMessageIcon, renderSendMessageIcon = props.renderSendMessageIcon, acceptableMimeTypes = props.acceptableMimeTypes, disabled = props.disabled;
  var stringSet2 = useLocalization().stringSet;
  var isMobile = useMediaQueryContext().isMobile;
  var state = useSendbird().state;
  var stores2 = state.stores, config2 = state.config;
  var isOnline = config2.isOnline, userMention = config2.userMention, logger = config2.logger, groupChannel = config2.groupChannel;
  var sdk = stores2.sdkStore.sdk;
  var maxMentionCount = userMention.maxMentionCount, maxSuggestionCount = userMention.maxSuggestionCount;
  var isBroadcast = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isBroadcast;
  var isOperator2 = (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === "operator";
  var isMultipleFilesMessageEnabled = (_a2 = props.isMultipleFilesMessageEnabled) !== null && _a2 !== void 0 ? _a2 : config2.isMultipleFilesMessageEnabled;
  var isMentionEnabled = groupChannel.enableMention;
  var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;
  var _b2 = useState(""), mentionNickname = _b2[0], setMentionNickname = _b2[1];
  var _c = useState([]), mentionedUsers = _c[0], setMentionedUsers = _c[1];
  var _d = useState([]), mentionedUserIds = _d[0], setMentionedUserIds = _d[1];
  var _e2 = useState(null), selectedUser = _e2[0], setSelectedUser = _e2[1];
  var _f = useState([]), mentionSuggestedUsers = _f[0], setMentionSuggestedUsers = _f[1];
  var _g2 = useState(null), messageInputEvent = _g2[0], setMessageInputEvent = _g2[1];
  var _h = useState(false), showVoiceMessageInput = _h[0], setShowVoiceMessageInput = _h[1];
  var isMessageInputDisabled = loading || (!currentChannel || !sdk) || !sdk.isCacheEnabled && !isOnline || isDisabledBecauseFrozen$1(currentChannel) || isDisabledBecauseMuted$1(currentChannel) || isDisabledBecauseSuggestedReplies(currentChannel, config2.groupChannel.enableSuggestedReplies) || isDisabledBecauseMessageForm(messages, config2.groupChannel.enableFormTypeMessage) || disabled;
  var showSuggestedMentionList = !isMessageInputDisabled && isMentionEnabled && mentionNickname.length > 0 && !isBroadcast;
  var mentionNodes = useDirtyGetMentions({ ref: ref || messageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < maxMentionCount;
  useEffect(function() {
    setMentionNickname("");
    setMentionedUsers([]);
    setMentionedUserIds([]);
    setSelectedUser(null);
    setMentionSuggestedUsers([]);
    setMessageInputEvent(null);
    setShowVoiceMessageInput(false);
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  useEffect(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a3) {
      var userId = _a3.userId;
      var i3 = mentionedUserIds.indexOf(userId);
      if (i3 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i3, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  var handleUploadFiles = useHandleUploadFiles$1({
    sendFileMessage,
    sendMultipleFilesMessage,
    quoteMessage: quoteMessage !== null && quoteMessage !== void 0 ? quoteMessage : void 0
  }, { logger });
  if (isBroadcast && !isOperator2) {
    return null;
  }
  return React__default__default.createElement(
    "div",
    { className: showVoiceMessageInput ? "sendbird-message-input-wrapper--voice-message" : "sendbird-message-input-wrapper" },
    showSuggestedMentionList && React__default__default.createElement(SuggestedMentionList$1, { currentChannel, targetNickname: mentionNickname, inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0, renderUserMentionItem, onUserItemClick: function(user) {
      if (user) {
        setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
      }
      setMentionNickname("");
      setSelectedUser(user);
      setMessageInputEvent(null);
    }, onFocusItemChange: function() {
      setMessageInputEvent(null);
    }, onFetchUsers: function(users) {
      setMentionSuggestedUsers(users);
    }, ableAddMention: ableMention, maxMentionCount, maxSuggestionCount }),
    quoteMessage && React__default__default.createElement(
      "div",
      { className: "sendbird-message-input-wrapper__quote-message-input" },
      React__default__default.createElement(QuoteMessageInput, { replyingMessage: quoteMessage, onClose: function() {
        return setQuoteMessage(null);
      } })
    ),
    showVoiceMessageInput ? React__default__default.createElement(VoiceMessageInputWrapper, { channel: currentChannel !== null && currentChannel !== void 0 ? currentChannel : void 0, onSubmitClick: function(recordedFile, duration) {
      sendVoiceMessage({ file: recordedFile, parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId }, duration);
      setQuoteMessage(null);
      setShowVoiceMessageInput(false);
    }, onCancelClick: function() {
      setShowVoiceMessageInput(false);
    } }) : React__default__default.createElement(MessageInput, { className: "sendbird-message-input-wrapper__message-input", channel: currentChannel, channelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url, isMobile, acceptableMimeTypes, mentionSelectedUser: selectedUser, isMentionEnabled, isVoiceMessageEnabled, isSelectingMultipleFilesEnabled: isMultipleFilesMessageEnabled, onVoiceMessageIconClick: function() {
      setShowVoiceMessageInput(true);
    }, setMentionedUsers, placeholder: quoteMessage && stringSet2.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER || isDisabledBecauseFrozen$1(currentChannel) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__FROZEN || isDisabledBecauseMuted$1(currentChannel) && (isMobile ? stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT : stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED) || isDisabledBecauseSuggestedReplies(currentChannel, config2.groupChannel.enableSuggestedReplies) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__SUGGESTED_REPLIES || isDisabledBecauseMessageForm(messages, config2.groupChannel.enableFormTypeMessage) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MESSAGE_FORM || disabled && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__DISABLED || void 0, ref: ref || messageInputRef, disabled: isMessageInputDisabled, renderFileUploadIcon, renderSendMessageIcon, renderVoiceMessageIcon, onStartTyping: function() {
      currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping();
    }, onSendMessage: function(_a3) {
      var _b3;
      var message = _a3.message, mentionTemplate = _a3.mentionTemplate;
      sendUserMessage({
        message,
        mentionedUsers,
        mentionedMessageTemplate: mentionTemplate,
        parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId
      });
      setMentionNickname("");
      setMentionedUsers([]);
      setQuoteMessage(null);
      (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel);
    }, onFileUpload: function(fileList) {
      handleUploadFiles(fileList);
      setQuoteMessage(null);
    }, onUserMentioned: function(user) {
      if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
        setSelectedUser(null);
        setMentionNickname("");
      }
    }, onMentionStringChange: function(mentionText) {
      setMentionNickname(mentionText);
    }, onMentionedUserIdsUpdated: function(userIds) {
      setMentionedUserIds(userIds);
    }, onKeyDown: function(e3) {
      if (showSuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e3.key === MessageInputKeys.Enter && ableMention || e3.key === MessageInputKeys.ArrowUp || e3.key === MessageInputKeys.ArrowDown)) {
        setMessageInputEvent(e3);
        return true;
      }
      return false;
    } })
  );
});
var MessageInputWrapper = function(props) {
  var _a2 = useGroupChannel(), state = _a2.state, actions = _a2.actions;
  return React__default__default.createElement(MessageInputWrapperView, __assign({}, props, state, actions));
};
var GroupChannelUI = function(props) {
  var context = useGroupChannelContext();
  var _a2 = useGroupChannel().state, channelUrl = _a2.channelUrl, fetchChannelError = _a2.fetchChannelError;
  var _b2 = deleteNullish(props), _c = _b2.renderChannelHeader, renderChannelHeader = _c === void 0 ? function(props2) {
    return React__default__default.createElement(GroupChannelHeader, __assign({}, props2));
  } : _c, _d = _b2.renderMessageList, renderMessageList = _d === void 0 ? function(props2) {
    return React__default__default.createElement(MessageList, __assign({}, props2, { className: "sendbird-conversation__message-list" }));
  } : _d, _e2 = _b2.renderMessageInput, renderMessageInput = _e2 === void 0 ? function() {
    return React__default__default.createElement(MessageInputWrapper, __assign({}, props));
  } : _e2;
  return React__default__default.createElement(GroupChannelUIView, __assign({}, props, context, { isInvalid: fetchChannelError !== null, channelUrl, renderChannelHeader, renderMessageList, renderMessageInput }));
};
var GroupChannel = function(props) {
  return React__default__default.createElement(
    GroupChannelProvider,
    __assign({}, props),
    React__default__default.createElement(GroupChannelUI, __assign({}, props))
  );
};
var EmojiManager = (
  /** @class */
  function() {
    function EmojiManager2(props) {
      var _this = this;
      var _a2;
      var sdk = props.sdk, logger = props.logger;
      (_a2 = sdk === null || sdk === void 0 ? void 0 : sdk.getAllEmoji) === null || _a2 === void 0 ? void 0 : _a2.call(sdk).then(function(emojiContainer) {
        _this._emojiContainer = emojiContainer;
        logger === null || logger === void 0 ? void 0 : logger.info("EmojiManager | Succeeded getting all emojis. ", emojiContainer);
      }).catch(function() {
        logger === null || logger === void 0 ? void 0 : logger.warning("EmojiManager | Failed getting all emojis.");
      });
    }
    Object.defineProperty(EmojiManager2.prototype, "AllEmojisAsArray", {
      get: function() {
        return this._emojiContainer.emojiCategories.flatMap(function(category) {
          return category.emojis;
        });
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EmojiManager2.prototype, "AllEmojisAsMap", {
      get: function() {
        return this._emojiContainer.emojiCategories.flatMap(function(category) {
          return category.emojis;
        }).reduce(function(map, emoji) {
          map.set(emoji.key, emoji.url);
          return map;
        }, /* @__PURE__ */ new Map());
      },
      enumerable: false,
      configurable: true
    });
    EmojiManager2.prototype.getAllEmojis = function(type) {
      var _this = this;
      return K(type).when(function(type2) {
        return ["array", "arr"].includes(type2);
      }, function() {
        return _this.AllEmojisAsArray;
      }).when(function(type2) {
        return ["map"].includes(type2);
      }, function() {
        return _this.AllEmojisAsMap;
      }).otherwise(function() {
        return _this.AllEmojisAsArray;
      });
    };
    EmojiManager2.prototype.getEmojiUrl = function(reactionKey) {
      var _a2, _b2;
      return (_b2 = (_a2 = this.AllEmojisAsArray.find(function(emoji) {
        return emoji.key === reactionKey;
      })) === null || _a2 === void 0 ? void 0 : _a2.url) !== null && _b2 !== void 0 ? _b2 : "";
    };
    Object.defineProperty(EmojiManager2.prototype, "emojiContainer", {
      get: function() {
        return this._emojiContainer;
      },
      enumerable: false,
      configurable: true
    });
    return EmojiManager2;
  }()
);
var colorMapping = {
  // Primary / Secondary / Error / Information
  100: "extra-light",
  200: "light",
  300: "main",
  400: "dark",
  500: "extra-dark",
  // Overlay
  "overlay-01": "overlay-dark",
  "overlay-02": "overlay-light",
  // OnLight
  "onlight-01": "onlight-text-high-emphasis",
  "onlight-02": "onlight-text-mid-emphasis",
  "onlight-03": "onlight-text-low-emphasis",
  "onlight-04": "onlight-text-disabled",
  // OnDark
  "ondark-01": "ondark-text-high-emphasis",
  "ondark-02": "ondark-text-mid-emphasis",
  "ondark-03": "ondark-text-low-emphasis",
  "ondark-04": "ondark-text-disabled"
};
var colorMappingOrder = Object.values(colorMapping).sort(function(a4, b3) {
  return b3.length - a4.length;
});
var colorMappingMap = new Map(Object.entries(colorMapping).map(function(_a2) {
  var key = _a2[0], value = _a2[1];
  return [value, key];
}));
var mapColorKeys = function(colorSet) {
  var mappedColors = {};
  Object.entries(colorSet).forEach(function(_a2) {
    var key = _a2[0], value = _a2[1];
    var descriptiveKey = key;
    for (var _i2 = 0, colorMappingOrder_1 = colorMappingOrder; _i2 < colorMappingOrder_1.length; _i2++) {
      var mappingValue = colorMappingOrder_1[_i2];
      var regex2 = new RegExp("-".concat(mappingValue, "$"));
      if (regex2.test(key)) {
        var numericKey = colorMappingMap.get(mappingValue);
        if (numericKey) {
          descriptiveKey = key.replace(regex2, "-".concat(numericKey));
          break;
        }
      }
    }
    mappedColors[descriptiveKey] = value;
  });
  return mappedColors;
};
/*!
 * css-vars-ponyfill
 * v2.4.9
 * https://jhildenbiddle.github.io/css-vars-ponyfill/
 * (c) 2018-2024 John Hildenbiddle <http://hildenbiddle.com>
 * MIT license
 */
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
/*!
 * get-css-data
 * v2.1.0
 * https://github.com/jhildenbiddle/get-css-data
 * (c) 2018-2022 John Hildenbiddle <http://hildenbiddle.com>
 * MIT license
 */
function getUrls(urls) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var settings = {
    mimeType: options.mimeType || null,
    onBeforeSend: options.onBeforeSend || Function.prototype,
    onSuccess: options.onSuccess || Function.prototype,
    onError: options.onError || Function.prototype,
    onComplete: options.onComplete || Function.prototype
  };
  var urlArray = Array.isArray(urls) ? urls : [urls];
  var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x3) {
    return null;
  });
  function isValidCss(text2) {
    var isString = typeof text2 === "string";
    var isHTML = isString && text2.trim().charAt(0) === "<";
    return isString && !isHTML;
  }
  function onError2(xhr, urlIndex) {
    settings.onError(xhr, urlArray[urlIndex], urlIndex);
  }
  function onSuccess2(responseText, urlIndex) {
    var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);
    responseText = returnVal === false ? "" : returnVal || responseText;
    urlQueue[urlIndex] = responseText;
    if (urlQueue.indexOf(null) === -1) {
      settings.onComplete(urlQueue);
    }
  }
  var parser2 = document.createElement("a");
  urlArray.forEach(function(url, i3) {
    parser2.setAttribute("href", url);
    parser2.href = String(parser2.href);
    var isIElte9 = Boolean(document.all && !window.atob);
    var isIElte9CORS = isIElte9 && parser2.host.split(":")[0] !== location.host.split(":")[0];
    if (isIElte9CORS) {
      var isSameProtocol = parser2.protocol === location.protocol;
      if (isSameProtocol) {
        var xdr = new XDomainRequest();
        xdr.open("GET", url);
        xdr.timeout = 0;
        xdr.onprogress = Function.prototype;
        xdr.ontimeout = Function.prototype;
        xdr.onload = function() {
          var text2 = xdr.responseText;
          if (isValidCss(text2)) {
            onSuccess2(text2, i3);
          } else {
            onError2(xdr, i3);
          }
        };
        xdr.onerror = function(err) {
          onError2(xdr, i3);
        };
        setTimeout(function() {
          xdr.send();
        }, 0);
      } else {
        console.warn("Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (".concat(url, ")"));
        onError2(null, i3);
      }
    } else {
      var xhr = new XMLHttpRequest();
      xhr.open("GET", url);
      if (settings.mimeType && xhr.overrideMimeType) {
        xhr.overrideMimeType(settings.mimeType);
      }
      settings.onBeforeSend(xhr, url, i3);
      xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
          var text2 = xhr.responseText;
          if (xhr.status < 400 && isValidCss(text2)) {
            onSuccess2(text2, i3);
          } else if (xhr.status === 0 && isValidCss(text2)) {
            onSuccess2(text2, i3);
          } else {
            onError2(xhr, i3);
          }
        }
      };
      xhr.send();
    }
  });
}
/**
 * Gets CSS data from <style> and <link> nodes (including @imports), then
 * returns data in order processed by DOM. Allows specifying nodes to
 * include/exclude and filtering CSS data using RegEx.
 *
 * @preserve
 * @param {object}   [options] The options object
 * @param {object}   [options.rootElement=document] Root element to traverse for
 *                   <link> and <style> nodes.
 * @param {string}   [options.include] CSS selector matching <link> and <style>
 *                   nodes to include
 * @param {string}   [options.exclude] CSS selector matching <link> and <style>
 *                   nodes to exclude
 * @param {object}   [options.filter] Regular expression used to filter node CSS
 *                   data. Each block of CSS data is tested against the filter,
 *                   and only matching data is included.
 * @param {boolean}  [options.skipDisabled=true] Determines if disabled
 *                   stylesheets will be skipped while collecting CSS data.
 * @param {boolean}  [options.useCSSOM=false] Determines if CSS data will be
 *                   collected from a stylesheet's runtime values instead of its
 *                   text content. This is required to get accurate CSS data
 *                   when a stylesheet has been modified using the deleteRule()
 *                   or insertRule() methods because these modifications will
 *                   not be reflected in the stylesheet's text content.
 * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes
 *                   1) the XHR object, 2) source node reference, and 3) the
 *                   source URL as arguments.
 * @param {function} [options.onSuccess] Callback on each CSS node read. Passes
 *                   1) CSS text, 2) source node reference, and 3) the source
 *                   URL as arguments.
 * @param {function} [options.onError] Callback on each error. Passes 1) the XHR
 *                   object for inspection, 2) soure node reference, and 3) the
 *                   source URL that failed (either a <link> href or an @import)
 *                   as arguments
 * @param {function} [options.onComplete] Callback after all nodes have been
 *                   processed. Passes 1) concatenated CSS text, 2) an array of
 *                   CSS text in DOM order, and 3) an array of nodes in DOM
 *                   order as arguments.
 *
 * @example
 *
 *   getCssData({
 *     rootElement : document,
 *     include     : 'style,link[rel="stylesheet"]',
 *     exclude     : '[href="skip.css"]',
 *     filter      : /red/,
 *     skipDisabled: true,
 *     useCSSOM    : false,
 *     onBeforeSend(xhr, node, url) {
 *       // ...
 *     }
 *     onSuccess(cssText, node, url) {
 *       // ...
 *     }
 *     onError(xhr, node, url) {
 *       // ...
 *     },
 *     onComplete(cssText, cssArray, nodeArray) {
 *       // ...
 *     }
 *   });
 */
function getCssData(options) {
  var regex2 = {
    cssComments: /\/\*[\s\S]+?\*\//g,
    cssImports: /(?:@import\s*)(?:url\(\s*)?(?:['"])([^'"]*)(?:['"])(?:\s*\))?(?:[^;]*;)/g
  };
  var settings = {
    rootElement: options.rootElement || document,
    include: options.include || 'style,link[rel="stylesheet"]',
    exclude: options.exclude || null,
    filter: options.filter || null,
    skipDisabled: options.skipDisabled !== false,
    useCSSOM: options.useCSSOM || false,
    onBeforeSend: options.onBeforeSend || Function.prototype,
    onSuccess: options.onSuccess || Function.prototype,
    onError: options.onError || Function.prototype,
    onComplete: options.onComplete || Function.prototype
  };
  var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function(node) {
    return !matchesSelector(node, settings.exclude);
  });
  var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x3) {
    return null;
  });
  function handleComplete() {
    var isComplete = cssArray.indexOf(null) === -1;
    if (isComplete) {
      cssArray.reduce(function(skipIndices, value, i3) {
        if (value === "") {
          skipIndices.push(i3);
        }
        return skipIndices;
      }, []).reverse().forEach(function(skipIndex) {
        return [sourceNodes, cssArray].forEach(function(arr) {
          return arr.splice(skipIndex, 1);
        });
      });
      var cssText = cssArray.join("");
      settings.onComplete(cssText, cssArray, sourceNodes);
    }
  }
  function handleSuccess(cssText, cssIndex, node, sourceUrl) {
    var returnVal = settings.onSuccess(cssText, node, sourceUrl);
    cssText = returnVal !== void 0 && Boolean(returnVal) === false ? "" : returnVal || cssText;
    resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {
      if (cssArray[cssIndex] === null) {
        errorData.forEach(function(data) {
          return settings.onError(data.xhr, node, data.url);
        });
        if (!settings.filter || settings.filter.test(resolvedCssText)) {
          cssArray[cssIndex] = resolvedCssText;
        } else {
          cssArray[cssIndex] = "";
        }
        handleComplete();
      }
    });
  }
  function parseImportData(cssText, baseUrl) {
    var ignoreRules = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    var importData = {};
    importData.rules = (cssText.replace(regex2.cssComments, "").match(regex2.cssImports) || []).filter(function(rule) {
      return ignoreRules.indexOf(rule) === -1;
    });
    importData.urls = importData.rules.map(function(rule) {
      return rule.replace(regex2.cssImports, "$1");
    });
    importData.absoluteUrls = importData.urls.map(function(url) {
      return getFullUrl$1(url, baseUrl);
    });
    importData.absoluteRules = importData.rules.map(function(rule, i3) {
      var oldUrl = importData.urls[i3];
      var newUrl = getFullUrl$1(importData.absoluteUrls[i3], baseUrl);
      return rule.replace(oldUrl, newUrl);
    });
    return importData;
  }
  function resolveImports(cssText, node, baseUrl, callbackFn) {
    var __errorData = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [];
    var __errorRules = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : [];
    var importData = parseImportData(cssText, baseUrl, __errorRules);
    if (importData.rules.length) {
      getUrls(importData.absoluteUrls, {
        onBeforeSend: function onBeforeSend2(xhr, url, urlIndex) {
          settings.onBeforeSend(xhr, node, url);
        },
        onSuccess: function onSuccess2(cssText2, url, urlIndex) {
          var returnVal = settings.onSuccess(cssText2, node, url);
          cssText2 = returnVal === false ? "" : returnVal || cssText2;
          var responseImportData = parseImportData(cssText2, url, __errorRules);
          responseImportData.rules.forEach(function(rule, i3) {
            cssText2 = cssText2.replace(rule, responseImportData.absoluteRules[i3]);
          });
          return cssText2;
        },
        onError: function onError2(xhr, url, urlIndex) {
          __errorData.push({
            xhr,
            url
          });
          __errorRules.push(importData.rules[urlIndex]);
          resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);
        },
        onComplete: function onComplete2(responseArray) {
          responseArray.forEach(function(importText, i3) {
            cssText = cssText.replace(importData.rules[i3], importText);
          });
          resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);
        }
      });
    } else {
      callbackFn(cssText, __errorData);
    }
  }
  if (sourceNodes.length) {
    sourceNodes.forEach(function(node, i3) {
      var linkHref = node.getAttribute("href");
      var linkRel = node.getAttribute("rel");
      var isLink = node.nodeName.toLowerCase() === "link" && linkHref && linkRel && linkRel.toLowerCase().indexOf("stylesheet") !== -1;
      var isSkip = settings.skipDisabled === false ? false : node.disabled;
      var isStyle = node.nodeName.toLowerCase() === "style";
      if (isLink && !isSkip) {
        var isURIScheme = linkHref.indexOf("data:text/css") !== -1;
        if (isURIScheme) {
          var cssText = decodeURIComponent(linkHref.substring(linkHref.indexOf(",") + 1));
          if (settings.useCSSOM) {
            cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {
              return rule.cssText;
            }).join("");
          }
          handleSuccess(cssText, i3, node, location.href);
        } else {
          getUrls(linkHref, {
            mimeType: "text/css",
            onBeforeSend: function onBeforeSend2(xhr, url, urlIndex) {
              settings.onBeforeSend(xhr, node, url);
            },
            onSuccess: function onSuccess2(cssText2, url, urlIndex) {
              var sourceUrl = getFullUrl$1(linkHref);
              handleSuccess(cssText2, i3, node, sourceUrl);
            },
            onError: function onError2(xhr, url, urlIndex) {
              cssArray[i3] = "";
              settings.onError(xhr, node, url);
              handleComplete();
            }
          });
        }
      } else if (isStyle && !isSkip) {
        var _cssText = node.textContent;
        if (settings.useCSSOM) {
          _cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {
            return rule.cssText;
          }).join("");
        }
        handleSuccess(_cssText, i3, node, location.href);
      } else {
        cssArray[i3] = "";
        handleComplete();
      }
    });
  } else {
    settings.onComplete("", []);
  }
}
function getFullUrl$1(url, base) {
  var d4 = document.implementation.createHTMLDocument("");
  var b3 = d4.createElement("base");
  var a4 = d4.createElement("a");
  d4.head.appendChild(b3);
  d4.body.appendChild(a4);
  b3.href = base || document.baseURI || (document.querySelector("base") || {}).href || location.href;
  a4.href = url;
  return a4.href;
}
function matchesSelector(elm, selector) {
  var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;
  return matches.call(elm, selector);
}
var balancedMatch = balanced;
function balanced(a4, b3, str) {
  if (a4 instanceof RegExp) a4 = maybeMatch(a4, str);
  if (b3 instanceof RegExp) b3 = maybeMatch(b3, str);
  var r2 = range(a4, b3, str);
  return r2 && {
    start: r2[0],
    end: r2[1],
    pre: str.slice(0, r2[0]),
    body: str.slice(r2[0] + a4.length, r2[1]),
    post: str.slice(r2[1] + b3.length)
  };
}
function maybeMatch(reg, str) {
  var m4 = str.match(reg);
  return m4 ? m4[0] : null;
}
balanced.range = range;
function range(a4, b3, str) {
  var begs, beg, left, right, result;
  var ai2 = str.indexOf(a4);
  var bi2 = str.indexOf(b3, ai2 + 1);
  var i3 = ai2;
  if (ai2 >= 0 && bi2 > 0) {
    if (a4 === b3) {
      return [ai2, bi2];
    }
    begs = [];
    left = str.length;
    while (i3 >= 0 && !result) {
      if (i3 == ai2) {
        begs.push(i3);
        ai2 = str.indexOf(a4, i3 + 1);
      } else if (begs.length == 1) {
        result = [begs.pop(), bi2];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi2;
        }
        bi2 = str.indexOf(b3, i3 + 1);
      }
      i3 = ai2 < bi2 && ai2 >= 0 ? ai2 : bi2;
    }
    if (begs.length) {
      result = [left, right];
    }
  }
  return result;
}
function parseCss(css) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var defaults2 = {
    preserveStatic: true,
    removeComments: false
  };
  var settings = _extends({}, defaults2, options);
  var errors = [];
  function error(msg) {
    throw new Error("CSS parse error: ".concat(msg));
  }
  function match2(re2) {
    var m4 = re2.exec(css);
    if (m4) {
      css = css.slice(m4[0].length);
      return m4;
    }
  }
  function open() {
    return match2(/^{\s*/);
  }
  function close() {
    return match2(/^}/);
  }
  function whitespace() {
    match2(/^\s*/);
  }
  function comment() {
    whitespace();
    if (css[0] !== "/" || css[1] !== "*") {
      return;
    }
    var i3 = 2;
    while (css[i3] && (css[i3] !== "*" || css[i3 + 1] !== "/")) {
      i3++;
    }
    if (!css[i3]) {
      return error("end of comment is missing");
    }
    var str = css.slice(2, i3);
    css = css.slice(i3 + 2);
    return {
      type: "comment",
      comment: str
    };
  }
  function comments() {
    var cmnts = [];
    var c3;
    while (c3 = comment()) {
      cmnts.push(c3);
    }
    return settings.removeComments ? [] : cmnts;
  }
  function selector() {
    whitespace();
    while (css[0] === "}") {
      error("extra closing bracket");
    }
    var m4 = match2(/^(("(?:\\"|[^"])*"|'(?:\\'|[^'])*'|[^{])+)/);
    if (m4) {
      var _selector = m4[0].trim();
      var selectorItems;
      var hasComment = /\/\*/.test(_selector);
      if (hasComment) {
        _selector = _selector.replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g, "");
      }
      var hasCommaInQuotes = /["']\w*,\w*["']/.test(_selector);
      if (hasCommaInQuotes) {
        _selector = _selector.replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, function(m5) {
          return m5.replace(/,/g, "‌");
        });
      }
      var hasMultipleSelectors = /,/.test(_selector);
      if (hasMultipleSelectors) {
        selectorItems = _selector.split(/\s*(?![^(]*\)),\s*/);
      } else {
        selectorItems = [_selector];
      }
      if (hasCommaInQuotes) {
        selectorItems = selectorItems.map(function(s4) {
          return s4.replace(/\u200C/g, ",");
        });
      }
      return selectorItems;
    }
  }
  function declaration() {
    if (css[0] === "@") {
      return at_rule();
    }
    match2(/^([;\s]*)+/);
    var comment_regexp = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;
    var prop = match2(/^(\*?[-#/*\\\w.]+(\[[0-9a-z_-]+\])?)\s*/);
    if (!prop) {
      return;
    }
    prop = prop[0].trim();
    if (!match2(/^:\s*/)) {
      return error("property missing ':'");
    }
    var val = match2(/^((?:\/\*.*?\*\/|'(?:\\'|.)*?'|"(?:\\"|.)*?"|\((\s*'(?:\\'|.)*?'|"(?:\\"|.)*?"|[^)]*?)\s*\)|[^};])+)/);
    var ret = {
      type: "declaration",
      property: prop.replace(comment_regexp, ""),
      value: val ? val[0].replace(comment_regexp, "").trim() : ""
    };
    match2(/^[;\s]*/);
    return ret;
  }
  function declarations() {
    if (!open()) {
      return error("missing '{'");
    }
    var d4;
    var decls = comments();
    while (d4 = declaration()) {
      decls.push(d4);
      decls = decls.concat(comments());
    }
    if (!close()) {
      return error("missing '}'");
    }
    return decls;
  }
  function keyframe() {
    whitespace();
    var vals = [];
    var m4;
    while (m4 = match2(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/)) {
      vals.push(m4[1]);
      match2(/^,\s*/);
    }
    if (vals.length) {
      return {
        type: "keyframe",
        values: vals,
        declarations: declarations()
      };
    }
  }
  function at_keyframes() {
    var m4 = match2(/^@([-\w]+)?keyframes\s*/);
    if (!m4) {
      return;
    }
    var vendor = m4[1];
    m4 = match2(/^([-\w]+)\s*/);
    if (!m4) {
      return error("@keyframes missing name");
    }
    var name = m4[1];
    if (!open()) {
      return error("@keyframes missing '{'");
    }
    var frame;
    var frames = comments();
    while (frame = keyframe()) {
      frames.push(frame);
      frames = frames.concat(comments());
    }
    if (!close()) {
      return error("@keyframes missing '}'");
    }
    return {
      type: "keyframes",
      name,
      vendor,
      keyframes: frames
    };
  }
  function at_page() {
    var m4 = match2(/^@page */);
    if (m4) {
      var sel = selector() || [];
      return {
        type: "page",
        selectors: sel,
        declarations: declarations()
      };
    }
  }
  function at_page_margin_box() {
    var m4 = match2(/@(top|bottom|left|right)-(left|center|right|top|middle|bottom)-?(corner)?\s*/);
    if (m4) {
      var name = "".concat(m4[1], "-").concat(m4[2]) + (m4[3] ? "-".concat(m4[3]) : "");
      return {
        type: "page-margin-box",
        name,
        declarations: declarations()
      };
    }
  }
  function at_fontface() {
    var m4 = match2(/^@font-face\s*/);
    if (m4) {
      return {
        type: "font-face",
        declarations: declarations()
      };
    }
  }
  function at_supports() {
    var m4 = match2(/^@supports *([^{]+)/);
    if (m4) {
      return {
        type: "supports",
        supports: m4[1].trim(),
        rules: rules()
      };
    }
  }
  function at_host() {
    var m4 = match2(/^@host\s*/);
    if (m4) {
      return {
        type: "host",
        rules: rules()
      };
    }
  }
  function at_media() {
    var m4 = match2(/^@media([^{]+)*/);
    if (m4) {
      return {
        type: "media",
        media: (m4[1] || "").trim(),
        rules: rules()
      };
    }
  }
  function at_custom_m() {
    var m4 = match2(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
    if (m4) {
      return {
        type: "custom-media",
        name: m4[1].trim(),
        media: m4[2].trim()
      };
    }
  }
  function at_document() {
    var m4 = match2(/^@([-\w]+)?document *([^{]+)/);
    if (m4) {
      return {
        type: "document",
        document: m4[2].trim(),
        vendor: m4[1] ? m4[1].trim() : null,
        rules: rules()
      };
    }
  }
  function at_x() {
    var m4 = match2(/^@(import|charset|namespace)\s*([^;]+);/);
    if (m4) {
      return {
        type: m4[1],
        name: m4[2].trim()
      };
    }
  }
  function at_rule() {
    whitespace();
    if (css[0] === "@") {
      var ret = at_x() || at_fontface() || at_media() || at_keyframes() || at_supports() || at_document() || at_custom_m() || at_host() || at_page() || at_page_margin_box();
      if (ret && !settings.preserveStatic) {
        var hasVarFunc = false;
        if (ret.declarations) {
          hasVarFunc = ret.declarations.some(function(decl) {
            return /var\(/.test(decl.value);
          });
        } else {
          var arr = ret.keyframes || ret.rules || [];
          hasVarFunc = arr.some(function(obj) {
            return (obj.declarations || []).some(function(decl) {
              return /var\(/.test(decl.value);
            });
          });
        }
        return hasVarFunc ? ret : {};
      }
      return ret;
    }
  }
  function rule() {
    if (!settings.preserveStatic) {
      var balancedMatch$1 = balancedMatch("{", "}", css);
      if (balancedMatch$1) {
        var hasVarDecl = /:(?:root|host)(?![.:#(])/.test(balancedMatch$1.pre) && /--\S*\s*:/.test(balancedMatch$1.body);
        var hasVarFunc = /var\(/.test(balancedMatch$1.body);
        if (!hasVarDecl && !hasVarFunc) {
          css = css.slice(balancedMatch$1.end + 1);
          return {};
        }
      }
    }
    var sel = selector() || [];
    var decls = settings.preserveStatic ? declarations() : declarations().filter(function(decl) {
      var hasVarDecl2 = sel.some(function(s4) {
        return /:(?:root|host)(?![.:#(])/.test(s4);
      }) && /^--\S/.test(decl.property);
      var hasVarFunc2 = /var\(/.test(decl.value);
      return hasVarDecl2 || hasVarFunc2;
    });
    if (!sel.length) {
      error("selector missing");
    }
    return {
      type: "rule",
      selectors: sel,
      declarations: decls
    };
  }
  function rules(core) {
    if (!core && !open()) {
      return error("missing '{'");
    }
    var node;
    var rules2 = comments();
    while (css.length && (core || css[0] !== "}") && (node = at_rule() || rule())) {
      if (node.type) {
        rules2.push(node);
      }
      rules2 = rules2.concat(comments());
    }
    if (!core && !close()) {
      return error("missing '}'");
    }
    return rules2;
  }
  return {
    type: "stylesheet",
    stylesheet: {
      rules: rules(true),
      errors
    }
  };
}
function parseVars(cssData) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var defaults2 = {
    parseHost: false,
    store: {},
    onWarning: function onWarning2() {
    }
  };
  var settings = _extends({}, defaults2, options);
  var reVarDeclSelectors = new RegExp(":".concat(settings.parseHost ? "host" : "root", "$"));
  if (typeof cssData === "string") {
    cssData = parseCss(cssData, settings);
  }
  cssData.stylesheet.rules.forEach(function(rule) {
    if (rule.type !== "rule" || !rule.selectors.some(function(s4) {
      return reVarDeclSelectors.test(s4);
    })) {
      return;
    }
    rule.declarations.forEach(function(decl, i3) {
      var prop = decl.property;
      var value = decl.value;
      if (prop && prop.indexOf("--") === 0) {
        settings.store[prop] = value;
      }
    });
  });
  return settings.store;
}
function stringifyCss(tree) {
  var delim = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  var cb = arguments.length > 2 ? arguments[2] : void 0;
  var renderMethods = {
    charset: function charset(node) {
      return "@charset " + node.name + ";";
    },
    comment: function comment(node) {
      return node.comment.indexOf("__CSSVARSPONYFILL") === 0 ? "/*" + node.comment + "*/" : "";
    },
    "custom-media": function customMedia(node) {
      return "@custom-media " + node.name + " " + node.media + ";";
    },
    declaration: function declaration(node) {
      return node.property + ":" + node.value + ";";
    },
    document: function document2(node) {
      return "@" + (node.vendor || "") + "document " + node.document + "{" + visit(node.rules) + "}";
    },
    "font-face": function fontFace(node) {
      return "@font-face{" + visit(node.declarations) + "}";
    },
    host: function host(node) {
      return "@host{" + visit(node.rules) + "}";
    },
    import: function _import(node) {
      return "@import " + node.name + ";";
    },
    keyframe: function keyframe(node) {
      return node.values.join(",") + "{" + visit(node.declarations) + "}";
    },
    keyframes: function keyframes(node) {
      return "@" + (node.vendor || "") + "keyframes " + node.name + "{" + visit(node.keyframes) + "}";
    },
    media: function media(node) {
      return "@media " + node.media + "{" + visit(node.rules) + "}";
    },
    namespace: function namespace(node) {
      return "@namespace " + node.name + ";";
    },
    page: function page(node) {
      return "@page " + (node.selectors.length ? node.selectors.join(", ") : "") + "{" + visit(node.declarations) + "}";
    },
    "page-margin-box": function pageMarginBox(node) {
      return "@" + node.name + "{" + visit(node.declarations) + "}";
    },
    rule: function rule(node) {
      var decls = node.declarations;
      if (decls.length) {
        return node.selectors.join(",") + "{" + visit(decls) + "}";
      }
    },
    supports: function supports(node) {
      return "@supports " + node.supports + "{" + visit(node.rules) + "}";
    }
  };
  function visit(nodes) {
    var buf = "";
    for (var i3 = 0; i3 < nodes.length; i3++) {
      var n2 = nodes[i3];
      if (cb) {
        cb(n2);
      }
      var txt = renderMethods[n2.type](n2);
      if (txt) {
        buf += txt;
        if (txt.length && n2.selectors) {
          buf += delim;
        }
      }
    }
    return buf;
  }
  return visit(tree.stylesheet.rules);
}
function walkCss(node, fn2) {
  node.rules.forEach(function(rule) {
    if (rule.rules) {
      walkCss(rule, fn2);
      return;
    }
    if (rule.keyframes) {
      rule.keyframes.forEach(function(keyframe) {
        if (keyframe.type === "keyframe") {
          fn2(keyframe.declarations, rule);
        }
      });
      return;
    }
    if (!rule.declarations) {
      return;
    }
    fn2(rule.declarations, node);
  });
}
var VAR_PROP_IDENTIFIER = "--";
var VAR_FUNC_IDENTIFIER = "var";
function transformCss(cssData) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var defaults2 = {
    preserveStatic: true,
    preserveVars: false,
    variables: {},
    onWarning: function onWarning2() {
    }
  };
  var settings = _extends({}, defaults2, options);
  if (typeof cssData === "string") {
    cssData = parseCss(cssData, settings);
  }
  walkCss(cssData.stylesheet, function(declarations, node) {
    for (var i3 = 0; i3 < declarations.length; i3++) {
      var decl = declarations[i3];
      var type = decl.type;
      var prop = decl.property;
      var value = decl.value;
      if (type !== "declaration") {
        continue;
      }
      if (!settings.preserveVars && prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {
        declarations.splice(i3, 1);
        i3--;
        continue;
      }
      if (value.indexOf(VAR_FUNC_IDENTIFIER + "(") !== -1) {
        var resolvedValue = resolveValue(value, settings);
        if (resolvedValue !== decl.value) {
          resolvedValue = fixNestedCalc(resolvedValue);
          if (!settings.preserveVars) {
            decl.value = resolvedValue;
          } else {
            declarations.splice(i3, 0, {
              type,
              property: prop,
              value: resolvedValue
            });
            i3++;
          }
        }
      }
    }
  });
  return stringifyCss(cssData);
}
function fixNestedCalc(value) {
  var reCalcVal = /calc\(([^)]+)\)/g;
  (value.match(reCalcVal) || []).forEach(function(match2) {
    var newVal = "calc".concat(match2.split("calc").join(""));
    value = value.replace(match2, newVal);
  });
  return value;
}
function resolveValue(value) {
  var settings = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var __recursiveFallback = arguments.length > 2 ? arguments[2] : void 0;
  if (value.indexOf("var(") === -1) {
    return value;
  }
  var valueData = balancedMatch("(", ")", value);
  function resolveFunc(value2) {
    var name = value2.split(",")[0].replace(/[\s\n\t]/g, "");
    var fallback = (value2.match(/(?:\s*,\s*){1}(.*)?/) || [])[1];
    var match2 = Object.prototype.hasOwnProperty.call(settings.variables, name) ? String(settings.variables[name]) : void 0;
    var replacement = match2 || (fallback ? String(fallback) : void 0);
    var unresolvedFallback = __recursiveFallback || value2;
    if (!match2) {
      settings.onWarning('variable "'.concat(name, '" is undefined'));
    }
    if (replacement && replacement !== "undefined" && replacement.length > 0) {
      return resolveValue(replacement, settings, unresolvedFallback);
    } else {
      return "var(".concat(unresolvedFallback, ")");
    }
  }
  if (!valueData) {
    if (value.indexOf("var(") !== -1) {
      settings.onWarning('missing closing ")" in the value "'.concat(value, '"'));
    }
    return value;
  } else if (valueData.pre.slice(-3) === "var") {
    var isEmptyVarFunc = valueData.body.trim().length === 0;
    if (isEmptyVarFunc) {
      settings.onWarning("var() must contain a non-whitespace string");
      return value;
    } else {
      return valueData.pre.slice(0, -3) + resolveFunc(valueData.body) + resolveValue(valueData.post, settings);
    }
  } else {
    return valueData.pre + "(".concat(resolveValue(valueData.body, settings), ")") + resolveValue(valueData.post, settings);
  }
}
var isBrowser = typeof window !== "undefined";
var isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports("(--a: 0)");
var counters = {
  group: 0,
  job: 0
};
var defaults = {
  rootElement: isBrowser ? document : null,
  shadowDOM: false,
  include: "style,link[rel=stylesheet]",
  exclude: "",
  variables: {},
  onlyLegacy: true,
  preserveStatic: true,
  preserveVars: false,
  silent: false,
  updateDOM: true,
  updateURLs: true,
  watch: null,
  onBeforeSend: function onBeforeSend() {
  },
  onError: function onError() {
  },
  onWarning: function onWarning() {
  },
  onSuccess: function onSuccess() {
  },
  onComplete: function onComplete() {
  },
  onFinally: function onFinally() {
  }
};
var regex = {
  cssComments: /\/\*[\s\S]+?\*\//g,
  cssKeyframes: /@(?:-\w*-)?keyframes/,
  cssMediaQueries: /@media[^{]+\{([\s\S]+?})\s*}/g,
  cssUrls: /url\((?!['"]?(?:data|http|\/\/):)['"]?([^'")]*)['"]?\)/g,
  cssVarDeclRules: /(?::(?:root|host)(?![.:#(])[\s,]*[^{]*{\s*[^}]*})/g,
  cssVarDecls: /(?:[\s;]*)(-{2}\w[\w-]*)(?:\s*:\s*)([^;]*);/g,
  cssVarFunc: /var\(\s*--[\w-]/,
  cssVars: /(?:(?::(?:root|host)(?![.:#(])[\s,]*[^{]*{\s*[^;]*;*\s*)|(?:var\(\s*))(--[^:)]+)(?:\s*[:)])/
};
var variableStore = {
  dom: {},
  job: {},
  user: {}
};
var cssVarsIsRunning = false;
var cssVarsObserver = null;
var cssVarsSrcNodeCount = 0;
var debounceTimer = null;
var isShadowDOMReady = false;
/**
 * Fetches, parses, and transforms CSS custom properties from specified
 * <style> and <link> elements into static values, then appends a new <style>
 * element with static values to the DOM to provide CSS custom property
 * compatibility for legacy browsers. Also provides a single interface for
 * live updates of runtime values in both modern and legacy browsers.
 *
 * @preserve
 * @param {object}   [options] Options object
 * @param {object}   [options.rootElement=document] Root element to traverse for
 *                   <link> and <style> nodes
 * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>
 *                   and <style> nodes will be processed.
 * @param {string}   [options.include="style,link[rel=stylesheet]"] CSS selector
 *                   matching <link re="stylesheet"> and <style> nodes to
 *                   process
 * @param {string}   [options.exclude] CSS selector matching <link
 *                   rel="stylehseet"> and <style> nodes to exclude from those
 *                   matches by options.include
 * @param {object}   [options.variables] A map of custom property name/value
 *                   pairs. Property names can omit or include the leading
 *                   double-hyphen (—), and values specified will override
 *                   previous values
 * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will
 *                   only generate legacy-compatible CSS in browsers that lack
 *                   native support (i.e., legacy browsers)
 * @param {boolean}  [options.preserveStatic=true] Determines if CSS
 *                   declarations that do not reference a custom property will
 *                   be preserved in the transformed CSS
 * @param {boolean}  [options.preserveVars=false] Determines if CSS custom
 *                   property declarations will be preserved in the transformed
 *                   CSS
 * @param {boolean}  [options.silent=false] Determines if warning and error
 *                   messages will be displayed on the console
 * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will
 *                   update the DOM after processing CSS custom properties
 * @param {boolean}  [options.updateURLs=true] Determines if relative url()
 *                   paths will be converted to absolute urls in external CSS
 * @param {boolean}  [options.watch=false] Determines if a MutationObserver will
 *                   be created that will execute the ponyfill when a <link> or
 *                   <style> DOM mutation is observed
 * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes
 *                   1) the XHR object, 2) source node reference, and 3) the
 *                   source URL as arguments
 * @param {function} [options.onError] Callback after a CSS parsing error has
 *                   occurred or an XHR request has failed. Passes 1) an error
 *                   message, and 2) source node reference, 3) xhr, and 4 url as
 *                   arguments.
 * @param {function} [options.onWarning] Callback after each CSS parsing warning
 *                   has occurred. Passes 1) a warning message as an argument.
 * @param {function} [options.onSuccess] Callback after CSS data has been
 *                   collected from each node and before CSS custom properties
 *                   have been transformed. Allows modifying the CSS data before
 *                   it is transformed by returning any string value (or false
 *                   to skip). Passes 1) CSS text, 2) source node reference, and
 *                   3) the source URL as arguments.
 * @param {function} [options.onComplete] Callback after all CSS has been
 *                   processed, legacy-compatible CSS has been generated, and
 *                   (optionally) the DOM has been updated. Passes 1) a CSS
 *                   string with CSS variable values resolved, 2) an array of
 *                   output <style> node references that have been appended to
 *                   the DOM, 3) an object containing all custom properies names
 *                   and values, and 4) the ponyfill execution time in
 *                   milliseconds.
 * @param {function} [options.onFinally] Callback in modern and legacy browsers
 *                   after the ponyfill has finished all tasks. Passes 1) a
 *                   boolean indicating if the last ponyfill call resulted in a
 *                   style change, 2) a boolean indicating if the current
 *                   browser provides native support for CSS custom properties,
 *                   and 3) the ponyfill execution time in milliseconds.
 * @example
 *
 *   cssVars({
 *     rootElement   : document,
 *     shadowDOM     : false,
 *     include       : 'style,link[rel="stylesheet"]',
 *     exclude       : '',
 *     variables     : {},
 *     onlyLegacy    : true,
 *     preserveStatic: true,
 *     preserveVars  : false,
 *     silent        : false,
 *     updateDOM     : true,
 *     updateURLs    : true,
 *     watch         : false,
 *     onBeforeSend(xhr, node, url) {},
 *     onError(message, node, xhr, url) {},
 *     onWarning(message) {},
 *     onSuccess(cssText, node, url) {},
 *     onComplete(cssText, styleNode, cssVariables, benchmark) {},
 *     onFinally(hasChanged, hasNativeSupport, benchmark)
 *   });
 */
function cssVars() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var msgPrefix = "cssVars(): ";
  var settings = _extends({}, defaults, options);
  function handleError(message, sourceNode, xhr, url) {
    if (!settings.silent && window.console) {
      console.error("".concat(msgPrefix).concat(message, "\n"), sourceNode);
    }
    settings.onError(message, sourceNode, xhr, url);
  }
  function handleWarning(message) {
    if (!settings.silent && window.console) {
      console.warn("".concat(msgPrefix).concat(message));
    }
    settings.onWarning(message);
  }
  function handleFinally(hasChanged) {
    settings.onFinally(Boolean(hasChanged), isNativeSupport, getTimeStamp() - settings.__benchmark);
  }
  if (!isBrowser) {
    return;
  }
  if (settings.watch) {
    settings.watch = defaults.watch;
    addMutationObserver(settings);
    cssVars(settings);
    return;
  } else if (settings.watch === false && cssVarsObserver) {
    cssVarsObserver.disconnect();
    cssVarsObserver = null;
  }
  if (!settings.__benchmark) {
    if (cssVarsIsRunning === settings.rootElement) {
      cssVarsDebounced(options);
      return;
    }
    var srcNodes = [].slice.call(settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars="out"])'));
    settings.__benchmark = getTimeStamp();
    settings.exclude = [cssVarsObserver ? '[data-cssvars]:not([data-cssvars=""])' : '[data-cssvars="out"]', "link[disabled]:not([data-cssvars])", settings.exclude].filter(function(selector) {
      return selector;
    }).join(",");
    settings.variables = fixVarNames(settings.variables);
    srcNodes.forEach(function(srcNode) {
      var hasStyleCache = srcNode.nodeName.toLowerCase() === "style" && srcNode.__cssVars.text;
      var hasStyleChanged = hasStyleCache && srcNode.textContent !== srcNode.__cssVars.text;
      if (hasStyleCache && hasStyleChanged) {
        srcNode.sheet && (srcNode.sheet.disabled = false);
        srcNode.setAttribute("data-cssvars", "");
      }
    });
    if (!cssVarsObserver) {
      var outNodes = [].slice.call(settings.rootElement.querySelectorAll('[data-cssvars="out"]'));
      outNodes.forEach(function(outNode) {
        var dataGroup = outNode.getAttribute("data-cssvars-group");
        var srcNode = dataGroup ? settings.rootElement.querySelector('[data-cssvars="src"][data-cssvars-group="'.concat(dataGroup, '"]')) : null;
        if (!srcNode) {
          outNode.parentNode.removeChild(outNode);
        }
      });
      if (cssVarsSrcNodeCount && srcNodes.length < cssVarsSrcNodeCount) {
        cssVarsSrcNodeCount = srcNodes.length;
        variableStore.dom = {};
      }
    }
  }
  if (document.readyState !== "loading") {
    if (isNativeSupport && settings.onlyLegacy) {
      var hasVarChange = false;
      if (settings.updateDOM) {
        var targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);
        Object.keys(settings.variables).forEach(function(key) {
          var varValue = settings.variables[key];
          hasVarChange = hasVarChange || varValue !== getComputedStyle(targetElm).getPropertyValue(key);
          targetElm.style.setProperty(key, varValue);
        });
      }
      handleFinally(hasVarChange);
    } else if (!isShadowDOMReady && (settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host)) {
      getCssData({
        rootElement: defaults.rootElement,
        include: defaults.include,
        exclude: settings.exclude,
        skipDisabled: false,
        onSuccess: function onSuccess2(cssText, node, url) {
          var isUserDisabled = (node.sheet || {}).disabled && !node.__cssVars;
          if (isUserDisabled) {
            return false;
          }
          cssText = cssText.replace(regex.cssComments, "").replace(regex.cssMediaQueries, "");
          cssText = (cssText.match(regex.cssVarDeclRules) || []).join("");
          return cssText || false;
        },
        onComplete: function onComplete2(cssText, cssArray, nodeArray) {
          parseVars(cssText, {
            store: variableStore.dom,
            onWarning: handleWarning
          });
          isShadowDOMReady = true;
          cssVars(settings);
        }
      });
    } else {
      cssVarsIsRunning = settings.rootElement;
      getCssData({
        rootElement: settings.rootElement,
        include: settings.include,
        exclude: settings.exclude,
        skipDisabled: false,
        onBeforeSend: settings.onBeforeSend,
        onError: function onError2(xhr, node, url) {
          var responseUrl = xhr.responseURL || getFullUrl(url, location.href);
          var statusText = xhr.statusText ? "(".concat(xhr.statusText, ")") : "Unspecified Error" + (xhr.status === 0 ? " (possibly CORS related)" : "");
          var errorMsg = "CSS XHR Error: ".concat(responseUrl, " ").concat(xhr.status, " ").concat(statusText);
          handleError(errorMsg, node, xhr, responseUrl);
        },
        onSuccess: function onSuccess2(cssText, node, url) {
          var isUserDisabled = (node.sheet || {}).disabled && !node.__cssVars;
          if (isUserDisabled) {
            return false;
          }
          var isLink = node.nodeName.toLowerCase() === "link";
          var isStyleImport = node.nodeName.toLowerCase() === "style" && cssText !== node.textContent;
          var returnVal = settings.onSuccess(cssText, node, url);
          cssText = returnVal !== void 0 && Boolean(returnVal) === false ? "" : returnVal || cssText;
          if (settings.updateURLs && (isLink || isStyleImport)) {
            cssText = fixRelativeCssUrls(cssText, url);
          }
          return cssText;
        },
        onComplete: function onComplete2(cssText, cssArray) {
          var nodeArray = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var currentVars = _extends({}, variableStore.dom, variableStore.user);
          var hasVarChange2 = false;
          variableStore.job = {};
          nodeArray.forEach(function(node, i4) {
            var nodeCSS = cssArray[i4];
            node.__cssVars = node.__cssVars || {};
            node.__cssVars.text = nodeCSS;
            if (regex.cssVars.test(nodeCSS)) {
              try {
                var cssTree = parseCss(nodeCSS, {
                  preserveStatic: settings.preserveStatic,
                  removeComments: true
                });
                parseVars(cssTree, {
                  parseHost: Boolean(settings.rootElement.host),
                  store: variableStore.dom,
                  onWarning: handleWarning
                });
                node.__cssVars.tree = cssTree;
              } catch (err) {
                handleError(err.message, node);
              }
            }
          });
          _extends(variableStore.job, variableStore.dom);
          if (settings.updateDOM) {
            _extends(variableStore.user, settings.variables);
            _extends(variableStore.job, variableStore.user);
          } else {
            _extends(variableStore.job, variableStore.user, settings.variables);
            _extends(currentVars, settings.variables);
          }
          hasVarChange2 = counters.job > 0 && Boolean(Object.keys(variableStore.job).length > Object.keys(currentVars).length || Boolean(Object.keys(currentVars).length && Object.keys(variableStore.job).some(function(key) {
            return variableStore.job[key] !== currentVars[key];
          })));
          if (hasVarChange2) {
            resetCssNodes(settings.rootElement);
            cssVars(settings);
          } else {
            var outCssArray = [];
            var outNodeArray = [];
            var hasKeyframesWithVars = false;
            if (settings.updateDOM) {
              counters.job++;
            }
            nodeArray.forEach(function(node, i4) {
              var isSkip = !node.__cssVars.tree;
              if (node.__cssVars.tree) {
                try {
                  transformCss(node.__cssVars.tree, _extends({}, settings, {
                    variables: variableStore.job,
                    onWarning: handleWarning
                  }));
                  var outCss = stringifyCss(node.__cssVars.tree);
                  if (settings.updateDOM) {
                    var nodeCSS = cssArray[i4];
                    var hasCSSVarFunc = regex.cssVarFunc.test(nodeCSS);
                    if (!node.getAttribute("data-cssvars")) {
                      node.setAttribute("data-cssvars", "src");
                    }
                    if (outCss.length && hasCSSVarFunc) {
                      var dataGroup = node.getAttribute("data-cssvars-group") || ++counters.group;
                      var outCssNoSpaces = outCss.replace(/\s/g, "");
                      var outNode = settings.rootElement.querySelector('[data-cssvars="out"][data-cssvars-group="'.concat(dataGroup, '"]')) || document.createElement("style");
                      hasKeyframesWithVars = hasKeyframesWithVars || regex.cssKeyframes.test(outCss);
                      if (settings.preserveStatic) {
                        node.sheet && (node.sheet.disabled = true);
                      }
                      if (!outNode.hasAttribute("data-cssvars")) {
                        outNode.setAttribute("data-cssvars", "out");
                      }
                      if (outCssNoSpaces === node.textContent.replace(/\s/g, "")) {
                        isSkip = true;
                        if (outNode && outNode.parentNode) {
                          node.removeAttribute("data-cssvars-group");
                          outNode.parentNode.removeChild(outNode);
                        }
                      } else if (outCssNoSpaces !== outNode.textContent.replace(/\s/g, "")) {
                        [node, outNode].forEach(function(n2) {
                          n2.setAttribute("data-cssvars-job", counters.job);
                          n2.setAttribute("data-cssvars-group", dataGroup);
                        });
                        outNode.textContent = outCss;
                        outCssArray.push(outCss);
                        outNodeArray.push(outNode);
                        if (!outNode.parentNode) {
                          node.parentNode.insertBefore(outNode, node.nextSibling);
                        }
                      }
                    }
                  } else {
                    if (node.textContent.replace(/\s/g, "") !== outCss) {
                      outCssArray.push(outCss);
                    }
                  }
                } catch (err) {
                  handleError(err.message, node);
                }
              }
              if (isSkip) {
                node.setAttribute("data-cssvars", "skip");
              }
              if (!node.hasAttribute("data-cssvars-job")) {
                node.setAttribute("data-cssvars-job", counters.job);
              }
            });
            cssVarsSrcNodeCount = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars="out"])').length;
            if (settings.shadowDOM) {
              var elms = [].concat(settings.rootElement).concat([].slice.call(settings.rootElement.querySelectorAll("*")));
              for (var i3 = 0, elm; elm = elms[i3]; ++i3) {
                if (elm.shadowRoot && elm.shadowRoot.querySelector("style")) {
                  var shadowSettings = _extends({}, settings, {
                    rootElement: elm.shadowRoot
                  });
                  cssVars(shadowSettings);
                }
              }
            }
            if (settings.updateDOM && hasKeyframesWithVars) {
              fixKeyframes(settings.rootElement);
            }
            cssVarsIsRunning = false;
            settings.onComplete(outCssArray.join(""), outNodeArray, JSON.parse(JSON.stringify(variableStore.job)), getTimeStamp() - settings.__benchmark);
            handleFinally(outNodeArray.length);
          }
        }
      });
    }
  } else {
    document.addEventListener("DOMContentLoaded", function init(evt) {
      cssVars(options);
      document.removeEventListener("DOMContentLoaded", init);
    });
  }
}
cssVars.reset = function() {
  counters.job = 0;
  counters.group = 0;
  cssVarsIsRunning = false;
  if (cssVarsObserver) {
    cssVarsObserver.disconnect();
    cssVarsObserver = null;
  }
  cssVarsSrcNodeCount = 0;
  debounceTimer = null;
  isShadowDOMReady = false;
  for (var prop in variableStore) {
    variableStore[prop] = {};
  }
};
function addMutationObserver(settings) {
  function isDisabled(node) {
    var isDisabledAttr = isLink(node) && node.hasAttribute("disabled");
    var isDisabledSheet = (node.sheet || {}).disabled;
    return isDisabledAttr || isDisabledSheet;
  }
  function isLink(node) {
    var isStylesheet = node.nodeName.toLowerCase() === "link" && (node.getAttribute("rel") || "").indexOf("stylesheet") !== -1;
    return isStylesheet;
  }
  function isStyle(node) {
    return node.nodeName.toLowerCase() === "style";
  }
  function isValidAttributeMutation(mutation) {
    var isValid2 = false;
    if (mutation.type === "attributes" && isLink(mutation.target) && !isDisabled(mutation.target)) {
      var isEnabledMutation = mutation.attributeName === "disabled";
      var isHrefMutation = mutation.attributeName === "href";
      var isSkipNode = mutation.target.getAttribute("data-cssvars") === "skip";
      var isSrcNode = mutation.target.getAttribute("data-cssvars") === "src";
      if (isEnabledMutation) {
        isValid2 = !isSkipNode && !isSrcNode;
      } else if (isHrefMutation) {
        if (isSkipNode) {
          mutation.target.setAttribute("data-cssvars", "");
        } else if (isSrcNode) {
          resetCssNodes(settings.rootElement, true);
        }
        isValid2 = true;
      }
    }
    return isValid2;
  }
  function isValidStyleTextMutation(mutation) {
    var isValid2 = false;
    if (mutation.type === "childList") {
      var isStyleElm = isStyle(mutation.target);
      var isOutNode = mutation.target.getAttribute("data-cssvars") === "out";
      isValid2 = isStyleElm && !isOutNode;
    }
    return isValid2;
  }
  function isValidAddMutation(mutation) {
    var isValid2 = false;
    if (mutation.type === "childList") {
      isValid2 = [].slice.call(mutation.addedNodes).some(function(node) {
        var isElm = node.nodeType === 1;
        var hasAttr = isElm && node.hasAttribute("data-cssvars");
        var isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);
        var isValid3 = !hasAttr && (isLink(node) || isStyleWithVars);
        return isValid3 && !isDisabled(node);
      });
    }
    return isValid2;
  }
  function isValidRemoveMutation(mutation) {
    var isValid2 = false;
    if (mutation.type === "childList") {
      isValid2 = [].slice.call(mutation.removedNodes).some(function(node) {
        var isElm = node.nodeType === 1;
        var isOutNode = isElm && node.getAttribute("data-cssvars") === "out";
        var isSrcNode = isElm && node.getAttribute("data-cssvars") === "src";
        var isValid3 = isSrcNode;
        if (isSrcNode || isOutNode) {
          var dataGroup = node.getAttribute("data-cssvars-group");
          var orphanNode = settings.rootElement.querySelector('[data-cssvars-group="'.concat(dataGroup, '"]'));
          if (isSrcNode) {
            resetCssNodes(settings.rootElement, true);
          }
          if (orphanNode) {
            orphanNode.parentNode.removeChild(orphanNode);
          }
        }
        return isValid3;
      });
    }
    return isValid2;
  }
  if (!window.MutationObserver) {
    return;
  }
  if (cssVarsObserver) {
    cssVarsObserver.disconnect();
    cssVarsObserver = null;
  }
  cssVarsObserver = new MutationObserver(function(mutations) {
    var hasValidMutation = mutations.some(function(mutation) {
      return isValidAttributeMutation(mutation) || isValidStyleTextMutation(mutation) || isValidAddMutation(mutation) || isValidRemoveMutation(mutation);
    });
    if (hasValidMutation) {
      cssVars(settings);
    }
  });
  cssVarsObserver.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ["disabled", "href"],
    childList: true,
    subtree: true
  });
}
function cssVarsDebounced(settings) {
  var delay2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;
  clearTimeout(debounceTimer);
  debounceTimer = setTimeout(function() {
    settings.__benchmark = null;
    cssVars(settings);
  }, delay2);
}
function fixKeyframes(rootElement) {
  var animationNameProp = ["animation-name", "-moz-animation-name", "-webkit-animation-name"].filter(function(prop) {
    return getComputedStyle(document.body)[prop];
  })[0];
  if (animationNameProp) {
    var allNodes = [].slice.call(rootElement.querySelectorAll("*"));
    var keyframeNodes = [];
    var nameMarker = "__CSSVARSPONYFILL-KEYFRAMES__";
    for (var i3 = 0, len = allNodes.length; i3 < len; i3++) {
      var node = allNodes[i3];
      var animationName = getComputedStyle(node)[animationNameProp];
      if (animationName !== "none") {
        node.style[animationNameProp] += nameMarker;
        keyframeNodes.push(node);
      }
    }
    void document.body.offsetHeight;
    for (var _i2 = 0, _len = keyframeNodes.length; _i2 < _len; _i2++) {
      var nodeStyle = keyframeNodes[_i2].style;
      nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, "");
    }
  }
}
function fixRelativeCssUrls(cssText, baseUrl) {
  var cssUrls = cssText.replace(regex.cssComments, "").match(regex.cssUrls) || [];
  cssUrls.forEach(function(cssUrl) {
    var oldUrl = cssUrl.replace(regex.cssUrls, "$1");
    var newUrl = getFullUrl(oldUrl, baseUrl);
    cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));
  });
  return cssText;
}
function fixVarNames() {
  var varObj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var reLeadingHyphens = /^-{2}/;
  return Object.keys(varObj).reduce(function(obj, value) {
    var key = reLeadingHyphens.test(value) ? value : "--".concat(value.replace(/^-+/, ""));
    obj[key] = varObj[value];
    return obj;
  }, {});
}
function getFullUrl(url) {
  var base = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : location.href;
  var d4 = document.implementation.createHTMLDocument("");
  var b3 = d4.createElement("base");
  var a4 = d4.createElement("a");
  d4.head.appendChild(b3);
  d4.body.appendChild(a4);
  b3.href = base;
  a4.href = url;
  return a4.href;
}
function getTimeStamp() {
  return isBrowser && (window.performance || {}).now ? window.performance.now() : (/* @__PURE__ */ new Date()).getTime();
}
function resetCssNodes(rootElement) {
  var resetDOMVariableStore = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var resetNodes = [].slice.call(rootElement.querySelectorAll('[data-cssvars="skip"],[data-cssvars="src"]'));
  resetNodes.forEach(function(node) {
    return node.setAttribute("data-cssvars", "");
  });
  if (resetDOMVariableStore) {
    variableStore.dom = {};
  }
}
function useUnmount(callback, deps) {
  if (deps === void 0) {
    deps = [];
  }
  useLayoutEffect(function() {
    return function() {
      callback();
    };
  }, deps);
}
function useOnlineStatus(sdk, logger) {
  var _a2, _b2;
  var _c = useState(
    // window is undefined in SSR env
    typeof window !== "undefined" ? (_b2 = (_a2 = window === null || window === void 0 ? void 0 : window.navigator) === null || _a2 === void 0 ? void 0 : _a2.onLine) !== null && _b2 !== void 0 ? _b2 : true : true
  ), isOnline = _c[0], setIsOnline = _c[1];
  useEffect(function() {
    var uniqueHandlerId = uuidv4();
    try {
      logger.warning("sdk changed", uniqueHandlerId);
      var handler = new wi({
        onDisconnected: function() {
          setIsOnline(false);
          logger.warning("onDisconnected", { isOnline });
        },
        onReconnectStarted: function() {
          setIsOnline(false);
          logger.warning("onReconnectStarted", { isOnline });
        },
        onReconnectSucceeded: function() {
          setIsOnline(true);
          logger.warning("onReconnectSucceeded", { isOnline });
        },
        onReconnectFailed: function() {
          sdk.reconnect();
          logger.warning("onReconnectFailed");
        }
      });
      if (sdk === null || sdk === void 0 ? void 0 : sdk.addConnectionHandler) {
        sdk.addConnectionHandler(uniqueHandlerId, handler);
        logger.info("Added ConnectionHandler", uniqueHandlerId);
      }
    } catch (_a3) {
    }
    return function() {
      try {
        sdk.removeConnectionHandler(uniqueHandlerId);
        logger.info("Removed ConnectionHandler", uniqueHandlerId);
      } catch (_a3) {
      }
    };
  }, [sdk]);
  useEffect(function() {
    var tryReconnect = function() {
      try {
        logger.warning("Try reconnecting SDK");
        if (sdk.connectionState !== "OPEN") {
          sdk.reconnect();
        }
      } catch (_a3) {
      }
    };
    window.addEventListener("online", tryReconnect);
    return function() {
      window.removeEventListener("online", tryReconnect);
    };
  }, [sdk]);
  useEffect(function() {
    var body = document.querySelector("body");
    if (!isOnline && !(sdk === null || sdk === void 0 ? void 0 : sdk.isCacheEnabled)) {
      try {
        body === null || body === void 0 ? void 0 : body.classList.add("sendbird__offline");
        logger.info("Added class sendbird__offline to body");
      } catch (e3) {
      }
    } else {
      try {
        body === null || body === void 0 ? void 0 : body.classList.remove("sendbird__offline");
        logger.info("Removed class sendbird__offline from body");
      } catch (e3) {
      }
    }
  }, [isOnline, sdk === null || sdk === void 0 ? void 0 : sdk.isCacheEnabled]);
  return isOnline;
}
var TIMEOUT = 2e3;
function schedulerFactory(_a2) {
  var logger = _a2.logger, timeout = _a2.timeout, cb = _a2.cb;
  var queue = [];
  var interval = null;
  var push = function(channel) {
    var channelPresent = queue.find(function(c3) {
      return c3.url === channel.url;
    });
    if (!channelPresent) {
      queue.push(channel);
    } else {
      logger.info("Channel: Mark as read already in queue", { channel });
    }
    if (interval) {
      return;
    }
    var item = queue.shift();
    if (item) {
      cb(item);
    }
    interval = setInterval(function() {
      if (queue.length === 0 && interval) {
        clearInterval(interval);
        interval = null;
        return;
      }
      var item2 = queue.shift();
      if (item2) {
        cb(item2);
      }
    }, timeout || TIMEOUT);
  };
  var clear = function() {
    queue = [];
    if (interval) {
      clearInterval(interval);
      interval = null;
    }
  };
  return {
    push,
    clear,
    getQueue: function() {
      return queue;
    }
  };
}
function useMarkAsDeliveredScheduler(_a2, _b2) {
  var _this = this;
  var isConnected = _a2.isConnected;
  var logger = _b2.logger;
  var markAsDeliveredScheduler = useMemo(function() {
    return schedulerFactory({
      logger,
      cb: function(channel) {
        return __awaiter$5(_this, void 0, void 0, function() {
          var error_1;
          return __generator(this, function(_a3) {
            switch (_a3.label) {
              case 0:
                _a3.trys.push([0, 2, , 3]);
                return [4, channel.markAsDelivered()];
              case 1:
                _a3.sent();
                return [3, 3];
              case 2:
                error_1 = _a3.sent();
                logger === null || logger === void 0 ? void 0 : logger.warning("Channel: Mark as delivered failed", { channel, error: error_1 });
                return [3, 3];
              case 3:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    });
  }, []);
  useEffect(function() {
    if (!isConnected) {
      markAsDeliveredScheduler.clear();
    }
  }, [isConnected]);
  useUnmount(function() {
    markAsDeliveredScheduler.clear();
  });
  return markAsDeliveredScheduler;
}
function uikitConfigMapper(_a2) {
  var _b2, _c, _d, _e2, _f, _g2, _h, _j, _k, _l, _m, _o, _p, _q, _r2, _s2, _t2, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8;
  var legacyConfig = _a2.legacyConfig, _9 = _a2.uikitOptions, uikitOptions = _9 === void 0 ? {} : _9;
  var replyType = legacyConfig.replyType, isMentionEnabled = legacyConfig.isMentionEnabled, isReactionEnabled = legacyConfig.isReactionEnabled, disableUserProfile = legacyConfig.disableUserProfile, isVoiceMessageEnabled = legacyConfig.isVoiceMessageEnabled, isTypingIndicatorEnabledOnChannelList = legacyConfig.isTypingIndicatorEnabledOnChannelList, isMessageReceiptStatusEnabledOnChannelList = legacyConfig.isMessageReceiptStatusEnabledOnChannelList, showSearchIcon = legacyConfig.showSearchIcon;
  return {
    common: {
      enableUsingDefaultUserProfile: (_c = (_b2 = uikitOptions.common) === null || _b2 === void 0 ? void 0 : _b2.enableUsingDefaultUserProfile) !== null && _c !== void 0 ? _c : typeof disableUserProfile === "boolean" ? !disableUserProfile : void 0
    },
    groupChannel: {
      enableOgtag: (_d = uikitOptions.groupChannel) === null || _d === void 0 ? void 0 : _d.enableOgtag,
      enableMention: (_f = (_e2 = uikitOptions.groupChannel) === null || _e2 === void 0 ? void 0 : _e2.enableMention) !== null && _f !== void 0 ? _f : isMentionEnabled,
      enableReactions: (_h = (_g2 = uikitOptions.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.enableReactions) !== null && _h !== void 0 ? _h : isReactionEnabled,
      enableReactionsSupergroup: (_j = uikitOptions.groupChannel) === null || _j === void 0 ? void 0 : _j.enableReactionsSupergroup,
      enableTypingIndicator: (_k = uikitOptions.groupChannel) === null || _k === void 0 ? void 0 : _k.enableTypingIndicator,
      enableVoiceMessage: (_m = (_l = uikitOptions.groupChannel) === null || _l === void 0 ? void 0 : _l.enableVoiceMessage) !== null && _m !== void 0 ? _m : isVoiceMessageEnabled,
      replyType: (_p = (_o = uikitOptions.groupChannel) === null || _o === void 0 ? void 0 : _o.replyType) !== null && _p !== void 0 ? _p : replyType != null ? getCaseResolvedReplyType(replyType).lowerCase : void 0,
      threadReplySelectType: (_q = uikitOptions.groupChannel) === null || _q === void 0 ? void 0 : _q.threadReplySelectType,
      input: {
        enableDocument: (_s2 = (_r2 = uikitOptions.groupChannel) === null || _r2 === void 0 ? void 0 : _r2.input) === null || _s2 === void 0 ? void 0 : _s2.enableDocument
      },
      typingIndicatorTypes: (_t2 = uikitOptions.groupChannel) === null || _t2 === void 0 ? void 0 : _t2.typingIndicatorTypes,
      enableFeedback: (_u = uikitOptions.groupChannel) === null || _u === void 0 ? void 0 : _u.enableFeedback,
      enableSuggestedReplies: (_v = uikitOptions.groupChannel) === null || _v === void 0 ? void 0 : _v.enableSuggestedReplies,
      showSuggestedRepliesFor: (_w = uikitOptions.groupChannel) === null || _w === void 0 ? void 0 : _w.showSuggestedRepliesFor,
      suggestedRepliesDirection: (_x = uikitOptions.groupChannel) === null || _x === void 0 ? void 0 : _x.suggestedRepliesDirection,
      enableMarkdownForUserMessage: (_y = uikitOptions.groupChannel) === null || _y === void 0 ? void 0 : _y.enableMarkdownForUserMessage,
      enableFormTypeMessage: (_z = uikitOptions.groupChannel) === null || _z === void 0 ? void 0 : _z.enableFormTypeMessage
    },
    groupChannelList: {
      enableTypingIndicator: (_1 = (_0 = uikitOptions.groupChannelList) === null || _0 === void 0 ? void 0 : _0.enableTypingIndicator) !== null && _1 !== void 0 ? _1 : isTypingIndicatorEnabledOnChannelList,
      enableMessageReceiptStatus: (_3 = (_2 = uikitOptions.groupChannelList) === null || _2 === void 0 ? void 0 : _2.enableMessageReceiptStatus) !== null && _3 !== void 0 ? _3 : isMessageReceiptStatusEnabledOnChannelList
    },
    groupChannelSettings: {
      enableMessageSearch: (_5 = (_4 = uikitOptions.groupChannelSettings) === null || _4 === void 0 ? void 0 : _4.enableMessageSearch) !== null && _5 !== void 0 ? _5 : showSearchIcon
    },
    openChannel: {
      enableOgtag: (_6 = uikitOptions.openChannel) === null || _6 === void 0 ? void 0 : _6.enableOgtag,
      input: {
        enableDocument: (_8 = (_7 = uikitOptions.openChannel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.enableDocument
      }
    }
  };
}
var uikitConfigStorage = {
  getItem: function(key) {
    return __awaiter$5(this, void 0, void 0, function() {
      var _a2;
      return __generator(this, function(_b2) {
        return [2, (_a2 = localStorage.getItem(key)) !== null && _a2 !== void 0 ? _a2 : null];
      });
    });
  },
  setItem: function(key, value) {
    return __awaiter$5(this, void 0, void 0, function() {
      return __generator(this, function(_a2) {
        return [2, localStorage.setItem(key, value)];
      });
    });
  }
};
var VoiceMessageProvider = function(_a2) {
  var children = _a2.children;
  return React__default__default.createElement(
    VoicePlayerProvider,
    null,
    React__default__default.createElement(VoiceRecorderProvider, null, children)
  );
};
var LOG_LEVELS = {
  DEBUG: "debug",
  WARNING: "warning",
  ERROR: "error",
  INFO: "info",
  ALL: "all"
};
var colorLog = function(level) {
  switch (level) {
    case LOG_LEVELS.WARNING:
      return "color: Orange";
    case LOG_LEVELS.ERROR:
      return "color: Red";
    default:
      return "color: Gray";
  }
};
var printLog = function(_a2) {
  var level = _a2.level, title2 = _a2.title, _b2 = _a2.description, description = _b2 === void 0 ? "" : _b2, _c = _a2.payload, payload = _c === void 0 ? [] : _c;
  console.log.apply(console, __spreadArray(["%c SendbirdUIKit | ".concat(level, " | ").concat((/* @__PURE__ */ new Date()).toISOString(), " | ").concat(title2, " ").concat(description && "|"), colorLog(level), description], payload, false));
};
var getDefaultLogger = function() {
  return {
    info: noop$4,
    error: noop$4,
    warning: noop$4
  };
};
var LoggerFactory = function(lvl, customInterface) {
  var logInterface = printLog;
  var lvlArray = Array.isArray(lvl) ? lvl : [lvl];
  var applyLog = function(lgLvl) {
    return function(title2, description) {
      var payload = [];
      for (var _i2 = 2; _i2 < arguments.length; _i2++) {
        payload[_i2 - 2] = arguments[_i2];
      }
      return logInterface({
        level: lgLvl,
        title: title2,
        description,
        payload
      });
    };
  };
  return lvlArray.reduce(function(accumulator, currentLvl) {
    if (currentLvl === LOG_LEVELS.DEBUG || currentLvl === LOG_LEVELS.ALL) {
      return __assign(__assign({}, accumulator), { info: applyLog(LOG_LEVELS.INFO), error: applyLog(LOG_LEVELS.ERROR), warning: applyLog(LOG_LEVELS.WARNING) });
    }
    if (currentLvl === LOG_LEVELS.INFO) {
      return __assign(__assign({}, accumulator), { info: applyLog(LOG_LEVELS.INFO) });
    }
    if (currentLvl === LOG_LEVELS.ERROR) {
      return __assign(__assign({}, accumulator), { error: applyLog(LOG_LEVELS.ERROR) });
    }
    if (currentLvl === LOG_LEVELS.WARNING) {
      return __assign(__assign({}, accumulator), { warning: applyLog(LOG_LEVELS.WARNING) });
    }
    return __assign({}, accumulator);
  }, getDefaultLogger());
};
var DEFAULT_COLOR_SET = {
  "--sendbird-dark-primary-500": "#4d2aa6",
  "--sendbird-dark-primary-400": "#6440C4",
  "--sendbird-dark-primary-300": "#7B53EF",
  "--sendbird-dark-primary-200": "#9E8CF5",
  "--sendbird-dark-primary-100": "#E2DFFF",
  "--sendbird-dark-secondary-500": "#007A7A",
  "--sendbird-dark-secondary-400": "#189A8D",
  "--sendbird-dark-secondary-300": "#2EBA9F",
  "--sendbird-dark-secondary-200": "#6FD6BE",
  "--sendbird-dark-secondary-100": "#AEF2DC",
  "--sendbird-dark-information-100": "#b2d9ff",
  "--sendbird-dark-error-500": "#A30E2D",
  "--sendbird-dark-error-400": "#C11F41",
  "--sendbird-dark-error-300": "#E53157",
  "--sendbird-dark-error-200": "#FF6183",
  "--sendbird-dark-error-100": "#FFABBD",
  "--sendbird-dark-background-700": "#000000",
  "--sendbird-dark-background-600": "#161616",
  "--sendbird-dark-background-500": "#2C2C2C",
  "--sendbird-dark-background-400": "#393939",
  "--sendbird-dark-background-300": "#A8A8A8",
  "--sendbird-dark-background-200": "#D9D9D9",
  "--sendbird-dark-background-100": "#F0F0F0",
  "--sendbird-dark-background-50": "#FFFFFF",
  "--sendbird-dark-overlay": "rgba(0, 0, 0, 0.32)",
  "--sendbird-dark-onlight-01": "rgba(0, 0, 0, 0.88)",
  "--sendbird-dark-onlight-02": "rgba(0, 0, 0, 0.50)",
  "--sendbird-dark-onlight-03": "rgba(0, 0, 0, 0.38)",
  "--sendbird-dark-onlight-04": "rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-ondark-01": "rgba(255, 255, 255, 0.88)",
  "--sendbird-dark-ondark-02": "rgba(255, 255, 255, 0.50)",
  "--sendbird-dark-ondark-03": "rgba(255, 255, 255, 0.38)",
  "--sendbird-dark-ondark-04": "rgba(255, 255, 255, 0.12)",
  "--sendbird-dark-shadow-01": "0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-02": "0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-03": "0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-04": "0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-message-input": "0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)",
  "--sendbird-light-primary-500": "#4d2aa6",
  "--sendbird-light-primary-400": "#6440C4",
  "--sendbird-light-primary-300": "#7B53EF",
  "--sendbird-light-primary-200": "#9E8CF5",
  "--sendbird-light-primary-100": "#E2DFFF",
  "--sendbird-light-secondary-500": "#007A7A",
  "--sendbird-light-secondary-400": "#189A8D",
  "--sendbird-light-secondary-300": "#2EBA9F",
  "--sendbird-light-secondary-200": "#6FD6BE",
  "--sendbird-light-secondary-100": "#AEF2DC",
  "--sendbird-light-information-100": "#b2d9ff",
  "--sendbird-light-error-500": "#A30E2D",
  "--sendbird-light-error-400": "#C11F41",
  "--sendbird-light-error-300": "#E53157",
  "--sendbird-light-error-200": "#FF6183",
  "--sendbird-light-error-100": "#FFABBD",
  "--sendbird-light-background-700": "#000000",
  "--sendbird-light-background-600": "#161616",
  "--sendbird-light-background-500": "#2C2C2C",
  "--sendbird-light-background-400": "#393939",
  "--sendbird-light-background-300": "#A8A8A8",
  "--sendbird-light-background-200": "#D9D9D9",
  "--sendbird-light-background-100": "#F0F0F0",
  "--sendbird-light-background-50": " #FFFFFF",
  "--sendbird-light-overlay": "rgba(0, 0, 0, 0.32)",
  "--sendbird-light-onlight-01": "rgba(0, 0, 0, 0.88)",
  "--sendbird-light-onlight-02": "rgba(0, 0, 0, 0.50)",
  "--sendbird-light-onlight-03": "rgba(0, 0, 0, 0.38)",
  "--sendbird-light-onlight-04": "rgba(0, 0, 0, 0.12)",
  "--sendbird-light-ondark-01": "rgba(255, 255, 255, 0.88)",
  "--sendbird-light-ondark-02": "rgba(255, 255, 255, 0.50)",
  "--sendbird-light-ondark-03": "rgba(255, 255, 255, 0.38)",
  "--sendbird-light-ondark-04": "rgba(255, 255, 255, 0.12)",
  "--sendbird-light-shadow-01": "0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-02": "0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-03": "0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-04": "0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-message-input": "0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)"
};
var isEmpty$1 = function(obj) {
  if (obj === null || obj === void 0) {
    return true;
  }
  for (var prop in obj) {
    if (obj.hasOwnProperty(prop)) {
      return false;
    }
  }
  return JSON.stringify(obj) === JSON.stringify({});
};
var useTheme = function(overrides) {
  useLayoutEffect(function() {
    if (!isEmpty$1(overrides)) {
      var variables = __assign(__assign({}, DEFAULT_COLOR_SET), mapColorKeys(overrides));
      cssVars({ variables });
    }
  }, [overrides]);
};
var MESSAGE_TEMPLATES_FETCH_LIMIT = 20;
var getProcessedTemplate = function(parsedTemplate) {
  return {
    version: Number(parsedTemplate.ui_template.version),
    uiTemplate: JSON.stringify(parsedTemplate.ui_template.body.items),
    colorVariables: parsedTemplate.color_variables
  };
};
var getProcessedTemplatesMap = function(parsedTemplates) {
  var processedTemplates = {};
  parsedTemplates.forEach(function(template) {
    processedTemplates[template.key] = getProcessedTemplate(template);
  });
  return processedTemplates;
};
function useMessageTemplateUtils(_a2) {
  var _this = this;
  var _b2;
  var sdk = _a2.sdk, logger = _a2.logger, appInfoStore = _a2.appInfoStore, actions = _a2.actions;
  var messageTemplatesInfo = appInfoStore === null || appInfoStore === void 0 ? void 0 : appInfoStore.messageTemplatesInfo;
  var getCachedTemplate = useCallback(function(key) {
    var _a3, _b3;
    if (!messageTemplatesInfo)
      return null;
    var cachedTemplate = null;
    var cachedMessageTemplates = (_a3 = messageTemplatesInfo === null || messageTemplatesInfo === void 0 ? void 0 : messageTemplatesInfo.templatesMap) !== null && _a3 !== void 0 ? _a3 : null;
    if (cachedMessageTemplates) {
      cachedTemplate = (_b3 = cachedMessageTemplates[key]) !== null && _b3 !== void 0 ? _b3 : null;
    }
    return cachedTemplate;
  }, [appInfoStore === null || appInfoStore === void 0 ? void 0 : appInfoStore.messageTemplatesInfo]);
  var fetchAllMessageTemplates = function(readySdk) {
    return __awaiter$5(_this, void 0, void 0, function() {
      var hasMore, paginationToken, fetchedTemplates, res;
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            hasMore = true;
            paginationToken = null;
            fetchedTemplates = [];
            _a3.label = 1;
          case 1:
            if (!hasMore) return [3, 3];
            return [4, readySdk.message.getMessageTemplatesByToken(paginationToken, { limit: MESSAGE_TEMPLATES_FETCH_LIMIT })];
          case 2:
            res = _a3.sent();
            hasMore = res.hasMore;
            paginationToken = res.token;
            res.templates.forEach(function(messageTemplate) {
              fetchedTemplates.push(JSON.parse(messageTemplate.template));
            });
            return [3, 1];
          case 3:
            return [2, fetchedTemplates];
        }
      });
    });
  };
  var initializeMessageTemplatesInfo = function(readySdk) {
    return __awaiter$5(_this, void 0, void 0, function() {
      var sdkMessageTemplateToken, cachedMessageTemplatesToken, cachedMessageTemplates, parsedTemplates, newMessageTemplatesInfo, parsedTemplates, newMessageTemplatesInfo;
      var _a3;
      return __generator(this, function(_b3) {
        switch (_b3.label) {
          case 0:
            sdkMessageTemplateToken = (_a3 = readySdk.appInfo) === null || _a3 === void 0 ? void 0 : _a3.messageTemplateInfo.token;
            if (!sdkMessageTemplateToken) {
              localStorage.removeItem(CACHED_MESSAGE_TEMPLATES_TOKEN_KEY);
              localStorage.removeItem(CACHED_MESSAGE_TEMPLATES_KEY);
              return [
                2
                /*return*/
              ];
            }
            cachedMessageTemplatesToken = localStorage.getItem(CACHED_MESSAGE_TEMPLATES_TOKEN_KEY);
            cachedMessageTemplates = localStorage.getItem(CACHED_MESSAGE_TEMPLATES_KEY);
            if (!(!cachedMessageTemplatesToken || cachedMessageTemplatesToken !== sdkMessageTemplateToken)) return [3, 2];
            return [4, fetchAllMessageTemplates(readySdk)];
          case 1:
            parsedTemplates = _b3.sent();
            newMessageTemplatesInfo = {
              token: sdkMessageTemplateToken,
              templatesMap: getProcessedTemplatesMap(parsedTemplates)
            };
            actions.initMessageTemplateInfo({ payload: newMessageTemplatesInfo });
            localStorage.setItem(CACHED_MESSAGE_TEMPLATES_TOKEN_KEY, sdkMessageTemplateToken);
            localStorage.setItem(CACHED_MESSAGE_TEMPLATES_KEY, JSON.stringify(parsedTemplates));
            return [3, 3];
          case 2:
            if (cachedMessageTemplatesToken && cachedMessageTemplatesToken === sdkMessageTemplateToken && cachedMessageTemplates) {
              parsedTemplates = JSON.parse(cachedMessageTemplates);
              newMessageTemplatesInfo = {
                token: sdkMessageTemplateToken,
                templatesMap: getProcessedTemplatesMap(parsedTemplates)
              };
              actions.initMessageTemplateInfo({ payload: newMessageTemplatesInfo });
            }
            _b3.label = 3;
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var updateMessageTemplatesInfo = useCallback(function(templateKeys, messageId, requestedAt) {
    return __awaiter$5(_this, void 0, void 0, function() {
      var newParsedTemplates, hasMore, token, result, e_1, cachedMessageTemplates, parsedTemplates_1, existingKeys_1;
      var _a3;
      return __generator(this, function(_b3) {
        switch (_b3.label) {
          case 0:
            actions.upsertWaitingTemplateKeys({ keys: templateKeys, requestedAt });
            newParsedTemplates = [];
            _b3.label = 1;
          case 1:
            _b3.trys.push([1, 5, , 6]);
            hasMore = true;
            token = null;
            _b3.label = 2;
          case 2:
            if (!hasMore) return [3, 4];
            return [4, sdk.message.getMessageTemplatesByToken(token, {
              keys: templateKeys
            })];
          case 3:
            result = _b3.sent();
            result.templates.forEach(function(newTemplate) {
              newParsedTemplates.push(JSON.parse(newTemplate.template));
            });
            hasMore = result.hasMore;
            token = result.token;
            return [3, 2];
          case 4:
            return [3, 6];
          case 5:
            e_1 = _b3.sent();
            (_a3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "Sendbird | fetchProcessedMessageTemplates failed", e_1, templateKeys);
            return [3, 6];
          case 6:
            if (newParsedTemplates.length > 0) {
              cachedMessageTemplates = localStorage.getItem(CACHED_MESSAGE_TEMPLATES_KEY);
              if (cachedMessageTemplates) {
                parsedTemplates_1 = JSON.parse(cachedMessageTemplates);
                existingKeys_1 = parsedTemplates_1.map(function(parsedTemplate) {
                  return parsedTemplate.key;
                });
                newParsedTemplates.forEach(function(newParsedTemplate) {
                  if (!existingKeys_1.includes(newParsedTemplate.key)) {
                    parsedTemplates_1.push(newParsedTemplate);
                  }
                });
                localStorage.setItem(CACHED_MESSAGE_TEMPLATES_KEY, JSON.stringify(parsedTemplates_1));
              } else {
                localStorage.setItem(CACHED_MESSAGE_TEMPLATES_KEY, JSON.stringify([newParsedTemplates]));
              }
              actions.upsertMessageTemplates({
                payload: newParsedTemplates.map(function(newParsedTemplate) {
                  return {
                    key: newParsedTemplate.key,
                    template: getProcessedTemplate(newParsedTemplate)
                  };
                })
              });
            } else {
              actions.markErrorWaitingTemplateKeys({
                keys: templateKeys,
                messageId
              });
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [
    actions.upsertMessageTemplates,
    actions.upsertWaitingTemplateKeys,
    (_b2 = sdk === null || sdk === void 0 ? void 0 : sdk.message) === null || _b2 === void 0 ? void 0 : _b2.getMessageTemplatesByToken
  ]);
  return {
    getCachedTemplate,
    updateMessageTemplatesInfo,
    initializeMessageTemplatesInfo
  };
}
var useHTMLTextDirection = function(direction) {
  useEffect(function() {
    var targetElement = document.getElementById(VOICE_PLAYER_ROOT_ID);
    targetElement.parentElement.dir = direction;
  }, [direction]);
};
function useMarkAsReadScheduler(_a2, _b2) {
  var isConnected = _a2.isConnected;
  var logger = _b2.logger;
  var markAsReadScheduler = useMemo(function() {
    return schedulerFactory({
      logger,
      cb: function(channel) {
        try {
          channel.markAsRead();
        } catch (error) {
          logger.warning("Channel: Mark as delivered failed", { channel, error });
        }
      }
    });
  }, []);
  useEffect(function() {
    if (!isConnected) {
      markAsReadScheduler.clear();
    }
  }, [isConnected]);
  useUnmount(function() {
    markAsReadScheduler.clear();
  });
  return markAsReadScheduler;
}
var SendbirdContextManager = function(_a2) {
  var _b2;
  var appId = _a2.appId, userId = _a2.userId, accessToken = _a2.accessToken, customApiHost = _a2.customApiHost, customWebSocketHost = _a2.customWebSocketHost, configureSession = _a2.configureSession, _c = _a2.theme, theme = _c === void 0 ? "light" : _c, logger = _a2.logger, _d = _a2.config, config2 = _d === void 0 ? {} : _d, _e2 = _a2.nickname, nickname = _e2 === void 0 ? "" : _e2, colorSet = _a2.colorSet, _f = _a2.profileUrl, profileUrl = _f === void 0 ? "" : _f, voiceRecord = _a2.voiceRecord, userListQuery = _a2.userListQuery, _g2 = _a2.imageCompression, imageCompression = _g2 === void 0 ? {} : _g2, _h = _a2.allowProfileEdit, allowProfileEdit = _h === void 0 ? false : _h, _j = _a2.disableMarkAsDelivered, disableMarkAsDelivered = _j === void 0 ? false : _j, renderUserProfile = _a2.renderUserProfile, _onUserProfileMessage = _a2.onUserProfileMessage, _onStartDirectMessage = _a2.onStartDirectMessage, _k = _a2.isUserIdUsedForNickname, isUserIdUsedForNickname = _k === void 0 ? true : _k, sdkInitParams = _a2.sdkInitParams, customExtensionParams = _a2.customExtensionParams, _l = _a2.isMultipleFilesMessageEnabled, isMultipleFilesMessageEnabled = _l === void 0 ? false : _l, eventHandlers = _a2.eventHandlers, _m = _a2.htmlTextDirection, htmlTextDirection = _m === void 0 ? "ltr" : _m, _o = _a2.forceLeftToRightMessageLayout, forceLeftToRightMessageLayout = _o === void 0 ? false : _o;
  var onStartDirectMessage = _onStartDirectMessage !== null && _onStartDirectMessage !== void 0 ? _onStartDirectMessage : _onUserProfileMessage;
  var _p = config2.userMention, userMention = _p === void 0 ? {} : _p, _q = config2.isREMUnitEnabled, isREMUnitEnabled = _q === void 0 ? false : _q, customPubSub = config2.pubSub;
  var isMobile = useMediaQueryContext().isMobile;
  var pubSub = useState(customPubSub !== null && customPubSub !== void 0 ? customPubSub : pubSubFactory())[0];
  var _r2 = useSendbirdStore(), state = _r2.state, updateState = _r2.updateState;
  var actions = useSendbird().actions;
  var _s2 = state.stores, sdkStore = _s2.sdkStore, appInfoStore = _s2.appInfoStore;
  var _t2 = useUIKitConfig(), configs = _t2.configs, configsWithAppAttr = _t2.configsWithAppAttr, initDashboardConfigs = _t2.initDashboardConfigs;
  var sdkInitialized = sdkStore.initialized;
  var sdk = sdkStore === null || sdkStore === void 0 ? void 0 : sdkStore.sdk;
  var _u = (_b2 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) !== null && _b2 !== void 0 ? _b2 : {}, uploadSizeLimit = _u.uploadSizeLimit, multipleFilesMessageFileCountLimit = _u.multipleFilesMessageFileCountLimit;
  useTheme(colorSet);
  var _v = useMessageTemplateUtils({
    sdk,
    logger,
    appInfoStore,
    actions
  }), getCachedTemplate = _v.getCachedTemplate, updateMessageTemplatesInfo = _v.updateMessageTemplatesInfo, initializeMessageTemplatesInfo = _v.initializeMessageTemplatesInfo;
  useEffect(function() {
    actions.connect({
      appId,
      userId,
      accessToken,
      isUserIdUsedForNickname,
      isMobile,
      logger,
      nickname,
      profileUrl,
      configureSession,
      customApiHost,
      customWebSocketHost,
      sdkInitParams,
      customExtensionParams,
      initDashboardConfigs,
      eventHandlers,
      initializeMessageTemplatesInfo
    });
  }, [appId, userId]);
  useUnmount(function() {
    actions.disconnect({ logger });
  });
  var _w = useState(theme), currentTheme = _w[0], setCurrentTheme = _w[1];
  useEffect(function() {
    setCurrentTheme(theme);
  }, [theme]);
  useEffect(function() {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.remove("sendbird-experimental__rem__units");
    if (isREMUnitEnabled) {
      body === null || body === void 0 ? void 0 : body.classList.add("sendbird-experimental__rem__units");
    }
  }, [isREMUnitEnabled]);
  useEffect(function() {
    logger.info("Setup theme", "Theme: ".concat(currentTheme));
    try {
      var body = document.querySelector("body");
      body === null || body === void 0 ? void 0 : body.classList.remove("sendbird-theme--light");
      body === null || body === void 0 ? void 0 : body.classList.remove("sendbird-theme--dark");
      body === null || body === void 0 ? void 0 : body.classList.add("sendbird-theme--".concat(currentTheme || "light"));
      logger.info("Finish setup theme");
    } catch (e3) {
      logger.warning("Setup theme failed", "".concat(e3));
    }
    return function() {
      try {
        var body2 = document.querySelector("body");
        body2 === null || body2 === void 0 ? void 0 : body2.classList.remove("sendbird-theme--light");
        body2 === null || body2 === void 0 ? void 0 : body2.classList.remove("sendbird-theme--dark");
      } catch (_a3) {
      }
    };
  }, [currentTheme]);
  useHTMLTextDirection(htmlTextDirection);
  var isOnline = useOnlineStatus(sdkStore.sdk, logger);
  var markAsReadScheduler = useMarkAsReadScheduler({ isConnected: isOnline }, { logger });
  var markAsDeliveredScheduler = useMarkAsDeliveredScheduler({ isConnected: isOnline }, { logger });
  var uikitMultipleFilesMessageLimit = useMemo(function() {
    return Math.min(DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT, multipleFilesMessageFileCountLimit !== null && multipleFilesMessageFileCountLimit !== void 0 ? multipleFilesMessageFileCountLimit : Number.MAX_SAFE_INTEGER);
  }, [multipleFilesMessageFileCountLimit]);
  var emojiManager = useMemo(function() {
    return new EmojiManager({
      sdk,
      logger
    });
  }, [sdkStore.initialized]);
  var uikitConfigs = useMemo(function() {
    return {
      common: {
        enableUsingDefaultUserProfile: configs.common.enableUsingDefaultUserProfile
      },
      groupChannel: {
        enableOgtag: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableOgtag,
        enableTypingIndicator: configs.groupChannel.channel.enableTypingIndicator,
        enableReactions: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableReactions,
        enableMention: configs.groupChannel.channel.enableMention,
        replyType: configs.groupChannel.channel.replyType,
        threadReplySelectType: configs.groupChannel.channel.threadReplySelectType,
        enableVoiceMessage: configs.groupChannel.channel.enableVoiceMessage,
        enableDocument: configs.groupChannel.channel.input.enableDocument,
        typingIndicatorTypes: configs.groupChannel.channel.typingIndicatorTypes,
        enableFeedback: configs.groupChannel.channel.enableFeedback,
        enableSuggestedReplies: configs.groupChannel.channel.enableSuggestedReplies,
        showSuggestedRepliesFor: configs.groupChannel.channel.showSuggestedRepliesFor,
        suggestedRepliesDirection: configs.groupChannel.channel.suggestedRepliesDirection,
        enableMarkdownForUserMessage: configs.groupChannel.channel.enableMarkdownForUserMessage,
        enableFormTypeMessage: configs.groupChannel.channel.enableFormTypeMessage,
        enableReactionsSupergroup: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableReactionsSupergroup
      },
      groupChannelList: {
        enableTypingIndicator: configs.groupChannel.channelList.enableTypingIndicator,
        enableMessageReceiptStatus: configs.groupChannel.channelList.enableMessageReceiptStatus
      },
      groupChannelSettings: {
        enableMessageSearch: sdkInitialized && configsWithAppAttr(sdk).groupChannel.setting.enableMessageSearch
      },
      openChannel: {
        enableOgtag: sdkInitialized && configsWithAppAttr(sdk).openChannel.channel.enableOgtag,
        enableDocument: configs.openChannel.channel.input.enableDocument
      }
    };
  }, [
    sdkInitialized,
    configs.common,
    configs.groupChannel.channel,
    configs.groupChannel.channelList,
    configs.groupChannel.setting,
    configs.openChannel.channel
  ]);
  var storeState = useMemo(function() {
    return {
      stores: {
        sdkStore: state.stores.sdkStore,
        userStore: state.stores.userStore,
        appInfoStore: state.stores.appInfoStore
      }
    };
  }, [
    state.stores.sdkStore,
    state.stores.userStore,
    state.stores.appInfoStore
  ]);
  var uikitUploadSizeLimit = useMemo(function() {
    return uploadSizeLimit !== null && uploadSizeLimit !== void 0 ? uploadSizeLimit : DEFAULT_UPLOAD_SIZE_LIMIT;
  }, [uploadSizeLimit, DEFAULT_UPLOAD_SIZE_LIMIT]);
  var configImageCompression = useMemo(function() {
    return __assign({ compressionRate: 0.7, outputFormat: "preserve" }, imageCompression);
  }, [imageCompression]);
  var configVoiceRecord = useMemo(function() {
    var _a3, _b3;
    return {
      maxRecordingTime: (_a3 = voiceRecord === null || voiceRecord === void 0 ? void 0 : voiceRecord.maxRecordingTime) !== null && _a3 !== void 0 ? _a3 : VOICE_RECORDER_DEFAULT_MAX,
      minRecordingTime: (_b3 = voiceRecord === null || voiceRecord === void 0 ? void 0 : voiceRecord.minRecordingTime) !== null && _b3 !== void 0 ? _b3 : VOICE_RECORDER_DEFAULT_MIN
    };
  }, [
    voiceRecord === null || voiceRecord === void 0 ? void 0 : voiceRecord.maxRecordingTime,
    voiceRecord === null || voiceRecord === void 0 ? void 0 : voiceRecord.minRecordingTime
  ]);
  var configUserMention = useMemo(function() {
    return {
      maxMentionCount: (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount) || 10,
      maxSuggestionCount: (userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount) || 15
    };
  }, [
    userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount,
    userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount
  ]);
  var deprecatedConfigs = useMemo(function() {
    return {
      disableUserProfile: !configs.common.enableUsingDefaultUserProfile,
      isReactionEnabled: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableReactions,
      isMentionEnabled: configs.groupChannel.channel.enableMention,
      isVoiceMessageEnabled: configs.groupChannel.channel.enableVoiceMessage,
      replyType: getCaseResolvedReplyType(configs.groupChannel.channel.replyType).upperCase,
      isTypingIndicatorEnabledOnChannelList: configs.groupChannel.channelList.enableTypingIndicator,
      isMessageReceiptStatusEnabledOnChannelList: configs.groupChannel.channelList.enableMessageReceiptStatus,
      showSearchIcon: sdkInitialized && configsWithAppAttr(sdk).groupChannel.setting.enableMessageSearch
    };
  }, [
    sdkInitialized,
    configsWithAppAttr,
    configs.common.enableUsingDefaultUserProfile,
    configs.groupChannel.channel.enableReactions,
    configs.groupChannel.channel.enableMention,
    configs.groupChannel.channel.enableVoiceMessage,
    configs.groupChannel.channel.replyType,
    configs.groupChannel.channelList.enableTypingIndicator,
    configs.groupChannel.channelList.enableMessageReceiptStatus,
    configs.groupChannel.setting.enableMessageSearch
  ]);
  var configState = useMemo(function() {
    return {
      config: __assign(__assign({
        disableMarkAsDelivered,
        renderUserProfile,
        onStartDirectMessage,
        onUserProfileMessage: onStartDirectMessage,
        // legacy of onStartDirectMessage
        allowProfileEdit,
        isOnline,
        userId,
        appId,
        accessToken,
        theme: currentTheme,
        setCurrentTheme,
        setCurrenttheme: setCurrentTheme,
        // deprecated: typo
        isMultipleFilesMessageEnabled,
        uikitMultipleFilesMessageLimit,
        logger,
        pubSub,
        userListQuery,
        htmlTextDirection,
        forceLeftToRightMessageLayout,
        markAsReadScheduler,
        markAsDeliveredScheduler,
        uikitUploadSizeLimit,
        imageCompression: configImageCompression,
        voiceRecord: configVoiceRecord,
        userMention: configUserMention
      }, uikitConfigs), deprecatedConfigs)
    };
  }, [
    disableMarkAsDelivered,
    renderUserProfile,
    onStartDirectMessage,
    allowProfileEdit,
    isOnline,
    userId,
    appId,
    accessToken,
    currentTheme,
    setCurrentTheme,
    isMultipleFilesMessageEnabled,
    uikitMultipleFilesMessageLimit,
    logger,
    pubSub,
    userListQuery,
    htmlTextDirection,
    forceLeftToRightMessageLayout,
    markAsReadScheduler,
    markAsDeliveredScheduler,
    uikitUploadSizeLimit,
    configImageCompression,
    configVoiceRecord,
    configUserMention,
    uikitConfigs,
    deprecatedConfigs
  ]);
  var utilsState = useMemo(function() {
    return {
      utils: {
        updateMessageTemplatesInfo,
        getCachedTemplate
      }
    };
  }, [
    updateMessageTemplatesInfo,
    getCachedTemplate
  ]);
  useDeepCompareEffect(function() {
    updateState(__assign(__assign(__assign(__assign({}, storeState), utilsState), configState), { eventHandlers, emojiManager }));
  }, [
    storeState,
    configState,
    eventHandlers,
    emojiManager,
    utilsState
  ]);
  return null;
};
var InternalSendbirdProvider = function(props) {
  var _a2, _b2, _c, _d, _e2, _f, _g2, _h, _j;
  var children = props.children, stringSet2 = props.stringSet, breakpoint = props.breakpoint, dateLocale = props.dateLocale;
  var defaultProps = deleteNullish({
    config: {
      renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile,
      onStartDirectMessage: props === null || props === void 0 ? void 0 : props.onStartDirectMessage,
      allowProfileEdit: props === null || props === void 0 ? void 0 : props.allowProfileEdit,
      appId: props === null || props === void 0 ? void 0 : props.appId,
      userId: props === null || props === void 0 ? void 0 : props.userId,
      accessToken: props === null || props === void 0 ? void 0 : props.accessToken,
      theme: props === null || props === void 0 ? void 0 : props.theme,
      htmlTextDirection: props === null || props === void 0 ? void 0 : props.htmlTextDirection,
      forceLeftToRightMessageLayout: props === null || props === void 0 ? void 0 : props.forceLeftToRightMessageLayout,
      pubSub: (_a2 = props === null || props === void 0 ? void 0 : props.config) === null || _a2 === void 0 ? void 0 : _a2.pubSub,
      logger: props === null || props === void 0 ? void 0 : props.logger,
      userListQuery: props === null || props === void 0 ? void 0 : props.userListQuery,
      voiceRecord: {
        maxRecordingTime: (_c = (_b2 = props === null || props === void 0 ? void 0 : props.voiceRecord) === null || _b2 === void 0 ? void 0 : _b2.maxRecordingTime) !== null && _c !== void 0 ? _c : VOICE_RECORDER_DEFAULT_MAX,
        minRecordingTime: (_e2 = (_d = props === null || props === void 0 ? void 0 : props.voiceRecord) === null || _d === void 0 ? void 0 : _d.minRecordingTime) !== null && _e2 !== void 0 ? _e2 : VOICE_RECORDER_DEFAULT_MIN
      },
      userMention: {
        maxMentionCount: ((_g2 = (_f = props === null || props === void 0 ? void 0 : props.config) === null || _f === void 0 ? void 0 : _f.userMention) === null || _g2 === void 0 ? void 0 : _g2.maxMentionCount) || 10,
        maxSuggestionCount: ((_j = (_h = props === null || props === void 0 ? void 0 : props.config) === null || _h === void 0 ? void 0 : _h.userMention) === null || _j === void 0 ? void 0 : _j.maxSuggestionCount) || 15
      },
      imageCompression: __assign({ compressionRate: 0.7, outputFormat: "preserve" }, props === null || props === void 0 ? void 0 : props.imageCompression),
      disableMarkAsDelivered: props === null || props === void 0 ? void 0 : props.disableMarkAsDelivered,
      isMultipleFilesMessageEnabled: props === null || props === void 0 ? void 0 : props.isMultipleFilesMessageEnabled
    },
    eventHandlers: props === null || props === void 0 ? void 0 : props.eventHandlers
  });
  var storeRef = useRef(createSendbirdContextStore(defaultProps));
  var localeStringSet = useMemo(function() {
    return __assign(__assign({}, getStringSet("en")), stringSet2);
  }, [stringSet2]);
  return React__default__default.createElement(
    SendbirdContext.Provider,
    { value: storeRef.current },
    React__default__default.createElement(
      MediaQueryProvider,
      { logger: storeRef.current.getState().config.logger, breakpoint },
      React__default__default.createElement(
        LocalizationProvider,
        { stringSet: localeStringSet, dateLocale },
        React__default__default.createElement(
          VoiceMessageProvider,
          null,
          React__default__default.createElement(GlobalModalProvider, null, children)
        )
      )
    ),
    React__default__default.createElement(EmojiReactionListRoot, null),
    React__default__default.createElement(ModalRoot, null),
    React__default__default.createElement(MenuRoot, null)
  );
};
var SendbirdContextProvider = function(props) {
  var children = props.children, config2 = props.config;
  var logLevel = config2 === null || config2 === void 0 ? void 0 : config2.logLevel;
  var _a2 = useState(LoggerFactory(logLevel)), logger = _a2[0], setLogger = _a2[1];
  useEffect(function() {
    setLogger(LoggerFactory(logLevel));
  }, [logLevel]);
  return React__default__default.createElement(
    InternalSendbirdProvider,
    __assign({}, props, { logger }),
    React__default__default.createElement(SendbirdContextManager, __assign({}, props, { logger })),
    children
  );
};
var SendbirdProvider = function(props) {
  var localConfigs = uikitConfigMapper({
    legacyConfig: {
      replyType: props.replyType,
      isMentionEnabled: props.isMentionEnabled,
      isReactionEnabled: props.isReactionEnabled,
      disableUserProfile: props.disableUserProfile,
      isVoiceMessageEnabled: props.isVoiceMessageEnabled,
      isTypingIndicatorEnabledOnChannelList: props.isTypingIndicatorEnabledOnChannelList,
      isMessageReceiptStatusEnabledOnChannelList: props.isMessageReceiptStatusEnabledOnChannelList,
      showSearchIcon: props.showSearchIcon
    },
    uikitOptions: props.uikitOptions
  });
  return React__default__default.createElement(
    UIKitConfigProvider,
    { storage: uikitConfigStorage, localConfigs: {
      common: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.common,
      groupChannel: {
        channel: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.groupChannel,
        channelList: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.groupChannelList,
        setting: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.groupChannelSettings
      },
      openChannel: {
        channel: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.openChannel
      }
    } },
    React__default__default.createElement(SendbirdContextProvider, __assign({}, props))
  );
};
const SendIcon = ({ width = 26, height = 26, color = "#B4B4BE" }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width,
      height,
      viewBox: "0 0 26 26",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_8040_135368)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            d: "M21.2959 14.7941L10.5021 19.3473C8.93209 20.0137 7.47499 18.1856 8.47599 16.8019L10.7639 13.6316C10.7852 13.6316 10.7958 13.6315 10.817 13.6316L14.3625 13.637C14.7765 13.6377 15.1104 13.3038 15.1097 12.8899C15.1144 12.4706 14.7795 12.1357 14.3602 12.1403L10.8201 12.1295C10.7989 12.1295 10.7776 12.1294 10.7617 12.1347L8.34155 8.79261C7.34693 7.41643 8.76665 5.60346 10.344 6.23748L21.2524 10.6381C23.1165 11.3894 23.1471 14.0168 21.2959 14.7941Z",
            fill: color
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_8040_135368", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "rect",
          {
            width: "18",
            height: "18",
            fill: "white",
            transform: "translate(13) rotate(45)"
          }
        ) }) })
      ]
    }
  );
};
var useGroupChannelList = function() {
  var store = useContext(GroupChannelListContext);
  if (!store)
    throw new Error("useGroupChannelList must be used within a GroupChannelListProvider");
  var setGroupChannels = useCallback(function(channels) {
    store.setState(function(state2) {
      return __assign(__assign({}, state2), { groupChannels: channels });
    }, true);
  }, []);
  var state = shimExports.useSyncExternalStore(store.subscribe, store.getState);
  var actions = useMemo(function() {
    return {
      setGroupChannels
    };
  }, [setGroupChannels]);
  return { state, actions };
};
var GroupChannelListContext = React__default__default.createContext(null);
var initialState$1 = {
  className: "",
  selectedChannelUrl: "",
  disableAutoSelect: false,
  allowProfileEdit: false,
  isTypingIndicatorEnabled: false,
  isMessageReceiptStatusEnabled: false,
  onChannelSelect: function() {
  },
  onChannelCreated: function() {
  },
  onThemeChange: noop$4,
  onCreateChannelClick: noop$4,
  onBeforeCreateChannel: null,
  onUserProfileUpdated: noop$4,
  typingChannelUrls: [],
  refreshing: false,
  initialized: false,
  groupChannels: [],
  refresh: null,
  loadMore: null,
  scrollRef: { current: null }
};
var useGroupChannelListStore = function() {
  return useStore(GroupChannelListContext, function(state) {
    return state;
  }, initialState$1);
};
var GroupChannelListManager = function(_a2) {
  var _b2, _c, _d, _e2, _f, _g2;
  var _h = _a2.className, className = _h === void 0 ? "" : _h, _j = _a2.selectedChannelUrl, selectedChannelUrl = _j === void 0 ? "" : _j, _k = _a2.disableAutoSelect, disableAutoSelect = _k === void 0 ? false : _k, channelListQueryParams = _a2.channelListQueryParams, onThemeChange = _a2.onThemeChange, onChannelSelect = _a2.onChannelSelect, onChannelCreated = _a2.onChannelCreated, onCreateChannelClick = _a2.onCreateChannelClick, onBeforeCreateChannel = _a2.onBeforeCreateChannel, onUserProfileUpdated = _a2.onUserProfileUpdated, props = __rest$8(_a2, ["className", "selectedChannelUrl", "disableAutoSelect", "channelListQueryParams", "onThemeChange", "onChannelSelect", "onChannelCreated", "onCreateChannelClick", "onBeforeCreateChannel", "onUserProfileUpdated"]);
  var sendbirdState = useSendbird().state;
  var config2 = sendbirdState.config, stores2 = sendbirdState.stores;
  var _l = useGroupChannelList(), state = _l.state, actions = _l.actions;
  var updateState = useGroupChannelListStore().updateState;
  var sdkStore = stores2.sdkStore;
  var sdk = sdkStore.sdk;
  var isConnected = useOnlineStatus(sdk, config2.logger);
  var scheduler = useMarkAsDeliveredScheduler({ isConnected }, config2);
  var scrollRef = useRef(null);
  var channelListDataSource = useGroupChannelList$1(sdk, {
    collectionCreator: getCollectionCreator(sdk, channelListQueryParams),
    markAsDelivered: function(channels) {
      return channels.forEach(scheduler.push);
    },
    onChannelsDeleted: function(channelUrls) {
      channelUrls.forEach(function(url) {
        if (url === selectedChannelUrl)
          onChannelSelect(null);
      });
    },
    onChannelsUpdated: function() {
      actions.setGroupChannels(groupChannels);
    }
  });
  var refreshing = channelListDataSource.refreshing, initialized = channelListDataSource.initialized, groupChannels = channelListDataSource.groupChannels, refresh = channelListDataSource.refresh, loadMore = channelListDataSource.loadMore;
  useEffect(function() {
    var _a3;
    if (!disableAutoSelect && stores2.sdkStore.initialized && initialized) {
      if (!selectedChannelUrl)
        onChannelSelect((_a3 = groupChannels[0]) !== null && _a3 !== void 0 ? _a3 : null);
    }
  }, [disableAutoSelect, stores2.sdkStore.initialized, initialized, selectedChannelUrl]);
  useEffect(function() {
    refresh === null || refresh === void 0 ? void 0 : refresh();
  }, [
    Object.keys(channelListQueryParams !== null && channelListQueryParams !== void 0 ? channelListQueryParams : {}).sort().map(function(key) {
      return "".concat(key, "=").concat(encodeURIComponent(JSON.stringify(channelListQueryParams[key])));
    }).join("&")
  ]);
  var typingChannelUrls = state.typingChannelUrls;
  useGroupChannelHandler(sdk, {
    onTypingStatusUpdated: function(channel) {
      var _a3;
      var channelList = typingChannelUrls.filter(function(channelUrl) {
        return channelUrl !== channel.url;
      });
      if (((_a3 = channel.getTypingUsers()) === null || _a3 === void 0 ? void 0 : _a3.length) > 0) {
        updateState({
          typingChannelUrls: channelList.concat(channel.url)
        });
      } else {
        updateState({
          typingChannelUrls: channelList
        });
      }
    }
  });
  var allowProfileEdit = (_c = (_b2 = props.allowProfileEdit) !== null && _b2 !== void 0 ? _b2 : config2.allowProfileEdit) !== null && _c !== void 0 ? _c : true;
  var isTypingIndicatorEnabled = (_e2 = (_d = props.isTypingIndicatorEnabled) !== null && _d !== void 0 ? _d : config2.groupChannelList.enableTypingIndicator) !== null && _e2 !== void 0 ? _e2 : false;
  var isMessageReceiptStatusEnabled = (_g2 = (_f = props.isMessageReceiptStatusEnabled) !== null && _f !== void 0 ? _f : config2.groupChannelList.enableMessageReceiptStatus) !== null && _g2 !== void 0 ? _g2 : false;
  var eventHandlers = useMemo(function() {
    return {
      onChannelSelect,
      onChannelCreated,
      onThemeChange,
      onCreateChannelClick,
      onBeforeCreateChannel,
      onUserProfileUpdated
    };
  }, [
    onChannelSelect,
    onChannelCreated,
    onThemeChange,
    onCreateChannelClick,
    onBeforeCreateChannel,
    onUserProfileUpdated
  ]);
  var configurations = useMemo(function() {
    return {
      className,
      selectedChannelUrl,
      disableAutoSelect,
      allowProfileEdit,
      isTypingIndicatorEnabled,
      isMessageReceiptStatusEnabled,
      typingChannelUrls,
      refreshing,
      initialized,
      refresh,
      loadMore
    };
  }, [
    className,
    selectedChannelUrl,
    disableAutoSelect,
    allowProfileEdit,
    isTypingIndicatorEnabled,
    isMessageReceiptStatusEnabled,
    typingChannelUrls,
    refreshing,
    initialized,
    scrollRef
  ]);
  useDeepCompareEffect(function() {
    updateState(__assign(__assign(__assign({}, eventHandlers), configurations), { groupChannels }));
  }, [
    configurations,
    eventHandlers,
    groupChannels.map(function(groupChannel) {
      return groupChannel.serialize();
    })
  ]);
  return null;
};
var createGroupChannelListStore = function(props) {
  return createStore(__assign(__assign({}, initialState$1), props));
};
var InternalGroupChannelListProvider = function(props) {
  var children = props.children;
  var defaultProps = deleteNullish({
    onChannelSelect: props === null || props === void 0 ? void 0 : props.onChannelSelect,
    onChannelCreated: props === null || props === void 0 ? void 0 : props.onChannelCreated,
    className: props === null || props === void 0 ? void 0 : props.className,
    selectedChannelUrl: props === null || props === void 0 ? void 0 : props.selectedChannelUrl,
    allowProfileEdit: props === null || props === void 0 ? void 0 : props.allowProfileEdit,
    disableAutoSelect: props === null || props === void 0 ? void 0 : props.disableAutoSelect,
    isTypingIndicatorEnabled: props === null || props === void 0 ? void 0 : props.isTypingIndicatorEnabled,
    isMessageReceiptStatusEnabled: props === null || props === void 0 ? void 0 : props.isMessageReceiptStatusEnabled,
    channelListQueryParams: props === null || props === void 0 ? void 0 : props.channelListQueryParams,
    onThemeChange: props === null || props === void 0 ? void 0 : props.onThemeChange,
    onCreateChannelClick: props === null || props === void 0 ? void 0 : props.onCreateChannelClick,
    onBeforeCreateChannel: props === null || props === void 0 ? void 0 : props.onBeforeCreateChannel,
    onUserProfileUpdated: props === null || props === void 0 ? void 0 : props.onUserProfileUpdated
  });
  var storeRef = useRef(createGroupChannelListStore(defaultProps));
  return React__default__default.createElement(GroupChannelListContext.Provider, { value: storeRef.current }, children);
};
var GroupChannelListProvider = function(props) {
  var children = props.children, className = props.className;
  return React__default__default.createElement(
    InternalGroupChannelListProvider,
    __assign({}, props),
    React__default__default.createElement(GroupChannelListManager, __assign({}, props)),
    React__default__default.createElement(
      UserProfileProvider,
      __assign({}, props),
      React__default__default.createElement("div", { className: "sendbird-channel-list ".concat(className) }, children)
    )
  );
};
function getCollectionCreator(sdk, channelListQueryParams) {
  return function(defaultParams) {
    var params = __assign(__assign({}, defaultParams), channelListQueryParams);
    return sdk.groupChannel.createGroupChannelCollection(__assign(__assign({}, params), { filter: new hn$1(params) }));
  };
}
var GroupChannelListHeader = function(_a2) {
  var renderTitle = _a2.renderTitle, renderIconButton = _a2.renderIconButton, onEdit = _a2.onEdit, allowProfileEdit = _a2.allowProfileEdit, renderLeft = _a2.renderLeft, renderMiddle = _a2.renderMiddle, renderRight = _a2.renderRight;
  var user = useSendbird().state.stores.userStore.user;
  var stringSet2 = useLocalization().stringSet;
  var renderProfile = renderMiddle !== null && renderMiddle !== void 0 ? renderMiddle : renderTitle;
  return React__default__default.createElement(Header$1, { className: classnames("sendbird-channel-header", allowProfileEdit && "sendbird-channel-header--allow-edit"), renderLeft, renderMiddle: function() {
    var _a3;
    return (_a3 = renderProfile === null || renderProfile === void 0 ? void 0 : renderProfile()) !== null && _a3 !== void 0 ? _a3 : React__default__default.createElement(
      "div",
      { className: "sendbird-channel-header__title", role: "button", onClick: function() {
        onEdit === null || onEdit === void 0 ? void 0 : onEdit();
      }, onKeyDown: function() {
        onEdit === null || onEdit === void 0 ? void 0 : onEdit();
      }, tabIndex: 0 },
      React__default__default.createElement(
        "div",
        { className: "sendbird-channel-header__title__left" },
        React__default__default.createElement(Avatar$1, { width: "32px", height: "32px", src: user.profileUrl, alt: user.nickname })
      ),
      React__default__default.createElement(
        "div",
        { className: "sendbird-channel-header__title__right" },
        React__default__default.createElement(Label, { className: "sendbird-channel-header__title__right__name", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, user.nickname || stringSet2.NO_NAME),
        React__default__default.createElement(Label, { className: "sendbird-channel-header__title__right__user-id", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_2 }, user.userId)
      )
    );
  }, renderRight: renderRight !== null && renderRight !== void 0 ? renderRight : renderIconButton });
};
var EditUserProfileProviderContext = React__default__default.createContext(null);
var EditUserProfileProvider = function(_a2) {
  var children = _a2.children, props = __rest$8(_a2, ["children"]);
  return React__default__default.createElement(EditUserProfileProviderContext.Provider, { value: props }, children);
};
var useEditUserProfileContext = function() {
  var context = React__default__default.useContext(EditUserProfileProviderContext);
  if (!context)
    throw new Error("EditUserProfileContext not found. Use within the EditUserProfile module.");
  return context;
};
var EditUserProfileUIView = function(_a2) {
  var _b2;
  var formRef = _a2.formRef, inputRef = _a2.inputRef, onThemeChange = _a2.onThemeChange, setProfileImage = _a2.setProfileImage;
  var state = useSendbird().state;
  var stores2 = state.stores, config2 = state.config;
  var theme = config2.theme, setCurrentTheme = config2.setCurrentTheme;
  var user = (_b2 = stores2.userStore) === null || _b2 === void 0 ? void 0 : _b2.user;
  var stringSet2 = useLocalization().stringSet;
  var _c = useState(null), currentImg = _c[0], setCurrentImg = _c[1];
  var hiddenInputRef = useRef(null);
  return React__default__default.createElement(
    "form",
    { className: "sendbird-edit-user-profile", ref: formRef, onSubmit: function(e3) {
      e3.preventDefault();
    } },
    React__default__default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__img" },
      React__default__default.createElement(InputLabel, null, stringSet2.EDIT_PROFILE__IMAGE_LABEL),
      React__default__default.createElement(
        "div",
        { className: "sendbird-edit-user-profile__img__avatar" },
        React__default__default.createElement(Avatar$1, { width: "80px", height: "80px", src: currentImg || (user === null || user === void 0 ? void 0 : user.profileUrl) })
      ),
      React__default__default.createElement("input", { ref: hiddenInputRef, type: "file", accept: "image/gif, image/jpeg, image/png", style: { display: "none" }, onChange: function(e3) {
        if (e3.target.files) {
          setCurrentImg(URL.createObjectURL(e3.target.files[0]));
          setProfileImage(e3.target.files[0]);
        }
        if (hiddenInputRef.current) {
          hiddenInputRef.current.value = "";
        }
      } }),
      React__default__default.createElement(
        TextButton,
        { className: "sendbird-edit-user-profile__img__avatar-button", disableUnderline: true, onClick: function() {
          var _a3;
          return (_a3 = hiddenInputRef.current) === null || _a3 === void 0 ? void 0 : _a3.click();
        } },
        React__default__default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.EDIT_PROFILE__IMAGE_UPLOAD)
      )
    ),
    React__default__default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__name" },
      React__default__default.createElement(InputLabel, null, stringSet2.EDIT_PROFILE__NICKNAME_LABEL),
      React__default__default.createElement(Input, { required: (user === null || user === void 0 ? void 0 : user.nickname) !== "", name: "sendbird-edit-user-profile__name__input", ref: inputRef, value: user === null || user === void 0 ? void 0 : user.nickname, placeHolder: stringSet2.EDIT_PROFILE__NICKNAME_PLACEHOLDER })
    ),
    React__default__default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__userid" },
      React__default__default.createElement(InputLabel, null, stringSet2.EDIT_PROFILE__USERID_LABEL),
      React__default__default.createElement(Input, { disabled: true, name: "sendbird-edit-user-profile__userid__input", value: user === null || user === void 0 ? void 0 : user.userId })
    ),
    React__default__default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__theme" },
      React__default__default.createElement(InputLabel, null, stringSet2.EDIT_PROFILE__THEME_LABEL),
      React__default__default.createElement("div", { className: "sendbird-edit-user-profile__theme__theme-icon" }, theme === "dark" ? React__default__default.createElement(Icon$1, { onClick: function() {
        setCurrentTheme("light");
        onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange("light");
      }, type: IconTypes.TOGGLE_ON, width: 44, height: 24 }) : React__default__default.createElement(Icon$1, { onClick: function() {
        setCurrentTheme("dark");
        onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange("dark");
      }, type: IconTypes.TOGGLE_OFF, width: 44, height: 24 }))
    )
  );
};
var handleUpdateUserInfo = function(_a2) {
  var _b2, _c, _d;
  var globalContext = _a2.globalContext, formRef = _a2.formRef, inputRef = _a2.inputRef, profileImage = _a2.profileImage, onEditProfile = _a2.onEditProfile, updateUserInfo = _a2.updateUserInfo;
  var stores2 = globalContext.stores;
  var sdk = stores2.sdkStore.sdk;
  var user = stores2.userStore.user;
  if ((user === null || user === void 0 ? void 0 : user.nickname) !== "" && !inputRef.current.value) {
    (_c = (_b2 = formRef.current).reportValidity) === null || _c === void 0 ? void 0 : _c.call(_b2);
    return;
  }
  sdk === null || sdk === void 0 ? void 0 : sdk.updateCurrentUserInfo({
    nickname: (_d = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current) === null || _d === void 0 ? void 0 : _d.value,
    profileImage: profileImage !== null && profileImage !== void 0 ? profileImage : void 0
  }).then(function(updatedUser) {
    updateUserInfo(updatedUser);
    onEditProfile === null || onEditProfile === void 0 ? void 0 : onEditProfile(updatedUser);
  });
};
var useEditUserProfileUISates = function(_a2) {
  var onEditProfile = _a2.onEditProfile;
  var _b2 = useSendbird(), state = _b2.state, actions = _b2.actions;
  var inputRef = useRef(null);
  var formRef = useRef(null);
  var _c = useState(null), profileImage = _c[0], setProfileImage = _c[1];
  var updateUserInfo = function() {
    handleUpdateUserInfo({
      globalContext: state,
      formRef,
      inputRef,
      profileImage,
      onEditProfile,
      updateUserInfo: actions.updateUserInfo
    });
  };
  return {
    formRef,
    inputRef,
    updateUserInfo,
    profileImage,
    setProfileImage
  };
};
var EditUserProfileUI = function() {
  var editProfileContext = useEditUserProfileContext();
  var onEditProfile = editProfileContext.onEditProfile, onCancel = editProfileContext.onCancel, onThemeChange = editProfileContext.onThemeChange;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var _a2 = useEditUserProfileUISates({ onEditProfile }), formRef = _a2.formRef, inputRef = _a2.inputRef, updateUserInfo = _a2.updateUserInfo, setProfileImage = _a2.setProfileImage;
  return React__default__default.createElement(
    Modal,
    { titleText: stringSet2.EDIT_PROFILE__TITLE, submitText: stringSet2.BUTTON__SAVE, type: ButtonTypes.PRIMARY, onCancel, isFullScreenOnMobile: true, onSubmit: updateUserInfo },
    React__default__default.createElement(EditUserProfileUIView, { formRef, inputRef, setProfileImage, onThemeChange })
  );
};
var EditUserProfile = function(props) {
  var onEditProfile = props.onEditProfile, onCancel = props.onCancel, onThemeChange = props.onThemeChange;
  return React__default__default.createElement(
    EditUserProfileProvider,
    { onEditProfile, onCancel, onThemeChange },
    React__default__default.createElement(EditUserProfileUI, null)
  );
};
function useThrottleCallback(callback, delay2, options) {
  if (options === void 0) {
    options = {
      leading: true,
      trailing: false
    };
  }
  var timer = useRef(null);
  var trailingArgs = useRef(null);
  useEffect(function() {
    return function() {
      if (timer.current)
        clearTimeout(timer.current);
    };
  }, []);
  return usePreservedCallback$1(function() {
    var args = [];
    for (var _i2 = 0; _i2 < arguments.length; _i2++) {
      args[_i2] = arguments[_i2];
    }
    if (timer.current) {
      trailingArgs.current = args;
      return;
    }
    if (options.leading) {
      callback.apply(void 0, args);
    } else {
      trailingArgs.current = args;
    }
    var invoke = function() {
      if (options.trailing && trailingArgs.current) {
        callback.apply(void 0, trailingArgs.current);
        trailingArgs.current = null;
        timer.current = setTimeout(invoke, delay2);
      } else {
        timer.current = null;
      }
    };
    timer.current = setTimeout(invoke, delay2);
  });
}
var BUFFER_DELAY = 100;
function useOnScrollPositionChangeDetector(params) {
  var onReachedTop = params.onReachedTop, onReachedBottom = params.onReachedBottom, onInBetween = params.onInBetween;
  var cb = usePreservedCallback$1(function(event) {
    if (event === null || event === void 0 ? void 0 : event.target) {
      var _a2 = event.target, scrollTop = _a2.scrollTop, scrollHeight = _a2.scrollHeight, clientHeight = _a2.clientHeight;
      var positionEvent = {
        distanceFromBottom: scrollHeight - scrollTop - clientHeight
      };
      if (onReachedTop && isAboutSame(scrollTop, 0, SCROLL_BUFFER)) {
        onReachedTop(positionEvent);
      } else if (onReachedBottom && isAboutSame(scrollHeight, clientHeight + scrollTop, SCROLL_BUFFER)) {
        onReachedBottom(positionEvent);
      } else if (onInBetween) {
        onInBetween(positionEvent);
      }
    }
  });
  return useThrottleCallback(cb, BUFFER_DELAY, { trailing: true });
}
var LeaveGroupChannel = function(_a2) {
  var channel = _a2.channel, onSubmit = _a2.onSubmit, onCancel = _a2.onCancel;
  var _b2 = useSendbird().state.config, logger = _b2.logger, isOnline = _b2.isOnline;
  var stringSet2 = useLocalization().stringSet;
  if (channel) {
    return React__default__default.createElement(Modal, { disabled: !isOnline, onCancel, onSubmit: function() {
      logger.info("LeaveGroupChannel: Leaving channel", channel);
      channel.leave().then(function() {
        logger.info("LeaveGroupChannel: Leaving channel successful!", channel);
        onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit();
      });
    }, submitText: stringSet2.MODAL__LEAVE_CHANNEL__FOOTER, titleText: stringSet2.MODAL__LEAVE_CHANNEL__TITLE });
  }
};
function GroupChannelPreviewAction(_a2) {
  var channel = _a2.channel, _b2 = _a2.disabled, disabled = _b2 === void 0 ? false : _b2, onLeaveChannel = _a2.onLeaveChannel;
  var parentRef = useRef(null);
  var parentContainerRef = useRef(null);
  var _c = useState(false), showModal = _c[0], setShowModal = _c[1];
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(
    "div",
    { ref: parentContainerRef, tabIndex: 0, role: "button", style: { display: "inline-block" }, onKeyDown: function(e3) {
      return e3.stopPropagation();
    }, onClick: function(e3) {
      return e3.stopPropagation();
    } },
    React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return React__default__default.createElement(
        IconButton$1,
        { ref: parentRef, onClick: toggleDropdown, height: "32px", width: "32px" },
        React__default__default.createElement(Icon$1, { type: IconTypes.MORE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
      );
    }, menuItems: function(closeDropdown) {
      return React__default__default.createElement(
        MenuItems,
        { parentRef, parentContainRef: parentContainerRef, closeDropdown },
        React__default__default.createElement(MenuItem, { onClick: function() {
          if (disabled)
            return;
          setShowModal(true);
          closeDropdown();
        }, testID: "channel_list_item_context_menu_leave_channel" }, stringSet2.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE)
      );
    } }),
    showModal && React__default__default.createElement(LeaveGroupChannel, { channel, onSubmit: function() {
      setShowModal(false);
      onLeaveChannel === null || onLeaveChannel === void 0 ? void 0 : onLeaveChannel();
    }, onCancel: function() {
      return setShowModal(false);
    } })
  );
}
function Badge(_a2) {
  var count = _a2.count, _b2 = _a2.maxLevel, maxLevel = _b2 === void 0 ? 2 : _b2, _c = _a2.className, className = _c === void 0 ? "" : _c;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var maximumNumber = parseInt("9".repeat(maxLevel > 6 ? 6 : maxLevel), 10);
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-badge"
    ], false).join(" ") },
    React__default__default.createElement(
      "div",
      { className: "sendbird-badge__text" },
      React__default__default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONCONTENT_1 }, typeof count === "string" ? count : count > maximumNumber ? "".concat(maximumNumber).concat(stringSet2.BADGE__OVER) : count)
    )
  );
}
function MentionUserLabel(_a2) {
  var _b2 = _a2.className, className = _b2 === void 0 ? "" : _b2, children = _a2.children, _c = _a2.isReverse, isReverse = _c === void 0 ? false : _c, color = _a2.color, userId = _a2.userId;
  return React__default__default.createElement("span", { className: classnames(MENTION_USER_LABEL_CLASSNAME, className, isReverse && "reverse", color), contentEditable: false, "data-userid": userId, "data-sb-mention": true }, children);
}
var GroupChannelListItemView = function(_a2) {
  var channel = _a2.channel, tabIndex = _a2.tabIndex, isTyping = _a2.isTyping, isSelected = _a2.isSelected, channelName = _a2.channelName, _b2 = _a2.isMessageStatusEnabled, isMessageStatusEnabled = _b2 === void 0 ? true : _b2, _c = _a2.onClick, onClick = _c === void 0 ? noop$4 : _c, _d = _a2.onLeaveChannel, onLeaveChannel = _d === void 0 ? function() {
    return Promise.resolve();
  } : _d, renderChannelAction = _a2.renderChannelAction;
  var config2 = useSendbird().state.config;
  var theme = config2.theme, userId = config2.userId;
  var _e2 = useLocalization(), dateLocale = _e2.dateLocale, stringSet2 = _e2.stringSet;
  var isMobile = useMediaQueryContext().isMobile;
  var isMentionEnabled = config2.groupChannel.enableMention;
  var lastMessage = getLastMessageText(channel, stringSet2);
  var previewLastMessage = config2.groupChannel.enableMarkdownForUserMessage ? getChannelPreviewMessage(lastMessage) : lastMessage;
  var _f = useState(false), showMobileLeave = _f[0], setShowMobileLeave = _f[1];
  var onLongPress = useLongPress({
    onLongPress: function() {
      if (isMobile) {
        setShowMobileLeave(true);
      }
    },
    onClick
  }, {
    delay: 1e3
  });
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(
      "div",
      __assign({ className: [
        "sendbird-channel-preview",
        isSelected ? "sendbird-channel-preview--active" : ""
      ].join(" "), role: "link", tabIndex }, isMobile ? __assign({}, onLongPress) : { onClick }),
      React__default__default.createElement(
        "div",
        { className: "sendbird-channel-preview__avatar" },
        React__default__default.createElement(ChannelAvatar, { channel, userId, theme })
      ),
      React__default__default.createElement(
        "div",
        { className: "sendbird-channel-preview__content" },
        React__default__default.createElement(
          "div",
          { className: "sendbird-channel-preview__content__upper" },
          React__default__default.createElement(
            "div",
            { className: "sendbird-channel-preview__content__upper__header" },
            (channel.isBroadcast || false) && React__default__default.createElement(
              "div",
              { className: "sendbird-channel-preview__content__upper__header__broadcast-icon" },
              React__default__default.createElement(Icon$1, { type: IconTypes.BROADCAST, fillColor: IconColors.SECONDARY, height: "16px", width: "16px" })
            ),
            React__default__default.createElement(Label, { className: "sendbird-channel-preview__content__upper__header__channel-name", testID: "sendbird-channel-preview__content__upper__header__channel-name", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, channelName),
            React__default__default.createElement(Label, { className: "sendbird-channel-preview__content__upper__header__total-members", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, getTotalMembers(channel)),
            channel.isFrozen && React__default__default.createElement(
              "div",
              { title: "Frozen", className: "sendbird-channel-preview__content__upper__header__frozen-icon" },
              React__default__default.createElement(Icon$1, { type: IconTypes.FREEZE, fillColor: IconColors.PRIMARY, height: 12, width: 12 })
            )
          ),
          !channel.isEphemeral && isMessageStatusEnabled && React__default__default.createElement(MessageStatus, { className: "sendbird-channel-preview__content__upper__last-message-at", channel, message: channel.lastMessage, isDateSeparatorConsidered: false }),
          !channel.isEphemeral && !isMessageStatusEnabled && React__default__default.createElement(Label, { className: "sendbird-channel-preview__content__upper__last-message-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, getLastMessageCreatedAt({
            channel,
            locale: dateLocale,
            stringSet: stringSet2
          }))
        ),
        React__default__default.createElement(
          "div",
          { className: "sendbird-channel-preview__content__lower" },
          React__default__default.createElement(
            Label,
            { className: "sendbird-channel-preview__content__lower__last-message", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 },
            isTyping && React__default__default.createElement(TypingIndicatorText, { members: channel.getTypingUsers() }),
            !isTyping && !isVoiceMessage(channel.lastMessage) && previewLastMessage,
            !isTyping && isVoiceMessage(channel.lastMessage) && stringSet2.VOICE_MESSAGE
          ),
          /**
           * Do not show unread count for focused channel. This is because of the limitation where
           * isScrollBottom and hasNext states needs to be added globally but they are from channel context
           * so channel list cannot see them with the current architecture.
           */
          !isSelected && !channel.isEphemeral && React__default__default.createElement(
            "div",
            { className: "sendbird-channel-preview__content__lower__unread-message-count" },
            isMentionEnabled && channel.unreadMentionCount > 0 ? React__default__default.createElement(MentionUserLabel, { className: "sendbird-channel-preview__content__lower__unread-message-count__mention", color: "purple" }, "@") : null,
            getChannelUnreadMessageCount(channel) ? (
              // return number
              React__default__default.createElement(Badge, { count: getChannelUnreadMessageCount(channel) })
            ) : null
          )
        )
      ),
      !isMobile && React__default__default.createElement("div", { className: "sendbird-channel-preview__action" }, renderChannelAction({ channel }))
    ),
    showMobileLeave && isMobile && React__default__default.createElement(
      Modal,
      { className: "sendbird-channel-preview__leave--mobile", titleText: channelName, hideFooter: true, isCloseOnClickOutside: true, onCancel: function() {
        return setShowMobileLeave(false);
      } },
      React__default__default.createElement(
        TextButton,
        { onClick: function() {
          onLeaveChannel();
          setShowMobileLeave(false);
        }, className: "sendbird-channel-preview__leave-label--mobile" },
        React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.CHANNEL_PREVIEW_MOBILE_LEAVE)
      )
    )
  );
};
var GroupChannelListItem = function(_a2) {
  var _b2, _c, _d;
  var channel = _a2.channel, isSelected = _a2.isSelected, isTyping = _a2.isTyping, renderChannelAction = _a2.renderChannelAction, onLeaveChannel = _a2.onLeaveChannel, onClick = _a2.onClick, tabIndex = _a2.tabIndex;
  var config2 = useSendbird().state.config;
  var stringSet2 = useLocalization().stringSet;
  var _e2 = useGroupChannelList().state, isTypingIndicatorEnabled = _e2.isTypingIndicatorEnabled, isMessageReceiptStatusEnabled = _e2.isMessageReceiptStatusEnabled;
  var userId = config2.userId;
  var isMessageStatusEnabled = isMessageReceiptStatusEnabled && !((_b2 = channel.lastMessage) === null || _b2 === void 0 ? void 0 : _b2.isAdminMessage()) && ((_d = (_c = channel.lastMessage) === null || _c === void 0 ? void 0 : _c.sender) === null || _d === void 0 ? void 0 : _d.userId) === userId;
  return React__default__default.createElement(GroupChannelListItemView, { channel, tabIndex, channelName: getChannelTitle(channel, userId, stringSet2), isTyping: isTypingIndicatorEnabled && isTyping, isSelected, isMessageStatusEnabled, onClick, onLeaveChannel, renderChannelAction });
};
var isEmpty = function(val) {
  return val === null || val === void 0;
};
function compareIds(a4, b3) {
  if (isEmpty(a4) || isEmpty(b3)) {
    return false;
  }
  var aString = a4.toString();
  var bString = b3.toString();
  return aString === bString;
}
var scrollIntoLast = function(intialTry) {
  if (intialTry === void 0) {
    intialTry = 0;
  }
  var MAX_TRIES = 10;
  var currentTry = intialTry;
  if (currentTry > MAX_TRIES) {
    return;
  }
  try {
    var scrollDOM = document.querySelector(".sendbird-thread-ui--scroll");
    if (scrollDOM) {
      scrollDOM.scrollTop = scrollDOM.scrollHeight;
    }
  } catch (error) {
    setTimeout(function() {
      scrollIntoLast(currentTry + 1);
    }, 500 * currentTry);
  }
};
var useSendMultipleFilesMessage = function(_a2, _b2) {
  var currentChannel = _a2.currentChannel, onBeforeSendMultipleFilesMessage = _a2.onBeforeSendMultipleFilesMessage, publishingModules = _a2.publishingModules;
  var logger = _b2.logger, pubSub = _b2.pubSub, scrollRef = _b2.scrollRef;
  var sendMessage = useCallback(function(files, quoteMessage) {
    return new Promise(function(resolve, reject) {
      if (!currentChannel) {
        logger.warning("Channel: Sending MFm failed, because currentChannel is null.", { currentChannel });
        reject();
      }
      if (files.length <= 1) {
        logger.warning("Channel: Sending MFM failed, because there are no multiple files.", { files });
        reject();
      }
      var messageParams = {
        fileInfoList: files.map(function(file) {
          return {
            file,
            fileName: file.name,
            fileSize: file.size,
            mimeType: file.type
          };
        })
      };
      if (quoteMessage) {
        messageParams.isReplyToChannel = true;
        messageParams.parentMessageId = quoteMessage.messageId;
      }
      if (typeof onBeforeSendMultipleFilesMessage === "function") {
        messageParams = onBeforeSendMultipleFilesMessage(files, quoteMessage);
      }
      logger.info("Channel: Start sending MFM", { messageParams });
      try {
        currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendMultipleFilesMessage(messageParams).onFileUploaded(function(requestId, index, uploadableFileInfo, error) {
          logger.info("Channel: onFileUploaded during sending MFM", {
            requestId,
            index,
            error,
            uploadableFileInfo
          });
          pubSub.publish(pubSubTopics.ON_FILE_INFO_UPLOADED, {
            response: {
              channelUrl: currentChannel.url,
              requestId,
              index,
              uploadableFileInfo,
              error
            },
            publishingModules
          });
        }).onPending(function(pendingMessage) {
          logger.info("Channel: in progress of sending MFM", { pendingMessage, fileInfoList: messageParams.fileInfoList });
          pubSub.publish(pubSubTopics.SEND_MESSAGE_START, {
            message: pendingMessage,
            channel: currentChannel,
            publishingModules
          });
          setTimeout(function() {
            if (scrollRef && shouldPubSubPublishToChannel(publishingModules)) {
              scrollIntoLast$1(0, scrollRef);
            }
            if (shouldPubSubPublishToThread(publishingModules)) {
              scrollIntoLast(0);
            }
          }, SCROLL_BOTTOM_DELAY_FOR_SEND);
        }).onFailed(function(error, failedMessage) {
          logger.error("Channel: Sending MFM failed.", { error, failedMessage });
          pubSub.publish(pubSubTopics.SEND_MESSAGE_FAILED, {
            channel: currentChannel,
            message: failedMessage,
            publishingModules
          });
          reject(error);
        }).onSucceeded(function(succeededMessage) {
          logger.info("Channel: Sending voice message success!", { succeededMessage });
          pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
            channel: currentChannel,
            message: succeededMessage,
            publishingModules
          });
          resolve(succeededMessage);
        });
      } catch (error) {
        logger.error("Channel: Sending MFM failed.", { error });
        reject(error);
      }
    });
  }, [
    currentChannel,
    onBeforeSendMultipleFilesMessage,
    publishingModules
  ]);
  return [sendMessage];
};
React__default__default.createContext(null);
React__default__default.createContext(null);
createContext(null);
createContext(void 0);
var noop = function() {
};
var TOGGLE_DEFAULT_VALUE = {
  checked: null,
  defaultChecked: false,
  disabled: false,
  onChange: noop,
  onFocus: noop,
  onBlur: noop
};
React__default__default.createContext(TOGGLE_DEFAULT_VALUE);
var MessageSearchOrder;
(function(MessageSearchOrder2) {
  MessageSearchOrder2["SCORE"] = "score";
  MessageSearchOrder2["TIMESTAMP"] = "ts";
})(MessageSearchOrder || (MessageSearchOrder = {}));
createContext(null);
var ChannelStateTypes;
(function(ChannelStateTypes2) {
  ChannelStateTypes2["NIL"] = "NIL";
  ChannelStateTypes2["LOADING"] = "LOADING";
  ChannelStateTypes2["INVALID"] = "INVALID";
  ChannelStateTypes2["INITIALIZED"] = "INITIALIZED";
})(ChannelStateTypes || (ChannelStateTypes = {}));
var ParentMessageStateTypes;
(function(ParentMessageStateTypes2) {
  ParentMessageStateTypes2["NIL"] = "NIL";
  ParentMessageStateTypes2["LOADING"] = "LOADING";
  ParentMessageStateTypes2["INVALID"] = "INVALID";
  ParentMessageStateTypes2["INITIALIZED"] = "INITIALIZED";
})(ParentMessageStateTypes || (ParentMessageStateTypes = {}));
var ThreadListStateTypes;
(function(ThreadListStateTypes2) {
  ThreadListStateTypes2["NIL"] = "NIL";
  ThreadListStateTypes2["LOADING"] = "LOADING";
  ThreadListStateTypes2["INVALID"] = "INVALID";
  ThreadListStateTypes2["INITIALIZED"] = "INITIALIZED";
})(ThreadListStateTypes || (ThreadListStateTypes = {}));
var PREV_THREADS_FETCH_SIZE = 30;
var NEXT_THREADS_FETCH_SIZE = 30;
function useToggleReactionCallback(_a2, _b2) {
  var currentChannel = _a2.currentChannel;
  var logger = _b2.logger;
  return useCallback(function(message, key, isReacted) {
    var _a3, _b3;
    if (isReacted) {
      (_a3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.deleteReaction) === null || _a3 === void 0 ? void 0 : _a3.call(currentChannel, message, key).then(function(res) {
        logger.info("Thread | useToggleReactionsCallback: Delete reaction succeeded.", res);
      }).catch(function(err) {
        logger.warning("Thread | useToggleReactionsCallback: Delete reaction failed.", err);
      });
      return;
    }
    (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.addReaction) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel, message, key).then(function(res) {
      logger.info("Thread | useToggleReactionsCallback: Add reaction succeeded.", res);
    }).catch(function(err) {
      logger.warning("Thread | useToggleReactionsCallback: Add reaction failed.", err);
    });
  }, [currentChannel]);
}
function useSendUserMessageCallback(_a2, _b2) {
  var isMentionEnabled = _a2.isMentionEnabled, currentChannel = _a2.currentChannel, onBeforeSendUserMessage = _a2.onBeforeSendUserMessage, sendMessageStart = _a2.sendMessageStart, sendMessageFailure = _a2.sendMessageFailure;
  var logger = _b2.logger, pubSub = _b2.pubSub;
  var sendMessage = useCallback(function(props) {
    var _a3;
    var message = props.message, quoteMessage = props.quoteMessage, mentionTemplate = props.mentionTemplate, mentionedUsers = props.mentionedUsers;
    var createDefaultParams = function() {
      var params2 = {};
      params2.message = message;
      var mentionedUsersLength = (mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length) || 0;
      if (isMentionEnabled && mentionedUsersLength) {
        params2.mentionedUsers = mentionedUsers;
      }
      if (isMentionEnabled && mentionTemplate && mentionedUsersLength) {
        params2.mentionedMessageTemplate = mentionTemplate;
      }
      if (quoteMessage) {
        params2.isReplyToChannel = true;
        params2.parentMessageId = quoteMessage.messageId;
      }
      return params2;
    };
    var params = (_a3 = onBeforeSendUserMessage === null || onBeforeSendUserMessage === void 0 ? void 0 : onBeforeSendUserMessage(message, quoteMessage)) !== null && _a3 !== void 0 ? _a3 : createDefaultParams();
    logger.info("Thread | useSendUserMessageCallback: Sending user message start.", params);
    if (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendUserMessage) {
      currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendUserMessage(params).onPending(function(pendingMessage) {
        sendMessageStart(pendingMessage);
      }).onFailed(function(error, message2) {
        logger.info("Thread | useSendUserMessageCallback: Sending user message failed.", { message: message2, error });
        sendMessageFailure(message2);
      }).onSucceeded(function(message2) {
        logger.info("Thread | useSendUserMessageCallback: Sending user message succeeded.", message2);
        pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, {
          channel: currentChannel,
          message: message2,
          publishingModules: [PublishingModuleType.THREAD]
        });
      });
    }
  }, [isMentionEnabled, currentChannel]);
  return sendMessage;
}
function useSendFileMessageCallback(_a2, _b2) {
  var currentChannel = _a2.currentChannel, onBeforeSendFileMessage = _a2.onBeforeSendFileMessage, sendMessageStart = _a2.sendMessageStart, sendMessageFailure = _a2.sendMessageFailure;
  var logger = _b2.logger, pubSub = _b2.pubSub;
  return useCallback(function(file, quoteMessage) {
    return new Promise(function(resolve, reject) {
      var _a3;
      var createParamsDefault = function() {
        var params2 = {};
        params2.file = file;
        if (quoteMessage) {
          params2.isReplyToChannel = true;
          params2.parentMessageId = quoteMessage.messageId;
        }
        return params2;
      };
      var params = (_a3 = onBeforeSendFileMessage === null || onBeforeSendFileMessage === void 0 ? void 0 : onBeforeSendFileMessage(file, quoteMessage)) !== null && _a3 !== void 0 ? _a3 : createParamsDefault();
      logger.info("Thread | useSendFileMessageCallback: Sending file message start.", params);
      if (currentChannel == null) {
        logger.warning("Thread | useSendFileMessageCallback: currentChannel is null. Skipping file message send.");
        resolve(null);
      } else {
        currentChannel.sendFileMessage(params).onPending(function(pendingMessage) {
          sendMessageStart(__assign(__assign({}, pendingMessage), {
            url: URL.createObjectURL(file),
            // pending thumbnail message seems to be failed
            sendingStatus: Z.PENDING,
            isUserMessage: pendingMessage.isUserMessage,
            isFileMessage: pendingMessage.isFileMessage,
            isAdminMessage: pendingMessage.isAdminMessage,
            isMultipleFilesMessage: pendingMessage.isMultipleFilesMessage
          }));
          setTimeout(function() {
            return scrollIntoLast();
          }, SCROLL_BOTTOM_DELAY_FOR_SEND);
        }).onFailed(function(error, message) {
          message.localUrl = URL.createObjectURL(file);
          message.file = file;
          logger.info("Thread | useSendFileMessageCallback: Sending file message failed.", { message, error });
          sendMessageFailure(message);
          reject(error);
        }).onSucceeded(function(message) {
          logger.info("Thread | useSendFileMessageCallback: Sending file message succeeded.", message);
          pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
            channel: currentChannel,
            message,
            publishingModules: [PublishingModuleType.THREAD]
          });
          resolve(message);
        });
      }
    });
  }, [currentChannel]);
}
var useSendVoiceMessageCallback = function(_a2, _b2) {
  var currentChannel = _a2.currentChannel, onBeforeSendVoiceMessage = _a2.onBeforeSendVoiceMessage, sendMessageStart = _a2.sendMessageStart, sendMessageFailure = _a2.sendMessageFailure;
  var logger = _b2.logger, pubSub = _b2.pubSub;
  var sendMessage = useCallback(function(file, duration, quoteMessage) {
    var messageParams = onBeforeSendVoiceMessage && typeof onBeforeSendVoiceMessage === "function" ? onBeforeSendVoiceMessage(file, quoteMessage) : {
      file,
      fileName: VOICE_MESSAGE_FILE_NAME,
      mimeType: VOICE_MESSAGE_MIME_TYPE,
      metaArrays: [
        new Ve$1({
          key: META_ARRAY_VOICE_DURATION_KEY,
          value: ["".concat(duration)]
        }),
        new Ve$1({
          key: META_ARRAY_MESSAGE_TYPE_KEY,
          value: [META_ARRAY_MESSAGE_TYPE_VALUE__VOICE]
        })
      ]
    };
    if (quoteMessage) {
      messageParams.isReplyToChannel = true;
      messageParams.parentMessageId = quoteMessage.messageId;
    }
    logger.info("Thread | useSendVoiceMessageCallback:  Start sending voice message", messageParams);
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendFileMessage(messageParams).onPending(function(pendingMessage) {
      sendMessageStart(__assign(__assign({}, pendingMessage), {
        url: URL.createObjectURL(file),
        // pending thumbnail message seems to be failed
        sendingStatus: Z.PENDING,
        isUserMessage: pendingMessage.isUserMessage,
        isFileMessage: pendingMessage.isFileMessage,
        isAdminMessage: pendingMessage.isAdminMessage,
        isMultipleFilesMessage: pendingMessage.isMultipleFilesMessage
      }));
      setTimeout(function() {
        return scrollIntoLast();
      }, SCROLL_BOTTOM_DELAY_FOR_SEND);
    }).onFailed(function(error, message) {
      message.localUrl = URL.createObjectURL(file);
      message.file = file;
      logger.info("Thread | useSendVoiceMessageCallback: Sending voice message failed.", { message, error });
      sendMessageFailure(message);
    }).onSucceeded(function(message) {
      logger.info("Thread | useSendVoiceMessageCallback: Sending voice message succeeded.", message);
      pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
        channel: currentChannel,
        message,
        publishingModules: [PublishingModuleType.THREAD]
      });
    });
  }, [
    currentChannel,
    onBeforeSendVoiceMessage
  ]);
  return sendMessage;
};
function useResendMessageCallback(_a2, _b2) {
  var currentChannel = _a2.currentChannel, resendMessageStart = _a2.resendMessageStart, sendMessageSuccess = _a2.sendMessageSuccess, sendMessageFailure = _a2.sendMessageFailure;
  var logger = _b2.logger, pubSub = _b2.pubSub;
  return useCallback(function(failedMessage) {
    var _a3, _b3, _c, _d, _e2;
    if (!(failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isResendable)) {
      logger.warning("Thread | useResendMessageCallback: Message is not resendable.", failedMessage);
      return;
    }
    logger.info("Thread | useResendMessageCallback: Resending failedMessage start.", failedMessage);
    if (((_a3 = failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isUserMessage) === null || _a3 === void 0 ? void 0 : _a3.call(failedMessage)) || (failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.messageType) === G.USER) {
      try {
        currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.resendMessage(failedMessage).onPending(function(message) {
          logger.info("Thread | useResendMessageCallback: Resending user message started.", message);
          resendMessageStart(message);
        }).onSucceeded(function(message) {
          logger.info("Thread | useResendMessageCallback: Resending user message succeeded.", message);
          sendMessageSuccess(message);
          pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, {
            channel: currentChannel,
            message,
            publishingModules: [PublishingModuleType.THREAD]
          });
        }).onFailed(function(error) {
          logger.warning("Thread | useResendMessageCallback: Resending user message failed.", error);
          failedMessage.sendingStatus = Z.FAILED;
          sendMessageFailure(failedMessage);
        });
      } catch (err) {
        logger.warning("Thread | useResendMessageCallback: Resending user message failed.", err);
        failedMessage.sendingStatus = Z.FAILED;
        sendMessageFailure(failedMessage);
      }
    } else if ((_b3 = failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isFileMessage) === null || _b3 === void 0 ? void 0 : _b3.call(failedMessage)) {
      try {
        (_c = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.resendMessage) === null || _c === void 0 ? void 0 : _c.call(currentChannel, failedMessage).onPending(function(message) {
          logger.info("Thread | useResendMessageCallback: Resending file message started.", message);
          resendMessageStart(message);
        }).onSucceeded(function(message) {
          logger.info("Thread | useResendMessageCallback: Resending file message succeeded.", message);
          sendMessageSuccess(message);
          pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
            channel: currentChannel,
            message: failedMessage,
            publishingModules: [PublishingModuleType.THREAD]
          });
        }).onFailed(function(error) {
          logger.warning("Thread | useResendMessageCallback: Resending file message failed.", error);
          failedMessage.sendingStatus = Z.FAILED;
          sendMessageFailure(failedMessage);
        });
      } catch (err) {
        logger.warning("Thread | useResendMessageCallback: Resending file message failed.", err);
        failedMessage.sendingStatus = Z.FAILED;
        sendMessageFailure(failedMessage);
      }
    } else if ((_d = failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isMultipleFilesMessage) === null || _d === void 0 ? void 0 : _d.call(failedMessage)) {
      try {
        (_e2 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.resendMessage) === null || _e2 === void 0 ? void 0 : _e2.call(currentChannel, failedMessage).onPending(function(message) {
          logger.info("Thread | useResendMessageCallback: Resending multiple files message started.", message);
          resendMessageStart(message);
        }).onFileUploaded(function(requestId, index, uploadableFileInfo, error) {
          logger.info("Thread | useResendMessageCallback: onFileUploaded during resending multiple files message.", {
            requestId,
            index,
            error,
            uploadableFileInfo
          });
          pubSub.publish(pubSubTopics.ON_FILE_INFO_UPLOADED, {
            response: {
              channelUrl: currentChannel.url,
              requestId,
              index,
              uploadableFileInfo,
              error
            },
            publishingModules: [PublishingModuleType.THREAD]
          });
        }).onSucceeded(function(message) {
          logger.info("Thread | useResendMessageCallback: Resending MFM succeeded.", message);
          sendMessageSuccess(message);
          pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
            channel: currentChannel,
            message,
            publishingModules: [PublishingModuleType.THREAD]
          });
        }).onFailed(function(error, message) {
          logger.warning("Thread | useResendMessageCallback: Resending MFM failed.", error);
          sendMessageFailure(message);
        });
      } catch (err) {
        logger.warning("Thread | useResendMessageCallback: Resending MFM failed.", err);
        sendMessageFailure(failedMessage);
      }
    } else {
      logger.warning("Thread | useResendMessageCallback: Message is not resendable.", failedMessage);
      failedMessage.sendingStatus = Z.FAILED;
      sendMessageFailure(failedMessage);
    }
  }, [currentChannel]);
}
function useUpdateMessageCallback(_a2, _b2) {
  var currentChannel = _a2.currentChannel, isMentionEnabled = _a2.isMentionEnabled, onMessageUpdated = _a2.onMessageUpdated;
  var logger = _b2.logger, pubSub = _b2.pubSub;
  return useCallback(function(props) {
    var _a3;
    var messageId = props.messageId, message = props.message, mentionedUsers = props.mentionedUsers, mentionTemplate = props.mentionTemplate;
    var createParamsDefault = function() {
      var params2 = {};
      params2.message = message;
      if (isMentionEnabled && mentionedUsers && (mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length) > 0) {
        params2.mentionedUsers = mentionedUsers;
      }
      if (isMentionEnabled && mentionTemplate) {
        params2.mentionedMessageTemplate = mentionTemplate;
      } else {
        params2.mentionedMessageTemplate = message;
      }
      return params2;
    };
    var params = createParamsDefault();
    logger.info("Thread | useUpdateMessageCallback: Message update start.", params);
    if (currentChannel == null) {
      logger.warning("Thread | useUpdateMessageCallback: currentChannel is null.");
      return;
    }
    (_a3 = currentChannel.updateUserMessage) === null || _a3 === void 0 ? void 0 : _a3.call(currentChannel, messageId, params).then(function(message2) {
      logger.info("Thread | useUpdateMessageCallback: Message update succeeded.", message2);
      onMessageUpdated(currentChannel, message2);
      pubSub.publish(pubSubTopics.UPDATE_USER_MESSAGE, {
        fromSelector: true,
        channel: currentChannel,
        message: message2,
        publishingModules: [PublishingModuleType.THREAD]
      });
    });
  }, [currentChannel, isMentionEnabled]);
}
function useDeleteMessageCallback(_a2, _b2) {
  var currentChannel = _a2.currentChannel, onMessageDeletedByReqId = _a2.onMessageDeletedByReqId, onMessageDeleted = _a2.onMessageDeleted;
  var logger = _b2.logger;
  return useCallback(function(message) {
    logger.info("Thread | useDeleteMessageCallback: Deleting message.", message);
    var sendingStatus = message.sendingStatus;
    return new Promise(function(resolve, reject) {
      var _a3;
      logger.info("Thread | useDeleteMessageCallback: Deleting message requestState:", sendingStatus);
      if (sendingStatus === "failed" || sendingStatus === "pending") {
        logger.info("Thread | useDeleteMessageCallback: Deleted message from local:", message);
        onMessageDeletedByReqId(message.reqId);
        resolve();
      }
      if (currentChannel == null) {
        logger.info("Thread | useDeleteMessageCallback: No current channel");
        resolve();
      }
      logger.info("Thread | useDeleteMessageCallback: Deleting message from remote:", sendingStatus);
      (_a3 = currentChannel.deleteMessage) === null || _a3 === void 0 ? void 0 : _a3.call(currentChannel, message).then(function() {
        logger.info("Thread | useDeleteMessageCallback: Deleting message success!", message);
        onMessageDeleted(currentChannel, message.messageId);
        resolve();
      }).catch(function(err) {
        logger.warning("Thread | useDeleteMessageCallback: Deleting message failed!", err);
        reject(err);
      });
    });
  }, [currentChannel]);
}
function getThreadMessageListParams(params) {
  return __assign({ prevResultSize: PREV_THREADS_FETCH_SIZE, nextResultSize: NEXT_THREADS_FETCH_SIZE, includeMetaArray: true }, params);
}
var useThreadFetchers = function(_a2) {
  var isReactionEnabled = _a2.isReactionEnabled, anchorMessage = _a2.anchorMessage, staleParentMessage = _a2.parentMessage, logger = _a2.logger, oldestMessageTimeStamp = _a2.oldestMessageTimeStamp, latestMessageTimeStamp = _a2.latestMessageTimeStamp, threadListState = _a2.threadListState, initializeThreadListStart = _a2.initializeThreadListStart, initializeThreadListSuccess = _a2.initializeThreadListSuccess, initializeThreadListFailure = _a2.initializeThreadListFailure, getPrevMessagesStart = _a2.getPrevMessagesStart, getPrevMessagesSuccess = _a2.getPrevMessagesSuccess, getPrevMessagesFailure = _a2.getPrevMessagesFailure, getNextMessagesStart = _a2.getNextMessagesStart, getNextMessagesSuccess = _a2.getNextMessagesSuccess, getNextMessagesFailure = _a2.getNextMessagesFailure;
  var stores2 = useSendbird().state.stores;
  var timestamp = (anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.createdAt) || 0;
  var initialize = useCallback(function(callback) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var params, _a3, threadedMessages_1, parentMessage, error_1;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (!stores2.sdkStore.initialized || !staleParentMessage)
              return [
                2
                /*return*/
              ];
            initializeThreadListStart();
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            params = getThreadMessageListParams({ includeReactions: isReactionEnabled });
            logger.info("Thread | useGetThreadList: Initialize thread list start.", { timestamp, params });
            return [4, staleParentMessage.getThreadedMessagesByTimestamp(timestamp, params)];
          case 2:
            _a3 = _b2.sent(), threadedMessages_1 = _a3.threadedMessages, parentMessage = _a3.parentMessage;
            logger.info("Thread | useGetThreadList: Initialize thread list succeeded.", { staleParentMessage, threadedMessages: threadedMessages_1 });
            initializeThreadListSuccess(parentMessage, anchorMessage, threadedMessages_1);
            setTimeout(function() {
              return callback === null || callback === void 0 ? void 0 : callback(threadedMessages_1);
            });
            return [3, 4];
          case 3:
            error_1 = _b2.sent();
            logger.info("Thread | useGetThreadList: Initialize thread list failed.", error_1);
            initializeThreadListFailure();
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [stores2.sdkStore.initialized, staleParentMessage, anchorMessage, isReactionEnabled]);
  var loadPrevious = useCallback(function(callback) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var params, _a3, threadedMessages_2, parentMessage, error_2;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (threadListState !== ThreadListStateTypes.INITIALIZED || oldestMessageTimeStamp === 0 || !staleParentMessage)
              return [
                2
                /*return*/
              ];
            getPrevMessagesStart();
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            params = getThreadMessageListParams({ nextResultSize: 0, includeReactions: isReactionEnabled });
            return [4, staleParentMessage.getThreadedMessagesByTimestamp(oldestMessageTimeStamp, params)];
          case 2:
            _a3 = _b2.sent(), threadedMessages_2 = _a3.threadedMessages, parentMessage = _a3.parentMessage;
            logger.info("Thread | useGetPrevThreadsCallback: Fetch prev threads succeeded.", { parentMessage, threadedMessages: threadedMessages_2 });
            getPrevMessagesSuccess(threadedMessages_2);
            setTimeout(function() {
              return callback === null || callback === void 0 ? void 0 : callback(threadedMessages_2);
            });
            return [3, 4];
          case 3:
            error_2 = _b2.sent();
            logger.info("Thread | useGetPrevThreadsCallback: Fetch prev threads failed.", error_2);
            getPrevMessagesFailure();
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [threadListState, oldestMessageTimeStamp, isReactionEnabled, staleParentMessage]);
  var loadNext = useCallback(function(callback) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var params, _a3, threadedMessages_3, parentMessage, error_3;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (threadListState !== ThreadListStateTypes.INITIALIZED || latestMessageTimeStamp === 0 || !staleParentMessage)
              return [
                2
                /*return*/
              ];
            getNextMessagesStart();
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            params = getThreadMessageListParams({ prevResultSize: 0, includeReactions: isReactionEnabled });
            return [4, staleParentMessage.getThreadedMessagesByTimestamp(latestMessageTimeStamp, params)];
          case 2:
            _a3 = _b2.sent(), threadedMessages_3 = _a3.threadedMessages, parentMessage = _a3.parentMessage;
            logger.info("Thread | useGetNextThreadsCallback: Fetch next threads succeeded.", { parentMessage, threadedMessages: threadedMessages_3 });
            getNextMessagesSuccess(threadedMessages_3);
            setTimeout(function() {
              return callback === null || callback === void 0 ? void 0 : callback(threadedMessages_3);
            });
            return [3, 4];
          case 3:
            error_3 = _b2.sent();
            logger.info("Thread | useGetNextThreadsCallback: Fetch next threads failed.", error_3);
            getNextMessagesFailure();
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [threadListState, latestMessageTimeStamp, isReactionEnabled, staleParentMessage]);
  return {
    initializeThreadFetcher: initialize,
    fetchPrevThreads: loadPrevious,
    fetchNextThreads: loadNext
  };
};
function hasReqId(message) {
  return "reqId" in message;
}
var useThread = function() {
  var _a2, _b2;
  var store = useContext(ThreadContext);
  if (!store)
    throw new Error("useThread must be used within a ThreadProvider");
  var _c = useSendbird().state, stores2 = _c.stores, config2 = _c.config;
  var logger = config2.logger, pubSub = config2.pubSub;
  var isMentionEnabled = config2.groupChannel.enableMention;
  var isReactionEnabled = config2.groupChannel.enableReactions;
  var state = shimExports.useSyncExternalStore(store.subscribe, store.getState);
  var message = state.message, parentMessage = state.parentMessage, currentChannel = state.currentChannel, threadListState = state.threadListState, allThreadMessages = state.allThreadMessages, onBeforeSendUserMessage = state.onBeforeSendUserMessage, onBeforeSendFileMessage = state.onBeforeSendFileMessage, onBeforeSendVoiceMessage = state.onBeforeSendVoiceMessage, onBeforeSendMultipleFilesMessage = state.onBeforeSendMultipleFilesMessage;
  var sendMessageStatusActions = {
    sendMessageStart: function(message2) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { localThreadMessages: __spreadArray(__spreadArray([], state2.localThreadMessages, true), [
          message2
        ], false) });
      });
    },
    sendMessageSuccess: function(message2) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { allThreadMessages: __spreadArray(__spreadArray([], state2.allThreadMessages.filter(function(m4) {
          return !compareIds(m4 === null || m4 === void 0 ? void 0 : m4.reqId, message2 === null || message2 === void 0 ? void 0 : message2.reqId);
        }), true), [
          message2
        ], false), localThreadMessages: state2.localThreadMessages.filter(function(m4) {
          return !compareIds(m4 === null || m4 === void 0 ? void 0 : m4.reqId, message2 === null || message2 === void 0 ? void 0 : message2.reqId);
        }) });
      });
    },
    sendMessageFailure: function(message2) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { localThreadMessages: state2.localThreadMessages.map(function(m4) {
          return compareIds(m4 === null || m4 === void 0 ? void 0 : m4.reqId, message2 === null || message2 === void 0 ? void 0 : message2.reqId) ? message2 : m4;
        }) });
      });
    },
    resendMessageStart: function(message2) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { localThreadMessages: state2.localThreadMessages.map(function(m4) {
          return compareIds(m4 === null || m4 === void 0 ? void 0 : m4.reqId, message2 === null || message2 === void 0 ? void 0 : message2.reqId) ? message2 : m4;
        }) });
      });
    }
  };
  var toggleReaction = useToggleReactionCallback({ currentChannel }, { logger });
  var sendMessageActions = {
    sendMessage: useSendUserMessageCallback({
      isMentionEnabled,
      currentChannel,
      onBeforeSendUserMessage,
      sendMessageStart: sendMessageStatusActions.sendMessageStart,
      sendMessageFailure: sendMessageStatusActions.sendMessageFailure
    }, {
      logger,
      pubSub
    }),
    sendFileMessage: useSendFileMessageCallback({
      currentChannel,
      onBeforeSendFileMessage,
      sendMessageStart: sendMessageStatusActions.sendMessageStart,
      sendMessageFailure: sendMessageStatusActions.sendMessageFailure
    }, {
      logger,
      pubSub
    }),
    sendVoiceMessage: useSendVoiceMessageCallback({
      currentChannel,
      onBeforeSendVoiceMessage,
      sendMessageStart: sendMessageStatusActions.sendMessageStart,
      sendMessageFailure: sendMessageStatusActions.sendMessageFailure
    }, {
      logger,
      pubSub
    }),
    sendMultipleFilesMessage: useSendMultipleFilesMessage({
      currentChannel,
      onBeforeSendMultipleFilesMessage,
      publishingModules: [PublishingModuleType.THREAD]
    }, {
      logger,
      pubSub
    })[0],
    resendMessage: useResendMessageCallback({
      resendMessageStart: sendMessageStatusActions.resendMessageStart,
      sendMessageSuccess: sendMessageStatusActions.sendMessageSuccess,
      sendMessageFailure: sendMessageStatusActions.sendMessageFailure,
      currentChannel
    }, { logger, pubSub })
  };
  var messageModifiedActions = {
    onMessageUpdated: function(channel, message2) {
      return store.setState(function(state2) {
        var _a3, _b3, _c2;
        if (((_a3 = state2.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url) !== (channel === null || channel === void 0 ? void 0 : channel.url)) {
          return state2;
        }
        return __assign(__assign({}, state2), { parentMessage: ((_b3 = state2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.messageId) === (message2 === null || message2 === void 0 ? void 0 : message2.messageId) ? message2 : state2.parentMessage, allThreadMessages: (_c2 = state2.allThreadMessages) === null || _c2 === void 0 ? void 0 : _c2.map(function(msg) {
          return (msg === null || msg === void 0 ? void 0 : msg.messageId) === (message2 === null || message2 === void 0 ? void 0 : message2.messageId) ? message2 : msg;
        }) });
      });
    },
    onMessageDeleted: function(channel, messageId) {
      return store.setState(function(state2) {
        var _a3, _b3, _c2, _d2;
        if (((_a3 = state2.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url) !== (channel === null || channel === void 0 ? void 0 : channel.url)) {
          return state2;
        }
        if (((_b3 = state2 === null || state2 === void 0 ? void 0 : state2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.messageId) === messageId) {
          return __assign(__assign({}, state2), { parentMessage: null, parentMessageState: ParentMessageStateTypes.NIL, allThreadMessages: [] });
        }
        return __assign(__assign({}, state2), { allThreadMessages: (_c2 = state2.allThreadMessages) === null || _c2 === void 0 ? void 0 : _c2.filter(function(msg) {
          return (msg === null || msg === void 0 ? void 0 : msg.messageId) !== messageId;
        }), localThreadMessages: (_d2 = state2.localThreadMessages) === null || _d2 === void 0 ? void 0 : _d2.filter(function(msg) {
          return (msg === null || msg === void 0 ? void 0 : msg.messageId) !== messageId;
        }) });
      });
    },
    onMessageDeletedByReqId: function(reqId) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { localThreadMessages: state2.localThreadMessages.filter(function(m4) {
          return !compareIds(m4.reqId, reqId);
        }) });
      });
    }
  };
  var modifyMessageActions = {
    updateMessage: useUpdateMessageCallback({
      currentChannel,
      isMentionEnabled,
      onMessageUpdated: messageModifiedActions.onMessageUpdated
    }, { logger, pubSub }),
    deleteMessage: useDeleteMessageCallback({
      currentChannel,
      onMessageDeleted: messageModifiedActions.onMessageDeleted,
      onMessageDeletedByReqId: messageModifiedActions.onMessageDeletedByReqId
    }, { logger })
  };
  var threadFetcherStatusActions = {
    initializeThreadListStart: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { threadListState: ThreadListStateTypes.LOADING, allThreadMessages: [] });
      });
    },
    initializeThreadListSuccess: function(parentMessage2, anchorMessage, threadedMessages) {
      return store.setState(function(state2) {
        var anchorMessageCreatedAt = !(anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.messageId) ? parentMessage2 === null || parentMessage2 === void 0 ? void 0 : parentMessage2.createdAt : anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.createdAt;
        var anchorIndex = threadedMessages.findIndex(function(message2) {
          return (message2 === null || message2 === void 0 ? void 0 : message2.createdAt) > anchorMessageCreatedAt;
        });
        var prevThreadMessages = anchorIndex > -1 ? threadedMessages.slice(0, anchorIndex) : threadedMessages;
        var anchorThreadMessage = (anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.messageId) ? [anchorMessage] : [];
        var nextThreadMessages = anchorIndex > -1 ? threadedMessages.slice(anchorIndex) : [];
        return __assign(__assign({}, state2), { threadListState: ThreadListStateTypes.INITIALIZED, hasMorePrev: anchorIndex === -1 || anchorIndex === PREV_THREADS_FETCH_SIZE, hasMoreNext: threadedMessages.length - anchorIndex === NEXT_THREADS_FETCH_SIZE, allThreadMessages: [prevThreadMessages, anchorThreadMessage, nextThreadMessages].flat() });
      });
    },
    initializeThreadListFailure: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { threadListState: ThreadListStateTypes.LOADING, allThreadMessages: [] });
      });
    },
    getPrevMessagesStart: function() {
      return store.setState(function(state2) {
        return __assign({}, state2);
      });
    },
    getPrevMessagesSuccess: function(threadedMessages) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { hasMorePrev: threadedMessages.length === PREV_THREADS_FETCH_SIZE, allThreadMessages: __spreadArray(__spreadArray([], threadedMessages, true), state2.allThreadMessages, true) });
      });
    },
    getPrevMessagesFailure: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { hasMorePrev: false });
      });
    },
    getNextMessagesStart: function() {
      return store.setState(function(state2) {
        return __assign({}, state2);
      });
    },
    getNextMessagesSuccess: function(threadedMessages) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { hasMoreNext: threadedMessages.length === NEXT_THREADS_FETCH_SIZE, allThreadMessages: __spreadArray(__spreadArray([], state2.allThreadMessages, true), threadedMessages, true) });
      });
    },
    getNextMessagesFailure: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { hasMoreNext: false });
      });
    }
  };
  var _d = useThreadFetchers({
    parentMessage,
    // anchorMessage should be null when parentMessage doesn't exist
    anchorMessage: (message === null || message === void 0 ? void 0 : message.messageId) !== (parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId) ? message || void 0 : void 0,
    logger,
    isReactionEnabled,
    threadListState,
    oldestMessageTimeStamp: ((_a2 = allThreadMessages[0]) === null || _a2 === void 0 ? void 0 : _a2.createdAt) || 0,
    latestMessageTimeStamp: ((_b2 = allThreadMessages[allThreadMessages.length - 1]) === null || _b2 === void 0 ? void 0 : _b2.createdAt) || 0,
    initializeThreadListStart: threadFetcherStatusActions.initializeThreadListStart,
    initializeThreadListSuccess: threadFetcherStatusActions.initializeThreadListSuccess,
    initializeThreadListFailure: threadFetcherStatusActions.initializeThreadListFailure,
    getPrevMessagesStart: threadFetcherStatusActions.getPrevMessagesStart,
    getPrevMessagesSuccess: threadFetcherStatusActions.getPrevMessagesSuccess,
    getPrevMessagesFailure: threadFetcherStatusActions.getPrevMessagesFailure,
    getNextMessagesStart: threadFetcherStatusActions.getNextMessagesStart,
    getNextMessagesSuccess: threadFetcherStatusActions.getNextMessagesSuccess,
    getNextMessagesFailure: threadFetcherStatusActions.getNextMessagesFailure
  }), initializeThreadFetcher = _d.initializeThreadFetcher, fetchPrevThreads = _d.fetchPrevThreads, fetchNextThreads = _d.fetchNextThreads;
  var actions = useMemo(function() {
    return __assign(__assign(__assign(__assign(__assign(__assign({ setCurrentUserId: function(currentUserId) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { currentUserId });
      });
    }, getChannelStart: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { channelState: ChannelStateTypes.LOADING, currentChannel: null });
      });
    }, getChannelSuccess: function(groupChannel) {
      return store.setState(function(state2) {
        var _a3, _b3;
        return __assign(__assign({}, state2), {
          channelState: ChannelStateTypes.INITIALIZED,
          currentChannel: groupChannel,
          // only support in normal group channel
          isMuted: ((_b3 = (_a3 = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.members) === null || _a3 === void 0 ? void 0 : _a3.find(function(member) {
            return (member === null || member === void 0 ? void 0 : member.userId) === state2.currentUserId;
          })) === null || _b3 === void 0 ? void 0 : _b3.isMuted) || false,
          isChannelFrozen: (groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.isFrozen) || false
        });
      });
    }, getChannelFailure: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { channelState: ChannelStateTypes.INVALID, currentChannel: null });
      });
    }, getParentMessageStart: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { parentMessageState: ParentMessageStateTypes.LOADING, parentMessage: null });
      });
    }, getParentMessageSuccess: function(parentMessage2) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { parentMessageState: ParentMessageStateTypes.INITIALIZED, parentMessage: parentMessage2 });
      });
    }, getParentMessageFailure: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { parentMessageState: ParentMessageStateTypes.INVALID, parentMessage: null });
      });
    }, setEmojiContainer: function(emojiContainer) {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { emojiContainer });
      });
    }, onMessageReceived: function(channel, message2) {
      return store.setState(function(state2) {
        var _a3, _b3, _c2, _d2;
        if (((_a3 = state2.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url) !== (channel === null || channel === void 0 ? void 0 : channel.url) || state2.hasMoreNext || ((_b3 = message2 === null || message2 === void 0 ? void 0 : message2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.messageId) !== ((_c2 = state2 === null || state2 === void 0 ? void 0 : state2.parentMessage) === null || _c2 === void 0 ? void 0 : _c2.messageId)) {
          return state2;
        }
        var isAlreadyReceived = state2.allThreadMessages.findIndex(function(m4) {
          return m4.messageId === message2.messageId;
        }) > -1;
        return __assign(__assign({}, state2), { parentMessage: ((_d2 = state2.parentMessage) === null || _d2 === void 0 ? void 0 : _d2.messageId) === (message2 === null || message2 === void 0 ? void 0 : message2.messageId) ? message2 : state2.parentMessage, allThreadMessages: isAlreadyReceived ? state2.allThreadMessages.map(function(m4) {
          return m4.messageId === message2.messageId ? message2 : m4;
        }) : __spreadArray(__spreadArray([], state2.allThreadMessages.filter(function(m4) {
          return (m4 === null || m4 === void 0 ? void 0 : m4.reqId) !== (message2 === null || message2 === void 0 ? void 0 : message2.reqId);
        }), true), [
          message2
        ], false) });
      });
    }, onReactionUpdated: function(reactionEvent) {
      return store.setState(function(state2) {
        var _a3, _b3, _c2;
        if (((_a3 = state2 === null || state2 === void 0 ? void 0 : state2.parentMessage) === null || _a3 === void 0 ? void 0 : _a3.messageId) === (reactionEvent === null || reactionEvent === void 0 ? void 0 : reactionEvent.messageId)) {
          (_c2 = (_b3 = state2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.applyReactionEvent) === null || _c2 === void 0 ? void 0 : _c2.call(_b3, reactionEvent);
        }
        return __assign(__assign({}, state2), { allThreadMessages: state2.allThreadMessages.map(function(m4) {
          var _a4;
          if ((reactionEvent === null || reactionEvent === void 0 ? void 0 : reactionEvent.messageId) === (m4 === null || m4 === void 0 ? void 0 : m4.messageId)) {
            (_a4 = m4 === null || m4 === void 0 ? void 0 : m4.applyReactionEvent) === null || _a4 === void 0 ? void 0 : _a4.call(m4, reactionEvent);
            return m4;
          }
          return m4;
        }) });
      });
    }, onUserMuted: function(channel, user) {
      return store.setState(function(state2) {
        var _a3;
        if (((_a3 = state2.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url) !== (channel === null || channel === void 0 ? void 0 : channel.url) || state2.currentUserId !== (user === null || user === void 0 ? void 0 : user.userId)) {
          return state2;
        }
        return __assign(__assign({}, state2), { isMuted: true });
      });
    }, onUserUnmuted: function(channel, user) {
      return store.setState(function(state2) {
        var _a3;
        if (((_a3 = state2.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url) !== (channel === null || channel === void 0 ? void 0 : channel.url) || state2.currentUserId !== (user === null || user === void 0 ? void 0 : user.userId)) {
          return state2;
        }
        return __assign(__assign({}, state2), { isMuted: false });
      });
    }, onUserBanned: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { channelState: ChannelStateTypes.NIL, threadListState: ThreadListStateTypes.NIL, parentMessageState: ParentMessageStateTypes.NIL, currentChannel: null, parentMessage: null, allThreadMessages: [], hasMorePrev: false, hasMoreNext: false });
      });
    }, onUserUnbanned: function() {
      return store.setState(function(state2) {
        return __assign({}, state2);
      });
    }, onUserLeft: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { channelState: ChannelStateTypes.NIL, threadListState: ThreadListStateTypes.NIL, parentMessageState: ParentMessageStateTypes.NIL, currentChannel: null, parentMessage: null, allThreadMessages: [], hasMorePrev: false, hasMoreNext: false });
      });
    }, onChannelFrozen: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { isChannelFrozen: true });
      });
    }, onChannelUnfrozen: function() {
      return store.setState(function(state2) {
        return __assign(__assign({}, state2), { isChannelFrozen: false });
      });
    }, onOperatorUpdated: function(channel) {
      return store.setState(function(state2) {
        var _a3;
        if ((channel === null || channel === void 0 ? void 0 : channel.url) === ((_a3 = state2.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url)) {
          return __assign(__assign({}, state2), { currentChannel: channel });
        }
        return state2;
      });
    }, onTypingStatusUpdated: function(channel, typingMembers) {
      return store.setState(function(state2) {
        var _a3;
        if (!compareIds(channel.url, (_a3 = state2.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url)) {
          return state2;
        }
        return __assign(__assign({}, state2), { typingMembers });
      });
    }, onFileInfoUpdated: function(_a3) {
      var channelUrl = _a3.channelUrl, requestId = _a3.requestId, index = _a3.index, uploadableFileInfo = _a3.uploadableFileInfo, error = _a3.error;
      return store.setState(function(state2) {
        var _a4, _b3;
        if (!compareIds(channelUrl, (_a4 = state2.currentChannel) === null || _a4 === void 0 ? void 0 : _a4.url)) {
          return state2;
        }
        if (error)
          return state2;
        var localThreadMessages = state2.localThreadMessages;
        var messageToUpdate = localThreadMessages.find(function(message2) {
          return compareIds(hasReqId(message2) && message2.reqId, requestId);
        });
        var fileInfoList = (_b3 = messageToUpdate.messageParams) === null || _b3 === void 0 ? void 0 : _b3.fileInfoList;
        if (Array.isArray(fileInfoList)) {
          fileInfoList[index] = uploadableFileInfo;
        }
        return __assign(__assign({}, state2), { localThreadMessages });
      });
    }, toggleReaction }, sendMessageStatusActions), sendMessageActions), messageModifiedActions), modifyMessageActions), threadFetcherStatusActions), { initializeThreadFetcher, fetchPrevThreads, fetchNextThreads });
  }, [
    store,
    currentChannel,
    stores2.sdkStore.initialized,
    parentMessage
  ]);
  return { state, actions };
};
({
  channelState: ChannelStateTypes.NIL,
  parentMessageState: ParentMessageStateTypes.NIL,
  threadListState: ThreadListStateTypes.NIL
});
var ThreadContext = React__default__default.createContext(null);
var SuggestedMentionList = function(props) {
  var currentChannel = useThread().state.currentChannel;
  return React__default__default.createElement(SuggestedMentionListView, __assign({}, props, { currentChannel }));
};
var Role = {
  OPERATOR: "operator"
};
var useHandleUploadFiles = function(_a2, _b2) {
  var sendFileMessage = _a2.sendFileMessage, sendMultipleFilesMessage = _a2.sendMultipleFilesMessage, quoteMessage = _a2.quoteMessage;
  var logger = _b2.logger;
  var stringSet2 = useLocalization().stringSet;
  var config2 = useSendbird().state.config;
  var imageCompression = config2.imageCompression;
  var uikitUploadSizeLimit = config2 === null || config2 === void 0 ? void 0 : config2.uikitUploadSizeLimit;
  var uikitMultipleFilesMessageLimit = config2 === null || config2 === void 0 ? void 0 : config2.uikitMultipleFilesMessageLimit;
  var openModal = useGlobalModalContext().openModal;
  var handleUploadFiles = useCallback(function(files) {
    return __awaiter$5(void 0, void 0, void 0, function() {
      var compressedFiles, sendingFiles, file, imageFiles_1, otherFiles_1;
      return __generator(this, function(_a3) {
        switch (_a3.label) {
          case 0:
            if (!sendFileMessage || !sendMultipleFilesMessage) {
              logger.warning("Channel|useHandleUploadFiles: required functions are undefined", { sendFileMessage, sendMultipleFilesMessage });
              return [
                2
                /*return*/
              ];
            }
            if (files.length === 0) {
              logger.warning("Channel|useHandleUploadFiles: given file list is empty.", { files });
              return [
                2
                /*return*/
              ];
            }
            if (files.length > uikitMultipleFilesMessageLimit) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload files more than ".concat(uikitMultipleFilesMessageLimit));
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__COUNT_LIMIT.replace("%d", "".concat(uikitMultipleFilesMessageLimit)),
                  hideFooter: true
                },
                childElement: function(_a4) {
                  var closeModal = _a4.closeModal;
                  return React__default__default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            if (files.some(function(file2) {
              return file2.size > uikitUploadSizeLimit;
            })) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload file size exceeding ".concat(uikitUploadSizeLimit));
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT.replace("%d", "".concat(Math.floor(uikitUploadSizeLimit / ONE_MiB))),
                  hideFooter: true
                },
                childElement: function(_a4) {
                  var closeModal = _a4.closeModal;
                  return React__default__default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            return [4, compressImages({
              files,
              imageCompression,
              logger
            })];
          case 1:
            compressedFiles = _a3.sent().compressedFiles;
            sendingFiles = compressedFiles;
            if (sendingFiles.length === 1) {
              logger.info("Channel|useHandleUploadFiles: sending one file.");
              file = sendingFiles[0];
              sendFileMessage(file, quoteMessage);
            } else if (sendingFiles.length > 1) {
              logger.info("Channel|useHandleUploadFiles: sending multiple files.");
              imageFiles_1 = [];
              otherFiles_1 = [];
              sendingFiles.forEach(function(file2) {
                if (isImage(file2.type)) {
                  imageFiles_1.push(file2);
                } else {
                  otherFiles_1.push(file2);
                }
              });
              return [2, otherFiles_1.reduce(function(previousPromise, item) {
                return previousPromise.then(function() {
                  return sendFileMessage(item, quoteMessage);
                });
              }, function() {
                if (imageFiles_1.length === 0) {
                  return Promise.resolve();
                } else if (imageFiles_1.length === 1) {
                  return sendFileMessage(imageFiles_1[0], quoteMessage);
                } else {
                  return sendMultipleFilesMessage(imageFiles_1, quoteMessage);
                }
              }())];
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [
    sendFileMessage,
    sendMultipleFilesMessage,
    quoteMessage
  ]);
  return handleUploadFiles;
};
var ThreadMessageInput = function(props, ref) {
  var _a2;
  var className = props.className, renderFileUploadIcon = props.renderFileUploadIcon, renderVoiceMessageIcon = props.renderVoiceMessageIcon, renderSendMessageIcon = props.renderSendMessageIcon, acceptableMimeTypes = props.acceptableMimeTypes;
  var config2 = useSendbird().state.config;
  var isMobile = useMediaQueryContext().isMobile;
  var stringSet2 = useLocalization().stringSet;
  var isOnline = config2.isOnline, userMention = config2.userMention, logger = config2.logger, groupChannel = config2.groupChannel;
  var threadContext = useThread();
  var _b2 = threadContext.state, currentChannel = _b2.currentChannel, parentMessage = _b2.parentMessage, isMuted = _b2.isMuted, isChannelFrozen = _b2.isChannelFrozen, allThreadMessages = _b2.allThreadMessages, _c = threadContext.actions, sendMessage = _c.sendMessage, sendFileMessage = _c.sendFileMessage, sendVoiceMessage = _c.sendVoiceMessage, sendMultipleFilesMessage = _c.sendMultipleFilesMessage;
  var messageInputRef = useRef();
  var isMentionEnabled = groupChannel.enableMention;
  var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;
  var isMultipleFilesMessageEnabled = (_a2 = threadContext.state.isMultipleFilesMessageEnabled) !== null && _a2 !== void 0 ? _a2 : config2.isMultipleFilesMessageEnabled;
  var threadInputDisabled = props.disabled || !isOnline || isMuted || !((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === Role.OPERATOR) && isChannelFrozen || parentMessage === null;
  var handleUploadFiles = useHandleUploadFiles({
    sendFileMessage,
    sendMultipleFilesMessage,
    quoteMessage: parentMessage
  }, {
    logger
  });
  var _d = useState(""), mentionNickname = _d[0], setMentionNickname = _d[1];
  var _e2 = useState([]), mentionedUsers = _e2[0], setMentionedUsers = _e2[1];
  var _f = useState([]), mentionedUserIds = _f[0], setMentionedUserIds = _f[1];
  var _g2 = useState(null), selectedUser = _g2[0], setSelectedUser = _g2[1];
  var _h = useState([]), mentionSuggestedUsers = _h[0], setMentionSuggestedUsers = _h[1];
  var _j = useState(null), messageInputEvent = _j[0], setMessageInputEvent = _j[1];
  var _k = useState(false), showVoiceMessageInput = _k[0], setShowVoiceMessageInput = _k[1];
  var displaySuggestedMentionList = isOnline && isMentionEnabled && mentionNickname.length > 0 && !isDisabledBecauseFrozen(currentChannel) && !isDisabledBecauseMuted(currentChannel) && !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isBroadcast);
  useEffect(function() {
    setShowVoiceMessageInput(false);
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  var mentionNodes = useDirtyGetMentions({ ref: ref || messageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount);
  useEffect(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a3) {
      var userId = _a3.userId;
      var i3 = mentionedUserIds.indexOf(userId);
      if (i3 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i3, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isBroadcast) && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) !== Role.OPERATOR) {
    return React__default__default.createElement(React__default__default.Fragment, null);
  }
  return React__default__default.createElement(
    "div",
    { className: classnames(showVoiceMessageInput ? "sendbird-thread-message-input--voice-message" : "sendbird-thread-message-input", className) },
    displaySuggestedMentionList && React__default__default.createElement(SuggestedMentionList, {
      targetNickname: mentionNickname,
      inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0,
      // renderUserMentionItem={renderUserMentionItem}
      onUserItemClick: function(user) {
        if (user) {
          setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
        }
        setMentionNickname("");
        setSelectedUser(user);
        setMessageInputEvent(null);
      },
      onFocusItemChange: function() {
        setMessageInputEvent(null);
      },
      onFetchUsers: function(users) {
        setMentionSuggestedUsers(users);
      },
      ableAddMention: ableMention,
      maxMentionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount,
      maxSuggestionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount
    }),
    showVoiceMessageInput ? React__default__default.createElement(VoiceMessageInputWrapper, { channel: currentChannel, onSubmitClick: function(recordedFile, duration) {
      sendVoiceMessage(recordedFile, duration, parentMessage);
      setShowVoiceMessageInput(false);
    }, onCancelClick: function() {
      setShowVoiceMessageInput(false);
    } }) : React__default__default.createElement(MessageInput, { className: "sendbird-thread-message-input__message-input", messageFieldId: "sendbird-message-input-text-field--thread", channel: currentChannel, channelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url, isMobile, disabled: threadInputDisabled, acceptableMimeTypes, setMentionedUsers, mentionSelectedUser: selectedUser, isMentionEnabled, isVoiceMessageEnabled, isSelectingMultipleFilesEnabled: isMultipleFilesMessageEnabled, onVoiceMessageIconClick: function() {
      setShowVoiceMessageInput(true);
    }, renderFileUploadIcon, renderVoiceMessageIcon, renderSendMessageIcon, ref: ref || messageInputRef, placeholder: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isFrozen) && !((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === Role.OPERATOR) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__DISABLED || (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myMutedState) === z.MUTED && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT || (allThreadMessages.length > 0 ? stringSet2.THREAD__INPUT__REPLY_TO_THREAD : stringSet2.THREAD__INPUT__REPLY_IN_THREAD), onStartTyping: function() {
      var _a3;
      (_a3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping) === null || _a3 === void 0 ? void 0 : _a3.call(currentChannel);
    }, onSendMessage: function(_a3) {
      var _b3;
      var message = _a3.message, mentionTemplate = _a3.mentionTemplate;
      sendMessage({
        message,
        mentionedUsers,
        mentionTemplate,
        quoteMessage: parentMessage
      });
      setMentionNickname("");
      setMentionedUsers([]);
      (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel);
    }, onFileUpload: handleUploadFiles, onUserMentioned: function(user) {
      if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
        setSelectedUser(null);
        setMentionNickname("");
      }
    }, onMentionStringChange: function(mentionText) {
      setMentionNickname(mentionText);
    }, onMentionedUserIdsUpdated: function(userIds) {
      setMentionedUserIds(userIds);
    }, onKeyDown: function(e3) {
      if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e3.key === MessageInputKeys.Enter && ableMention || e3.key === MessageInputKeys.ArrowUp || e3.key === MessageInputKeys.ArrowDown)) {
        setMessageInputEvent(e3);
        return true;
      }
      return false;
    } })
  );
};
React__default__default.forwardRef(ThreadMessageInput);
var DELAY = 100;
function calcScrollBottom(scrollHeight, scrollTop) {
  return scrollHeight - scrollTop;
}
function useHandleOnScrollCallback(_a2) {
  var hasMore = _a2.hasMore, hasNext = _a2.hasNext, onScroll = _a2.onScroll, scrollRef = _a2.scrollRef, setShowScrollDownButton = _a2.setShowScrollDownButton;
  var scrollCb = usePreservedCallback$1(function() {
    var element = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
    if (element == null)
      return;
    var scrollTop = element.scrollTop, scrollHeight = element.scrollHeight, clientHeight = element.clientHeight;
    var scrollBottom = calcScrollBottom(scrollHeight, scrollTop);
    if (typeof setShowScrollDownButton === "function") {
      setShowScrollDownButton(scrollHeight > scrollTop + clientHeight + 1);
    }
    if (hasMore && isAboutSame(scrollTop, 0, SCROLL_BUFFER)) {
      onScroll(function() {
        var messagesAreAddedToView = element.scrollHeight > scrollHeight;
        if (messagesAreAddedToView)
          element.scrollTop = element.scrollHeight - scrollBottom;
      });
    }
    if (hasNext && isAboutSame(clientHeight + scrollTop, scrollHeight, SCROLL_BUFFER)) {
      onScroll(function() {
        var messagesAreAddedToView = element.scrollHeight > scrollHeight;
        if (messagesAreAddedToView)
          element.scrollTop = scrollTop;
      });
    }
  });
  return useThrottleCallback(scrollCb, DELAY, { trailing: true });
}
var OpenChannelContext = React__default__default.createContext(null);
var useOpenChannelContext = function() {
  var context = React__default__default.useContext(OpenChannelContext);
  if (!context)
    throw new Error("OpenChannelContext not found. Use within the OpenChannel module");
  return context;
};
React__default__default.forwardRef(function(props, ref) {
  var _a2 = useOpenChannelContext(), currentOpenChannel = _a2.currentOpenChannel, disabled = _a2.disabled, handleSendMessage = _a2.handleSendMessage, handleFileUpload = _a2.handleFileUpload, amIMuted = _a2.amIMuted;
  var channel = currentOpenChannel;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var value = props.value;
  function getPlaceHolderString() {
    if (amIMuted) {
      return stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED;
    }
    if (disabled) {
      return stringSet2.MESSAGE_INPUT__PLACE_HOLDER__DISABLED;
    }
    return "";
  }
  if (!channel) {
    return null;
  }
  return React__default__default.createElement(
    "div",
    { className: "sendbird-openchannel-footer" },
    React__default__default.createElement(MessageInput, { channel: currentOpenChannel, ref, value, disabled, isVoiceMessageEnabled: false, onSendMessage: handleSendMessage, onFileUpload: handleFileUpload, placeholder: getPlaceHolderString() })
  );
});
var copyToClipboard = function(text2) {
  if (window.clipboardData && window.clipboardData.setData) {
    return window.clipboardData.setData("Text", text2);
  }
  if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
    var textarea = document.createElement("textarea");
    textarea.textContent = text2;
    textarea.style.position = "fixed";
    document.body.appendChild(textarea);
    textarea.select();
    try {
      return document.execCommand("copy");
    } catch (ex) {
      return false;
    } finally {
      document.body.removeChild(textarea);
    }
  }
  return false;
};
var OpenChannelMessageStatusTypes = {
  PENDING: "pending",
  FAILED: "failed",
  SUCCEEDED: "succeeded"
};
var getSenderFromMessage = function(message) {
  return message.sender || message._sender;
};
var checkIsSent = function(status) {
  return status === OpenChannelMessageStatusTypes.SUCCEEDED;
};
var checkIsPending = function(status) {
  return status === OpenChannelMessageStatusTypes.PENDING;
};
var checkIsFailed = function(status) {
  return status === OpenChannelMessageStatusTypes.FAILED;
};
var checkIsByMe = function(message, userId) {
  return getSenderFromMessage(message).userId === userId;
};
var isFineCopy = function(_a2) {
  var _b2;
  var message = _a2.message;
  return (message === null || message === void 0 ? void 0 : message.messageType) === "user" && ((_b2 = message === null || message === void 0 ? void 0 : message.message) === null || _b2 === void 0 ? void 0 : _b2.length) > 0;
};
var isFineResend = function(_a2) {
  var message = _a2.message, status = _a2.status, userId = _a2.userId;
  return checkIsByMe(message, userId) && checkIsFailed(status) && (message === null || message === void 0 ? void 0 : message.isResendable);
};
var isFineEdit = function(_a2) {
  var _b2;
  var message = _a2.message, status = _a2.status, userId = _a2.userId;
  return checkIsByMe(message, userId) && checkIsSent(status) && ((_b2 = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message));
};
var isFineDelete = function(_a2) {
  var message = _a2.message, userId = _a2.userId;
  return checkIsByMe(message, userId);
};
var isFineDownload = function(_a2) {
  var _b2;
  var message = _a2.message, status = _a2.status;
  if (((_b2 = message === null || message === void 0 ? void 0 : message.isFileMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message)) && checkIsSent(status)) {
    return true;
  }
  return false;
};
var showMenuTrigger = function(props) {
  var message = props.message, status = props.status, userId = props.userId;
  if (message.messageType === "user") {
    return isFineDelete({ message, userId }) || isFineEdit({ message, status, userId }) || isFineCopy({ message }) || isFineResend({ message, status, userId });
  } else {
    return isFineDelete({ message, userId }) || isFineResend({ message, status, userId });
  }
};
var OpenChannelMobileMenu = function(props) {
  var message = props.message, parentRef = props.parentRef, resendMessage = props.resendMessage, showEdit = props.showEdit, showRemove = props.showRemove, copyToClipboard2 = props.copyToClipboard, hideMenu = props.hideMenu, _a2 = props.isEphemeral, isEphemeral = _a2 === void 0 ? false : _a2;
  var userMessage = message;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var stringSet2 = useLocalization().stringSet;
  var userId = useSendbird().state.config.userId;
  var fileMessage = message;
  return React__default__default.createElement(ContextMenu, { isOpen: true, menuItems: function() {
    return React__default__default.createElement(
      MenuItems,
      { className: "sendbird-openchannel__mobile-menu", parentRef, parentContainRef: parentRef, closeDropdown: hideMenu },
      isFineCopy({ message: userMessage }) && React__default__default.createElement(
        MenuItem,
        { className: "sendbird-openchannel-og-message__top__context-menu__copy", onClick: function() {
          copyToClipboard2 === null || copyToClipboard2 === void 0 ? void 0 : copyToClipboard2();
        }, testID: "open_channel_mobile_context_menu_copy" },
        React__default__default.createElement(React__default__default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__COPY)
      ),
      !isEphemeral && isFineEdit({ message, userId, status }) && React__default__default.createElement(
        MenuItem,
        { className: "sendbird-openchannel-og-message__top__context-menu__edit", onClick: function() {
          showEdit === null || showEdit === void 0 ? void 0 : showEdit();
        }, testID: "open_channel_mobile_context_menu_edit" },
        React__default__default.createElement(React__default__default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__EDIT)
      ),
      isFineResend({ message, userId, status }) && React__default__default.createElement(
        MenuItem,
        { onClick: function() {
          resendMessage === null || resendMessage === void 0 ? void 0 : resendMessage();
        }, testID: "open_channel_mobile_context_menu_resend" },
        React__default__default.createElement(React__default__default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND)
      ),
      !isEphemeral && isFineDelete({ message, userId }) && React__default__default.createElement(
        MenuItem,
        { onClick: function() {
          showRemove === null || showRemove === void 0 ? void 0 : showRemove();
        }, testID: "open_channel_mobile_context_menu_delete" },
        React__default__default.createElement(React__default__default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
      ),
      isFineDownload({ message, status }) && React__default__default.createElement(
        MenuItem,
        { onClick: function() {
          hideMenu();
        }, testID: "open_channel_mobile_context_menu_download_file" },
        React__default__default.createElement("a", { className: "sendbird-openchannel__mobile-menu-hyperlink", rel: "noopener noreferrer", href: fileMessage === null || fileMessage === void 0 ? void 0 : fileMessage.url, target: "_blank" }, stringSet2.CONTEXT_MENU_DROPDOWN__SAVE)
      )
    );
  } });
};
function OpenchannelUserMessage(_a2) {
  var className = _a2.className, message = _a2.message, isOperator2 = _a2.isOperator, _b2 = _a2.isEphemeral, isEphemeral = _b2 === void 0 ? false : _b2, userId = _a2.userId, resendMessage = _a2.resendMessage, disabled = _a2.disabled, showEdit = _a2.showEdit, showRemove = _a2.showRemove, chainTop = _a2.chainTop;
  var _c = useLocalization(), stringSet2 = _c.stringSet, dateLocale = _c.dateLocale;
  var _d = useUserProfileContext(), disableUserProfile = _d.disableUserProfile, renderUserProfile = _d.renderUserProfile;
  var messageRef = useRef();
  var avatarRef = useRef();
  var contextMenuRef = useRef();
  var mobileMenuRef = useRef();
  var _e2 = useState({}), contextStyle = _e2[0], setContextStyle = _e2[1];
  var _f = useState(false), contextMenu = _f[0], setContextMenu = _f[1];
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  useEffect(function() {
    var _a3;
    if (((_a3 = messageRef === null || messageRef === void 0 ? void 0 : messageRef.current) === null || _a3 === void 0 ? void 0 : _a3.clientHeight) && messageRef.current.clientHeight > 36) {
      setContextStyle({ top: "8px " });
    } else {
      setContextStyle({ top: "2px" });
    }
  }, [window.innerWidth]);
  var onLongPress = useLongPress({
    onLongPress: function() {
      setContextMenu(true);
    }
  });
  var isMobile = useMediaQueryContext().isMobile;
  if (!message || message.messageType !== "user") {
    return React__default__default.createElement(React__default__default.Fragment, null);
  }
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(
      "div",
      { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-user-message"
      ], false).join(" "), ref: messageRef },
      React__default__default.createElement("div", { className: "sendbird-openchannel-user-message__left" }, !chainTop && React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return React__default__default.createElement(Avatar$1, { className: "sendbird-openchannel-user-message__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
          if (!disableUserProfile) {
            toggleDropdown();
          }
        } });
      }, menuItems: function(closeDropdown) {
        return renderUserProfile ? renderUserProfile({
          user: sender,
          close: closeDropdown,
          currentUserId: userId,
          avatarRef
        }) : React__default__default.createElement(
          MenuItems,
          { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
          React__default__default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
        );
      } })),
      React__default__default.createElement(
        "div",
        { className: "sendbird-openchannel-user-message__right" },
        !chainTop && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-user-message__right__top" },
          React__default__default.createElement(Label, { className: "sendbird-openchannel-user-message__right__top__sender-name", type: LabelTypography.CAPTION_2, color: isOperator2 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
          React__default__default.createElement(Label, { className: "sendbird-openchannel-user-message__right__top__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message === null || message === void 0 ? void 0 : message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
            locale: dateLocale
          }))
        ),
        React__default__default.createElement(
          "div",
          __assign({}, isMobile ? __assign({}, onLongPress) : {}, { className: "sendbird-openchannel-user-message__right__bottom", ref: mobileMenuRef }),
          React__default__default.createElement(
            Label,
            { className: "sendbird-openchannel-user-message__right__bottom__message", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 },
            message === null || message === void 0 ? void 0 : message.message,
            isEditedMessage(message) && React__default__default.createElement(Label, { key: uuidv4(), type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2, className: "sendbird-openchannel-user-message-word" }, " ".concat(stringSet2.MESSAGE_EDITED, " "))
          )
        ),
        (isPending || isFailed) && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-user-message__right__tail" },
          isPending && React__default__default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-user-message__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-user-message__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      ),
      !isMobile && React__default__default.createElement(
        "div",
        { className: "sendbird-openchannel-user-message__context-menu", ref: contextMenuRef, style: contextStyle },
        React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
          return showMenuTrigger({ message, userId, status }) && React__default__default.createElement(
            IconButton$1,
            { className: "sendbird-openchannel-user-message__context-menu--icon", width: "32px", height: "32px", onClick: function() {
              toggleDropdown();
            } },
            React__default__default.createElement(Icon$1, { type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
          );
        }, menuItems: function(closeDropdown) {
          return React__default__default.createElement(
            MenuItems,
            { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
            isFineCopy({ message }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__copy", onClick: function() {
              copyToClipboard(message.message);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_copy" }, stringSet2.CONTEXT_MENU_DROPDOWN__COPY),
            !isEphemeral && isFineEdit({ message, userId, status }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__edit", onClick: function() {
              if (disabled) {
                return;
              }
              showEdit(true);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_edit" }, stringSet2.CONTEXT_MENU_DROPDOWN__EDIT),
            isFineResend({ message, userId, status }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__resend", onClick: function() {
              resendMessage(message);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
            !isEphemeral && isFineDelete({ message, userId }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__delete", onClick: function() {
              if (disabled) {
                return;
              }
              showRemove(true);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
          );
        } })
      )
    ),
    contextMenu && React__default__default.createElement(OpenChannelMobileMenu, { message, parentRef: mobileMenuRef, hideMenu: function() {
      setContextMenu(false);
    }, showRemove: function() {
      setContextMenu(false);
      showRemove(true);
    }, showEdit: function() {
      setContextMenu(false);
      showEdit(true);
    }, copyToClipboard: function() {
      setContextMenu(false);
      copyToClipboard(message === null || message === void 0 ? void 0 : message.message);
    }, resendMessage: function() {
      setContextMenu(false);
      resendMessage(message);
    } })
  );
}
function OpenChannelAdminMessage(_a2) {
  var className = _a2.className, message = _a2.message;
  return React__default__default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-openchannel-admin-message"
    ], false).join(" ") },
    React__default__default.createElement(Label, { className: "sendbird-openchannel-admin-message__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, message.message || "")
  );
}
function OpenChannelOGMessage(_a2) {
  var _b2, _c, _d;
  var message = _a2.message, isOperator2 = _a2.isOperator, _e2 = _a2.isEphemeral, isEphemeral = _e2 === void 0 ? false : _e2, className = _a2.className, disabled = _a2.disabled, showEdit = _a2.showEdit, showRemove = _a2.showRemove, resendMessage = _a2.resendMessage, chainTop = _a2.chainTop, userId = _a2.userId;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var ogMetaData = (_b2 = message.ogMetaData) !== null && _b2 !== void 0 ? _b2 : null;
  var defaultImage = ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.defaultImage;
  var _f = useLocalization(), stringSet2 = _f.stringSet, dateLocale = _f.dateLocale;
  var isMobile = useMediaQueryContext().isMobile;
  var _g2 = useUserProfileContext(), disableUserProfile = _g2.disableUserProfile, renderUserProfile = _g2.renderUserProfile;
  var _h = useState({}), contextStyle = _h[0], setContextStyle = _h[1];
  var _j = useState(false), showContextMenu = _j[0], setShowContextMenu = _j[1];
  var openLink = function() {
    return openURL(ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.url);
  };
  var onLongPress = useLongPress({
    onLongPress: function() {
      return setShowContextMenu(true);
    },
    onClick: openLink
  }, {
    delay: 300
  });
  var messageComponentRef = useRef();
  var contextMenuRef = useRef();
  var mobileMenuRef = useRef();
  var avatarRef = useRef();
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  var tokens = useMemo(function() {
    return tokenizeMessage({
      messageText: message.message
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  useEffect(function() {
    var _a3, _b3;
    if (((_a3 = messageComponentRef === null || messageComponentRef === void 0 ? void 0 : messageComponentRef.current) === null || _a3 === void 0 ? void 0 : _a3.clientHeight) && ((_b3 = messageComponentRef === null || messageComponentRef === void 0 ? void 0 : messageComponentRef.current) === null || _b3 === void 0 ? void 0 : _b3.clientHeight) > 36) {
      setContextStyle({ top: "8px " });
    } else {
      setContextStyle({ top: "2px" });
    }
  }, [window.innerWidth]);
  if (!message || message.messageType !== "user") {
    return React__default__default.createElement(React__default__default.Fragment, null);
  }
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(
      "div",
      __assign({ className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-og-message"
      ], false).join(" "), ref: messageComponentRef }, isMobile ? __assign({}, onLongPress) : {}),
      React__default__default.createElement(
        "div",
        { className: "sendbird-openchannel-og-message__top" },
        React__default__default.createElement("div", { className: "sendbird-openchannel-og-message__top__left" }, !chainTop && React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
          return React__default__default.createElement(Avatar$1, { className: "sendbird-openchannel-og-message__top__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
            if (!disableUserProfile) {
              toggleDropdown();
            }
          } });
        }, menuItems: function(closeDropdown) {
          return renderUserProfile ? renderUserProfile({
            user: sender,
            close: closeDropdown,
            currentUserId: userId,
            avatarRef
          }) : React__default__default.createElement(
            MenuItems,
            { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
            React__default__default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
          );
        } })),
        React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__top__right" },
          !chainTop && React__default__default.createElement(
            "div",
            { className: "sendbird-openchannel-og-message__top__right__title" },
            React__default__default.createElement(Label, { className: "sendbird-openchannel-og-message__top__right__title__sender-name", type: LabelTypography.CAPTION_2, color: isOperator2 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
            React__default__default.createElement(Label, { className: "sendbird-openchannel-og-message__top__right__title__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message === null || message === void 0 ? void 0 : message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
              locale: dateLocale
            }))
          ),
          React__default__default.createElement(
            "div",
            { className: "sendbird-openchannel-og-message__top__right__description" },
            React__default__default.createElement(
              Label,
              { className: "sendbird-openchannel-og-message__top__right__description__message", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 },
              React__default__default.createElement(TextFragment, { tokens }),
              ((_c = message === null || message === void 0 ? void 0 : message.updatedAt) !== null && _c !== void 0 ? _c : 0) > 0 && React__default__default.createElement(Label, { key: uuidv4(), className: "sendbird-openchannel-og-message--word", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.MESSAGE_EDITED)
            )
          )
        ),
        !isMobile && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__top__context-menu", ref: contextMenuRef, style: contextStyle },
          React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
            return showMenuTrigger({ message, userId, status }) && React__default__default.createElement(
              IconButton$1,
              { className: "sendbird-openchannel-og-message__top__context-menu--icon", width: "32px", height: "32px", onClick: function() {
                toggleDropdown();
              } },
              React__default__default.createElement(Icon$1, { type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
            );
          }, menuItems: function(closeDropdown) {
            return React__default__default.createElement(
              MenuItems,
              { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
              isFineCopy({ message }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__copy", onClick: function() {
                copyToClipboard(message.message);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_copy" }, stringSet2.CONTEXT_MENU_DROPDOWN__COPY),
              !isEphemeral && isFineEdit({ message, userId, status }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__edit", onClick: function() {
                if (disabled) {
                  return;
                }
                showEdit(true);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_edit" }, stringSet2.CONTEXT_MENU_DROPDOWN__EDIT),
              isFineResend({ message, userId, status }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__resend", onClick: function() {
                resendMessage(message);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
              !isEphemeral && isFineDelete({ message, userId }) && React__default__default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__delete", onClick: function() {
                if (disabled) {
                  return;
                }
                showRemove(true);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
            );
          } })
        )
      ),
      React__default__default.createElement(
        "div",
        { className: "sendbird-openchannel-og-message__bottom" },
        React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__bottom__og-tag", ref: mobileMenuRef },
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.url) && React__default__default.createElement(Label, { className: "sendbird-openchannel-og-message__bottom__og-tag__url", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, ogMetaData.url),
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.title) && React__default__default.createElement(LinkLabel, { className: "sendbird-openchannel-og-message__bottom__og-tag__title", src: (_d = ogMetaData.url) !== null && _d !== void 0 ? _d : "", type: LabelTypography.SUBTITLE_2, color: LabelColors.PRIMARY }, ogMetaData.title),
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.description) && React__default__default.createElement(Label, { className: "sendbird-openchannel-og-message__bottom__og-tag__description", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.description),
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.url) && React__default__default.createElement("div", { className: "sendbird-openchannel-og-message__bottom__og-tag__thumbnail", role: "button", onClick: openLink, onKeyDown: openLink, tabIndex: 0 }, defaultImage && React__default__default.createElement(ImageRenderer, { className: "sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image", url: defaultImage.url || "", alt: defaultImage.alt || "", width: "334px", height: "189px", defaultComponent: React__default__default.createElement(
            "div",
            { className: "sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image--placeholder" },
            React__default__default.createElement(Icon$1, { type: IconTypes.THUMBNAIL_NONE, width: "56px", height: "56px" })
          ) }))
        ),
        (isPending || isFailed) && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__top__right__tail" },
          isPending && React__default__default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-og-message__top__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-og-message__top__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      )
    ),
    showContextMenu && React__default__default.createElement(OpenChannelMobileMenu, { message, parentRef: mobileMenuRef, hideMenu: function() {
      setShowContextMenu(false);
    }, showRemove: function() {
      setShowContextMenu(false);
      showRemove(true);
    }, showEdit: function() {
      setShowContextMenu(false);
      showEdit(true);
    }, copyToClipboard: function() {
      setShowContextMenu(false);
      copyToClipboard(message === null || message === void 0 ? void 0 : message.message);
    }, resendMessage: function() {
      setShowContextMenu(false);
      resendMessage(message);
    } })
  );
}
var SUPPORTING_TYPES = {
  IMAGE: "IMAGE",
  VIDEO: "VIDEO",
  UNSUPPORTED: "UNSUPPORTED"
};
var SUPPORTED_MIMES = {
  IMAGE: [
    "image/jpeg",
    "image/jpg",
    "image/png",
    "image/gif",
    "image/webp"
  ],
  VIDEO: [
    "video/mpeg",
    "video/ogg",
    "video/webm",
    "video/mp4"
  ]
};
var getSupportingFileType = function(type) {
  if (SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0) {
    return SUPPORTING_TYPES.IMAGE;
  }
  if (SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0) {
    return SUPPORTING_TYPES.VIDEO;
  }
  return SUPPORTING_TYPES.UNSUPPORTED;
};
function OpenchannelThumbnailMessage(_a2) {
  var _b2;
  var className = _a2.className, message = _a2.message, isOperator2 = _a2.isOperator, _c = _a2.isEphemeral, isEphemeral = _c === void 0 ? false : _c, disabled = _a2.disabled, userId = _a2.userId, chainTop = _a2.chainTop, onClick = _a2.onClick, showRemove = _a2.showRemove, resendMessage = _a2.resendMessage;
  var type = message.type, url = message.url, thumbnails = message.thumbnails, localUrl = message.localUrl;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var thumbnailUrl = thumbnails && thumbnails.length > 0 && thumbnails[0].url || null;
  var _d = useLocalization(), stringSet2 = _d.stringSet, dateLocale = _d.dateLocale;
  var _e2 = useUserProfileContext(), disableUserProfile = _e2.disableUserProfile, renderUserProfile = _e2.renderUserProfile;
  var _f = useState(360), messageWidth = _f[0], setMessageWidth = _f[1];
  var _g2 = useState(false), contextMenu = _g2[0], setContextMenu = _g2[1];
  var messageRef = useRef(null);
  var mobileMenuRef = useRef(null);
  var contextMenuRef = useRef(null);
  var avatarRef = useRef(null);
  var onLongPress = useLongPress({
    onLongPress: function() {
      setContextMenu(true);
    },
    onClick: function() {
      onClick(true);
    }
  });
  var isMobile = useMediaQueryContext().isMobile;
  var memorizedThumbnailPlaceHolder = useMemo(function() {
    return function(type2) {
      return function(_a3) {
        var style = _a3.style;
        return (
          // eslint-disable-line
          React__default__default.createElement(
            "div",
            { style },
            React__default__default.createElement(Icon$1, { type: type2, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" })
          )
        );
      };
    };
  }, []);
  var isMessageSent = checkIsSent(status);
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  useEffect(function() {
    var _a3, _b3;
    var thumbnailWidth = ((_b3 = (_a3 = messageRef === null || messageRef === void 0 ? void 0 : messageRef.current) === null || _a3 === void 0 ? void 0 : _a3.clientWidth) !== null && _b3 !== void 0 ? _b3 : 0) - 80;
    setMessageWidth(thumbnailWidth > 360 ? 360 : thumbnailWidth);
  }, []);
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(
      "div",
      { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-thumbnail-message"
      ], false).join(" "), ref: messageRef },
      React__default__default.createElement("div", { className: "sendbird-openchannel-thumbnail-message__left" }, !chainTop && React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return React__default__default.createElement(Avatar$1, { className: "sendbird-openchannel-thumbnail-message__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
          if (!disableUserProfile) {
            toggleDropdown();
          }
        } });
      }, menuItems: function(closeDropdown) {
        return renderUserProfile ? renderUserProfile({
          user: sender,
          close: closeDropdown,
          currentUserId: userId,
          avatarRef
        }) : React__default__default.createElement(
          MenuItems,
          { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
          React__default__default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
        );
      } })),
      React__default__default.createElement(
        "div",
        { className: "sendbird-openchannel-thumbnail-message__right" },
        !chainTop && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-thumbnail-message__right__title" },
          React__default__default.createElement(Label, { className: "sendbird-openchannel-thumbnail-message__right__title__sender-name", type: LabelTypography.CAPTION_2, color: isOperator2 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
          React__default__default.createElement(Label, { className: "sendbird-openchannel-thumbnail-message__right__title__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
            locale: dateLocale
          }))
        ),
        React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-thumbnail-message__right__body", ref: mobileMenuRef },
          React__default__default.createElement(
            "div",
            __assign({ className: "sendbird-openchannel-thumbnail-message__right__body__wrap", role: "button", onClick: function() {
              if (isMessageSent) {
                onClick(true);
              }
            }, onKeyDown: function() {
              if (isMessageSent) {
                onClick(true);
              }
            }, tabIndex: 0 }, isMobile ? __assign({}, onLongPress) : {}),
            React__default__default.createElement("div", { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__overlay" }),
            (_b2 = {}, _b2[SUPPORTING_TYPES.VIDEO] = url || localUrl ? React__default__default.createElement(
              "div",
              { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video" },
              thumbnailUrl ? React__default__default.createElement(ImageRenderer, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video", url: thumbnailUrl, width: messageWidth, height: "270px", alt: "image", placeHolder: memorizedThumbnailPlaceHolder(IconTypes.PLAY) }) : React__default__default.createElement(
                "video",
                { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video__video" },
                React__default__default.createElement("source", { src: url || localUrl, type })
              ),
              React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon", type: IconTypes.PLAY, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" })
            ) : React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon", type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" }), _b2[SUPPORTING_TYPES.IMAGE] = url || localUrl ? React__default__default.createElement(ImageRenderer, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__image", url: thumbnailUrl || url || localUrl || "", alt: "image", width: messageWidth, height: "270px", placeHolder: memorizedThumbnailPlaceHolder(IconTypes.PHOTO) }) : React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon", type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" }), _b2[SUPPORTING_TYPES.UNSUPPORTED] = React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__unknown", type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" }), _b2)[getSupportingFileType(type)]
          )
        ),
        (isPending || isFailed) && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-thumbnail-message__right__tail" },
          isPending && React__default__default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-thumbnail-message__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-thumbnail-message__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      ),
      !isMobile && React__default__default.createElement("div", { className: "sendbird-openchannel-thumbnail-message__context-menu", ref: contextMenuRef }, (isFineResend({ message, userId, status }) || !isEphemeral) && React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return showMenuTrigger({ message, userId, status }) && React__default__default.createElement(
          IconButton$1,
          { className: "sendbird-openchannel-thumbnail-message__context-menu--icon", width: "32px", height: "32px", onClick: toggleDropdown },
          React__default__default.createElement(Icon$1, { type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
        );
      }, menuItems: function(closeDropdown) {
        return React__default__default.createElement(
          MenuItems,
          { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
          isFineResend({ message, userId, status }) && React__default__default.createElement(MenuItem, { onClick: function() {
            resendMessage(message);
            closeDropdown();
          }, testID: "open_channel_thumbnail_message_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
          !isEphemeral && isFineDelete({ message, userId }) && React__default__default.createElement(MenuItem, { onClick: function() {
            if (disabled) {
              return;
            }
            showRemove(true);
            closeDropdown();
          }, testID: "open_channel_thumbnail_message_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
        );
      } }))
    ),
    contextMenu && React__default__default.createElement(OpenChannelMobileMenu, { message, parentRef: mobileMenuRef, hideMenu: function() {
      setContextMenu(false);
    }, showRemove: function() {
      setContextMenu(false);
      showRemove(true);
    }, resendMessage: function() {
      setContextMenu(false);
      resendMessage(message);
    } })
  );
}
var checkFileType = function(fileUrl) {
  var audioFile = /(\.mp3)$/i;
  var gifFile = /(\.gif)$/i;
  if (audioFile.test(fileUrl)) {
    return IconTypes.FILE_AUDIO;
  }
  if (gifFile.test(fileUrl)) {
    return IconTypes.GIF;
  }
  return IconTypes.FILE_DOCUMENT;
};
var truncate = function(fullStr, strLen) {
  if (fullStr === null || fullStr === void 0)
    return "";
  if (fullStr.length <= strLen)
    return fullStr;
  var separator = "...";
  var sepLen = separator.length;
  var charsToShow = strLen - sepLen;
  var frontChars = Math.ceil(charsToShow / 2);
  var backChars = Math.floor(charsToShow / 2);
  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);
};
function OpenChannelFileMessage(_a2) {
  var className = _a2.className, message = _a2.message, isOperator2 = _a2.isOperator, _b2 = _a2.isEphemeral, isEphemeral = _b2 === void 0 ? false : _b2, userId = _a2.userId, disabled = _a2.disabled, chainTop = _a2.chainTop, showRemove = _a2.showRemove, resendMessage = _a2.resendMessage;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var _c = useLocalization(), dateLocale = _c.dateLocale, stringSet2 = _c.stringSet;
  var contextMenuRef = useRef(null);
  var mobileMenuRef = useRef(null);
  var avatarRef = useRef(null);
  var _d = useUserProfileContext(), disableUserProfile = _d.disableUserProfile, renderUserProfile = _d.renderUserProfile;
  var isMobile = useMediaQueryContext().isMobile;
  var openFileUrl = function() {
    return openURL(message.url);
  };
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  var _e2 = useState(false), contextMenu = _e2[0], setContextMenu = _e2[1];
  var longPress = useLongPress({
    onLongPress: function() {
      if (isMobile) {
        setContextMenu(true);
      }
    },
    onClick: openFileUrl
  }, { delay: 300 });
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(
      "div",
      { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-file-message"
      ], false).join(" "), ref: mobileMenuRef },
      React__default__default.createElement("div", { className: "sendbird-openchannel-file-message__left" }, !chainTop && React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return React__default__default.createElement(Avatar$1, { className: "sendbird-openchannel-file-message__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
          if (!disableUserProfile) {
            toggleDropdown();
          }
        } });
      }, menuItems: function(closeDropdown) {
        return renderUserProfile ? renderUserProfile({
          user: sender,
          close: closeDropdown,
          currentUserId: userId,
          avatarRef
        }) : React__default__default.createElement(
          MenuItems,
          { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
          React__default__default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
        );
      } })),
      React__default__default.createElement(
        "div",
        { className: "sendbird-openchannel-file-message__right" },
        !chainTop && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-file-message__right__title" },
          React__default__default.createElement(Label, { className: "sendbird-openchannel-file-message__right__title__sender-name", type: LabelTypography.CAPTION_2, color: isOperator2 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
          React__default__default.createElement(Label, { className: "sendbird-openchannel-file-message__right__title__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
            locale: dateLocale
          }))
        ),
        React__default__default.createElement(
          "div",
          __assign({ className: "sendbird-openchannel-file-message__right__body" }, isMobile ? __assign({}, longPress) : {}),
          checkFileType(message.url) && React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-file-message__right__body__icon", type: checkFileType(message.url), fillColor: IconColors.PRIMARY, width: "48px", height: "48px" }),
          React__default__default.createElement(
            TextButton,
            { className: "sendbird-openchannel-file-message__right__body__file-name", onClick: openFileUrl },
            React__default__default.createElement(Label, { className: "sendbird-openchannel-file-message__right__body__file-name__label", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, truncate(message.name || message.url, 40))
          )
        ),
        (isPending || isFailed) && React__default__default.createElement(
          "div",
          { className: "sendbird-openchannel-file-message__right__tail" },
          isPending && React__default__default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-file-message__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && React__default__default.createElement(Icon$1, { className: "sendbird-openchannel-file-message__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      ),
      !isMobile && React__default__default.createElement("div", { className: "sendbird-openchannel-file-message__context-menu", ref: contextMenuRef }, (isFineResend({ message, userId, status }) || !isEphemeral) && React__default__default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return showMenuTrigger({ message, userId, status }) && React__default__default.createElement(
          IconButton$1,
          { className: "sendbird-openchannel-file-message__context-menu__icon", width: "32px", height: "32px", onClick: toggleDropdown },
          React__default__default.createElement(Icon$1, { type: IconTypes.MORE, width: "24px", height: "24px" })
        );
      }, menuItems: function(closeDropdown) {
        return React__default__default.createElement(
          MenuItems,
          { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
          isFineResend({ message, userId, status }) && React__default__default.createElement(MenuItem, { onClick: function() {
            if (disabled) {
              return;
            }
            resendMessage(message);
            closeDropdown();
          }, testID: "open_channel_file_message_context_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
          !isEphemeral && isFineDelete({ message, userId }) && React__default__default.createElement(MenuItem, { onClick: function() {
            if (disabled) {
              return;
            }
            showRemove(true);
            closeDropdown();
          }, testID: "open_channel_file_message_context_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
        );
      } }))
    ),
    contextMenu && React__default__default.createElement(OpenChannelMobileMenu, { message, hideMenu: function() {
      setContextMenu(false);
    }, parentRef: mobileMenuRef, showRemove: function() {
      setContextMenu(false);
      showRemove(true);
    } })
  );
}
function RemoveMessageModal(_a2) {
  var message = _a2.message, onCloseModal = _a2.onCloseModal, onDeleteMessage = _a2.onDeleteMessage;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  return React__default__default.createElement(Modal, { onCancel: onCloseModal, onSubmit: onDeleteMessage, submitText: stringSet2.MESSAGE_MENU__DELETE, titleText: getModalDeleteMessageTitle(stringSet2, message) });
}
var MessageTypes = {
  ADMIN: "ADMIN",
  USER: "USER",
  FILE: "FILE",
  THUMBNAIL: "THUMBNAIL",
  OG: "OG",
  UNKNOWN: "UNKNOWN"
};
var SendingMessageStatus = {
  FAILED: "failed",
  PENDING: "pending"
};
var getMessageType = function(message, options) {
  var _a2, _b2;
  var isOgMessageEnabledInOpenChannel = options === null || options === void 0 ? void 0 : options.isOgMessageEnabledInOpenChannel;
  if (((_a2 = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _a2 === void 0 ? void 0 : _a2.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) === "user") {
    return (message === null || message === void 0 ? void 0 : message.ogMetaData) && isOgMessageEnabledInOpenChannel ? MessageTypes.OG : MessageTypes.USER;
  }
  if ((_b2 = message === null || message === void 0 ? void 0 : message.isAdminMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message)) {
    return MessageTypes.ADMIN;
  }
  if ((message === null || message === void 0 ? void 0 : message.messageType) === "file") {
    return isImage(message.type) || isVideo(message.type) ? MessageTypes.THUMBNAIL : MessageTypes.FILE;
  }
  return MessageTypes.UNKNOWN;
};
function OpenChannelMessage(props) {
  var _a2;
  var _b2;
  var message = props.message, chainTop = props.chainTop, chainBottom = props.chainBottom, hasSeparator = props.hasSeparator, renderMessage = props.renderMessage;
  var _c = useOpenChannelContext(), currentOpenChannel = _c.currentOpenChannel, deleteMessage = _c.deleteMessage, updateMessage = _c.updateMessage, resendMessage = _c.resendMessage;
  var _d = useLocalization(), dateLocale = _d.dateLocale, stringSet2 = _d.stringSet;
  var editDisabled = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isFrozen;
  var state = useSendbird().state;
  var currentUserId = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var isOgMessageEnabledInOpenChannel = state.config.openChannel.enableOgtag;
  var sender;
  if ((message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
    sender = message === null || message === void 0 ? void 0 : message.sender;
  }
  var _e2 = useState(false), showEdit = _e2[0], setShowEdit = _e2[1];
  var _f = useState(false), showRemove = _f[0], setShowRemove = _f[1];
  var _g2 = useState(false), showFileViewer = _g2[0], setShowFileViewer = _g2[1];
  var editMessageInputRef = useRef(null);
  var isByMe = false;
  if (sender && (message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
    isByMe = currentUserId === sender.userId || (message === null || message === void 0 ? void 0 : message.sendingStatus) === SendingMessageStatus.PENDING || (message === null || message === void 0 ? void 0 : message.sendingStatus) === SendingMessageStatus.FAILED;
  }
  if (renderMessage) {
    return React__default__default.createElement("div", { className: "sendbird-open-channel-msg-hoc sendbird-msg--scroll-ref", "data-testid": "sendbird-message-hoc" }, renderMessage({ message, chainTop, chainBottom }));
  }
  if ((message === null || message === void 0 ? void 0 : message.messageType) === "user" && showEdit) {
    return React__default__default.createElement(MessageInput, { isEdit: true, channel: currentOpenChannel, disabled: editDisabled, ref: editMessageInputRef, message, onUpdateMessage: function(_a3) {
      var messageId = _a3.messageId, message2 = _a3.message;
      updateMessage(messageId, message2);
      setShowEdit(false);
    }, onCancelEdit: function() {
      setShowEdit(false);
    } });
  }
  return React__default__default.createElement(
    "div",
    { className: "sendbird-open-channel-msg-hoc sendbird-msg--scroll-ref", "data-testid": "sendbird-message-hoc" },
    React__default__default.createElement(
      React__default__default.Fragment,
      null,
      hasSeparator && (message === null || message === void 0 ? void 0 : message.createdAt) && React__default__default.createElement(
        DateSeparator,
        null,
        React__default__default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, format(message === null || message === void 0 ? void 0 : message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_LIST__DATE_SEPARATOR, { locale: dateLocale }))
      ),
      (_a2 = {}, _a2[MessageTypes.ADMIN] = function() {
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "admin") {
          return React__default__default.createElement(OpenChannelAdminMessage, { message });
        }
      }(), _a2[MessageTypes.FILE] = function() {
        var _a3;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "file") {
          return React__default__default.createElement(OpenChannelFileMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, disabled: editDisabled, userId: currentUserId, showRemove: setShowRemove, resendMessage, chainTop, chainBottom });
        }
      }(), _a2[MessageTypes.OG] = function() {
        var _a3;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "user" && isOgMessageEnabledInOpenChannel) {
          return React__default__default.createElement(OpenChannelOGMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, userId: currentUserId, showEdit: setShowEdit, disabled: editDisabled, showRemove: setShowRemove, resendMessage, chainTop, chainBottom });
        }
      }(), _a2[MessageTypes.THUMBNAIL] = function() {
        var _a3;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "file") {
          return React__default__default.createElement(OpenchannelThumbnailMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, disabled: editDisabled, userId: currentUserId, showRemove: setShowRemove, resendMessage, onClick: setShowFileViewer, chainTop, chainBottom });
        }
      }(), _a2[MessageTypes.USER] = function() {
        var _a3;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "user") {
          return React__default__default.createElement(OpenchannelUserMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, userId: currentUserId, disabled: editDisabled, showEdit: setShowEdit, showRemove: setShowRemove, resendMessage, chainTop, chainBottom });
        }
      }(), _a2[MessageTypes.UNKNOWN] = /* @__PURE__ */ function() {
      }(), _a2)[getMessageType(message, { isOgMessageEnabledInOpenChannel })],
      showRemove && React__default__default.createElement(RemoveMessageModal, { message, onCloseModal: function() {
        return setShowRemove(false);
      }, onDeleteMessage: function() {
        if ((message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
          deleteMessage(message);
        }
      } }),
      showFileViewer && (message === null || message === void 0 ? void 0 : message.messageType) === "file" && React__default__default.createElement(FileViewer$1, { onClose: function() {
        return setShowFileViewer(false);
      }, message, onDelete: function() {
        return deleteMessage(message);
      }, isByMe })
    )
  );
}
function OpenChannelMessageList(props, ref) {
  var _a2 = useOpenChannelContext(), _b2 = _a2.isMessageGroupingEnabled, isMessageGroupingEnabled = _b2 === void 0 ? true : _b2, allMessages = _a2.allMessages, hasMore = _a2.hasMore, onScroll = _a2.onScroll;
  var state = useSendbird().state;
  var stringSet2 = useLocalization().stringSet;
  var userId = state.config.userId;
  var localRef = useRef(null);
  var scrollRef = ref || localRef;
  var _c = useState(false), showScrollDownButton = _c[0], setShowScrollDownButton = _c[1];
  var scrollToBottom = function() {
    if (scrollRef && "current" in scrollRef && scrollRef.current) {
      scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);
      setShowScrollDownButton(false);
    }
  };
  var handleOnScroll = useHandleOnScrollCallback({
    setShowScrollDownButton,
    hasMore,
    onScroll,
    scrollRef
  });
  var memoizedMessageList = useMemo(function() {
    var _a3;
    if (allMessages.length > 0) {
      return allMessages.map(function(message, index) {
        var _a4;
        var previousMessage = allMessages[index - 1];
        var nextMessage = allMessages[index - 1];
        var previousMessageCreatedAt = previousMessage && previousMessage.createdAt;
        var currentCreatedAt = message === null || message === void 0 ? void 0 : message.createdAt;
        var hasSeparator = !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));
        var _b3 = isMessageGroupingEnabled ? compareMessagesForGrouping(previousMessage, message, nextMessage, stringSet2) : [false, false], chainTop = _b3[0], chainBottom = _b3[1];
        var isByMe = ((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId) === userId;
        var key = (message === null || message === void 0 ? void 0 : message.messageId) || (message === null || message === void 0 ? void 0 : message.reqId);
        return React__default__default.createElement(
          MessageProvider$1,
          { message, isByMe, key },
          React__default__default.createElement(OpenChannelMessage, { message, chainTop, chainBottom, hasSeparator, renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage })
        );
      });
    }
    return ((_a3 = props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList) === null || _a3 === void 0 ? void 0 : _a3.call(props)) || React__default__default.createElement(PlaceHolder, { className: "sendbird-openchannel-conversation-scroll__container__place-holder", type: PlaceHolderTypes.NO_MESSAGES });
  }, [allMessages]);
  return React__default__default.createElement(
    "div",
    { className: "sendbird-openchannel-conversation-scroll" },
    React__default__default.createElement(
      "div",
      { className: "sendbird-openchannel-conversation-scroll__container" },
      React__default__default.createElement("div", { className: "sendbird-openchannel-conversation-scroll__container__padding" }),
      React__default__default.createElement("div", { className: [
        "sendbird-openchannel-conversation-scroll__container__item-container",
        allMessages.length > 0 ? "" : "no-messages"
      ].join(" "), onScroll: handleOnScroll, ref: scrollRef }, memoizedMessageList)
    ),
    showScrollDownButton && React__default__default.createElement(
      "div",
      { className: "sendbird-openchannel-conversation-scroll__container__scroll-bottom-button", onClick: scrollToBottom, onKeyDown: scrollToBottom, tabIndex: 0, role: "button" },
      React__default__default.createElement(Icon$1, { width: "24px", height: "24px", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.CONTENT })
    )
  );
}
React__default__default.forwardRef(OpenChannelMessageList);
React__default__default.createContext(null);
createContext({
  openedListKeys: [],
  addOpenedListKey: noop$4,
  removeOpenedListKey: noop$4,
  clearOpenedListKeys: noop$4,
  allowMultipleOpen: false
});
function useSendbirdStateContext() {
  var _a2 = useSendbird(), state = _a2.state, actions = _a2.actions;
  return __assign(__assign({}, state), actions);
}
var GroupChannelListUIView = function(_a2) {
  var renderHeader = _a2.renderHeader, renderPlaceHolderError = _a2.renderPlaceHolderError, renderPlaceHolderLoading = _a2.renderPlaceHolderLoading, renderPlaceHolderEmptyList = _a2.renderPlaceHolderEmptyList, onChangeTheme = _a2.onChangeTheme, onUserProfileUpdated = _a2.onUserProfileUpdated, allowProfileEdit = _a2.allowProfileEdit, channels = _a2.channels, onLoadMore = _a2.onLoadMore, initialized = _a2.initialized, renderChannel = _a2.renderChannel, renderAddChannel = _a2.renderAddChannel, scrollRef = _a2.scrollRef;
  var _b2 = useState(false), showProfileEdit = _b2[0], setShowProfileEdit = _b2[1];
  var stores2 = useSendbird().state.stores;
  var renderer2 = {
    addChannel: renderAddChannel,
    channel: renderChannel,
    placeholder: {
      loading: function() {
        if (initialized)
          return null;
        if (renderPlaceHolderLoading)
          return renderPlaceHolderLoading();
        return React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING });
      },
      empty: function() {
        if (!initialized)
          return null;
        if (renderPlaceHolderEmptyList)
          return renderPlaceHolderEmptyList();
        return React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_CHANNELS });
      },
      error: function() {
        if (!initialized || !stores2.sdkStore.error)
          return null;
        if (renderPlaceHolderError)
          return renderPlaceHolderError();
        return React__default__default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG });
      }
    }
  };
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement("div", { className: "sendbird-channel-list__header" }, (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || React__default__default.createElement(GroupChannelListHeader, { onEdit: function() {
      return allowProfileEdit && setShowProfileEdit(true);
    }, allowProfileEdit, renderIconButton: function() {
      return renderer2.addChannel();
    } })),
    showProfileEdit && React__default__default.createElement(EditUserProfile, { onThemeChange: onChangeTheme, onCancel: function() {
      return setShowProfileEdit(false);
    }, onEditProfile: function(user) {
      setShowProfileEdit(false);
      onUserProfileUpdated(user);
    } }),
    React__default__default.createElement(ChannelListComponent, { data: channels, renderItem: renderer2.channel, onLoadMore, placeholderLoading: renderer2.placeholder.loading(), placeholderEmpty: renderer2.placeholder.empty(), placeholderError: renderer2.placeholder.error(), scrollRef })
  );
};
var ChannelListComponent = function(props) {
  var data = props.data, renderItem = props.renderItem, onLoadMore = props.onLoadMore, placeholderLoading = props.placeholderLoading, placeholderError = props.placeholderError, placeholderEmpty = props.placeholderEmpty, scrollRef = props.scrollRef;
  var onScroll = useOnScrollPositionChangeDetector({
    onReachedBottom: function() {
      return onLoadMore === null || onLoadMore === void 0 ? void 0 : onLoadMore();
    }
  });
  return React__default__default.createElement(
    "div",
    { className: "sendbird-channel-list__body", onScroll, ref: scrollRef },
    placeholderError,
    React__default__default.createElement("div", null, data.map(function(item, index) {
      return renderItem({ item, index });
    })),
    placeholderLoading,
    data.length === 0 && placeholderEmpty
  );
};
var filterUser = function(idsToFilter) {
  return function(currentId) {
    return idsToFilter === null || idsToFilter === void 0 ? void 0 : idsToFilter.includes(currentId);
  };
};
var setChannelType = function(params, type) {
  if (type === "broadcast") {
    params.isBroadcast = true;
  }
  if (type === "supergroup") {
    params.isSuper = true;
  }
  return params;
};
var createDefaultUserListQuery = function(_a2) {
  var sdk = _a2.sdk, userFilledApplicationUserListQuery = _a2.userFilledApplicationUserListQuery;
  var params = sdk.createApplicationUserListQuery();
  if (userFilledApplicationUserListQuery) {
    Object.keys(userFilledApplicationUserListQuery).forEach(function(key) {
      params[key] = userFilledApplicationUserListQuery[key];
    });
  }
  return params;
};
var CHANNEL_TYPE;
(function(CHANNEL_TYPE2) {
  CHANNEL_TYPE2["GROUP"] = "group";
  CHANNEL_TYPE2["SUPERGROUP"] = "supergroup";
  CHANNEL_TYPE2["BROADCAST"] = "broadcast";
})(CHANNEL_TYPE || (CHANNEL_TYPE = {}));
var CreateChannelContext = React__default__default.createContext(null);
var initialState = {
  sdk: void 0,
  userListQuery: void 0,
  onCreateChannelClick: void 0,
  onChannelCreated: void 0,
  onBeforeCreateChannel: void 0,
  pageStep: 0,
  type: CHANNEL_TYPE.GROUP,
  onCreateChannel: void 0,
  overrideInviteUser: void 0
};
var CreateChannelManager = function(props) {
  var onCreateChannelClick = props.onCreateChannelClick, onBeforeCreateChannel = props.onBeforeCreateChannel, onChannelCreated = props.onChannelCreated, userListQuery = props.userListQuery, onCreateChannel = props.onCreateChannel, overrideInviteUser = props.overrideInviteUser;
  var updateState = useCreateChannelStore().updateState;
  var config2 = useSendbird().state.config;
  var _userListQuery = userListQuery !== null && userListQuery !== void 0 ? userListQuery : config2 === null || config2 === void 0 ? void 0 : config2.userListQuery;
  useEffect(function() {
    updateState({
      onCreateChannelClick,
      onBeforeCreateChannel,
      onChannelCreated,
      userListQuery: _userListQuery,
      onCreateChannel,
      overrideInviteUser
    });
  }, [
    onCreateChannelClick,
    onBeforeCreateChannel,
    onChannelCreated,
    userListQuery,
    onCreateChannel,
    overrideInviteUser,
    _userListQuery
  ]);
  return null;
};
var CreateChannelProvider = function(props) {
  var children = props.children;
  return React__default__default.createElement(
    InternalCreateChannelProvider,
    __assign({}, props),
    React__default__default.createElement(CreateChannelManager, __assign({}, props)),
    children
  );
};
var createCreateChannelStore = function(props) {
  return createStore(__assign(__assign({}, initialState), props));
};
var InternalCreateChannelProvider = function(props) {
  var children = props.children;
  var defaultProps = deleteNullish({
    userListQuery: props === null || props === void 0 ? void 0 : props.userListQuery,
    onCreateChannelClick: props === null || props === void 0 ? void 0 : props.onCreateChannelClick,
    onChannelCreated: props === null || props === void 0 ? void 0 : props.onChannelCreated,
    onBeforeCreateChannel: props === null || props === void 0 ? void 0 : props.onBeforeCreateChannel,
    onCreateChannel: props === null || props === void 0 ? void 0 : props.onCreateChannel,
    overrideInviteUser: props === null || props === void 0 ? void 0 : props.overrideInviteUser
  });
  var storeRef = useRef(createCreateChannelStore(defaultProps));
  return React__default__default.createElement(CreateChannelContext.Provider, { value: storeRef.current }, children);
};
var useCreateChannelStore = function() {
  return useStore(CreateChannelContext, function(state) {
    return state;
  }, initialState);
};
var useCreateChannel = function() {
  var store = useContext(CreateChannelContext);
  var sendbirdStore = useSendbirdStateContext();
  if (!store)
    throw new Error("useCreateChannel must be used within a CreateChannelProvider");
  var state = shimExports.useSyncExternalStore(store.subscribe, store.getState);
  var actions = useMemo(function() {
    return {
      setPageStep: function(pageStep) {
        return store.setState(function(state2) {
          return __assign(__assign({}, state2), { pageStep });
        });
      },
      setType: function(type) {
        return store.setState(function(state2) {
          return __assign(__assign({}, state2), { type });
        });
      },
      createChannel: getCreateGroupChannel(sendbirdStore)
    };
  }, [store]);
  return { state, actions };
};
var BUFFER = 50;
var InviteUsers = function(_a2) {
  var onCancel = _a2.onCancel, userListQuery = _a2.userListQuery;
  var _b2 = useCreateChannel(), _c = _b2.state, onCreateChannelClick = _c.onCreateChannelClick, onBeforeCreateChannel = _c.onBeforeCreateChannel, onChannelCreated = _c.onChannelCreated, onCreateChannel = _c.onCreateChannel, overrideInviteUser = _c.overrideInviteUser, type = _c.type, createChannel = _b2.actions.createChannel;
  var _d = useSendbird().state, userId = _d.config.userId, sdk = _d.stores.sdkStore.sdk;
  var idsToFilter = [userId];
  var _e2 = useState([]), users = _e2[0], setUsers = _e2[1];
  var _f = useState({}), selectedUsers = _f[0], setSelectedUsers = _f[1];
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var _g2 = useState(null), usersDataSource = _g2[0], setUsersDataSource = _g2[1];
  var selectedCount = Object.keys(selectedUsers).length;
  var titleText = stringSet2.MODAL__CREATE_CHANNEL__TITLE;
  var submitText = stringSet2.BUTTON__CREATE;
  var isMobile = useMediaQueryContext().isMobile;
  var _h = useState(window.innerHeight), scrollableAreaHeight = _h[0], setScrollableAreaHeight = _h[1];
  useEffect(function() {
    var applicationUserListQuery = userListQuery ? userListQuery() : createDefaultUserListQuery({ sdk });
    setUsersDataSource(applicationUserListQuery);
    if (!(applicationUserListQuery === null || applicationUserListQuery === void 0 ? void 0 : applicationUserListQuery.isLoading)) {
      applicationUserListQuery.next().then(function(it2) {
        setUsers(it2);
      });
    }
  }, []);
  useEffect(function() {
    var scrollableAreaHeight2 = function() {
      setScrollableAreaHeight(window.innerHeight);
    };
    window.addEventListener("resize", scrollableAreaHeight2);
    return function() {
      window.removeEventListener("resize", scrollableAreaHeight2);
    };
  }, []);
  return React__default__default.createElement(
    Modal,
    {
      isFullScreenOnMobile: true,
      titleText,
      submitText,
      type: ButtonTypes.PRIMARY,
      // Disable the create button if no users are selected,
      // but if there's only the logged-in user in the user list,
      // then the create button should be enabled
      disabled: users.length > 1 && Object.keys(selectedUsers).length === 0,
      onCancel,
      onSubmit: function() {
        var selectedUserList = Object.keys(selectedUsers).length > 0 ? Object.keys(selectedUsers) : [userId];
        var _onChannelCreated = onChannelCreated !== null && onChannelCreated !== void 0 ? onChannelCreated : onCreateChannel;
        var _onCreateChannelClick = onCreateChannelClick !== null && onCreateChannelClick !== void 0 ? onCreateChannelClick : overrideInviteUser;
        if (typeof _onCreateChannelClick === "function") {
          _onCreateChannelClick({
            users: selectedUserList,
            onClose: onCancel !== null && onCancel !== void 0 ? onCancel : noop$4,
            channelType: type
          });
          return;
        }
        if (onBeforeCreateChannel) {
          var params = onBeforeCreateChannel(selectedUserList);
          setChannelType(params, type);
          createChannel(params).then(function(channel) {
            return _onChannelCreated === null || _onChannelCreated === void 0 ? void 0 : _onChannelCreated(channel);
          });
        } else {
          var params = {};
          params.invitedUserIds = selectedUserList;
          params.isDistinct = false;
          if (userId) {
            params.operatorUserIds = [userId];
          }
          setChannelType(params, type);
          createChannel(params).then(function(channel) {
            return _onChannelCreated === null || _onChannelCreated === void 0 ? void 0 : _onChannelCreated(channel);
          });
        }
        onCancel === null || onCancel === void 0 ? void 0 : onCancel();
      }
    },
    React__default__default.createElement(
      "div",
      null,
      React__default__default.createElement(Label, { color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3, type: LabelTypography.CAPTION_1 }, "".concat(selectedCount, " ").concat(stringSet2.MODAL__INVITE_MEMBER__SELECTED)),
      React__default__default.createElement("div", { className: "sendbird-create-channel--scroll", style: isMobile ? { height: "calc(".concat(scrollableAreaHeight, "px - 200px)") } : {}, onScroll: function(e3) {
        if (!usersDataSource)
          return;
        var eventTarget = e3.target;
        var hasNext = usersDataSource.hasNext, isLoading = usersDataSource.isLoading;
        var fetchMore = eventTarget.clientHeight + eventTarget.scrollTop + BUFFER > eventTarget.scrollHeight;
        if (hasNext && fetchMore && !isLoading) {
          usersDataSource.next().then(function(usersBatch) {
            setUsers(__spreadArray(__spreadArray([], users, true), usersBatch, true));
          });
        }
      } }, users.map(function(user) {
        return !filterUser(idsToFilter)(user.userId) && React__default__default.createElement(UserListItem, { key: user.userId, user, checkBox: true, checked: selectedUsers[user.userId], onChange: function(event) {
          var _a3;
          var modifiedSelectedUsers = __assign(__assign({}, selectedUsers), (_a3 = {}, _a3[event.target.id] = event.target.checked, _a3));
          if (!event.target.checked) {
            delete modifiedSelectedUsers[event.target.id];
          }
          setSelectedUsers(modifiedSelectedUsers);
        } });
      }))
    )
  );
};
var isBroadcastChannelEnabled = function(sdk) {
  var _a2;
  var ALLOW_BROADCAST_CHANNEL = "allow_broadcast_channel";
  var applicationAttributes2 = (_a2 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a2 === void 0 ? void 0 : _a2.applicationAttributes;
  if (Array.isArray(applicationAttributes2)) {
    return applicationAttributes2.includes(ALLOW_BROADCAST_CHANNEL);
  }
  return false;
};
var isSuperGroupChannelEnabled = function(sdk) {
  var _a2;
  var ALLOW_SUPER_GROUP_CHANNEL = "allow_super_group_channel";
  var applicationAttributes2 = (_a2 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a2 === void 0 ? void 0 : _a2.applicationAttributes;
  if (Array.isArray(applicationAttributes2)) {
    return applicationAttributes2.includes(ALLOW_SUPER_GROUP_CHANNEL);
  }
  return false;
};
var SelectChannelType = function(props) {
  var onCancel = props.onCancel;
  var state = useSendbird().state;
  var sdk = getSdk(state);
  var _a2 = useCreateChannel().actions, setPageStep = _a2.setPageStep, setType = _a2.setType;
  var stringSet2 = useContext(LocalizationContext).stringSet;
  var isBroadcastAvailable = isBroadcastChannelEnabled(sdk);
  var isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);
  return React__default__default.createElement(
    Modal,
    { titleText: stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.MODAL__CREATE_CHANNEL__TITLE, hideFooter: true, onCancel: function() {
      onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    }, className: "sendbird-add-channel__modal" },
    React__default__default.createElement(
      "div",
      { className: "sendbird-add-channel__rectangle-wrap" },
      React__default__default.createElement(
        "div",
        { className: "sendbird-add-channel__rectangle", onClick: function() {
          setType(CHANNEL_TYPE.GROUP);
          setPageStep(1);
        }, role: "button", tabIndex: 0, onKeyDown: function() {
          setType(CHANNEL_TYPE.GROUP);
          setPageStep(1);
        } },
        React__default__default.createElement(Icon$1, { className: "sendbird-add-channel__rectangle__chat-icon", type: IconTypes.CHAT, fillColor: IconColors.PRIMARY, width: "28px", height: "28px" }),
        React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MODAL__CREATE_CHANNEL__GROUP)
      ),
      isSupergroupAvailable && React__default__default.createElement(
        "div",
        { className: "sendbird-add-channel__rectangle", onClick: function() {
          setType(CHANNEL_TYPE.SUPERGROUP);
          setPageStep(1);
        }, role: "button", tabIndex: 0, onKeyDown: function() {
          setType(CHANNEL_TYPE.SUPERGROUP);
          setPageStep(1);
        } },
        React__default__default.createElement(Icon$1, { className: "sendbird-add-channel__rectangle__supergroup-icon", type: IconTypes.SUPERGROUP, fillColor: IconColors.PRIMARY, width: "28px", height: "28px" }),
        React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MODAL__CREATE_CHANNEL__SUPER)
      ),
      isBroadcastAvailable && React__default__default.createElement(
        "div",
        { className: "sendbird-add-channel__rectangle", onClick: function() {
          setType(CHANNEL_TYPE.BROADCAST);
          setPageStep(1);
        }, role: "button", tabIndex: 0, onKeyDown: function() {
          setType(CHANNEL_TYPE.BROADCAST);
          setPageStep(1);
        } },
        React__default__default.createElement(Icon$1, { className: "sendbird-add-channel__rectangle__broadcast-icon", type: IconTypes.BROADCAST, fillColor: IconColors.PRIMARY, width: "28px", height: "28px" }),
        React__default__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MODAL__CREATE_CHANNEL__BROADCAST)
      )
    )
  );
};
var CreateChannel$1 = function(props) {
  var onCancel = props.onCancel, renderStepOne = props.renderStepOne;
  var _a2 = useCreateChannel(), _b2 = _a2.state, pageStep = _b2.pageStep, userListQuery = _b2.userListQuery, setPageStep = _a2.actions.setPageStep;
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    pageStep === 0 && ((renderStepOne === null || renderStepOne === void 0 ? void 0 : renderStepOne()) || React__default__default.createElement(SelectChannelType, { onCancel })),
    pageStep === 1 && React__default__default.createElement(InviteUsers, { userListQuery, onCancel: function() {
      setPageStep(0);
      onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    } })
  );
};
var CreateChannel = function(props) {
  return React__default__default.createElement(
    CreateChannelProvider,
    __assign({}, props),
    React__default__default.createElement(CreateChannel$1, __assign({}, props))
  );
};
var AddGroupChannelView = function(_a2) {
  var createChannelVisible = _a2.createChannelVisible, onChangeCreateChannelVisible = _a2.onChangeCreateChannelVisible, onBeforeCreateChannel = _a2.onBeforeCreateChannel, onCreateChannelClick = _a2.onCreateChannelClick, onChannelCreated = _a2.onChannelCreated;
  var config2 = useSendbird().state.config;
  return React__default__default.createElement(
    React__default__default.Fragment,
    null,
    React__default__default.createElement(
      IconButton$1,
      { height: "32px", width: "32px", disabled: !config2.isOnline, onClick: function() {
        return onChangeCreateChannelVisible(true);
      } },
      React__default__default.createElement(Icon$1, { type: IconTypes.CREATE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
    ),
    createChannelVisible && React__default__default.createElement(CreateChannel, { onCancel: function() {
      return onChangeCreateChannelVisible(false);
    }, onChannelCreated: function(channel) {
      onChannelCreated === null || onChannelCreated === void 0 ? void 0 : onChannelCreated(channel);
      onChangeCreateChannelVisible(false);
    }, onBeforeCreateChannel, onCreateChannelClick })
  );
};
var AddGroupChannel = function() {
  var _a2 = useState(false), createChannelVisible = _a2[0], setCreateChannelVisible = _a2[1];
  var _b2 = useGroupChannelList().state, onChannelCreated = _b2.onChannelCreated, onBeforeCreateChannel = _b2.onBeforeCreateChannel, onCreateChannelClick = _b2.onCreateChannelClick;
  return React__default__default.createElement(AddGroupChannelView, { createChannelVisible, onChangeCreateChannelVisible: setCreateChannelVisible, onCreateChannelClick, onBeforeCreateChannel, onChannelCreated });
};
var GroupChannelListUI = function(props) {
  var renderHeader = props.renderHeader, renderChannelPreview = props.renderChannelPreview, renderPlaceHolderError = props.renderPlaceHolderError, renderPlaceHolderLoading = props.renderPlaceHolderLoading, renderPlaceHolderEmptyList = props.renderPlaceHolderEmptyList;
  var _a2 = useGroupChannelList().state, onChannelSelect = _a2.onChannelSelect, onThemeChange = _a2.onThemeChange, allowProfileEdit = _a2.allowProfileEdit, typingChannelUrls = _a2.typingChannelUrls, groupChannels = _a2.groupChannels, initialized = _a2.initialized, selectedChannelUrl = _a2.selectedChannelUrl, loadMore = _a2.loadMore, onUserProfileUpdated = _a2.onUserProfileUpdated, scrollRef = _a2.scrollRef;
  var _b2 = useSendbird().state, stores2 = _b2.stores, _c = _b2.config, logger = _c.logger, isOnline = _c.isOnline;
  var sdk = stores2.sdkStore.sdk;
  var renderListItem = function(renderProps) {
    var channel = renderProps.item, index = renderProps.index;
    var itemProps = {
      channel,
      tabIndex: index,
      isSelected: channel.url === selectedChannelUrl,
      isTyping: typingChannelUrls.includes(channel.url),
      renderChannelAction: function(props2) {
        return React__default__default.createElement(GroupChannelPreviewAction, __assign({}, props2));
      },
      onClick: function() {
        if (isOnline || (sdk === null || sdk === void 0 ? void 0 : sdk.isCacheEnabled)) {
          logger.info("ChannelList: Clicked on channel:", channel);
          onChannelSelect(channel);
        } else {
          logger.warning("ChannelList: Inactivated clicking channel item during offline.");
        }
      },
      onLeaveChannel: function() {
        return __awaiter$5(this, void 0, void 0, function() {
          return __generator(this, function(_a3) {
            switch (_a3.label) {
              case 0:
                logger.info("ChannelList: Leaving channel", channel);
                return [4, channel.leave()];
              case 1:
                _a3.sent();
                logger.info("ChannelList: Leaving channel success");
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    };
    if (renderChannelPreview) {
      return React__default__default.createElement("div", { key: channel.url, onClick: itemProps.onClick }, renderChannelPreview(itemProps));
    }
    return React__default__default.createElement(GroupChannelListItem, __assign({ key: channel.url }, itemProps));
  };
  return React__default__default.createElement(GroupChannelListUIView, { renderHeader, renderChannel: renderListItem, renderPlaceHolderError, renderPlaceHolderLoading, renderPlaceHolderEmptyList, onChangeTheme: onThemeChange !== null && onThemeChange !== void 0 ? onThemeChange : noop$4, allowProfileEdit, onUserProfileUpdated: onUserProfileUpdated !== null && onUserProfileUpdated !== void 0 ? onUserProfileUpdated : noop$4, channels: groupChannels, onLoadMore: loadMore, initialized, renderAddChannel: function() {
    return React__default__default.createElement(AddGroupChannel, null);
  }, scrollRef });
};
var GroupChannelList = function(props) {
  return React__default__default.createElement(
    GroupChannelListProvider,
    __assign({}, props),
    React__default__default.createElement(GroupChannelListUI, __assign({}, props))
  );
};
var PANELS;
(function(PANELS2) {
  PANELS2["CHANNEL_LIST"] = "CHANNEL_LIST";
  PANELS2["CHANNEL"] = "CHANNEL";
  PANELS2["CHANNEL_SETTINGS"] = "CHANNEL_SETTINGS";
  PANELS2["MESSAGE_SEARCH"] = "MESSAGE_SEARCH";
  PANELS2["THREAD"] = "THREAD";
})(PANELS || (PANELS = {}));
const defaultCareAiProfileImage = "https://s3-alpha-sig.figma.com/img/d2cb/d486/aa526cbe87233fc8d781811b669c44bd?Expires=1744588800&Key-Pair-Id=APKAQ4GOSFWCW27IBOMQ&Signature=AK60VshOFVshHgAdYDKxYevZjoFkbM6lPK2wCqe~jcCpdnW7tH8Havd28K6y~BhHAfOUt~BUmEQNZKkRydxbJYdhtNllE9d-U~DaRPFVQwWCvPx4wkWjcRxbqwd3ByYqTGdCleDIFIRZtiMnaluU6MRmzPsTu3zlneGeeTqHCOF-kH~cNF-udK~0j5gOjeRAImgS7-xyG2HAHRyuXNcQooqALSWCpePEfCOUnHJfG4xjWGldD4sfrP1S0jFjdRQiP-SqsrJE8vwHM3-AI4DugoAmgKkCNS91Xb7pyMWHbLKLhn54VcgxLmqzJMNhK0Y1PEPQe4YDF7wgpLwpjD-ljw__";
const chatInterface = "CareAiChat-module__chatInterface__ESwZS";
const careaiContainer = "CareAiChat-module__careaiContainer__aV9aO";
const sendbirdConversationMessagesPadding = "CareAiChat-module__sendbirdConversationMessagesPadding__LQ0yx";
const customMessage = "CareAiChat-module__customMessage__GXH4Y";
const customMessageBot = "CareAiChat-module__customMessageBot__CgEcY";
const customMessageUser = "CareAiChat-module__customMessageUser__WrxTg";
const customMessageAvatar = "CareAiChat-module__customMessageAvatar__mjg4n";
const customMessageContent = "CareAiChat-module__customMessageContent__yQgTI";
const customMessageBubble = "CareAiChat-module__customMessageBubble__JYLXZ";
const customMessageBubbleBot = "CareAiChat-module__customMessageBubbleBot__gq8-1";
const customMessageBubbleUser = "CareAiChat-module__customMessageBubbleUser__0ak9J";
const customMessageTime = "CareAiChat-module__customMessageTime__oHE73";
const customGroupChannelList = "CareAiChat-module__customGroupChannelList__-6ydS";
const customGroupChannelHeader = "CareAiChat-module__customGroupChannelHeader__b2iZV";
const customInputWrapper = "CareAiChat-module__customInputWrapper__wNCUR";
const customTextarea = "CareAiChat-module__customTextarea__urAzR";
const customTextareaExpanded = "CareAiChat-module__customTextareaExpanded__wpGsQ";
const sendBtn = "CareAiChat-module__sendBtn__RNo5U";
const sendBtnActive = "CareAiChat-module__sendBtnActive__66OyI";
const styles$2 = {
  chatInterface,
  careaiContainer,
  sendbirdConversationMessagesPadding,
  customMessage,
  customMessageBot,
  customMessageUser,
  customMessageAvatar,
  customMessageContent,
  customMessageBubble,
  customMessageBubbleBot,
  customMessageBubbleUser,
  customMessageTime,
  customGroupChannelList,
  customGroupChannelHeader,
  customInputWrapper,
  customTextarea,
  customTextareaExpanded,
  sendBtn,
  sendBtnActive
};
const formatTime = (timestamp) => new Date(timestamp).toLocaleTimeString([], {
  hour: "2-digit",
  minute: "2-digit",
  hour12: true
});
const CustomInput = () => {
  const inputRef = useRef(null);
  const [isTyping, setIsTyping] = useState(false);
  const {
    actions: { sendUserMessage }
  } = useGroupChannel();
  const handleSendMessage = async () => {
    const textarea = inputRef.current;
    if (!textarea) return;
    const message = textarea.value.trim();
    if (!message) return;
    await sendUserMessage({ message });
    const scrollContainer = document.getElementsByClassName(
      styles$2.sendbirdConversationMessagesPadding
    )[0];
    if (scrollContainer)
      scrollContainer.scrollTop = scrollContainer.scrollHeight;
    textarea.value = "";
    textarea.style.height = "auto";
    setIsTyping(false);
  };
  const handleInputChange = () => {
    const textarea = inputRef.current;
    const message = textarea == null ? void 0 : textarea.value.trim();
    setIsTyping(!!message);
    if (!textarea) return;
    textarea.style.height = "auto";
    textarea.style.height = `${textarea.scrollHeight + 2}px`;
    textarea.scrollHeight > 44 ? textarea.classList.add(styles$2.customTextareaExpanded) : textarea.classList.remove(styles$2.customTextareaExpanded);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: styles$2.customInputWrapper, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "textarea",
      {
        ref: inputRef,
        className: styles$2.customTextarea,
        rows: 1,
        onChange: handleInputChange,
        onKeyDown: (e3) => {
          if (e3.key === "Enter" && !e3.shiftKey) {
            e3.preventDefault();
            handleSendMessage();
          }
        }
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "button",
      {
        className: `${styles$2.sendBtn} ${isTyping ? styles$2.sendBtnActive : ""}`,
        onClick: handleSendMessage,
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          SendIcon,
          {
            width: 26,
            height: 26,
            color: isTyping ? "white" : "#B4B4BE"
          }
        )
      }
    )
  ] });
};
const CustomMessage = ({ message }) => {
  const { sender, message: messageText, createdAt } = message;
  const isBot = (sender == null ? void 0 : sender.userId) === "practo_account_id_1";
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      className: `${styles$2.customMessage} ${isBot ? styles$2.customMessageBot : styles$2.customMessageUser}`,
      children: [
        isBot && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "img",
          {
            src: defaultCareAiProfileImage,
            alt: "bot-avatar",
            className: styles$2.customMessageAvatar
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: styles$2.customMessageContent, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              className: `${styles$2.customMessageBubble} ${isBot ? styles$2.customMessageBubbleBot : styles$2.customMessageBubbleUser}`,
              children: messageText
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: styles$2.customMessageTime, children: formatTime(createdAt) })
        ] })
      ]
    }
  );
};
const CustomGroupChannelListHeader = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles$2.customGroupChannelHeader, children: "Your Conversations" });
};
const CareAiChat = ({
  showChatHistory,
  setShowChatHistory,
  appId,
  accountId,
  accessToken,
  currentChannelUrl
}) => {
  const [channelUrl, setChannelUrl] = useState(currentChannelUrl);
  const handleChannelSelect = (channel) => {
    if (channel) setChannelUrl(channel.url);
    setShowChatHistory(false);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles$2.careaiContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    SendbirdProvider,
    {
      appId,
      userId: accountId,
      nickname: "User",
      profileUrl: "",
      accessToken,
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: styles$2.chatInterface, children: [
        showChatHistory ? /* @__PURE__ */ jsxRuntimeExports.jsx(
          GroupChannelList,
          {
            renderHeader: () => /* @__PURE__ */ jsxRuntimeExports.jsx(CustomGroupChannelListHeader, {}),
            onChannelSelect: handleChannelSelect,
            onChannelCreated: () => {
            },
            className: styles$2.customGroupChannelList
          }
        ) : null,
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          GroupChannel,
          {
            channelUrl: currentChannelUrl,
            renderMessageInput: () => /* @__PURE__ */ jsxRuntimeExports.jsx(CustomInput, {}),
            renderMessage: CustomMessage
          }
        )
      ] })
    }
  ) });
};
const CareAiChatContainer = ({
  showChatHistory,
  setShowChatHistory,
  appId
}) => {
  const [loading, setLoading] = useState(true);
  const [accountId, setAccountId] = useState("173815");
  const [accessToken, setAccessToken] = useState("");
  const [currentChannelUrl, setCurrentChannelUrl] = useState(
    "sendbird_group_channel_534427907_7b7bcc59afc50ce682b09d5c81e8bc22249bdbbc"
  );
  useEffect(() => {
    if (typeof document !== "undefined") {
      const link = document.createElement("link");
      link.rel = "stylesheet";
      link.href = "https://cdn.jsdelivr.net/npm/@sendbird/uikit-react@latest/dist/index.css";
      document.head.appendChild(link);
    }
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    CareAiChat,
    {
      showChatHistory,
      setShowChatHistory,
      appId,
      accountId,
      accessToken,
      currentChannelUrl
    }
  );
};
const pageLoader = "PageLoader-module__pageLoader__kzmI-";
const loader = "PageLoader-module__loader__JrVVU";
const spinner = "PageLoader-module__spinner__D1AbV";
const styles$1 = {
  pageLoader,
  loader,
  spinner
};
const PageLoader = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles$1.pageLoader, "data-testid": "page-loader", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles$1.loader, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles$1.spinner }) }) });
};
const isServer = () => {
  return !(typeof window !== "undefined" && window.document);
};
var cookie$1 = {};
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
cookie$1.parse = parse;
cookie$1.serialize = serialize;
var decode = decodeURIComponent;
var encode = encodeURIComponent;
var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
function parse(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  var obj = {};
  var opt = options || {};
  var pairs = str.split(/; */);
  var dec = opt.decode || decode;
  pairs.forEach(function(pair) {
    var eq_idx = pair.indexOf("=");
    if (eq_idx < 0) {
      return;
    }
    var key = pair.substr(0, eq_idx).trim();
    var val = pair.substr(++eq_idx, pair.length).trim();
    if ('"' == val[0]) {
      val = val.slice(1, -1);
    }
    if (void 0 == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  });
  return obj;
}
function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;
  if (!fieldContentRegExp.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  var value = enc(val);
  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError("argument val is invalid");
  }
  var pairs = [name + "=" + value];
  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge)) throw new Error("maxAge should be a Number");
    pairs.push("Max-Age=" + maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    pairs.push("Domain=" + opt.domain);
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    pairs.push("Path=" + opt.path);
  }
  if (opt.expires) pairs.push("Expires=" + opt.expires.toUTCString());
  if (opt.httpOnly) pairs.push("HttpOnly");
  if (opt.secure) pairs.push("Secure");
  return pairs.join("; ");
}
function tryDecode(str, decode2) {
  try {
    return decode2(str);
  } catch (e3) {
    return str;
  }
}
var cookie = cookie$1;
if (typeof Object.assign != "function") {
  Object.assign = function(target) {
    if (target == null) {
      throw new TypeError("Cannot convert undefined or null to object");
    }
    target = Object(target);
    for (var index = 1; index < arguments.length; index++) {
      var source = arguments[index];
      if (source != null) {
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
    }
    return target;
  };
}
var _rawCookie = {};
var _res = void 0;
function _isResWritable() {
  if (!_res)
    return false;
  if (_res.headersSent === true)
    return false;
  return true;
}
function load(name, doNotParse) {
  var cookies = typeof document === "undefined" ? _rawCookie : cookie.parse(document.cookie);
  var cookieVal = cookies && cookies[name];
  if (!doNotParse) {
    try {
      cookieVal = JSON.parse(cookieVal);
    } catch (e3) {
    }
  }
  return cookieVal;
}
function select(regex2) {
  var cookies = typeof document === "undefined" ? _rawCookie : cookie.parse(document.cookie);
  if (!cookies)
    return {};
  if (!regex2)
    return cookies;
  return Object.keys(cookies).reduce(function(accumulator, name) {
    if (!regex2.test(name))
      return accumulator;
    var newCookie = {};
    newCookie[name] = cookies[name];
    return Object.assign({}, accumulator, newCookie);
  }, {});
}
function save(name, val, opt) {
  _rawCookie[name] = val;
  if (typeof val === "object") {
    _rawCookie[name] = JSON.stringify(val);
  }
  if (typeof document !== "undefined") {
    document.cookie = cookie.serialize(name, _rawCookie[name], opt);
  }
  if (_isResWritable() && _res.cookie) {
    _res.cookie(name, val, opt);
  }
}
function remove(name, opt) {
  delete _rawCookie[name];
  if (typeof opt === "undefined") {
    opt = {};
  } else if (typeof opt === "string") {
    opt = { path: opt };
  }
  if (typeof document !== "undefined") {
    opt.expires = new Date(1970, 1, 1, 0, 0, 1);
    document.cookie = cookie.serialize(name, "", opt);
  }
  if (_isResWritable() && _res.clearCookie) {
    _res.clearCookie(name, opt);
  }
}
function setRawCookie(rawCookie) {
  if (rawCookie) {
    _rawCookie = cookie.parse(rawCookie);
  } else {
    _rawCookie = {};
  }
}
function plugToRequest(req, res) {
  if (req.cookie) {
    _rawCookie = req.cookie;
  } else if (req.cookies) {
    _rawCookie = req.cookies;
  } else if (req.headers && req.headers.cookie) {
    setRawCookie(req.headers.cookie);
  } else {
    _rawCookie = {};
  }
  _res = res;
  return function unplug() {
    _res = null;
    _rawCookie = {};
  };
}
var reactCookie = {
  load,
  select,
  save,
  remove,
  setRawCookie,
  plugToRequest
};
if (typeof window !== "undefined") {
  window["reactCookie"] = reactCookie;
}
var reactCookie_1 = reactCookie;
const Cookies = /* @__PURE__ */ getDefaultExportFromCjs$1(reactCookie_1);
const iframeStyles = {
  full: { width: "100%", height: "100%" },
  hidden: { display: "none" }
};
const EmbeddedOtpLogin = ({
  phone,
  closeModal,
  setIsModalOpen,
  setShowLoginModal
}) => {
  const [iframeType, setIframeType] = useState("otp");
  const [showLoader, setShowLoader] = useState(true);
  const name = "User";
  const otpIframeUrl = `https://${"www-conapps.practodev.com".replace(
    "www",
    "accounts"
  )}/login_signup_otp?mobile=${encodeURIComponent(
    phone
  )}&view_type=modal&name=${name}`;
  const redirectIframeSrc = isServer() ? "" : `/login?redirectToPath=${window.location.protocol}//${window.location.host}`;
  const handleOtpIframeLoad = () => {
    if (!!Cookies.load("modal_login")) {
      setIframeType("redirect");
    } else if (showLoader) {
      setShowLoader(false);
    }
  };
  const handleRedirectIframeLoad = () => {
    const timeout = 3e3;
    const apiUrl = `${window.location.origin}/client-auth/login`;
    setTimeout(() => {
      fetch(apiUrl).then(() => console.log("Client auth login success")).catch((err) => console.error("Client auth login error", err));
      setShowLoader(false);
      closeModal();
      setIsModalOpen(true);
      setShowLoginModal(false);
    }, timeout);
  };
  if (iframeType === "otp") {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { height: "100%" }, children: [
      showLoader && /* @__PURE__ */ jsxRuntimeExports.jsx(PageLoader, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "iframe",
        {
          style: iframeStyles.full,
          src: otpIframeUrl,
          onLoad: handleOtpIframeLoad
        }
      )
    ] });
  }
  if (iframeType === "redirect") {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      showLoader && /* @__PURE__ */ jsxRuntimeExports.jsx(PageLoader, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "iframe",
        {
          style: iframeStyles.hidden,
          src: redirectIframeSrc,
          onLoad: handleRedirectIframeLoad
        }
      )
    ] });
  }
  return null;
};
function CrossIcon({ width = 16, height = 16, color = "black" }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width,
      height,
      color,
      viewBox: "0 0 16 16",
      fill: "none",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M14.1657 1.83441C13.8533 1.52199 13.3467 1.52199 13.0343 1.83441L8.00001 6.86873L2.96569 1.83441C2.65327 1.52199 2.14674 1.52199 1.83432 1.83441C1.5219 2.14683 1.5219 2.65336 1.83432 2.96578L6.86864 8.0001L1.83432 13.0344C1.5219 13.3468 1.5219 13.8534 1.83432 14.1658C2.14674 14.4782 2.65327 14.4782 2.96569 14.1658L8.00001 9.13147L13.0343 14.1658C13.3467 14.4782 13.8533 14.4782 14.1657 14.1658C14.4781 13.8534 14.4781 13.3468 14.1657 13.0344L9.13138 8.0001L14.1657 2.96578C14.4781 2.65336 14.4781 2.14683 14.1657 1.83441Z",
          fill: "#2D2D32"
        }
      )
    }
  );
}
const bottomLoginModalWrapper = "LoginModal-module__bottomLoginModalWrapper__oKEIO";
const screenOverlay = "LoginModal-module__screenOverlay__vCPXo";
const bottomLoginModal = "LoginModal-module__bottomLoginModal__O72DH";
const bottomModalContent = "LoginModal-module__bottomModalContent__K9HgH";
const title = "LoginModal-module__title__hXH0p";
const phoneInputContainer = "LoginModal-module__phoneInputContainer__x9sSA";
const phoneInputContainerError = "LoginModal-module__phoneInputContainerError__oqpCo";
const countryCodeDropdown = "LoginModal-module__countryCodeDropdown__5Jo23";
const phoneInput = "LoginModal-module__phoneInput__XQBLP";
const phoneInputActive = "LoginModal-module__phoneInputActive__nZlKG";
const errorText = "LoginModal-module__errorText__yVA8B";
const continueButton = "LoginModal-module__continueButton__4HMlk";
const continueButtonEnabled = "LoginModal-module__continueButtonEnabled__Ml3G1";
const continueButtonDisabled = "LoginModal-module__continueButtonDisabled__S6tRx";
const infoTextContainer = "LoginModal-module__infoTextContainer__ERzop";
const infoTextSecondary = "LoginModal-module__infoTextSecondary__yYhvC";
const styles = {
  bottomLoginModalWrapper,
  screenOverlay,
  bottomLoginModal,
  bottomModalContent,
  title,
  phoneInputContainer,
  phoneInputContainerError,
  countryCodeDropdown,
  phoneInput,
  phoneInputActive,
  errorText,
  continueButton,
  continueButtonEnabled,
  continueButtonDisabled,
  infoTextContainer,
  infoTextSecondary
};
const validateMobileNumber = (number) => /^[0-9]{10}$/.test(number);
const LoginModal = ({ setIsModalOpen, setShowLoginModal }) => {
  const [phoneNumber, setPhoneNumber] = useState("");
  const [countryCode, setCountryCode] = useState("+91");
  const [showOtpIframe, setShowOtpIframe] = useState(false);
  const [isModalOpen, setIsLoginModalOpen] = useState(true);
  if (!isModalOpen) return null;
  const handleGetOtpClick = () => setShowOtpIframe(true);
  const closeModal = () => setIsLoginModalOpen(false);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: styles.bottomLoginModalWrapper, onClick: closeModal, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles.screenOverlay }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: styles.bottomLoginModal,
        onClick: (e3) => e3.stopPropagation(),
        children: !showOtpIframe ? /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: styles.bottomModalContent, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: closeModal, children: /* @__PURE__ */ jsxRuntimeExports.jsx(CrossIcon, {}) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: styles.title, children: "Enter your mobile number" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "div",
            {
              className: `${styles.phoneInputContainer} ${!validateMobileNumber(phoneNumber) && phoneNumber.length === 10 ? styles.phoneInputContainerError : ""}`,
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles.countryCodeDropdown, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  "select",
                  {
                    value: countryCode,
                    onChange: (e3) => setCountryCode(e3.target.value),
                    children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "+91", children: "+91" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "+1", children: "+1" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "+44", children: "+44" })
                    ]
                  }
                ) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    type: "text",
                    placeholder: "Mobile Number",
                    value: phoneNumber,
                    onChange: (e3) => setPhoneNumber(e3.target.value),
                    className: `${styles.phoneInput} ${phoneNumber.length > 0 ? styles.phoneInputActive : ""}`,
                    maxLength: 10
                  }
                )
              ]
            }
          ),
          !validateMobileNumber(phoneNumber) && phoneNumber.length === 10 ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: styles.errorText, children: "Please enter a valid 10-digit mobile number" }) : null,
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: styles.infoTextContainer, children: [
            "By continuing, you agree to our",
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: styles.infoTextSecondary, children: "Terms & Conditions" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "button",
            {
              onClick: handleGetOtpClick,
              className: `${styles.continueButton} ${phoneNumber.length === 10 && validateMobileNumber(phoneNumber) ? styles.continueButtonEnabled : styles.continueButtonDisabled}`,
              disabled: phoneNumber.length < 10 || !validateMobileNumber(phoneNumber),
              children: "Continue"
            }
          )
        ] }) : /* @__PURE__ */ jsxRuntimeExports.jsx(
          EmbeddedOtpLogin,
          {
            phone: phoneNumber,
            closeModal,
            setIsModalOpen,
            setShowLoginModal
          }
        )
      }
    )
  ] });
};
const CareAiContainer = ({ appId }) => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [showLoginModal, setShowLoginModal] = useState(true);
  useEffect(() => {
  }, []);
  return showLoginModal ? /* @__PURE__ */ jsxRuntimeExports.jsx(
    LoginModal,
    {
      setIsModalOpen,
      setShowLoginModal
    }
  ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
    CareAiChatContainer,
    {
      showChatHistory: false,
      setShowChatHistory: () => {
      },
      appId
    }
  );
};
export {
  CareAiChatContainer as C,
  LoginModal as L,
  Ve$2 as V,
  Ze$2 as Z,
  VOICE_RECORDER_AUDIO_SAMPLE_RATE as a,
  b$2 as b,
  commonjsGlobal$1 as c,
  CareAiContainer as d,
  je$2 as j,
  qe$2 as q,
  rt$1 as r,
  st$1 as s,
  uo as u
};
//# sourceMappingURL=index-Gfpknp0y.js.map
